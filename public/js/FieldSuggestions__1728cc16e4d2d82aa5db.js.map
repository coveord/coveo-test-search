{"version":3,"sources":["./src/ui/FieldSuggestions/FieldSuggestions.ts","./src/ui/Misc/SuggestionForOmnibox.ts","./sass/_FieldSuggestions.scss"],"names":[],"mappings":"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","file":"FieldSuggestions__1728cc16e4d2d82aa5db.js","sourcesContent":["import 'styling/_FieldSuggestions';\r\nimport * as _ from 'underscore';\r\nimport { IPopulateOmniboxEventArgs, OmniboxEvents } from '../../events/OmniboxEvents';\r\nimport { exportGlobally } from '../../GlobalExports';\r\nimport { Assert } from '../../misc/Assert';\r\nimport { QueryStateModel } from '../../models/QueryStateModel';\r\nimport { IIndexFieldValue } from '../../rest/FieldValue';\r\nimport { IStringMap } from '../../rest/GenericParam';\r\nimport { IListFieldValuesRequest } from '../../rest/ListFieldValuesRequest';\r\nimport { $$ } from '../../utils/Dom';\r\nimport { Utils } from '../../utils/Utils';\r\nimport { analyticsActionCauseList, IAnalyticsNoMeta } from '../Analytics/AnalyticsActionListMeta';\r\nimport { Component } from '../Base/Component';\r\nimport { IComponentBindings } from '../Base/ComponentBindings';\r\nimport { ComponentOptions } from '../Base/ComponentOptions';\r\nimport { IFieldOption, IQueryExpression } from '../Base/IComponentOptions';\r\nimport { Initialization } from '../Base/Initialization';\r\nimport {\r\n  ISuggestionForOmniboxOptions,\r\n  ISuggestionForOmniboxOptionsOnSelect,\r\n  ISuggestionForOmniboxTemplate,\r\n  SuggestionForOmnibox\r\n} from '../Misc/SuggestionForOmnibox';\r\n\r\nexport interface IFieldSuggestionsOptions extends ISuggestionForOmniboxOptions {\r\n  field?: IFieldOption;\r\n  queryOverride?: IQueryExpression;\r\n}\r\n\r\n/**\r\n * The `FieldSuggestions` component provides query suggestions based on a particular facet field. For example, you could\r\n * use this component to provide auto-complete suggestions while the end user is typing the title of an item.\r\n *\r\n * The query suggestions provided by this component appear in the [`Omnibox`]{@link Omnibox} component.\r\n *\r\n * **Note:** Consider [providing Coveo ML query suggestions](https://docs.coveo.com/en/340/#providing-coveo-machine-learning-query-suggestions)\r\n * rather than field suggestions, as the former yields better performance and relevance.\r\n */\r\nexport class FieldSuggestions extends Component {\r\n  static ID = 'FieldSuggestions';\r\n\r\n  static doExport = () => {\r\n    exportGlobally({\r\n      FieldSuggestions: FieldSuggestions\r\n    });\r\n  };\r\n\r\n  /**\r\n   * @componentOptions\r\n   */\r\n  static options: IFieldSuggestionsOptions = {\r\n    /**\r\n     * Specifies the facet field from which to provide suggestions.\r\n     *\r\n     * Specifying a value for this option is required for the `FieldSuggestions` component to work.\r\n     */\r\n    field: ComponentOptions.buildFieldOption({ required: true }),\r\n\r\n    /**\r\n     * Specifies a query override to apply when retrieving suggestions. You can use any valid query expression (see\r\n     * [Coveo Query Syntax Reference](https://www.coveo.com/go?dest=adminhelp70&lcid=9&context=10005)).\r\n     *\r\n     * Default value is the empty string, and the component applies no query override.\r\n     */\r\n    queryOverride: ComponentOptions.buildQueryExpressionOption({ defaultValue: '' }),\r\n\r\n    /**\r\n     * Specifies the z-index position at which the suggestions render themselves in the [`Omnibox`]{@link Omnibox}.\r\n     *\r\n     * When there are multiple suggestion providers, components with higher `omniboxZIndex` values render themselves\r\n     * first.\r\n     *\r\n     * Default value is `51`. Minimum value is `0`.\r\n     */\r\n    omniboxZIndex: ComponentOptions.buildNumberOption({ defaultValue: 51, min: 0 }),\r\n\r\n    /**\r\n     * Specifies the title of the result suggestions group in the [`Omnibox`]{@link Omnibox} component.\r\n     * If not provided, the component will simply not output any title.\r\n     *\r\n     * Default value is `null`.\r\n     */\r\n    headerTitle: ComponentOptions.buildLocalizedStringOption(),\r\n\r\n    /**\r\n     * Specifies the number of suggestions to render in the [`Omnibox`]{@link Omnibox}.\r\n     *\r\n     * Default value is `5`. Minimum value is `1`.\r\n     */\r\n    numberOfSuggestions: ComponentOptions.buildNumberOption({ defaultValue: 5, min: 1 }),\r\n\r\n    /**\r\n     * Specifies the event handler function to execute when the end user selects a suggested value in the\r\n     * [`Omnibox`]{@link Omnibox}. By default, the query box text is replaced by what the end user selected and a new\r\n     * query is executed. You can, however, replace this default behavior by providing a callback function to execute\r\n     * when the value is selected.\r\n     *\r\n     * **Note:**\r\n     * > You cannot set this option directly in the component markup as an HTML attribute. You must either set it in the\r\n     * > [`init`]{@link init} call of your search interface (see\r\n     * > [Passing Component Options in the init Call](https://docs.coveo.com/en/346/#passing-component-options-in-the-init-call)),\r\n     * > or before the `init` call, using the `options` top-level function (see\r\n     * > [Passing Component Options Before the init Call](https://docs.coveo.com/en/346/#passing-component-options-before-the-init-call)).\r\n     *\r\n     * **Example:**\r\n     *\r\n     * ```javascript\r\n     *\r\n     * var myOnSelectFunction = function(selectedValue, populateOmniboxEventArgs) {\r\n     *\r\n     *   // Close the suggestion list when the user clicks a suggestion.\r\n     *   populateOmniboxEventArgs.closeOmnibox();\r\n     *\r\n     *   // Search for matching title results in the default endpoint.\r\n     *   Coveo.SearchEndpoint.endpoints[\"default\"].search({\r\n     *     q: \"@title==\" + selectedValue\r\n     *   }).done(function(results) {\r\n     *\r\n     *     // If more than one result is found, select a result that matches the selected title.\r\n     *     var foundResult = Coveo._.find(results.results, function(result) {\r\n     *       return selectedValue == result.raw.title;\r\n     *     });\r\n     *\r\n     *     // Open the found result in the current window, or log an error.\r\n     *     if (foundResult) {\r\n     *       window.location = foundResult.clickUri;\r\n     *     }\r\n     *     else {\r\n     *       new Coveo.Logger.warn(\"Selected suggested result '\" + selectedValue + \"' not found.\");\r\n     *     }\r\n     *   });\r\n     * };\r\n     *\r\n     * // You can set the option in the 'init' call:\r\n     * Coveo.init(document.querySelector(\"#search\"), {\r\n     *    FieldSuggestions : {\r\n     *      onSelect : myOnSelectFunction\r\n     *    }\r\n     * });\r\n     *\r\n     * // Or before the 'init' call, using the 'options' top-level function:\r\n     * // Coveo.options(document.querySelector(\"#search\"), {\r\n     * //   FieldSuggestions : {\r\n     * //     onSelect : myOnSelectFunction\r\n     * //   }\r\n     * // });\r\n     * ```\r\n     */\r\n    onSelect: ComponentOptions.buildCustomOption<ISuggestionForOmniboxOptionsOnSelect>(() => {\r\n      return null;\r\n    })\r\n  };\r\n\r\n  private suggestionForOmnibox: SuggestionForOmnibox;\r\n  private currentlyDisplayedSuggestions: { [suggestion: string]: { element: HTMLElement; pos: number } };\r\n\r\n  /**\r\n   * Creates a new `FieldSuggestions` component.\r\n   * @param element The HTMLElement on which to instantiate the component.\r\n   * @param options The options for the `FieldSuggestions` component.\r\n   * @param bindings The bindings that the component requires to function normally. If not set, these will be\r\n   * automatically resolved (with a slower execution time).\r\n   */\r\n  constructor(element: HTMLElement, public options: IFieldSuggestionsOptions, bindings?: IComponentBindings) {\r\n    super(element, FieldSuggestions.ID, bindings);\r\n\r\n    if (this.options && 'omniboxSuggestionOptions' in this.options) {\r\n      this.options = _.extend(this.options, this.options['omniboxSuggestionOptions']);\r\n    }\r\n\r\n    this.options = ComponentOptions.initComponentOptions(element, FieldSuggestions, options);\r\n\r\n    Assert.check(Utils.isCoveoField(<string>this.options.field), this.options.field + ' is not a valid field');\r\n\r\n    this.options.onSelect = this.options.onSelect || this.onRowSelection;\r\n\r\n    let rowTemplate = (toRender: IStringMap<string>) => {\r\n      let rowElement = $$('div', {\r\n        className: 'magic-box-suggestion coveo-omnibox-selectable coveo-top-field-suggestion-row'\r\n      });\r\n      if (toRender['data']) {\r\n        rowElement.el.innerHTML = toRender['data'];\r\n      }\r\n      return rowElement.el.outerHTML;\r\n    };\r\n\r\n    let suggestionStructure: ISuggestionForOmniboxTemplate;\r\n    if (this.options.headerTitle == null) {\r\n      suggestionStructure = {\r\n        row: rowTemplate\r\n      };\r\n    } else {\r\n      let headerTemplate = () => {\r\n        let headerElement = $$('div', {\r\n          className: 'coveo-top-field-suggestion-header'\r\n        });\r\n\r\n        let iconElement = $$('span', {\r\n          className: 'coveo-icon-top-field'\r\n        });\r\n\r\n        let captionElement = $$('span', {\r\n          className: 'coveo-caption'\r\n        });\r\n\r\n        if (this.options.headerTitle) {\r\n          captionElement.text(this.options.headerTitle);\r\n        }\r\n\r\n        headerElement.append(iconElement.el);\r\n        headerElement.append(captionElement.el);\r\n\r\n        return headerElement.el.outerHTML;\r\n      };\r\n\r\n      suggestionStructure = {\r\n        header: { template: headerTemplate, title: this.options.headerTitle },\r\n        row: rowTemplate\r\n      };\r\n    }\r\n\r\n    this.suggestionForOmnibox = new SuggestionForOmnibox(\r\n      suggestionStructure,\r\n      (value: string, args: IPopulateOmniboxEventArgs) => {\r\n        this.options.onSelect.call(this, value, args);\r\n      },\r\n      (value: string, args: IPopulateOmniboxEventArgs) => {\r\n        this.onRowTab(value, args);\r\n      }\r\n    );\r\n    this.bind.onRootElement(OmniboxEvents.populateOmnibox, (args: IPopulateOmniboxEventArgs) => this.handlePopulateOmnibox(args));\r\n  }\r\n\r\n  public selectSuggestion(suggestion: number);\r\n  public selectSuggestion(suggestion: string);\r\n\r\n  /**\r\n   * Selects a currently displayed query suggestion. This implies that at least one suggestion must have been returned\r\n   * at least once.\r\n   * @param suggestion Either a number (0-based index position of the query suggestion to select) or a string that\r\n   * matches the suggestion to select.\r\n   */\r\n  public selectSuggestion(suggestion: any) {\r\n    if (this.currentlyDisplayedSuggestions) {\r\n      if (isNaN(suggestion)) {\r\n        if (this.currentlyDisplayedSuggestions[suggestion]) {\r\n          $$(this.currentlyDisplayedSuggestions[suggestion].element).trigger('click');\r\n        }\r\n      } else {\r\n        let currentlySuggested = <{ element: HTMLElement; pos: number }>_.findWhere(<any>this.currentlyDisplayedSuggestions, {\r\n          pos: suggestion\r\n        });\r\n        if (currentlySuggested) {\r\n          $$(currentlySuggested.element).trigger('click');\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private handlePopulateOmnibox(args: IPopulateOmniboxEventArgs) {\r\n    Assert.exists(args);\r\n\r\n    let valueToSearch = args.completeQueryExpression.word;\r\n    let promise = new Promise(resolve => {\r\n      this.queryController\r\n        .getEndpoint()\r\n        .listFieldValues(this.buildListFieldValueRequest(valueToSearch))\r\n        .then((results: IIndexFieldValue[]) => {\r\n          let element = this.suggestionForOmnibox.buildOmniboxElement(results, args);\r\n          this.currentlyDisplayedSuggestions = {};\r\n          if (element) {\r\n            _.map($$(element).findAll('.coveo-omnibox-selectable'), (selectable, i?) => {\r\n              this.currentlyDisplayedSuggestions[$$(selectable).text()] = {\r\n                element: selectable,\r\n                pos: i\r\n              };\r\n            });\r\n            resolve({\r\n              element: element,\r\n              zIndex: this.options.omniboxZIndex\r\n            });\r\n          } else {\r\n            resolve({\r\n              element: undefined\r\n            });\r\n          }\r\n        })\r\n        .catch(() => {\r\n          resolve({\r\n            element: undefined\r\n          });\r\n        });\r\n    });\r\n    args.rows.push({\r\n      deferred: promise\r\n    });\r\n  }\r\n\r\n  private onRowSelection(value: string, args: IPopulateOmniboxEventArgs) {\r\n    args.closeOmnibox();\r\n    this.queryStateModel.set(QueryStateModel.attributesEnum.q, value);\r\n    this.usageAnalytics.logSearchEvent<IAnalyticsNoMeta>(analyticsActionCauseList.omniboxField, {});\r\n    this.queryController.executeQuery();\r\n  }\r\n\r\n  private onRowTab(value: string, args: IPopulateOmniboxEventArgs) {\r\n    args.clear();\r\n    args.closeOmnibox();\r\n    this.queryStateModel.set(QueryStateModel.attributesEnum.q, `${value}`);\r\n    this.usageAnalytics.logCustomEvent(analyticsActionCauseList.omniboxField, {}, this.element);\r\n  }\r\n\r\n  private buildListFieldValueRequest(valueToSearch: string): IListFieldValuesRequest {\r\n    return {\r\n      field: <string>this.options.field,\r\n      ignoreAccents: true,\r\n      sortCriteria: 'occurrences',\r\n      maximumNumberOfValues: this.options.numberOfSuggestions,\r\n      patternType: 'Wildcards',\r\n      pattern: '*' + valueToSearch + '*',\r\n      queryOverride: this.options.queryOverride\r\n    };\r\n  }\r\n}\r\n\r\nInitialization.registerAutoCreateComponent(FieldSuggestions);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/FieldSuggestions/FieldSuggestions.ts","import { IPopulateOmniboxEventArgs } from '../../events/OmniboxEvents';\r\nimport { DomUtils } from '../../utils/DomUtils';\r\nimport { $$ } from '../../utils/Dom';\r\nimport * as _ from 'underscore';\r\n\r\nexport interface ISuggestionForOmniboxOptionsOnSelect {\r\n  (value: string, args: IPopulateOmniboxEventArgs): void;\r\n}\r\n\r\nexport interface ISuggestionForOmniboxOptions {\r\n  omniboxZIndex?: number;\r\n  headerTitle?: string;\r\n  onSelect?: ISuggestionForOmniboxOptionsOnSelect;\r\n  numberOfSuggestions?: number;\r\n}\r\n\r\nexport interface ISuggestionForOmniboxTemplate {\r\n  header?: {\r\n    template: (...args: any[]) => string;\r\n    title: string;\r\n  };\r\n  row: (...args: any[]) => string;\r\n}\r\n\r\nexport interface ISuggestionForOmniboxResult {\r\n  value: string;\r\n}\r\n\r\nexport class SuggestionForOmnibox {\r\n  constructor(\r\n    public structure: ISuggestionForOmniboxTemplate,\r\n    public onSelect: (value: string, args: IPopulateOmniboxEventArgs) => void,\r\n    public onTabPress: (value: string, args: IPopulateOmniboxEventArgs) => void\r\n  ) {}\r\n\r\n  public buildOmniboxElement(results: ISuggestionForOmniboxResult[], args: IPopulateOmniboxEventArgs): HTMLElement {\r\n    let element: HTMLElement;\r\n    if (results.length != 0) {\r\n      element = $$('div').el;\r\n      if (this.structure.header) {\r\n        let header = this.buildElementHeader();\r\n        element.appendChild(header);\r\n      }\r\n      let rows = this.buildRowElements(results, args);\r\n      _.each(rows, row => {\r\n        element.appendChild(row);\r\n      });\r\n    }\r\n    return element;\r\n  }\r\n\r\n  private buildElementHeader(): HTMLElement {\r\n    return $$(\r\n      'div',\r\n      undefined,\r\n      this.structure.header.template({\r\n        headerTitle: this.structure.header.title\r\n      })\r\n    ).el;\r\n  }\r\n\r\n  private buildRowElements(results: ISuggestionForOmniboxResult[], args: IPopulateOmniboxEventArgs): HTMLElement[] {\r\n    let ret = [];\r\n    _.each(results, result => {\r\n      let row = $$(\r\n        'div',\r\n        undefined,\r\n        this.structure.row({\r\n          rawValue: result.value,\r\n          data: DomUtils.highlightElement(result.value, args.completeQueryExpression.word)\r\n        })\r\n      ).el;\r\n      $$(row).on('click', () => {\r\n        this.onSelect.call(this, result.value, args);\r\n      });\r\n      $$(row).on('keyboardSelect', () => {\r\n        this.onSelect.call(this, result.value, args);\r\n      });\r\n      $$(row).on('tabSelect', () => {\r\n        this.onTabPress.call(this, result.value, args);\r\n      });\r\n      ret.push(row);\r\n    });\r\n    return ret;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/Misc/SuggestionForOmnibox.ts","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./sass/_FieldSuggestions.scss\n// module id = 516\n// module chunks = 44 45 88"],"sourceRoot":""}