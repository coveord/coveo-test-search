{"version":3,"sources":["./src/ui/Sort/Sort.ts","./src/ui/Sort/SortCriteria.ts","./sass/_Sort.scss"],"names":[],"mappings":"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","file":"Sort__93518d21988b4536d33d.js","sourcesContent":["import 'styling/_Sort';\r\nimport { exportGlobally } from '../../GlobalExports';\r\nimport { IBuildingQueryEventArgs, IQueryErrorEventArgs, IQuerySuccessEventArgs, QueryEvents } from '../../events/QueryEvents';\r\nimport { Assert } from '../../misc/Assert';\r\nimport { MODEL_EVENTS } from '../../models/Model';\r\nimport { QUERY_STATE_ATTRIBUTES, QueryStateModel } from '../../models/QueryStateModel';\r\nimport { $$ } from '../../utils/Dom';\r\nimport { SVGDom } from '../../utils/SVGDom';\r\nimport { SVGIcons } from '../../utils/SVGIcons';\r\nimport { Utils } from '../../utils/Utils';\r\nimport { logSortEvent } from '../Analytics/SharedAnalyticsCalls';\r\nimport { Component } from '../Base/Component';\r\nimport { IComponentBindings } from '../Base/ComponentBindings';\r\nimport { ComponentOptions } from '../Base/ComponentOptions';\r\nimport { Initialization } from '../Base/Initialization';\r\nimport { SortCriteria, VALID_DIRECTION } from './SortCriteria';\r\nimport { AccessibleButton, ArrowDirection } from '../../utils/AccessibleButton';\r\nimport { l } from '../../strings/Strings';\r\nimport { findIndex, find, any } from 'underscore';\r\n\r\nexport interface ISortOptions {\r\n  sortCriteria?: SortCriteria[];\r\n  caption?: string;\r\n}\r\n/**\r\n * The `Sort` component renders a widget that the end user can interact with to select the criterion to use when sorting query results.\r\n *\r\n * To improve accessibility, it's recommended to group `Sort` components in a container with `role=\"radiogroup\"`.\r\n */\r\nexport class Sort extends Component {\r\n  static ID = 'Sort';\r\n\r\n  static doExport = () => {\r\n    exportGlobally({\r\n      Sort: Sort,\r\n      SortCriteria: SortCriteria\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Options for the component\r\n   * @componentOptions\r\n   */\r\n  static options: ISortOptions = {\r\n    /**\r\n     * The sort criterion/criteria the end user can select/toggle between when interacting with this component instance.\r\n     *\r\n     * The available sort criteria are:\r\n     * - `relevancy`\r\n     * - `date ascending`/`date descending`\r\n     * - `qre`\r\n     * - `@field ascending`/`@field descending`, where you must replace `field` with the name of a sortable field in your index (e.g., `data-sort-criteria=\"@size ascending\"`).\r\n     *\r\n     * You can specify a comma separated list of sort criteria to toggle between when interacting with this component instance (e.g., `data-sort-criteria=\"date descending,date ascending\"`).\r\n     *\r\n     * You can specify multiple sort criteria to be used in the same request by separating them with a semicolon (e.g., `data-sort-criteria=\"@size ascending;date ascending\"` ).\r\n     *\r\n     * Interacting with this component instance will cycle through those criteria in the order they are listed in.\r\n     * Typically, you should only specify a list of sort criteria when you want the end user to be able to to toggle the direction of a `date` or `@field` sort criteria.\r\n     * Otherwise, you should configure a distinct `Sort` component instance for each sort criterion you want to make available in your search page.\r\n     *\r\n     * You must specify a valid value for this option in order for this component instance to work correctly.\r\n     *\r\n     * Examples:\r\n     *\r\n     * - `data-sort-criteria=\"date ascending\"` createes a Sort component that allows to sort on `date ascending`, without being able to toggle the order.\r\n     * - `data-sort-criteria=\"date ascending, date descending\"` creates a Sort component that allows end users to toggle between `date ascending` and `date descending` on click.\r\n     * - `data-sort-criteria=\"@size ascending; date descending\"` creates a Sort component that only allows end users to sort on `@size ascending`. The index then applies a second sort on `date descending` when two items are of equal value.\r\n     * - `data-sort-criteria=\"@size ascending; date descending, @size descending; date descending\"` creates a Sort component that allows end users to toggle between `@size ascending` and `@size descending`. For each value, the index applies a second sort on `date descending` when two items are of equal value.\r\n     */\r\n    sortCriteria: ComponentOptions.buildCustomListOption(\r\n      values => {\r\n        return values.map(criteria => {\r\n          // 'any' because Underscore won't accept the union type as an argument.\r\n          if (typeof criteria === 'string') {\r\n            return new SortCriteria(criteria);\r\n          } else {\r\n            return criteria as SortCriteria;\r\n          }\r\n        });\r\n      },\r\n      { required: true }\r\n    ),\r\n\r\n    /**\r\n     * The caption to display on this component instance.\r\n     *\r\n     * By default, the component uses the text content of the element it is instanciated on.\r\n     */\r\n    caption: ComponentOptions.buildLocalizedStringOption({ required: true })\r\n  };\r\n\r\n  private currentCriteria: SortCriteria;\r\n\r\n  private sortButton: HTMLElement;\r\n  private directionButton: HTMLElement;\r\n  private radioGroup: HTMLElement;\r\n\r\n  /**\r\n   * Creates a new `Sort` component instance.\r\n   * @param element The HTMLElement on which to instantiate the component.\r\n   * @param options The options for this component instance.\r\n   * @param bindings The bindings that the component requires to function normally. If not set, these will be\r\n   * automatically resolved (with a slower execution time).\r\n   */\r\n  constructor(public element: HTMLElement, public options?: ISortOptions, bindings?: IComponentBindings) {\r\n    super(element, Sort.ID, bindings);\r\n\r\n    this.options = ComponentOptions.initComponentOptions(element, Sort, options);\r\n\r\n    Assert.isLargerOrEqualsThan(1, this.options.sortCriteria.length);\r\n\r\n    this.bind.onQueryState(MODEL_EVENTS.CHANGE_ONE, QUERY_STATE_ATTRIBUTES.SORT, () => this.handleQueryStateChanged());\r\n    this.bind.onRootElement(QueryEvents.querySuccess, (args: IQuerySuccessEventArgs) => this.handleQuerySuccess(args));\r\n    this.bind.onRootElement(QueryEvents.buildingQuery, (args: IBuildingQueryEventArgs) => this.handleBuildingQuery(args));\r\n    this.bind.onRootElement(QueryEvents.queryError, (args: IQueryErrorEventArgs) => this.handleQueryError(args));\r\n    this.ensureDom();\r\n  }\r\n\r\n  public createDom() {\r\n    const el = $$(this.element);\r\n    el.on('click', () => this.selectAndExecuteQuery());\r\n    const innerText = el.text();\r\n    el.empty();\r\n\r\n    this.findOrCreateRadioGroup();\r\n    this.createSortButton(innerText);\r\n    if (this.isToggle()) {\r\n      this.createDirectionButton();\r\n    }\r\n\r\n    this.update();\r\n  }\r\n\r\n  /**\r\n   * Selects this `Sort` component.\r\n   *\r\n   * Updates the state model if selecting this component toggles its current [`sortCriteria`]{@link Sort.options.sortCriteria}.\r\n   *\r\n   * @param direction The sort direction. Can be one of: `ascending`, `descending`.\r\n   */\r\n  public select(direction?: string) {\r\n    if (direction) {\r\n      this.currentCriteria = find(this.options.sortCriteria, (criteria: SortCriteria) => {\r\n        return criteria.direction == direction;\r\n      });\r\n      this.updateQueryStateModel();\r\n    } else if (Utils.exists(this.currentCriteria)) {\r\n      this.selectNextCriteria();\r\n    } else {\r\n      this.selectFirstCriteria();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Selects this `Sort` component, then triggers a query if selecting this component toggles its current [`sortCriteria`]{@link Sort.options.sortCriteria}.\r\n   *\r\n   * Also logs an event in the usage analytics with the new current sort criteria.\r\n   */\r\n\r\n  public selectAndExecuteQuery() {\r\n    var oldCriteria = this.currentCriteria;\r\n    this.select();\r\n    if (oldCriteria != this.currentCriteria) {\r\n      this.executeSearchQuery();\r\n    }\r\n  }\r\n\r\n  public enable() {\r\n    $$(this.element).removeClass('coveo-tab-disabled');\r\n    this.update();\r\n    super.enable();\r\n  }\r\n\r\n  public disable() {\r\n    $$(this.element).addClass('coveo-tab-disabled');\r\n    super.disable();\r\n  }\r\n\r\n  /**\r\n   * Gets the current [`sortCriteria`]{@link Sort.options.sortCriteria} of this `Sort` component.\r\n   * @returns {SortCriteria}\r\n   */\r\n  public getCurrentCriteria(): SortCriteria {\r\n    return this.currentCriteria;\r\n  }\r\n\r\n  /**\r\n   * Indicates whether the name of any of the available [`sortCriteria`]{@link Sort.options.sortCriteria} of this `Sort` component matches the argument.\r\n   * @param sortId The sort criteria name to look for (e.g., `date descending`).\r\n   */\r\n  public match(sortId: string) {\r\n    return any(this.options.sortCriteria, (sortCriteria: SortCriteria) => sortId == sortCriteria.toString());\r\n  }\r\n\r\n  private findOrCreateRadioGroup() {\r\n    this.radioGroup = this.findRadioGroup();\r\n    if (!this.radioGroup) {\r\n      this.element.setAttribute('role', 'radiogroup');\r\n      this.radioGroup = this.element;\r\n    }\r\n  }\r\n\r\n  private createSortButton(innerText?: string) {\r\n    this.sortButton = $$('span').el;\r\n    this.sortButton.innerText = this.options.caption || innerText;\r\n    new AccessibleButton()\r\n      .withElement(this.sortButton)\r\n      .withEnterKeyboardAction(() => this.selectAndExecuteQuery())\r\n      .withArrowsAction((direction, e) => this.onArrowPressed(direction, e))\r\n      .withLabel(this.isToggle() ? this.getDirectionalLabel(this.initialDirection as VALID_DIRECTION) : this.getOmnidirectionalLabel())\r\n      .withRole('radio')\r\n      .build();\r\n    this.element.appendChild(this.sortButton);\r\n  }\r\n\r\n  private createDirectionButton() {\r\n    this.directionButton = $$('span', { className: 'coveo-icon' }, ...this.createIcons()).el;\r\n    new AccessibleButton()\r\n      .withElement(this.directionButton)\r\n      .withSelectAction(e => {\r\n        e.stopPropagation();\r\n        this.selectNextCriteriaAndExecuteQuery();\r\n      })\r\n      .withArrowsAction((direction, e) => this.onArrowPressed(direction, e))\r\n      .withLabel(\r\n        this.getDirectionalLabel(\r\n          this.initialDirection === VALID_DIRECTION.DESCENDING ? VALID_DIRECTION.ASCENDING : VALID_DIRECTION.DESCENDING\r\n        )\r\n      )\r\n      .withRole('radio')\r\n      .build();\r\n    this.element.appendChild(this.directionButton);\r\n  }\r\n\r\n  private onArrowPressed(direction: ArrowDirection, e: Event) {\r\n    this.selectNextRadioButton(direction === ArrowDirection.RIGHT || direction === ArrowDirection.DOWN ? 1 : -1);\r\n    e.stopPropagation();\r\n  }\r\n\r\n  private createIcons() {\r\n    const iconAscending = $$('span', { className: 'coveo-sort-icon-ascending' }, SVGIcons.icons.arrowUp);\r\n    SVGDom.addClassToSVGInContainer(iconAscending.el, 'coveo-sort-icon-ascending-svg');\r\n    const iconDescending = $$('span', { className: 'coveo-sort-icon-descending' }, SVGIcons.icons.arrowDown);\r\n    SVGDom.addClassToSVGInContainer(iconDescending.el, 'coveo-sort-icon-descending-svg');\r\n    return [iconAscending, iconDescending];\r\n  }\r\n\r\n  private findRadioGroup(element = this.element) {\r\n    if (!element || element === document.body) {\r\n      return null;\r\n    }\r\n    if (element.getAttribute('role') === 'radiogroup') {\r\n      return element;\r\n    }\r\n    return this.findRadioGroup(element.parentElement);\r\n  }\r\n\r\n  private selectNextRadioButton(direction = 1) {\r\n    const radioButtons = $$(this.radioGroup).findAll('[role=\"radio\"]');\r\n    const currentIndex = findIndex(radioButtons, radio => radio.getAttribute('aria-checked') === 'true');\r\n    let indexToSelect: number;\r\n    const isAnythingSelected = currentIndex !== -1;\r\n    if (isAnythingSelected) {\r\n      indexToSelect = (currentIndex + direction + radioButtons.length) % radioButtons.length;\r\n    } else {\r\n      if (direction >= 0) {\r\n        indexToSelect = 0;\r\n      } else {\r\n        indexToSelect = radioButtons.length - 1;\r\n      }\r\n    }\r\n    const radioToSelect = radioButtons[indexToSelect];\r\n    radioToSelect.focus();\r\n    radioToSelect.click();\r\n  }\r\n\r\n  private executeSearchQuery() {\r\n    this.queryController.deferExecuteQuery({\r\n      beforeExecuteQuery: () => logSortEvent(this.usageAnalytics, this.currentCriteria.sort + this.currentCriteria.direction)\r\n    });\r\n  }\r\n\r\n  private selectFirstCriteria() {\r\n    this.currentCriteria = this.options.sortCriteria[0];\r\n    this.updateQueryStateModel();\r\n  }\r\n\r\n  private selectNextCriteria() {\r\n    const indexOfCurrentCriteria = this.currentCriteria ? this.options.sortCriteria.indexOf(this.currentCriteria) : 0;\r\n    this.currentCriteria = this.options.sortCriteria[(indexOfCurrentCriteria + 1) % this.options.sortCriteria.length];\r\n    this.updateQueryStateModel();\r\n  }\r\n\r\n  private selectNextCriteriaAndExecuteQuery() {\r\n    const oldCriteria = this.currentCriteria;\r\n    this.selectNextCriteria();\r\n    if (oldCriteria != this.currentCriteria) {\r\n      this.executeSearchQuery();\r\n    }\r\n  }\r\n\r\n  private handleQueryStateChanged() {\r\n    this.update();\r\n  }\r\n\r\n  private update() {\r\n    // Basically, if the criteria in the model fits with one of ours, it'll become our active criteria\r\n    var sortCriteria = <string>this.queryStateModel.get(QueryStateModel.attributesEnum.sort);\r\n    if (Utils.isNonEmptyString(sortCriteria)) {\r\n      var criteriaFromModel = SortCriteria.parse(sortCriteria);\r\n      this.currentCriteria = find(this.options.sortCriteria, (criteria: SortCriteria) => criteriaFromModel.equals(criteria));\r\n    } else {\r\n      this.currentCriteria = null;\r\n    }\r\n    this.updateAppearance();\r\n    this.updateAccessibilityProperties();\r\n  }\r\n\r\n  private get captionIsDefined() {\r\n    return Utils.isNonEmptyString(this.options.caption);\r\n  }\r\n\r\n  private get currentDirection() {\r\n    return this.currentCriteria ? this.currentCriteria.direction : this.initialDirection;\r\n  }\r\n\r\n  private get initialDirection() {\r\n    return this.options.sortCriteria[0].direction;\r\n  }\r\n\r\n  private get displayedSortText() {\r\n    return this.captionIsDefined ? this.options.caption : this.element.textContent;\r\n  }\r\n\r\n  private handleBuildingQuery(data: IBuildingQueryEventArgs) {\r\n    Assert.exists(data);\r\n\r\n    var sort = this.queryStateModel.get(QueryStateModel.attributesEnum.sort);\r\n    if (sort == QueryStateModel.defaultAttributes.sort || this.isSelected()) {\r\n      if (this.currentCriteria) {\r\n        this.currentCriteria.putInQueryBuilder(data.queryBuilder);\r\n      }\r\n    }\r\n  }\r\n\r\n  private handleQuerySuccess(data: IQuerySuccessEventArgs) {\r\n    if (data.results.results.length == 0) {\r\n      $$(this.element).addClass('coveo-sort-hidden');\r\n    } else {\r\n      $$(this.element).removeClass('coveo-sort-hidden');\r\n    }\r\n  }\r\n\r\n  private handleQueryError(data: IQueryErrorEventArgs) {\r\n    $$(this.element).addClass('coveo-sort-hidden');\r\n  }\r\n\r\n  private isToggle(): boolean {\r\n    return this.options.sortCriteria.length > 1;\r\n  }\r\n\r\n  private isSelected(): boolean {\r\n    return Utils.exists(this.currentCriteria);\r\n  }\r\n\r\n  private updateAppearance() {\r\n    $$(this.element).toggleClass('coveo-selected', this.isSelected());\r\n    if (this.isToggle()) {\r\n      $$(this.element).removeClass('coveo-ascending');\r\n      $$(this.element).removeClass('coveo-descending');\r\n      if (this.isSelected()) {\r\n        $$(this.element).addClass(this.currentDirection === 'ascending' ? 'coveo-ascending' : 'coveo-descending');\r\n      }\r\n    }\r\n  }\r\n\r\n  private updateAccessibilityProperties() {\r\n    this.sortButton.setAttribute('aria-controls', this.resultListsIds);\r\n    const directionIsInitial = this.currentDirection === this.initialDirection;\r\n    this.sortButton.setAttribute('aria-checked', `${this.isSelected() && directionIsInitial}`);\r\n    if (this.isToggle()) {\r\n      this.directionButton.setAttribute('aria-controls', this.resultListsIds);\r\n      this.directionButton.setAttribute('aria-checked', `${this.isSelected() && !directionIsInitial}`);\r\n    }\r\n  }\r\n\r\n  private get resultListsIds() {\r\n    const resultLists = this.searchInterface.getComponents('ResultList') as Component[];\r\n    return resultLists.map(resultList => resultList.element.id).join(' ');\r\n  }\r\n\r\n  private getDirectionalLabel(direction: VALID_DIRECTION) {\r\n    const localizedCaption = l(this.displayedSortText);\r\n    return direction === VALID_DIRECTION.DESCENDING\r\n      ? l('SortResultsByDescending', localizedCaption)\r\n      : l('SortResultsByAscending', localizedCaption);\r\n  }\r\n\r\n  private getOmnidirectionalLabel(): string {\r\n    const localizedCaption = l(this.displayedSortText);\r\n    return l('SortResultsBy', localizedCaption);\r\n  }\r\n\r\n  private updateQueryStateModel() {\r\n    this.queryStateModel.set(QueryStateModel.attributesEnum.sort, this.currentCriteria.toString());\r\n  }\r\n}\r\n\r\nInitialization.registerAutoCreateComponent(Sort);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/Sort/Sort.ts","import { chain, contains, first, values } from 'underscore';\r\nimport { Assert } from '../../misc/Assert';\r\nimport { QueryBuilder } from '../../ui/Base/QueryBuilder';\r\n\r\nexport enum VALID_SORT {\r\n  RELEVANCY = 'relevancy',\r\n  DATE = 'date',\r\n  QRE = 'qre'\r\n}\r\n\r\nexport enum VALID_DIRECTION {\r\n  ASCENDING = 'ascending',\r\n  DESCENDING = 'descending'\r\n}\r\n\r\nexport class SortCriterion {\r\n  private static sortsNeedingDirection = [VALID_SORT.DATE];\r\n\r\n  /**\r\n   * Create a new SortCriteria\r\n   * @param sort The sort criteria (e.g.: relevancy, date)\r\n   * @param direction The direction by which to sort (e.g.: ascending, descending)\r\n   */\r\n  constructor(public sort: VALID_SORT, public direction: VALID_DIRECTION | '' = '') {\r\n    if (!SortCriterion.sortIsField(sort)) {\r\n      Assert.check(\r\n        this.isValidSort(sort),\r\n        `${sort} is not a valid sort criteria. Valid values are ${values(VALID_SORT)} or a valid index sortable index field.`\r\n      );\r\n    }\r\n    if (SortCriterion.sortNeedsDirection(sort)) {\r\n      Assert.check(\r\n        this.isValidDirection(direction),\r\n        `${direction} is not a valid sort criteria direction. Valid values are ${values(VALID_DIRECTION)}`\r\n      );\r\n    } else {\r\n      Assert.check(direction == '');\r\n    }\r\n  }\r\n\r\n  private isValidDirection(direction: string): direction is VALID_DIRECTION {\r\n    return chain(VALID_DIRECTION)\r\n      .values()\r\n      .contains(direction as any)\r\n      .value();\r\n  }\r\n\r\n  private isValidSort(sort: string): sort is VALID_SORT {\r\n    return chain(VALID_SORT)\r\n      .values()\r\n      .contains(sort as any)\r\n      .value();\r\n  }\r\n\r\n  private static sortIsField(criteria: string) {\r\n    return criteria.charAt(0) == '@';\r\n  }\r\n\r\n  private static sortNeedsDirection(sort: string) {\r\n    return contains(SortCriterion.sortsNeedingDirection, sort) || SortCriterion.sortIsField(sort);\r\n  }\r\n}\r\n\r\nexport class SortCriteria {\r\n  private criteria: SortCriterion[] = [];\r\n\r\n  constructor(rawCriteriaString: string) {\r\n    const criteria = rawCriteriaString.split(';');\r\n    criteria.forEach(criterion => {\r\n      const split = criterion.match(/\\S+/g);\r\n      this.criteria.push(new SortCriterion(split[0] as VALID_SORT, split[1] as VALID_DIRECTION));\r\n    });\r\n  }\r\n\r\n  public get direction() {\r\n    return first(this.criteria).direction;\r\n  }\r\n\r\n  public get sort() {\r\n    return first(this.criteria).sort;\r\n  }\r\n\r\n  /**\r\n   * Return a new SortCriteria from a string\r\n   * @param criteria The string from which to create the SortCriteria\r\n   */\r\n  static parse(criteria: string): SortCriteria {\r\n    return new SortCriteria(criteria);\r\n  }\r\n\r\n  /**\r\n   * Put the sort criteria in the passed queryBuilder\r\n   * @param queryBuilder The queryBuilder in which to put the sort criteria.\r\n   */\r\n  public putInQueryBuilder(queryBuilder: QueryBuilder) {\r\n    Assert.exists(queryBuilder);\r\n    queryBuilder.sortCriteria = this.toString()\r\n      .split(';')\r\n      .join(',');\r\n  }\r\n\r\n  /**\r\n   * Returns a string representation of the sort criteria (e.g.: 'date ascending').\r\n   */\r\n  public toString(): string {\r\n    return this.criteria\r\n      .map(criterion => {\r\n        return criterion.direction ? `${criterion.sort} ${criterion.direction}` : `${criterion.sort}`;\r\n      })\r\n      .join(';');\r\n  }\r\n\r\n  /**\r\n   * Checks if the SortCriteria is equal to another.\r\n   * @param criteria The SortCriteria to compare with\r\n   */\r\n  public equals(criteria: SortCriteria): boolean {\r\n    return criteria.toString() == this.toString();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/Sort/SortCriteria.ts","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./sass/_Sort.scss\n// module id = 574\n// module chunks = 22 39 88"],"sourceRoot":""}