{"version":3,"sources":["PromotedResultsBadge.min__5f3280c404a1ee75a113.js","./src/ui/PromotedResultsBadge/PromotedResultsBadge.ts"],"names":["webpackJsonpCoveo__temporary","287","module","exports","__webpack_require__","__extends","this","extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__","constructor","prototype","create","defineProperty","value","element","options","bindings","PromotedResultsBadge","ID","ComponentOptions","initComponentOptions","bind","onRootElement","ResultListEvents","newResultDisplayed","args","badge","buildBadge","result","item","appendBadge","_this","resultElement","shouldShowABadge","$$","className","getClassName","applyTagline","applyColor","isCardLayout","addBadgeToCardLayout","prepend","el","container","parentElement","insertBefore","append","isFeatured","colorForFeaturedResults","style","backgroundColor","isRecommended","colorForRecommendedResults","showBadgeForFeaturedResults","text","captionForFeatured","showBadgeForRecommendedResults","captionForRecommended","isTopResult","isRecommendation","isTableLayout","hasClass","doExport","exportGlobally","buildBooleanOption","defaultValue","buildLocalizedStringOption","localizedString","l","depend","buildColorOption","Component","Initialization","registerAutoCreateComponent","674"],"mappings":"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","file":"PromotedResultsBadge.min__5f3280c404a1ee75a113.js","sourcesContent":["webpackJsonpCoveo__temporary([66],{\n\n/***/ 287:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__webpack_require__(674);\r\nvar Core_1 = __webpack_require__(20);\r\nvar GlobalExports_1 = __webpack_require__(3);\r\nvar Component_1 = __webpack_require__(7);\r\n/**\r\n * Depending on its configuration, this component will render badges on query result items whose ranking scores were increased by [featured results](https://docs.coveo.com/en/1961/) query pipeline rules and/or [Coveo ML ART](https://docs.coveo.com/en/1671/#automatic-relevance-tuning-art-feature).\r\n *\r\n * This component can be put anywhere in the markup configuration of a search interface. However, it is meant to be initialized only once, and should thus never be included in a result template.\r\n *\r\n * @externaldocs [Adding Promoted Results Badges](https://docs.coveo.com/en/3123/)\r\n * @availablesince [July 2018 Release (v2.4382.10)](https://docs.coveo.com/en/1360/)\r\n */\r\nvar PromotedResultsBadge = /** @class */ (function (_super) {\r\n    __extends(PromotedResultsBadge, _super);\r\n    function PromotedResultsBadge(element, options, bindings) {\r\n        var _this = _super.call(this, element, PromotedResultsBadge.ID, bindings) || this;\r\n        _this.element = element;\r\n        _this.options = options;\r\n        _this.bindings = bindings;\r\n        _this.options = Core_1.ComponentOptions.initComponentOptions(element, PromotedResultsBadge, options);\r\n        _this.bind.onRootElement(Core_1.ResultListEvents.newResultDisplayed, function (args) {\r\n            var badge = _this.buildBadge(args.result, args.item);\r\n            if (badge) {\r\n                _this.appendBadge(badge, args.item);\r\n            }\r\n        });\r\n        return _this;\r\n    }\r\n    PromotedResultsBadge.prototype.buildBadge = function (result, resultElement) {\r\n        if (!this.shouldShowABadge(result, resultElement)) {\r\n            return null;\r\n        }\r\n        var badge = Core_1.$$('div', {\r\n            className: this.getClassName(result)\r\n        });\r\n        this.applyTagline(result, badge);\r\n        this.applyColor(result, badge);\r\n        return badge;\r\n    };\r\n    PromotedResultsBadge.prototype.appendBadge = function (badge, resultElement) {\r\n        if (this.isCardLayout(resultElement)) {\r\n            this.addBadgeToCardLayout(badge, resultElement);\r\n        }\r\n        else {\r\n            Core_1.$$(resultElement).prepend(badge.el);\r\n        }\r\n    };\r\n    PromotedResultsBadge.prototype.addBadgeToCardLayout = function (badge, resultElement) {\r\n        var container;\r\n        if (resultElement.parentElement == null) {\r\n            container = Core_1.$$('div', {\r\n                className: 'coveo-promoted-result-badge-container-card-layout'\r\n            });\r\n            container.insertBefore(resultElement);\r\n        }\r\n        else {\r\n            container = Core_1.$$(resultElement.parentElement);\r\n        }\r\n        container.append(badge.el);\r\n        container.append(resultElement);\r\n    };\r\n    PromotedResultsBadge.prototype.applyColor = function (result, badge) {\r\n        if (this.isFeatured(result) && this.options.colorForFeaturedResults) {\r\n            badge.el.style.backgroundColor = this.options.colorForFeaturedResults;\r\n        }\r\n        if (this.isRecommended(result) && this.options.colorForRecommendedResults) {\r\n            badge.el.style.backgroundColor = this.options.colorForRecommendedResults;\r\n        }\r\n    };\r\n    PromotedResultsBadge.prototype.applyTagline = function (result, badge) {\r\n        if (this.isFeatured(result) && this.options.showBadgeForFeaturedResults) {\r\n            badge.text(this.options.captionForFeatured);\r\n        }\r\n        if (this.isRecommended(result) && this.options.showBadgeForRecommendedResults) {\r\n            return badge.text(this.options.captionForRecommended);\r\n        }\r\n    };\r\n    PromotedResultsBadge.prototype.isFeatured = function (result) {\r\n        return result.isTopResult;\r\n    };\r\n    PromotedResultsBadge.prototype.isRecommended = function (result) {\r\n        return result.isRecommendation && !result.isTopResult;\r\n    };\r\n    PromotedResultsBadge.prototype.isTableLayout = function (resultElement) {\r\n        return Core_1.$$(resultElement).hasClass('coveo-table-layout');\r\n    };\r\n    PromotedResultsBadge.prototype.isCardLayout = function (resultElement) {\r\n        return Core_1.$$(resultElement).hasClass('coveo-card-layout');\r\n    };\r\n    PromotedResultsBadge.prototype.getClassName = function (result) {\r\n        return \"coveo-promoted-result-badge coveo-\" + (this.isFeatured(result) ? 'featured' : 'recommended') + \"-result-badge\";\r\n    };\r\n    PromotedResultsBadge.prototype.shouldShowABadge = function (result, resultElement) {\r\n        if (this.isTableLayout(resultElement)) {\r\n            return false;\r\n        }\r\n        if (this.isFeatured(result) && this.options.showBadgeForFeaturedResults) {\r\n            return true;\r\n        }\r\n        if (this.isRecommended(result) && this.options.showBadgeForRecommendedResults) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    PromotedResultsBadge.ID = 'PromotedResultsBadge';\r\n    PromotedResultsBadge.doExport = function () {\r\n        GlobalExports_1.exportGlobally({\r\n            PromotedResultsBadge: PromotedResultsBadge\r\n        });\r\n    };\r\n    /**\r\n     * @componentOptions\r\n     */\r\n    PromotedResultsBadge.options = {\r\n        /**\r\n         * Whether to show a badge when a result was promoted by a featured results query pipeline rule.\r\n         */\r\n        showBadgeForFeaturedResults: Core_1.ComponentOptions.buildBooleanOption({ defaultValue: true }),\r\n        /**\r\n         * Whether to show a badge when a result was promoted by Coveo ML ART.\r\n         */\r\n        showBadgeForRecommendedResults: Core_1.ComponentOptions.buildBooleanOption({ defaultValue: false }),\r\n        /**\r\n         * The caption to show on the badge for results promoted by Coveo ML ART.\r\n         *\r\n         * Default value is the localized string for `Recommended`.\r\n         *\r\n         * @examples Recommended by Coveo ML\r\n         */\r\n        captionForRecommended: Core_1.ComponentOptions.buildLocalizedStringOption({\r\n            localizedString: function () { return Core_1.l('Recommended'); },\r\n            depend: 'showBadgeForRecommendedResults'\r\n        }),\r\n        /**\r\n         * The caption to show on the badge for results promoted by a _featured results_ query pipeline rule.\r\n         *\r\n         * Default value is the localized string for `Featured`.\r\n         *\r\n         * @examples Recommended by ACME\r\n         */\r\n        captionForFeatured: Core_1.ComponentOptions.buildLocalizedStringOption({\r\n            localizedString: function () { return Core_1.l('Featured'); },\r\n            depend: 'showBadgeForFeaturedResults'\r\n        }),\r\n        /**\r\n         * The badge color for results promoted by a _featured results_ query pipeline rule.\r\n         *\r\n         * Can be specified using:\r\n         * - a hexadecimal value\r\n         * - an RGB value\r\n         * - a CSS color name\r\n         *\r\n         * @examples #f58020, rgb(125 10 36), red\r\n         *\r\n         * Default value is controlled through the default stylesheet of the framework.\r\n         */\r\n        colorForFeaturedResults: Core_1.ComponentOptions.buildColorOption({ depend: 'showBadgeForFeaturedResults' }),\r\n        /**\r\n         * The badge color for results promoted by Coveo ML ART.\r\n         *\r\n         * Can be specified using:\r\n         * - a hexadecimal value\r\n         * - an RGB value\r\n         * - a CSS color name\r\n         *\r\n         * @examples #f58020, rgb(125 10 36), red\r\n         *\r\n         * Default value is controlled through the default stylesheet of the framework.\r\n         */\r\n        colorForRecommendedResults: Core_1.ComponentOptions.buildColorOption({ depend: 'showBadgeForRecommendedResults' })\r\n    };\r\n    return PromotedResultsBadge;\r\n}(Component_1.Component));\r\nexports.PromotedResultsBadge = PromotedResultsBadge;\r\nCore_1.Initialization.registerAutoCreateComponent(PromotedResultsBadge);\r\n\n\n/***/ }),\n\n/***/ 674:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// PromotedResultsBadge.min__5f3280c404a1ee75a113.js","import 'styling/_PromotedResultsBadge';\r\nimport { $$, ComponentOptions, Dom, Initialization, l, ResultListEvents } from '../../Core';\r\nimport { IDisplayedNewResultEventArgs } from '../../events/ResultListEvents';\r\nimport { exportGlobally } from '../../GlobalExports';\r\nimport { IQueryResult } from '../../rest/QueryResult';\r\nimport { Component } from '../../ui/Base/Component';\r\nimport { IComponentBindings } from '../Base/ComponentBindings';\r\n\r\nexport interface IPromotedResultsBadgeOptions {\r\n  showBadgeForFeaturedResults: boolean;\r\n  showBadgeForRecommendedResults: boolean;\r\n\r\n  captionForRecommended: string;\r\n  captionForFeatured: string;\r\n\r\n  colorForFeaturedResults: string;\r\n  colorForRecommendedResults: string;\r\n}\r\n\r\n/**\r\n * Depending on its configuration, this component will render badges on query result items whose ranking scores were increased by [featured results](https://docs.coveo.com/en/1961/) query pipeline rules and/or [Coveo ML ART](https://docs.coveo.com/en/1671/#automatic-relevance-tuning-art-feature).\r\n *\r\n * This component can be put anywhere in the markup configuration of a search interface. However, it is meant to be initialized only once, and should thus never be included in a result template.\r\n *\r\n * @externaldocs [Adding Promoted Results Badges](https://docs.coveo.com/en/3123/)\r\n * @availablesince [July 2018 Release (v2.4382.10)](https://docs.coveo.com/en/1360/)\r\n */\r\nexport class PromotedResultsBadge extends Component {\r\n  static ID = 'PromotedResultsBadge';\r\n\r\n  static doExport = () => {\r\n    exportGlobally({\r\n      PromotedResultsBadge\r\n    });\r\n  };\r\n\r\n  /**\r\n   * @componentOptions\r\n   */\r\n  static options: IPromotedResultsBadgeOptions = {\r\n    /**\r\n     * Whether to show a badge when a result was promoted by a featured results query pipeline rule.\r\n     */\r\n    showBadgeForFeaturedResults: ComponentOptions.buildBooleanOption({ defaultValue: true }),\r\n\r\n    /**\r\n     * Whether to show a badge when a result was promoted by Coveo ML ART.\r\n     */\r\n    showBadgeForRecommendedResults: ComponentOptions.buildBooleanOption({ defaultValue: false }),\r\n\r\n    /**\r\n     * The caption to show on the badge for results promoted by Coveo ML ART.\r\n     *\r\n     * Default value is the localized string for `Recommended`.\r\n     *\r\n     * @examples Recommended by Coveo ML\r\n     */\r\n    captionForRecommended: ComponentOptions.buildLocalizedStringOption({\r\n      localizedString: () => l('Recommended'),\r\n      depend: 'showBadgeForRecommendedResults'\r\n    }),\r\n\r\n    /**\r\n     * The caption to show on the badge for results promoted by a _featured results_ query pipeline rule.\r\n     *\r\n     * Default value is the localized string for `Featured`.\r\n     *\r\n     * @examples Recommended by ACME\r\n     */\r\n    captionForFeatured: ComponentOptions.buildLocalizedStringOption({\r\n      localizedString: () => l('Featured'),\r\n      depend: 'showBadgeForFeaturedResults'\r\n    }),\r\n\r\n    /**\r\n     * The badge color for results promoted by a _featured results_ query pipeline rule.\r\n     *\r\n     * Can be specified using:\r\n     * - a hexadecimal value\r\n     * - an RGB value\r\n     * - a CSS color name\r\n     *\r\n     * @examples #f58020, rgb(125 10 36), red\r\n     *\r\n     * Default value is controlled through the default stylesheet of the framework.\r\n     */\r\n    colorForFeaturedResults: ComponentOptions.buildColorOption({ depend: 'showBadgeForFeaturedResults' }),\r\n\r\n    /**\r\n     * The badge color for results promoted by Coveo ML ART.\r\n     *\r\n     * Can be specified using:\r\n     * - a hexadecimal value\r\n     * - an RGB value\r\n     * - a CSS color name\r\n     *\r\n     * @examples #f58020, rgb(125 10 36), red\r\n     *\r\n     * Default value is controlled through the default stylesheet of the framework.\r\n     */\r\n    colorForRecommendedResults: ComponentOptions.buildColorOption({ depend: 'showBadgeForRecommendedResults' })\r\n  };\r\n\r\n  constructor(public element: HTMLElement, public options: IPromotedResultsBadgeOptions, public bindings: IComponentBindings) {\r\n    super(element, PromotedResultsBadge.ID, bindings);\r\n    this.options = ComponentOptions.initComponentOptions(element, PromotedResultsBadge, options);\r\n    this.bind.onRootElement(ResultListEvents.newResultDisplayed, (args: IDisplayedNewResultEventArgs) => {\r\n      const badge = this.buildBadge(args.result, args.item);\r\n      if (badge) {\r\n        this.appendBadge(badge, args.item);\r\n      }\r\n    });\r\n  }\r\n\r\n  private buildBadge(result: IQueryResult, resultElement: HTMLElement): Dom {\r\n    if (!this.shouldShowABadge(result, resultElement)) {\r\n      return null;\r\n    }\r\n    const badge = $$('div', {\r\n      className: this.getClassName(result)\r\n    });\r\n\r\n    this.applyTagline(result, badge);\r\n    this.applyColor(result, badge);\r\n    return badge;\r\n  }\r\n\r\n  private appendBadge(badge: Dom, resultElement: HTMLElement) {\r\n    if (this.isCardLayout(resultElement)) {\r\n      this.addBadgeToCardLayout(badge, resultElement);\r\n    } else {\r\n      $$(resultElement).prepend(badge.el);\r\n    }\r\n  }\r\n\r\n  private addBadgeToCardLayout(badge: Dom, resultElement: HTMLElement): void {\r\n    let container: Dom;\r\n\r\n    if (resultElement.parentElement == null) {\r\n      container = $$('div', {\r\n        className: 'coveo-promoted-result-badge-container-card-layout'\r\n      });\r\n\r\n      container.insertBefore(resultElement);\r\n    } else {\r\n      container = $$(resultElement.parentElement);\r\n    }\r\n\r\n    container.append(badge.el);\r\n    container.append(resultElement);\r\n  }\r\n\r\n  private applyColor(result: IQueryResult, badge: Dom) {\r\n    if (this.isFeatured(result) && this.options.colorForFeaturedResults) {\r\n      badge.el.style.backgroundColor = this.options.colorForFeaturedResults;\r\n    }\r\n\r\n    if (this.isRecommended(result) && this.options.colorForRecommendedResults) {\r\n      badge.el.style.backgroundColor = this.options.colorForRecommendedResults;\r\n    }\r\n  }\r\n\r\n  private applyTagline(result: IQueryResult, badge: Dom): string {\r\n    if (this.isFeatured(result) && this.options.showBadgeForFeaturedResults) {\r\n      badge.text(this.options.captionForFeatured);\r\n    }\r\n    if (this.isRecommended(result) && this.options.showBadgeForRecommendedResults) {\r\n      return badge.text(this.options.captionForRecommended);\r\n    }\r\n  }\r\n\r\n  private isFeatured(result: IQueryResult): boolean {\r\n    return result.isTopResult;\r\n  }\r\n\r\n  private isRecommended(result: IQueryResult): boolean {\r\n    return result.isRecommendation && !result.isTopResult;\r\n  }\r\n\r\n  private isTableLayout(resultElement: HTMLElement): boolean {\r\n    return $$(resultElement).hasClass('coveo-table-layout');\r\n  }\r\n\r\n  private isCardLayout(resultElement: HTMLElement): boolean {\r\n    return $$(resultElement).hasClass('coveo-card-layout');\r\n  }\r\n\r\n  private getClassName(result: IQueryResult) {\r\n    return `coveo-promoted-result-badge coveo-${this.isFeatured(result) ? 'featured' : 'recommended'}-result-badge`;\r\n  }\r\n\r\n  private shouldShowABadge(result: IQueryResult, resultElement: HTMLElement): boolean {\r\n    if (this.isTableLayout(resultElement)) {\r\n      return false;\r\n    }\r\n\r\n    if (this.isFeatured(result) && this.options.showBadgeForFeaturedResults) {\r\n      return true;\r\n    }\r\n\r\n    if (this.isRecommended(result) && this.options.showBadgeForRecommendedResults) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n\r\nInitialization.registerAutoCreateComponent(PromotedResultsBadge);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/PromotedResultsBadge/PromotedResultsBadge.ts"],"sourceRoot":""}