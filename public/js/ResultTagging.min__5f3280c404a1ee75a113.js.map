{"version":3,"sources":["ResultTagging.min__5f3280c404a1ee75a113.js","./src/ui/ResultTagging/ResultTagging.ts"],"names":["webpackJsonpCoveo__temporary","275","module","exports","__webpack_require__","__extends","this","extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__","constructor","prototype","create","defineProperty","value","element","options","bindings","result","ResultTagging","ID","ComponentOptions","initComponentOptions","resolveResult","Assert","exists","componentOptionsModel","field","logger","error","_this","fieldValue","Utils","getFieldValue","isNonEmptyString","tags","split","isNonEmptyArray","_","map","t","trim","tagZone","$$","className","el","appendChild","buildTagIcon","autoCompleteZone","buildTextBox","buildAddIcon","buildClearIcon","buildExistingTags","each","tag","buildTagValue","tagTextBox","text","l","tagIcon","on","defer","focusOnTextBox","append","setAttribute","textBox","focus","tagValue","buildShortenedTagWithTitle","deleteIcon","SVGIcons","icons","checkboxHookExclusionMore","SVGDom","addClassToSVGInContainer","doRemoveTag","toLowerCase","shortenedTag","StringUtils","removeMiddle","clickableValue","title","href","bindFacetEventOnValue","type","placeholder","autoCompletePopup","autoCompleteClass","manageAutocompleteAutoHide","e","keyCode","KEYBOARD","UP_ARROW","DOWN_ARROW","ENTER","manageUpDownEnter","KeyboardUtils","isArrowKeyPushed","populateSuggestions","removeClass","icon","taggingOk","clickable","doAddTag","facetAttributeName","QueryStateModel","getFacetId","facetModel","queryStateModel","get","facets","componentStateModel","atLeastOneFacetIsEnabled","filter","disabled","length","contains","set","without","union","queryController","deferExecuteQuery","beforeExecuteQuery","usageAnalytics","logSearchEvent","analyticsActionCauseList","documentTag","facetId","facetField","facetValue","addClass","clearPopup","hide","empty","showPopup","show","endpoint","getEndpoint","searchText","searchOptions","ignoreAccents","sortCriteria","maximumNumberOfValues","suggestBoxSize","queryOverride","pattern","buildRegEx","patternType","listFieldValues","then","fieldValues","buildSelectableValue","lookupValue","style","width","offsetWidth","timeout","clearTimeout","target","hasClass","setTimeout","autoCompleteTimer","closest","searchTerm","buildTermToExclude","join","term","code","selectableArray","findAll","newIndex","computeNextIndex","Math","max","min","selected","nextIndex","selectable","index","line","doAddTagWithValue","request","fieldName","doAdd","uniqueId","tagDocument","splice","indexOf","detach","doAddSingleTagValue","push","catch","findWhere","doExport","exportGlobally","buildFieldOption","match","required","buildNumberOption","defaultValue","AUTO_COMPLETE_CLASS","Component","Initialization","registerAutoCreateComponent","662"],"mappings":"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","file":"ResultTagging.min__5f3280c404a1ee75a113.js","sourcesContent":["webpackJsonpCoveo__temporary([61],{\n\n/***/ 275:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__webpack_require__(662);\r\nvar _ = __webpack_require__(0);\r\nvar GlobalExports_1 = __webpack_require__(3);\r\nvar Assert_1 = __webpack_require__(5);\r\nvar QueryStateModel_1 = __webpack_require__(13);\r\nvar Strings_1 = __webpack_require__(6);\r\nvar Dom_1 = __webpack_require__(1);\r\nvar KeyboardUtils_1 = __webpack_require__(25);\r\nvar StringUtils_1 = __webpack_require__(22);\r\nvar SVGDom_1 = __webpack_require__(16);\r\nvar SVGIcons_1 = __webpack_require__(12);\r\nvar Utils_1 = __webpack_require__(4);\r\nvar AnalyticsActionListMeta_1 = __webpack_require__(10);\r\nvar Component_1 = __webpack_require__(7);\r\nvar ComponentOptions_1 = __webpack_require__(8);\r\nvar Initialization_1 = __webpack_require__(2);\r\n/**\r\n * The ResultTagging component lists the current tag field values of its associated result and renders a control that\r\n * allows the end user to add values to a tag field.\r\n *\r\n * This component is a result template component (see [Result Templates](https://docs.coveo.com/en/413/)).\r\n *\r\n * **Note:**\r\n * > The ResultTagging component is not supported with Coveo Cloud V2. To implement the ResultTagging component in Coveo Cloud V1, contact [Coveo Support](https://support.coveo.com/s/).\r\n *\r\n * @notSupportedIn salesforcefree\r\n */\r\nvar ResultTagging = /** @class */ (function (_super) {\r\n    __extends(ResultTagging, _super);\r\n    /**\r\n     * Creates a new ResultTagging component.\r\n     * @param element The HTMLElement on which to instantiate the component.\r\n     * @param options The options for the ResultTagging component.\r\n     * @param bindings The bindings that the component requires to function normally. If not set, these will be\r\n     * automatically resolved (with a slower execution time).\r\n     * @param result The result to associate the component with.\r\n     */\r\n    function ResultTagging(element, options, bindings, result) {\r\n        var _this = _super.call(this, element, ResultTagging.ID, bindings) || this;\r\n        _this.element = element;\r\n        _this.options = options;\r\n        _this.result = result;\r\n        _this.options = ComponentOptions_1.ComponentOptions.initComponentOptions(element, ResultTagging, options);\r\n        _this.result = result || _this.resolveResult();\r\n        Assert_1.Assert.exists(_this.componentOptionsModel);\r\n        Assert_1.Assert.exists(_this.result);\r\n        if (!_this.options.field) {\r\n            _this.logger.error('You must specify a field to the ResultTagging component');\r\n            return _this;\r\n        }\r\n        var fieldValue = Utils_1.Utils.getFieldValue(_this.result, _this.options.field);\r\n        if (fieldValue && Utils_1.Utils.isNonEmptyString(fieldValue)) {\r\n            _this.tags = fieldValue.split(';');\r\n        }\r\n        else if (fieldValue && Utils_1.Utils.isNonEmptyArray(fieldValue)) {\r\n            _this.tags = fieldValue;\r\n        }\r\n        else {\r\n            _this.tags = [];\r\n        }\r\n        _this.tags = _.map(_this.tags, function (t) {\r\n            return t.trim();\r\n        });\r\n        _this.tagZone = Dom_1.$$('div', {\r\n            className: 'coveo-result-tagging-tag-zone'\r\n        }).el;\r\n        element.appendChild(_this.tagZone);\r\n        element.appendChild(_this.buildTagIcon());\r\n        _this.autoCompleteZone = Dom_1.$$('div', {\r\n            className: 'coveo-result-tagging-auto-complete-zone'\r\n        }).el;\r\n        element.appendChild(_this.autoCompleteZone);\r\n        _this.autoCompleteZone.appendChild(_this.buildTextBox());\r\n        _this.autoCompleteZone.appendChild(_this.buildAddIcon());\r\n        _this.autoCompleteZone.appendChild(_this.buildClearIcon());\r\n        _this.buildExistingTags();\r\n        return _this;\r\n    }\r\n    ResultTagging.prototype.buildExistingTags = function () {\r\n        var _this = this;\r\n        if (this.tags) {\r\n            _.each(this.tags, function (tag) {\r\n                _this.tagZone.appendChild(_this.buildTagValue(tag));\r\n            });\r\n        }\r\n    };\r\n    ResultTagging.prototype.buildTagIcon = function () {\r\n        var _this = this;\r\n        var tagZone = Dom_1.$$('div', {\r\n            className: 'coveo-result-tagging-add-tag'\r\n        });\r\n        var tagTextBox = Dom_1.$$('span', {\r\n            className: 'coveo-result-tagging-add-tag-text'\r\n        });\r\n        tagTextBox.text(Strings_1.l('EnterTag'));\r\n        var tagIcon = Dom_1.$$('span', {\r\n            className: 'coveo-result-tagging-add-tag-icon'\r\n        });\r\n        tagIcon.on('click', function () {\r\n            _.defer(function () {\r\n                _this.focusOnTextBox();\r\n            }, 20);\r\n        });\r\n        tagZone.el.appendChild(tagIcon.el);\r\n        tagZone.append(tagTextBox.el);\r\n        tagZone.setAttribute('title', Strings_1.l('EnterTag'));\r\n        return tagZone.el;\r\n    };\r\n    ResultTagging.prototype.focusOnTextBox = function () {\r\n        this.textBox.focus();\r\n    };\r\n    ResultTagging.prototype.buildTagValue = function (tagValue) {\r\n        var _this = this;\r\n        var tag = Dom_1.$$('div', {\r\n            className: 'coveo-result-tagging-coveo-tag'\r\n        });\r\n        tag.el.appendChild(this.buildShortenedTagWithTitle(tagValue));\r\n        var deleteIcon = Dom_1.$$('span', {\r\n            className: 'coveo-result-tagging-delete-icon'\r\n        }, SVGIcons_1.SVGIcons.icons.checkboxHookExclusionMore);\r\n        SVGDom_1.SVGDom.addClassToSVGInContainer(deleteIcon.el, 'coveo-result-tagging-delete-icon-svg');\r\n        tag.el.appendChild(deleteIcon.el);\r\n        deleteIcon.on('click', function () {\r\n            _this.doRemoveTag(tag.el, tagValue.toLowerCase());\r\n        });\r\n        return tag.el;\r\n    };\r\n    ResultTagging.prototype.buildShortenedTagWithTitle = function (tagValue) {\r\n        var shortenedTag = StringUtils_1.StringUtils.removeMiddle(tagValue, 16, '...');\r\n        var clickableValue = Dom_1.$$('a', {\r\n            title: tagValue,\r\n            href: 'javascript:void(0);'\r\n        });\r\n        clickableValue.text(shortenedTag);\r\n        this.bindFacetEventOnValue(clickableValue.el, tagValue);\r\n        return clickableValue.el;\r\n    };\r\n    ResultTagging.prototype.buildTextBox = function () {\r\n        var _this = this;\r\n        this.textBox = Dom_1.$$('input', {\r\n            type: 'text',\r\n            className: 'coveo-add-tag-textbox',\r\n            placeholder: Strings_1.l('EnterTag')\r\n        }).el;\r\n        this.autoCompletePopup = Dom_1.$$('div', {\r\n            className: ResultTagging.autoCompleteClass\r\n        }).el;\r\n        this.autoCompleteZone.appendChild(this.autoCompletePopup);\r\n        this.manageAutocompleteAutoHide();\r\n        Dom_1.$$(this.textBox).on('keyup', function (e) {\r\n            if (e.keyCode == KeyboardUtils_1.KEYBOARD.UP_ARROW || e.keyCode == KeyboardUtils_1.KEYBOARD.DOWN_ARROW || e.keyCode == KeyboardUtils_1.KEYBOARD.ENTER) {\r\n                _this.manageUpDownEnter(e.keyCode);\r\n            }\r\n            else if (!KeyboardUtils_1.KeyboardUtils.isArrowKeyPushed(e.keyCode)) {\r\n                _this.populateSuggestions();\r\n            }\r\n            Dom_1.$$(_this.element).removeClass('coveo-error');\r\n        });\r\n        Dom_1.$$(this.textBox).on('click', function () {\r\n            _this.populateSuggestions();\r\n        });\r\n        return this.textBox;\r\n    };\r\n    ResultTagging.prototype.buildAddIcon = function () {\r\n        var _this = this;\r\n        var icon = Dom_1.$$('div', {\r\n            className: 'coveo-result-tagging-add-tag-tick-icon'\r\n        }, SVGIcons_1.SVGIcons.icons.taggingOk);\r\n        SVGDom_1.SVGDom.addClassToSVGInContainer(icon.el, 'coveo-result-tagging-add-tag-tick-icon-svg');\r\n        var clickable = Dom_1.$$('span');\r\n        clickable.on('click', function () {\r\n            _this.doAddTag();\r\n        });\r\n        icon.el.appendChild(clickable.el);\r\n        return icon.el;\r\n    };\r\n    ResultTagging.prototype.buildClearIcon = function () {\r\n        var _this = this;\r\n        var icon = Dom_1.$$('div', {\r\n            className: 'coveo-result-tagging-clear-icon'\r\n        }, SVGIcons_1.SVGIcons.icons.checkboxHookExclusionMore);\r\n        SVGDom_1.SVGDom.addClassToSVGInContainer(icon.el, 'coveo-result-tagging-clear-icon-svg');\r\n        var clickable = Dom_1.$$('span');\r\n        clickable.on('click', function () {\r\n            _this.textBox.value = '';\r\n        });\r\n        icon.el.appendChild(clickable.el);\r\n        return icon.el;\r\n    };\r\n    ResultTagging.prototype.bindFacetEventOnValue = function (element, value) {\r\n        var _this = this;\r\n        var facetAttributeName = QueryStateModel_1.QueryStateModel.getFacetId(this.options.field);\r\n        var facetModel = this.queryStateModel.get(facetAttributeName);\r\n        var facets = this.componentStateModel.get(facetAttributeName);\r\n        var atLeastOneFacetIsEnabled = _.filter(facets, function (value) { return !value.disabled; }).length > 0;\r\n        if (facetModel != null && atLeastOneFacetIsEnabled) {\r\n            Dom_1.$$(element).on('click', function () {\r\n                if (_.contains(facetModel, value)) {\r\n                    _this.queryStateModel.set(facetAttributeName, _.without(facetModel, value));\r\n                }\r\n                else {\r\n                    _this.queryStateModel.set(facetAttributeName, _.union(facetModel, [value]));\r\n                }\r\n                _this.queryController.deferExecuteQuery({\r\n                    beforeExecuteQuery: function () {\r\n                        return _this.usageAnalytics.logSearchEvent(AnalyticsActionListMeta_1.analyticsActionCauseList.documentTag, {\r\n                            facetId: _this.options.field,\r\n                            facetField: _this.options.field,\r\n                            facetValue: value\r\n                        });\r\n                    }\r\n                });\r\n            });\r\n            if (_.contains(facetModel, value)) {\r\n                Dom_1.$$(element).addClass('coveo-selected');\r\n            }\r\n            Dom_1.$$(element).addClass('coveo-clickable');\r\n        }\r\n    };\r\n    ResultTagging.prototype.clearPopup = function () {\r\n        Dom_1.$$(this.autoCompletePopup).hide();\r\n        Dom_1.$$(this.autoCompletePopup).empty();\r\n    };\r\n    ResultTagging.prototype.showPopup = function () {\r\n        Dom_1.$$(this.autoCompletePopup).show();\r\n    };\r\n    ResultTagging.prototype.populateSuggestions = function () {\r\n        var _this = this;\r\n        var endpoint = this.queryController.getEndpoint();\r\n        var searchText = this.textBox.value;\r\n        var searchOptions = {\r\n            field: this.options.field,\r\n            ignoreAccents: true,\r\n            sortCriteria: 'occurences',\r\n            maximumNumberOfValues: this.options.suggestBoxSize,\r\n            queryOverride: '@uri',\r\n            pattern: this.buildRegEx(searchText),\r\n            patternType: 'RegularExpression'\r\n        };\r\n        endpoint.listFieldValues(searchOptions).then(function (fieldValues) {\r\n            _this.clearPopup();\r\n            _.each(fieldValues, function (fieldValue) {\r\n                _this.autoCompletePopup.appendChild(_this.buildSelectableValue(fieldValue.lookupValue));\r\n            });\r\n            _this.showPopup();\r\n            _this.autoCompletePopup.style.width = _this.textBox.offsetWidth + ' px';\r\n        });\r\n    };\r\n    ResultTagging.prototype.manageAutocompleteAutoHide = function () {\r\n        var _this = this;\r\n        var timeout;\r\n        Dom_1.$$(this.textBox).on('mouseover', function () {\r\n            clearTimeout(timeout);\r\n        });\r\n        Dom_1.$$(this.autoCompletePopup).on('mouseout', function (e) {\r\n            if (Dom_1.$$(e.target).hasClass(ResultTagging.autoCompleteClass)) {\r\n                timeout = setTimeout(function () {\r\n                    _this.clearPopup();\r\n                }, _this.options.autoCompleteTimer);\r\n            }\r\n        });\r\n        Dom_1.$$(this.autoCompletePopup).on('mouseenter', function () {\r\n            clearTimeout(timeout);\r\n        });\r\n        Dom_1.$$(this.element).on('mouseenter', function () {\r\n            _this.clearPopup();\r\n            Dom_1.$$(_this.element).addClass('coveo-opened');\r\n        });\r\n        Dom_1.$$(Dom_1.$$(this.element).closest('.CoveoResult')).on('mouseleave', function () {\r\n            _this.clearPopup();\r\n            if (_this.textBox.value == '') {\r\n                Dom_1.$$(_this.element).removeClass('coveo-opened');\r\n            }\r\n        });\r\n        Dom_1.$$(Dom_1.$$(this.element).closest('.CoveoResult')).on('focusout', function (e) {\r\n            if (_this.textBox.value != '' && Dom_1.$$(e.target).closest('.CoveoResult') != Dom_1.$$(_this.element).closest('.CoveoResult')) {\r\n                Dom_1.$$(_this.element).addClass('coveo-error');\r\n            }\r\n        });\r\n        Dom_1.$$(Dom_1.$$(this.element).closest('.CoveoResult')).on('focusin', function () {\r\n            Dom_1.$$(_this.element).removeClass('coveo-error');\r\n        });\r\n    };\r\n    // Exclude tags that are already on the result (Since we can tag with the same value twice.\r\n    ResultTagging.prototype.buildRegEx = function (searchTerm) {\r\n        var _this = this;\r\n        return '(?=.*' + searchTerm + ')' + _.map(this.tags, function (tag) { return _this.buildTermToExclude(tag); }).join('') + '.*';\r\n    };\r\n    ResultTagging.prototype.buildTermToExclude = function (term) {\r\n        return '(?!^' + term + '$)';\r\n    };\r\n    ResultTagging.prototype.manageUpDownEnter = function (code) {\r\n        var selectableArray = Dom_1.$$(this.element).findAll('.coveo-selectable');\r\n        if (code == KeyboardUtils_1.KEYBOARD.ENTER) {\r\n            this.doAddTag();\r\n            return;\r\n        }\r\n        if (selectableArray.length > 0) {\r\n            var newIndex = this.computeNextIndex(code, selectableArray);\r\n            newIndex = Math.max(0, newIndex);\r\n            newIndex = Math.min(selectableArray.length - 1, newIndex);\r\n            var selected = Dom_1.$$(selectableArray[newIndex]);\r\n            selected.addClass('coveo-selected');\r\n            this.textBox.value = selected.text();\r\n        }\r\n    };\r\n    ResultTagging.prototype.computeNextIndex = function (code, selectableArray) {\r\n        var nextIndex = 0;\r\n        _.each(selectableArray, function (selectable, index) {\r\n            if (Dom_1.$$(selectable).hasClass('coveo-selected')) {\r\n                if (code == KeyboardUtils_1.KEYBOARD.UP_ARROW) {\r\n                    nextIndex = index - 1;\r\n                }\r\n                else if (code == KeyboardUtils_1.KEYBOARD.DOWN_ARROW) {\r\n                    nextIndex = index + 1;\r\n                }\r\n                Dom_1.$$(selectable).removeClass('coveo-selected');\r\n            }\r\n        });\r\n        return nextIndex;\r\n    };\r\n    ResultTagging.prototype.buildSelectableValue = function (lookupValue) {\r\n        var _this = this;\r\n        var line = Dom_1.$$('div', {\r\n            className: 'coveo-selectable'\r\n        });\r\n        line.el.appendChild(this.buildShortenedTagWithTitle(lookupValue));\r\n        line.on('click', function () {\r\n            _this.doAddTagWithValue(lookupValue);\r\n        });\r\n        return line.el;\r\n    };\r\n    ResultTagging.prototype.doRemoveTag = function (element, tagValue) {\r\n        var _this = this;\r\n        var request = {\r\n            fieldName: this.options.field,\r\n            fieldValue: tagValue,\r\n            doAdd: false,\r\n            uniqueId: this.result.uniqueId\r\n        };\r\n        this.queryController\r\n            .getEndpoint()\r\n            .tagDocument(request)\r\n            .then(function () {\r\n            _this.tags.splice(_.indexOf(_this.tags, tagValue), 1);\r\n            Dom_1.$$(element).detach();\r\n        });\r\n    };\r\n    ResultTagging.prototype.doAddTagWithValue = function (tagValue) {\r\n        var _this = this;\r\n        _.each(tagValue.split(','), function (tag) {\r\n            _this.doAddSingleTagValue(tag);\r\n        });\r\n    };\r\n    ResultTagging.prototype.doAddSingleTagValue = function (tagValue) {\r\n        var _this = this;\r\n        this.clearPopup();\r\n        if (_.indexOf(this.tags, tagValue) > -1) {\r\n            Dom_1.$$(this.element).addClass('coveo-error');\r\n            return;\r\n        }\r\n        this.tags.push(tagValue);\r\n        var request = {\r\n            fieldName: this.options.field,\r\n            fieldValue: tagValue,\r\n            doAdd: true,\r\n            uniqueId: this.result.uniqueId\r\n        };\r\n        this.queryController\r\n            .getEndpoint()\r\n            .tagDocument(request)\r\n            .then(function () {\r\n            _this.tagZone.appendChild(_this.buildTagValue(tagValue));\r\n            _this.textBox.value = '';\r\n            Dom_1.$$(_this.element).removeClass('coveo-error');\r\n        })\r\n            .catch(function () {\r\n            // We do this otherwise it's possible to add the same tag while we wait for the server's response\r\n            _this.tags = _.without(_this.tags, _.findWhere(_this.tags, tagValue));\r\n        });\r\n    };\r\n    ResultTagging.prototype.doAddTag = function () {\r\n        var tagValue = Utils_1.Utils.trim(this.textBox.value.toLowerCase());\r\n        this.doAddTagWithValue(tagValue);\r\n    };\r\n    ResultTagging.ID = 'ResultTagging';\r\n    ResultTagging.autoCompleteClass = 'coveo-result-tagging-auto-complete';\r\n    ResultTagging.doExport = function () {\r\n        GlobalExports_1.exportGlobally({\r\n            ResultTagging: ResultTagging\r\n        });\r\n    };\r\n    /**\r\n     * @componentOptions\r\n     */\r\n    ResultTagging.options = {\r\n        /**\r\n         * Specifies the tag field that the component will use.\r\n         *\r\n         * Specifying a value for this options is necessary for this component to work.\r\n         */\r\n        field: ComponentOptions_1.ComponentOptions.buildFieldOption({\r\n            match: function (field) { return field.type == 'Tag'; },\r\n            required: true\r\n        }),\r\n        /**\r\n         * Specifies the number of items to show in the list of suggested items.\r\n         *\r\n         * Default value is `5`. Minimum value is `0 `.\r\n         */\r\n        suggestBoxSize: ComponentOptions_1.ComponentOptions.buildNumberOption({ defaultValue: 5, min: 0 }),\r\n        /**\r\n         * Specifies how much time (in milliseconds) it takes for the list of suggested items to disappear when it loses\r\n         * focus.\r\n         *\r\n         * Default value is `2000`. Minimum value is `0`.\r\n         */\r\n        autoCompleteTimer: ComponentOptions_1.ComponentOptions.buildNumberOption({ defaultValue: 2000, min: 0 })\r\n    };\r\n    ResultTagging.AUTO_COMPLETE_CLASS = 'coveo-result-tagging-auto-complete';\r\n    return ResultTagging;\r\n}(Component_1.Component));\r\nexports.ResultTagging = ResultTagging;\r\nInitialization_1.Initialization.registerAutoCreateComponent(ResultTagging);\r\n\n\n/***/ }),\n\n/***/ 662:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// ResultTagging.min__5f3280c404a1ee75a113.js","import 'styling/_ResultTagging';\r\nimport * as _ from 'underscore';\r\nimport { exportGlobally } from '../../GlobalExports';\r\nimport { Assert } from '../../misc/Assert';\r\nimport { QueryStateModel } from '../../models/QueryStateModel';\r\nimport { IFieldDescription } from '../../rest/FieldDescription';\r\nimport { IIndexFieldValue } from '../../rest/FieldValue';\r\nimport { IQueryResult } from '../../rest/QueryResult';\r\nimport { ITaggingRequest } from '../../rest/TaggingRequest';\r\nimport { l } from '../../strings/Strings';\r\nimport { $$ } from '../../utils/Dom';\r\nimport { KEYBOARD, KeyboardUtils } from '../../utils/KeyboardUtils';\r\nimport { StringUtils } from '../../utils/StringUtils';\r\nimport { SVGDom } from '../../utils/SVGDom';\r\nimport { SVGIcons } from '../../utils/SVGIcons';\r\nimport { Utils } from '../../utils/Utils';\r\nimport { analyticsActionCauseList } from '../Analytics/AnalyticsActionListMeta';\r\nimport { Component } from '../Base/Component';\r\nimport { IComponentBindings } from '../Base/ComponentBindings';\r\nimport { ComponentOptions } from '../Base/ComponentOptions';\r\nimport { IFieldOption } from '../Base/IComponentOptions';\r\nimport { Initialization } from '../Base/Initialization';\r\n\r\nexport interface IResultTaggingOptions {\r\n  field: IFieldOption;\r\n  suggestBoxSize?: number;\r\n  autoCompleteTimer?: number;\r\n}\r\n\r\nexport interface IAnalyticsResultTaggingMeta {\r\n  facetId: string;\r\n  facetField: string;\r\n  facetValue?: string;\r\n  facetTitle?: string;\r\n}\r\n\r\n/**\r\n * The ResultTagging component lists the current tag field values of its associated result and renders a control that\r\n * allows the end user to add values to a tag field.\r\n *\r\n * This component is a result template component (see [Result Templates](https://docs.coveo.com/en/413/)).\r\n *\r\n * **Note:**\r\n * > The ResultTagging component is not supported with Coveo Cloud V2. To implement the ResultTagging component in Coveo Cloud V1, contact [Coveo Support](https://support.coveo.com/s/).\r\n *\r\n * @notSupportedIn salesforcefree\r\n */\r\nexport class ResultTagging extends Component {\r\n  static ID = 'ResultTagging';\r\n  static autoCompleteClass = 'coveo-result-tagging-auto-complete';\r\n\r\n  static doExport = () => {\r\n    exportGlobally({\r\n      ResultTagging: ResultTagging\r\n    });\r\n  };\r\n\r\n  /**\r\n   * @componentOptions\r\n   */\r\n  static options: IResultTaggingOptions = {\r\n    /**\r\n     * Specifies the tag field that the component will use.\r\n     *\r\n     * Specifying a value for this options is necessary for this component to work.\r\n     */\r\n    field: ComponentOptions.buildFieldOption({\r\n      match: (field: IFieldDescription) => field.type == 'Tag',\r\n      required: true\r\n    }),\r\n\r\n    /**\r\n     * Specifies the number of items to show in the list of suggested items.\r\n     *\r\n     * Default value is `5`. Minimum value is `0 `.\r\n     */\r\n    suggestBoxSize: ComponentOptions.buildNumberOption({ defaultValue: 5, min: 0 }),\r\n\r\n    /**\r\n     * Specifies how much time (in milliseconds) it takes for the list of suggested items to disappear when it loses\r\n     * focus.\r\n     *\r\n     * Default value is `2000`. Minimum value is `0`.\r\n     */\r\n    autoCompleteTimer: ComponentOptions.buildNumberOption({ defaultValue: 2000, min: 0 })\r\n  };\r\n\r\n  static AUTO_COMPLETE_CLASS = 'coveo-result-tagging-auto-complete';\r\n\r\n  private autoCompleteZone: HTMLElement;\r\n  private textBox: HTMLInputElement;\r\n  private autoCompletePopup: HTMLElement;\r\n  private tagZone: HTMLElement;\r\n  private tags: string[];\r\n\r\n  /**\r\n   * Creates a new ResultTagging component.\r\n   * @param element The HTMLElement on which to instantiate the component.\r\n   * @param options The options for the ResultTagging component.\r\n   * @param bindings The bindings that the component requires to function normally. If not set, these will be\r\n   * automatically resolved (with a slower execution time).\r\n   * @param result The result to associate the component with.\r\n   */\r\n  constructor(\r\n    public element: HTMLElement,\r\n    public options?: IResultTaggingOptions,\r\n    bindings?: IComponentBindings,\r\n    public result?: IQueryResult\r\n  ) {\r\n    super(element, ResultTagging.ID, bindings);\r\n\r\n    this.options = ComponentOptions.initComponentOptions(element, ResultTagging, options);\r\n    this.result = result || this.resolveResult();\r\n    Assert.exists(this.componentOptionsModel);\r\n    Assert.exists(this.result);\r\n\r\n    if (!this.options.field) {\r\n      this.logger.error('You must specify a field to the ResultTagging component');\r\n      return;\r\n    }\r\n    let fieldValue = Utils.getFieldValue(this.result, <string>this.options.field);\r\n    if (fieldValue && Utils.isNonEmptyString(fieldValue)) {\r\n      this.tags = fieldValue.split(';');\r\n    } else if (fieldValue && Utils.isNonEmptyArray(fieldValue)) {\r\n      this.tags = fieldValue;\r\n    } else {\r\n      this.tags = [];\r\n    }\r\n    this.tags = _.map(this.tags, t => {\r\n      return t.trim();\r\n    });\r\n    this.tagZone = $$('div', {\r\n      className: 'coveo-result-tagging-tag-zone'\r\n    }).el;\r\n    element.appendChild(this.tagZone);\r\n    element.appendChild(this.buildTagIcon());\r\n\r\n    this.autoCompleteZone = $$('div', {\r\n      className: 'coveo-result-tagging-auto-complete-zone'\r\n    }).el;\r\n    element.appendChild(this.autoCompleteZone);\r\n    this.autoCompleteZone.appendChild(this.buildTextBox());\r\n    this.autoCompleteZone.appendChild(this.buildAddIcon());\r\n    this.autoCompleteZone.appendChild(this.buildClearIcon());\r\n    this.buildExistingTags();\r\n  }\r\n\r\n  private buildExistingTags() {\r\n    if (this.tags) {\r\n      _.each(this.tags, (tag: string) => {\r\n        this.tagZone.appendChild(this.buildTagValue(tag));\r\n      });\r\n    }\r\n  }\r\n\r\n  private buildTagIcon(): HTMLElement {\r\n    let tagZone = $$('div', {\r\n      className: 'coveo-result-tagging-add-tag'\r\n    });\r\n    let tagTextBox = $$('span', {\r\n      className: 'coveo-result-tagging-add-tag-text'\r\n    });\r\n    tagTextBox.text(l('EnterTag'));\r\n    let tagIcon = $$('span', {\r\n      className: 'coveo-result-tagging-add-tag-icon'\r\n    });\r\n    tagIcon.on('click', () => {\r\n      _.defer(() => {\r\n        this.focusOnTextBox();\r\n      }, 20);\r\n    });\r\n    tagZone.el.appendChild(tagIcon.el);\r\n    tagZone.append(tagTextBox.el);\r\n    tagZone.setAttribute('title', l('EnterTag'));\r\n    return tagZone.el;\r\n  }\r\n\r\n  private focusOnTextBox() {\r\n    this.textBox.focus();\r\n  }\r\n\r\n  private buildTagValue(tagValue: string): HTMLElement {\r\n    let tag = $$('div', {\r\n      className: 'coveo-result-tagging-coveo-tag'\r\n    });\r\n    tag.el.appendChild(this.buildShortenedTagWithTitle(tagValue));\r\n    let deleteIcon = $$(\r\n      'span',\r\n      {\r\n        className: 'coveo-result-tagging-delete-icon'\r\n      },\r\n      SVGIcons.icons.checkboxHookExclusionMore\r\n    );\r\n    SVGDom.addClassToSVGInContainer(deleteIcon.el, 'coveo-result-tagging-delete-icon-svg');\r\n    tag.el.appendChild(deleteIcon.el);\r\n    deleteIcon.on('click', () => {\r\n      this.doRemoveTag(tag.el, tagValue.toLowerCase());\r\n    });\r\n    return tag.el;\r\n  }\r\n\r\n  private buildShortenedTagWithTitle(tagValue: string): HTMLElement {\r\n    let shortenedTag = StringUtils.removeMiddle(tagValue, 16, '...');\r\n    let clickableValue = $$('a', {\r\n      title: tagValue,\r\n      href: 'javascript:void(0);'\r\n    });\r\n    clickableValue.text(shortenedTag);\r\n\r\n    this.bindFacetEventOnValue(clickableValue.el, tagValue);\r\n    return clickableValue.el;\r\n  }\r\n\r\n  private buildTextBox(): HTMLInputElement {\r\n    this.textBox = <HTMLInputElement>$$('input', {\r\n      type: 'text',\r\n      className: 'coveo-add-tag-textbox',\r\n      placeholder: l('EnterTag')\r\n    }).el;\r\n\r\n    this.autoCompletePopup = $$('div', {\r\n      className: ResultTagging.autoCompleteClass\r\n    }).el;\r\n    this.autoCompleteZone.appendChild(this.autoCompletePopup);\r\n    this.manageAutocompleteAutoHide();\r\n    $$(this.textBox).on('keyup', (e: KeyboardEvent) => {\r\n      if (e.keyCode == KEYBOARD.UP_ARROW || e.keyCode == KEYBOARD.DOWN_ARROW || e.keyCode == KEYBOARD.ENTER) {\r\n        this.manageUpDownEnter(e.keyCode);\r\n      } else if (!KeyboardUtils.isArrowKeyPushed(e.keyCode)) {\r\n        this.populateSuggestions();\r\n      }\r\n      $$(this.element).removeClass('coveo-error');\r\n    });\r\n    $$(this.textBox).on('click', () => {\r\n      this.populateSuggestions();\r\n    });\r\n    return this.textBox;\r\n  }\r\n\r\n  private buildAddIcon(): HTMLElement {\r\n    let icon = $$(\r\n      'div',\r\n      {\r\n        className: 'coveo-result-tagging-add-tag-tick-icon'\r\n      },\r\n      SVGIcons.icons.taggingOk\r\n    );\r\n    SVGDom.addClassToSVGInContainer(icon.el, 'coveo-result-tagging-add-tag-tick-icon-svg');\r\n    let clickable = $$('span');\r\n    clickable.on('click', () => {\r\n      this.doAddTag();\r\n    });\r\n    icon.el.appendChild(clickable.el);\r\n    return icon.el;\r\n  }\r\n\r\n  private buildClearIcon(): HTMLElement {\r\n    let icon = $$(\r\n      'div',\r\n      {\r\n        className: 'coveo-result-tagging-clear-icon'\r\n      },\r\n      SVGIcons.icons.checkboxHookExclusionMore\r\n    );\r\n    SVGDom.addClassToSVGInContainer(icon.el, 'coveo-result-tagging-clear-icon-svg');\r\n    let clickable = $$('span');\r\n    clickable.on('click', () => {\r\n      this.textBox.value = '';\r\n    });\r\n    icon.el.appendChild(clickable.el);\r\n    return icon.el;\r\n  }\r\n\r\n  private bindFacetEventOnValue(element: HTMLElement, value: string) {\r\n    let facetAttributeName = QueryStateModel.getFacetId(<string>this.options.field);\r\n    let facetModel: string[] = this.queryStateModel.get(facetAttributeName);\r\n    let facets: Component[] = this.componentStateModel.get(facetAttributeName);\r\n    let atLeastOneFacetIsEnabled = _.filter(facets, (value: Component) => !value.disabled).length > 0;\r\n\r\n    if (facetModel != null && atLeastOneFacetIsEnabled) {\r\n      $$(element).on('click', () => {\r\n        if (_.contains(facetModel, value)) {\r\n          this.queryStateModel.set(facetAttributeName, _.without(facetModel, value));\r\n        } else {\r\n          this.queryStateModel.set(facetAttributeName, _.union(facetModel, [value]));\r\n        }\r\n        this.queryController.deferExecuteQuery({\r\n          beforeExecuteQuery: () =>\r\n            this.usageAnalytics.logSearchEvent<IAnalyticsResultTaggingMeta>(analyticsActionCauseList.documentTag, {\r\n              facetId: <string>this.options.field,\r\n              facetField: <string>this.options.field,\r\n              facetValue: value\r\n            })\r\n        });\r\n      });\r\n\r\n      if (_.contains(facetModel, value)) {\r\n        $$(element).addClass('coveo-selected');\r\n      }\r\n      $$(element).addClass('coveo-clickable');\r\n    }\r\n  }\r\n\r\n  private clearPopup() {\r\n    $$(this.autoCompletePopup).hide();\r\n    $$(this.autoCompletePopup).empty();\r\n  }\r\n\r\n  private showPopup() {\r\n    $$(this.autoCompletePopup).show();\r\n  }\r\n\r\n  private populateSuggestions() {\r\n    let endpoint = this.queryController.getEndpoint();\r\n    let searchText = this.textBox.value;\r\n    let searchOptions = {\r\n      field: <string>this.options.field,\r\n      ignoreAccents: true,\r\n      sortCriteria: 'occurences',\r\n      maximumNumberOfValues: this.options.suggestBoxSize,\r\n      queryOverride: '@uri',\r\n      pattern: this.buildRegEx(searchText),\r\n      patternType: 'RegularExpression'\r\n    };\r\n    endpoint.listFieldValues(searchOptions).then((fieldValues: IIndexFieldValue[]) => {\r\n      this.clearPopup();\r\n      _.each(fieldValues, (fieldValue: IIndexFieldValue) => {\r\n        this.autoCompletePopup.appendChild(this.buildSelectableValue(fieldValue.lookupValue));\r\n      });\r\n      this.showPopup();\r\n      this.autoCompletePopup.style.width = this.textBox.offsetWidth + ' px';\r\n    });\r\n  }\r\n\r\n  private manageAutocompleteAutoHide() {\r\n    let timeout: any;\r\n\r\n    $$(this.textBox).on('mouseover', () => {\r\n      clearTimeout(timeout);\r\n    });\r\n\r\n    $$(this.autoCompletePopup).on('mouseout', e => {\r\n      if ($$(<HTMLElement>e.target).hasClass(ResultTagging.autoCompleteClass)) {\r\n        timeout = setTimeout(() => {\r\n          this.clearPopup();\r\n        }, this.options.autoCompleteTimer);\r\n      }\r\n    });\r\n\r\n    $$(this.autoCompletePopup).on('mouseenter', () => {\r\n      clearTimeout(timeout);\r\n    });\r\n\r\n    $$(this.element).on('mouseenter', () => {\r\n      this.clearPopup();\r\n      $$(this.element).addClass('coveo-opened');\r\n    });\r\n\r\n    $$($$(this.element).closest('.CoveoResult')).on('mouseleave', () => {\r\n      this.clearPopup();\r\n      if (this.textBox.value == '') {\r\n        $$(this.element).removeClass('coveo-opened');\r\n      }\r\n    });\r\n\r\n    $$($$(this.element).closest('.CoveoResult')).on('focusout', e => {\r\n      if (this.textBox.value != '' && $$(<HTMLElement>e.target).closest('.CoveoResult') != $$(this.element).closest('.CoveoResult')) {\r\n        $$(this.element).addClass('coveo-error');\r\n      }\r\n    });\r\n\r\n    $$($$(this.element).closest('.CoveoResult')).on('focusin', () => {\r\n      $$(this.element).removeClass('coveo-error');\r\n    });\r\n  }\r\n\r\n  // Exclude tags that are already on the result (Since we can tag with the same value twice.\r\n  private buildRegEx(searchTerm: string) {\r\n    return '(?=.*' + searchTerm + ')' + _.map(this.tags, (tag: string) => this.buildTermToExclude(tag)).join('') + '.*';\r\n  }\r\n\r\n  private buildTermToExclude(term: string) {\r\n    return '(?!^' + term + '$)';\r\n  }\r\n\r\n  private manageUpDownEnter(code: number) {\r\n    let selectableArray = $$(this.element).findAll('.coveo-selectable');\r\n    if (code == KEYBOARD.ENTER) {\r\n      this.doAddTag();\r\n      return;\r\n    }\r\n\r\n    if (selectableArray.length > 0) {\r\n      let newIndex = this.computeNextIndex(code, selectableArray);\r\n      newIndex = Math.max(0, newIndex);\r\n      newIndex = Math.min(selectableArray.length - 1, newIndex);\r\n      let selected = $$(selectableArray[newIndex]);\r\n      selected.addClass('coveo-selected');\r\n      this.textBox.value = selected.text();\r\n    }\r\n  }\r\n\r\n  private computeNextIndex(code: number, selectableArray: HTMLElement[]): number {\r\n    let nextIndex = 0;\r\n    _.each(selectableArray, (selectable: HTMLElement, index) => {\r\n      if ($$(selectable).hasClass('coveo-selected')) {\r\n        if (code == KEYBOARD.UP_ARROW) {\r\n          nextIndex = index - 1;\r\n        } else if (code == KEYBOARD.DOWN_ARROW) {\r\n          nextIndex = index + 1;\r\n        }\r\n        $$(selectable).removeClass('coveo-selected');\r\n      }\r\n    });\r\n    return nextIndex;\r\n  }\r\n\r\n  private buildSelectableValue(lookupValue: string): HTMLElement {\r\n    let line = $$('div', {\r\n      className: 'coveo-selectable'\r\n    });\r\n    line.el.appendChild(this.buildShortenedTagWithTitle(lookupValue));\r\n    line.on('click', () => {\r\n      this.doAddTagWithValue(lookupValue);\r\n    });\r\n    return line.el;\r\n  }\r\n\r\n  private doRemoveTag(element: HTMLElement, tagValue: string) {\r\n    let request: ITaggingRequest = {\r\n      fieldName: <string>this.options.field,\r\n      fieldValue: tagValue,\r\n      doAdd: false,\r\n      uniqueId: this.result.uniqueId\r\n    };\r\n    this.queryController\r\n      .getEndpoint()\r\n      .tagDocument(request)\r\n      .then(() => {\r\n        this.tags.splice(_.indexOf(this.tags, tagValue), 1);\r\n        $$(element).detach();\r\n      });\r\n  }\r\n\r\n  private doAddTagWithValue(tagValue: string) {\r\n    _.each(tagValue.split(','), (tag: string) => {\r\n      this.doAddSingleTagValue(tag);\r\n    });\r\n  }\r\n\r\n  private doAddSingleTagValue(tagValue: string) {\r\n    this.clearPopup();\r\n    if (_.indexOf(this.tags, tagValue) > -1) {\r\n      $$(this.element).addClass('coveo-error');\r\n      return;\r\n    }\r\n    this.tags.push(tagValue);\r\n    let request: ITaggingRequest = {\r\n      fieldName: <string>this.options.field,\r\n      fieldValue: tagValue,\r\n      doAdd: true,\r\n      uniqueId: this.result.uniqueId\r\n    };\r\n    this.queryController\r\n      .getEndpoint()\r\n      .tagDocument(request)\r\n      .then(() => {\r\n        this.tagZone.appendChild(this.buildTagValue(tagValue));\r\n        this.textBox.value = '';\r\n        $$(this.element).removeClass('coveo-error');\r\n      })\r\n      .catch(() => {\r\n        // We do this otherwise it's possible to add the same tag while we wait for the server's response\r\n        this.tags = _.without(this.tags, _.findWhere(this.tags, tagValue));\r\n      });\r\n  }\r\n\r\n  private doAddTag() {\r\n    let tagValue = Utils.trim(this.textBox.value.toLowerCase());\r\n    this.doAddTagWithValue(tagValue);\r\n  }\r\n}\r\nInitialization.registerAutoCreateComponent(ResultTagging);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/ResultTagging/ResultTagging.ts"],"sourceRoot":""}