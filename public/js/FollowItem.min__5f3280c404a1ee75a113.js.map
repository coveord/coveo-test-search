{"version":3,"sources":["FollowItem.min__5f3280c404a1ee75a113.js","./src/rest/Subscription.ts","./src/ui/FollowItem/FollowItem.ts"],"names":["webpackJsonpCoveo__temporary","226","module","exports","__webpack_require__","Object","defineProperty","value","SUBSCRIPTION_TYPE","followQuery","followDocument","276","__extends","this","extendStatics","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__","constructor","prototype","create","element","options","bindings","result","FollowItem","ID","ComponentOptions","initComponentOptions","Assert","exists","container","$$","text","icon","buildIcon","loadingIcon","buildLoadingIcon","append","el","on","toggleFollow","setAttribute","bind","KeyboardUtils","keypressAction","KEYBOARD","ENTER","onRootElement","SearchAlertsEvents","searchAlertsDeleted","args","handleSubscriptionDeleted","searchAlertsCreated","handleSubscriptionCreated","addClass","updateIsFollowed","_this","setFollowed","subscription","removeClass","l","setNotFollowed","buildFollowRequest","getId","title","hasClass","id","logAnalyticsEvent","analyticsActionCauseList","searchAlertsUnfollowDocument","queryController","getEndpoint","deleteSubscription","then","eventArgs","dom","root","trigger","catch","searchAlertsFail","searchAlertsFollowDocument","follow","getText","listSubscriptions","subscriptions","_","isArray","find","typeConfig","remove","className","SVGIcons","icons","dropdownFollowQuery","SVGDom","addClassToSVGInContainer","loading","type","parentElement","removeChild","Utils","getFieldValue","typeCofig","modifiedDateField","watchedFields","name","usageAnalytics","logCustomEvent","author","QueryUtils","getAuthor","documentLanguage","getLanguage","documentSource","getSource","documentTitle","contentIDValue","getPermanentId","fieldValue","contentIDKey","fieldUsed","doExport","exportGlobally","buildFieldsOption","buildStringOption","Component","Initialization","registerAutoCreateComponent"],"mappings":"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","file":"FollowItem.min__5f3280c404a1ee75a113.js","sourcesContent":["webpackJsonpCoveo__temporary([52],{\n\n/***/ 226:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SUBSCRIPTION_TYPE = {\r\n    followQuery: 'followQuery',\r\n    followDocument: 'followDocument'\r\n};\r\n\n\n/***/ }),\n\n/***/ 276:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar _ = __webpack_require__(0);\r\nvar SearchAlertEvents_1 = __webpack_require__(83);\r\nvar GlobalExports_1 = __webpack_require__(3);\r\nvar Assert_1 = __webpack_require__(5);\r\nvar Subscription_1 = __webpack_require__(226);\r\nvar Strings_1 = __webpack_require__(6);\r\nvar Dom_1 = __webpack_require__(1);\r\nvar KeyboardUtils_1 = __webpack_require__(25);\r\nvar QueryUtils_1 = __webpack_require__(21);\r\nvar SVGDom_1 = __webpack_require__(16);\r\nvar SVGIcons_1 = __webpack_require__(12);\r\nvar Utils_1 = __webpack_require__(4);\r\nvar AnalyticsActionListMeta_1 = __webpack_require__(10);\r\nvar Component_1 = __webpack_require__(7);\r\nvar ComponentOptions_1 = __webpack_require__(8);\r\nvar Initialization_1 = __webpack_require__(2);\r\n/**\r\n * The FollowItem component renders a widget that the end user can click to follow a particular item. A user following\r\n * an item receives email notifications when the item changes.\r\n *\r\n * **Note:**\r\n * > A {@link SearchAlerts} component must be present in the page for this component to work. It is also necessary to\r\n * > meet certain requirements to be able to use this component (see\r\n * > [Deploying Search Alerts on a Coveo JS Search Page](https://docs.coveo.com/en/1932/)).\r\n *\r\n * This component is a result template component (see [Result Templates](https://docs.coveo.com/en/413/)).\r\n */\r\nvar FollowItem = /** @class */ (function (_super) {\r\n    __extends(FollowItem, _super);\r\n    /**\r\n     * Creates a new FollowItem component.\r\n     * @param element The HTMLElement on which to instantiate the component.\r\n     * @param options The options for the FollowItem component.\r\n     * @param bindings The bindings that the component requires to function normally. If not set, these will be\r\n     * automatically resolved (with a slower execution time)\r\n     * @param result The result to associate the component with.\r\n     */\r\n    function FollowItem(element, options, bindings, result) {\r\n        var _this = _super.call(this, element, FollowItem.ID, bindings) || this;\r\n        _this.element = element;\r\n        _this.options = options;\r\n        _this.bindings = bindings;\r\n        _this.result = result;\r\n        _this.options = ComponentOptions_1.ComponentOptions.initComponentOptions(element, FollowItem, options);\r\n        Assert_1.Assert.exists(_this.result);\r\n        _this.container = Dom_1.$$(_this.element);\r\n        _this.text = Dom_1.$$('span');\r\n        var icon = _this.buildIcon();\r\n        var loadingIcon = _this.buildLoadingIcon();\r\n        _this.container.append(icon);\r\n        _this.container.append(loadingIcon);\r\n        _this.container.append(_this.text.el);\r\n        _this.container.on('click', function () { return _this.toggleFollow(); });\r\n        _this.container.setAttribute('tabindex', '0');\r\n        _this.bind.on(_this.container, 'keyup', KeyboardUtils_1.KeyboardUtils.keypressAction(KeyboardUtils_1.KEYBOARD.ENTER, function () { return _this.toggleFollow(); }));\r\n        _this.bind.onRootElement(SearchAlertEvents_1.SearchAlertsEvents.searchAlertsDeleted, function (args) { return _this.handleSubscriptionDeleted(args); });\r\n        _this.bind.onRootElement(SearchAlertEvents_1.SearchAlertsEvents.searchAlertsCreated, function (args) { return _this.handleSubscriptionCreated(args); });\r\n        _this.container.addClass('coveo-follow-item-loading');\r\n        _this.updateIsFollowed();\r\n        return _this;\r\n    }\r\n    FollowItem.prototype.setFollowed = function (subscription) {\r\n        this.container.removeClass('coveo-follow-item-loading');\r\n        this.subscription = subscription;\r\n        this.container.addClass('coveo-follow-item-followed');\r\n        this.text.text(Strings_1.l('SearchAlerts_unFollowing'));\r\n    };\r\n    FollowItem.prototype.setNotFollowed = function () {\r\n        this.container.removeClass('coveo-follow-item-loading');\r\n        this.subscription = FollowItem.buildFollowRequest(this.getId(), this.result.title, this.options);\r\n        this.container.removeClass('coveo-follow-item-followed');\r\n        this.text.text(Strings_1.l('SearchAlerts_follow'));\r\n    };\r\n    /**\r\n     * Follows the item if not already following it. Stops following the item otherwise.\r\n     *\r\n     * Also logs the appropriate event in the usage analytics (either `searchAlertsFollowDocument` or\r\n     * `searchAlertsUnfollowDocument`).\r\n     */\r\n    FollowItem.prototype.toggleFollow = function () {\r\n        var _this = this;\r\n        if (!this.container.hasClass('coveo-follow-item-loading')) {\r\n            this.container.removeClass('coveo-follow-item-followed');\r\n            this.container.addClass('coveo-follow-item-loading');\r\n            if (this.subscription.id) {\r\n                this.logAnalyticsEvent(AnalyticsActionListMeta_1.analyticsActionCauseList.searchAlertsUnfollowDocument);\r\n                this.queryController\r\n                    .getEndpoint()\r\n                    .deleteSubscription(this.subscription)\r\n                    .then(function () {\r\n                    var eventArgs = {\r\n                        subscription: _this.subscription,\r\n                        dom: _this.element\r\n                    };\r\n                    Dom_1.$$(_this.root).trigger(SearchAlertEvents_1.SearchAlertsEvents.searchAlertsDeleted, eventArgs);\r\n                })\r\n                    .catch(function () {\r\n                    _this.container.removeClass('coveo-follow-item-loading');\r\n                    var eventArgs = {\r\n                        dom: _this.element\r\n                    };\r\n                    Dom_1.$$(_this.root).trigger(SearchAlertEvents_1.SearchAlertsEvents.searchAlertsFail, eventArgs);\r\n                });\r\n            }\r\n            else {\r\n                this.logAnalyticsEvent(AnalyticsActionListMeta_1.analyticsActionCauseList.searchAlertsFollowDocument);\r\n                this.queryController\r\n                    .getEndpoint()\r\n                    .follow(this.subscription)\r\n                    .then(function (subscription) {\r\n                    var eventArgs = {\r\n                        subscription: subscription,\r\n                        dom: _this.element\r\n                    };\r\n                    Dom_1.$$(_this.root).trigger(SearchAlertEvents_1.SearchAlertsEvents.searchAlertsCreated, eventArgs);\r\n                })\r\n                    .catch(function () {\r\n                    _this.container.removeClass('coveo-follow-item-loading');\r\n                    var eventArgs = {\r\n                        dom: _this.element\r\n                    };\r\n                    Dom_1.$$(_this.root).trigger(SearchAlertEvents_1.SearchAlertsEvents.searchAlertsFail, eventArgs);\r\n                });\r\n            }\r\n        }\r\n    };\r\n    FollowItem.prototype.getText = function () {\r\n        return this.text.text();\r\n    };\r\n    FollowItem.prototype.updateIsFollowed = function () {\r\n        var _this = this;\r\n        this.queryController\r\n            .getEndpoint()\r\n            .listSubscriptions()\r\n            .then(function (subscriptions) {\r\n            if (_.isArray(subscriptions)) {\r\n                var subscription = _.find(subscriptions, function (subscription) {\r\n                    var typeConfig = subscription.typeConfig;\r\n                    return typeConfig && typeConfig.id != null && typeConfig.id == _this.getId();\r\n                });\r\n                if (subscription != null) {\r\n                    _this.setFollowed(subscription);\r\n                }\r\n                else {\r\n                    _this.setNotFollowed();\r\n                }\r\n            }\r\n            else {\r\n                _this.remove();\r\n            }\r\n        })\r\n            .catch(function () {\r\n            _this.remove();\r\n        });\r\n    };\r\n    FollowItem.prototype.buildIcon = function () {\r\n        var icon = Dom_1.$$('span', { className: 'coveo-follow-item-icon' }, SVGIcons_1.SVGIcons.icons.dropdownFollowQuery);\r\n        SVGDom_1.SVGDom.addClassToSVGInContainer(icon.el, 'coveo-follow-item-icon-svg');\r\n        return icon.el;\r\n    };\r\n    FollowItem.prototype.buildLoadingIcon = function () {\r\n        var loadingIcon = Dom_1.$$('span', { className: 'coveo-follow-item-icon-loading' }, SVGIcons_1.SVGIcons.icons.loading);\r\n        SVGDom_1.SVGDom.addClassToSVGInContainer(loadingIcon.el, 'coveo-follow-item-icon-loading-svg');\r\n        return loadingIcon.el;\r\n    };\r\n    FollowItem.prototype.handleSubscriptionDeleted = function (args) {\r\n        if (args.subscription && args.subscription.type == Subscription_1.SUBSCRIPTION_TYPE.followDocument) {\r\n            var typeConfig = args.subscription.typeConfig;\r\n            if (typeConfig.id == this.getId()) {\r\n                this.setNotFollowed();\r\n            }\r\n        }\r\n    };\r\n    FollowItem.prototype.handleSubscriptionCreated = function (args) {\r\n        if (args.subscription && args.subscription.type == Subscription_1.SUBSCRIPTION_TYPE.followDocument) {\r\n            var typeConfig = args.subscription.typeConfig;\r\n            if (typeConfig.id == this.getId()) {\r\n                this.setFollowed(args.subscription);\r\n            }\r\n        }\r\n    };\r\n    FollowItem.prototype.remove = function () {\r\n        this.element.parentElement && this.element.parentElement.removeChild(this.element);\r\n    };\r\n    FollowItem.prototype.getId = function () {\r\n        return Utils_1.Utils.getFieldValue(this.result, 'sysurihash') || Utils_1.Utils.getFieldValue(this.result, 'urihash');\r\n    };\r\n    FollowItem.buildFollowRequest = function (id, title, options) {\r\n        var typeCofig = {\r\n            id: id,\r\n            title: title\r\n        };\r\n        if (options.modifiedDateField) {\r\n            typeCofig.modifiedDateField = options.modifiedDateField;\r\n        }\r\n        if (options.watchedFields) {\r\n            typeCofig.watchedFields = options.watchedFields;\r\n        }\r\n        return {\r\n            type: Subscription_1.SUBSCRIPTION_TYPE.followDocument,\r\n            typeConfig: typeCofig,\r\n            name: title\r\n        };\r\n    };\r\n    FollowItem.prototype.logAnalyticsEvent = function (type) {\r\n        this.usageAnalytics.logCustomEvent(type, {\r\n            author: QueryUtils_1.QueryUtils.getAuthor(this.result),\r\n            documentLanguage: QueryUtils_1.QueryUtils.getLanguage(this.result),\r\n            documentSource: QueryUtils_1.QueryUtils.getSource(this.result),\r\n            documentTitle: this.result.title,\r\n            contentIDValue: QueryUtils_1.QueryUtils.getPermanentId(this.result).fieldValue,\r\n            contentIDKey: QueryUtils_1.QueryUtils.getPermanentId(this.result).fieldUsed\r\n        }, this.element);\r\n    };\r\n    FollowItem.ID = 'FollowItem';\r\n    FollowItem.doExport = function () {\r\n        GlobalExports_1.exportGlobally({\r\n            FollowItem: FollowItem\r\n        });\r\n    };\r\n    /**\r\n     * The options for the follow item component\r\n     * @componentOptions\r\n     */\r\n    FollowItem.options = {\r\n        /**\r\n         * Specifies the {@link ISubscriptionItemRequest.watchedFields} to use when sending the\r\n         * {@link ISubscriptionItemRequest}.\r\n         *\r\n         * Default value is `undefined`.\r\n         */\r\n        watchedFields: ComponentOptions_1.ComponentOptions.buildFieldsOption(),\r\n        /**\r\n         * Specifies the {@link ISubscriptionItemRequest.modifiedDateField} to use when sending the\r\n         * {@link ISubscriptionItemRequest}.\r\n         *\r\n         * Default value is `undefined`.\r\n         */\r\n        modifiedDateField: ComponentOptions_1.ComponentOptions.buildStringOption()\r\n    };\r\n    return FollowItem;\r\n}(Component_1.Component));\r\nexports.FollowItem = FollowItem;\r\nInitialization_1.Initialization.registerAutoCreateComponent(FollowItem);\r\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// FollowItem.min__5f3280c404a1ee75a113.js","import { IQuery } from './Query';\r\n\r\nexport const SUBSCRIPTION_TYPE = {\r\n  followQuery: 'followQuery',\r\n  followDocument: 'followDocument'\r\n};\r\n\r\nexport interface ISearchAlertsEndpointOptions {\r\n  restUri: string;\r\n  accessToken?: string;\r\n  errorsAsSuccess?: boolean;\r\n}\r\n\r\nexport interface ISearchAlertsEndpointCallOptions {\r\n  type?: string;\r\n  page?: number;\r\n}\r\n\r\nexport interface ISearchAlertsEndpointSearchCallOptions {\r\n  documentIds: string[];\r\n}\r\n\r\n/**\r\n * Describe a subscription to the Coveo Search alerts service\r\n */\r\nexport interface ISubscription extends ISubscriptionRequest {\r\n  /**\r\n   * The id of the subscription\r\n   */\r\n  id: string;\r\n\r\n  /**\r\n   * The user associated with the subscription\r\n   */\r\n  user: ISubscriptionUser;\r\n}\r\n\r\n/**\r\n * Describe a user associated with a subscription to the Coveo Search alerts service\r\n */\r\nexport interface ISubscriptionUser {\r\n  /**\r\n   * The email of the user\r\n   */\r\n  email: string;\r\n\r\n  /**\r\n   * The token used to manage the alerts via email.\r\n   */\r\n  manageToken: string;\r\n}\r\n\r\n/**\r\n * Describe a request to subscribe to the Coveo Search alerts service\r\n */\r\nexport interface ISubscriptionRequest {\r\n  /**\r\n   * Type of subscription.<br/>\r\n   * Can be 'followQuery' or 'followDocument'\r\n   */\r\n  type: string;\r\n  /**\r\n   * Config of the subscription\r\n   */\r\n  typeConfig: ISubscriptionQueryRequest | ISubscriptionItemRequest;\r\n  /**\r\n   * Frequency of the alerts\r\n   */\r\n  frequency?: string;\r\n  /**\r\n   * The name that should be used by the API to identify this subscription\r\n   */\r\n  name: string;\r\n}\r\n\r\n/**\r\n * Describe a subscription to a single query\r\n */\r\nexport interface ISubscriptionQueryRequest {\r\n  /**\r\n   * Query to subscribe to\r\n   */\r\n  query: IQuery;\r\n  /**\r\n   * Which field on the result set represent the modification date for which you wish to receive alerts\r\n   */\r\n  modifiedDateField?: string;\r\n}\r\n\r\n/**\r\n * The `ISubscriptionItemRequest` interface describes a subscription to a single item (a result).\r\n */\r\nexport interface ISubscriptionItemRequest {\r\n  /**\r\n   * Contains the unique ID of the item to subscribe to.\r\n   */\r\n  id: string;\r\n\r\n  /**\r\n   * Contains the title of the item to subscribe to.\r\n   */\r\n  title: string;\r\n\r\n  /**\r\n   * Indicates which field contains the modification date of the item to subscribe to.\r\n   */\r\n  modifiedDateField?: string;\r\n\r\n  /**\r\n   * Contains a list of fields to monitor for the item to subscribe to.\r\n   */\r\n  watchedFields?: string[];\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/rest/Subscription.ts","import * as _ from 'underscore';\r\nimport { ISearchAlertsEventArgs, ISearchAlertsFailEventArgs, SearchAlertsEvents } from '../../events/SearchAlertEvents';\r\nimport { exportGlobally } from '../../GlobalExports';\r\nimport { Assert } from '../../misc/Assert';\r\nimport { IQueryResult } from '../../rest/QueryResult';\r\nimport { ISubscription, ISubscriptionItemRequest, ISubscriptionRequest, SUBSCRIPTION_TYPE } from '../../rest/Subscription';\r\nimport { l } from '../../strings/Strings';\r\nimport { $$, Dom } from '../../utils/Dom';\r\nimport { KEYBOARD, KeyboardUtils } from '../../utils/KeyboardUtils';\r\nimport { QueryUtils } from '../../utils/QueryUtils';\r\nimport { SVGDom } from '../../utils/SVGDom';\r\nimport { SVGIcons } from '../../utils/SVGIcons';\r\nimport { Utils } from '../../utils/Utils';\r\nimport {\r\n  analyticsActionCauseList,\r\n  IAnalyticsActionCause,\r\n  IAnalyticsSearchAlertsFollowDocumentMeta\r\n} from '../Analytics/AnalyticsActionListMeta';\r\nimport { Component } from '../Base/Component';\r\nimport { ComponentOptions } from '../Base/ComponentOptions';\r\nimport { IFieldOption } from '../Base/IComponentOptions';\r\nimport { Initialization } from '../Base/Initialization';\r\nimport { IResultsComponentBindings } from '../Base/ResultsComponentBindings';\r\n\r\nexport interface IFollowItemOptions {\r\n  watchedFields?: IFieldOption[];\r\n  modifiedDateField?: string;\r\n}\r\n\r\n/**\r\n * The FollowItem component renders a widget that the end user can click to follow a particular item. A user following\r\n * an item receives email notifications when the item changes.\r\n *\r\n * **Note:**\r\n * > A {@link SearchAlerts} component must be present in the page for this component to work. It is also necessary to\r\n * > meet certain requirements to be able to use this component (see\r\n * > [Deploying Search Alerts on a Coveo JS Search Page](https://docs.coveo.com/en/1932/)).\r\n *\r\n * This component is a result template component (see [Result Templates](https://docs.coveo.com/en/413/)).\r\n */\r\nexport class FollowItem extends Component {\r\n  static ID = 'FollowItem';\r\n\r\n  static doExport = () => {\r\n    exportGlobally({\r\n      FollowItem: FollowItem\r\n    });\r\n  };\r\n\r\n  /**\r\n   * The options for the follow item component\r\n   * @componentOptions\r\n   */\r\n  static options: IFollowItemOptions = {\r\n    /**\r\n     * Specifies the {@link ISubscriptionItemRequest.watchedFields} to use when sending the\r\n     * {@link ISubscriptionItemRequest}.\r\n     *\r\n     * Default value is `undefined`.\r\n     */\r\n    watchedFields: ComponentOptions.buildFieldsOption(),\r\n\r\n    /**\r\n     * Specifies the {@link ISubscriptionItemRequest.modifiedDateField} to use when sending the\r\n     * {@link ISubscriptionItemRequest}.\r\n     *\r\n     * Default value is `undefined`.\r\n     */\r\n    modifiedDateField: ComponentOptions.buildStringOption()\r\n  };\r\n\r\n  private container: Dom;\r\n  private text: Dom;\r\n  private subscription: ISubscription;\r\n\r\n  /**\r\n   * Creates a new FollowItem component.\r\n   * @param element The HTMLElement on which to instantiate the component.\r\n   * @param options The options for the FollowItem component.\r\n   * @param bindings The bindings that the component requires to function normally. If not set, these will be\r\n   * automatically resolved (with a slower execution time)\r\n   * @param result The result to associate the component with.\r\n   */\r\n  constructor(\r\n    public element: HTMLElement,\r\n    public options?: IFollowItemOptions,\r\n    public bindings?: IResultsComponentBindings,\r\n    public result?: IQueryResult\r\n  ) {\r\n    super(element, FollowItem.ID, bindings);\r\n\r\n    this.options = ComponentOptions.initComponentOptions(element, FollowItem, options);\r\n\r\n    Assert.exists(this.result);\r\n\r\n    this.container = $$(this.element);\r\n    this.text = $$('span');\r\n    const icon = this.buildIcon();\r\n    const loadingIcon = this.buildLoadingIcon();\r\n    this.container.append(icon);\r\n    this.container.append(loadingIcon);\r\n    this.container.append(this.text.el);\r\n    this.container.on('click', () => this.toggleFollow());\r\n    this.container.setAttribute('tabindex', '0');\r\n    this.bind.on(this.container, 'keyup', KeyboardUtils.keypressAction(KEYBOARD.ENTER, () => this.toggleFollow()));\r\n\r\n    this.bind.onRootElement(SearchAlertsEvents.searchAlertsDeleted, (args: ISearchAlertsEventArgs) => this.handleSubscriptionDeleted(args));\r\n    this.bind.onRootElement(SearchAlertsEvents.searchAlertsCreated, (args: ISearchAlertsEventArgs) => this.handleSubscriptionCreated(args));\r\n\r\n    this.container.addClass('coveo-follow-item-loading');\r\n\r\n    this.updateIsFollowed();\r\n  }\r\n\r\n  public setFollowed(subscription: ISubscription) {\r\n    this.container.removeClass('coveo-follow-item-loading');\r\n    this.subscription = subscription;\r\n    this.container.addClass('coveo-follow-item-followed');\r\n    this.text.text(l('SearchAlerts_unFollowing'));\r\n  }\r\n\r\n  public setNotFollowed() {\r\n    this.container.removeClass('coveo-follow-item-loading');\r\n    this.subscription = <ISubscription>FollowItem.buildFollowRequest(this.getId(), this.result.title, this.options);\r\n    this.container.removeClass('coveo-follow-item-followed');\r\n    this.text.text(l('SearchAlerts_follow'));\r\n  }\r\n\r\n  /**\r\n   * Follows the item if not already following it. Stops following the item otherwise.\r\n   *\r\n   * Also logs the appropriate event in the usage analytics (either `searchAlertsFollowDocument` or\r\n   * `searchAlertsUnfollowDocument`).\r\n   */\r\n  public toggleFollow() {\r\n    if (!this.container.hasClass('coveo-follow-item-loading')) {\r\n      this.container.removeClass('coveo-follow-item-followed');\r\n      this.container.addClass('coveo-follow-item-loading');\r\n      if (this.subscription.id) {\r\n        this.logAnalyticsEvent(analyticsActionCauseList.searchAlertsUnfollowDocument);\r\n        this.queryController\r\n          .getEndpoint()\r\n          .deleteSubscription(this.subscription)\r\n          .then(() => {\r\n            const eventArgs: ISearchAlertsEventArgs = {\r\n              subscription: this.subscription,\r\n              dom: this.element\r\n            };\r\n            $$(this.root).trigger(SearchAlertsEvents.searchAlertsDeleted, eventArgs);\r\n          })\r\n          .catch(() => {\r\n            this.container.removeClass('coveo-follow-item-loading');\r\n            const eventArgs: ISearchAlertsFailEventArgs = {\r\n              dom: this.element\r\n            };\r\n            $$(this.root).trigger(SearchAlertsEvents.searchAlertsFail, eventArgs);\r\n          });\r\n      } else {\r\n        this.logAnalyticsEvent(analyticsActionCauseList.searchAlertsFollowDocument);\r\n        this.queryController\r\n          .getEndpoint()\r\n          .follow(this.subscription)\r\n          .then((subscription: ISubscription) => {\r\n            const eventArgs: ISearchAlertsEventArgs = {\r\n              subscription: subscription,\r\n              dom: this.element\r\n            };\r\n            $$(this.root).trigger(SearchAlertsEvents.searchAlertsCreated, eventArgs);\r\n          })\r\n          .catch(() => {\r\n            this.container.removeClass('coveo-follow-item-loading');\r\n            const eventArgs: ISearchAlertsFailEventArgs = {\r\n              dom: this.element\r\n            };\r\n            $$(this.root).trigger(SearchAlertsEvents.searchAlertsFail, eventArgs);\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  protected getText(): string {\r\n    return this.text.text();\r\n  }\r\n\r\n  private updateIsFollowed() {\r\n    this.queryController\r\n      .getEndpoint()\r\n      .listSubscriptions()\r\n      .then((subscriptions: ISubscription[]) => {\r\n        if (_.isArray(subscriptions)) {\r\n          const subscription: ISubscription = _.find(subscriptions, (subscription: ISubscription) => {\r\n            const typeConfig = <ISubscriptionItemRequest>subscription.typeConfig;\r\n            return typeConfig && typeConfig.id != null && typeConfig.id == this.getId();\r\n          });\r\n          if (subscription != null) {\r\n            this.setFollowed(subscription);\r\n          } else {\r\n            this.setNotFollowed();\r\n          }\r\n        } else {\r\n          this.remove();\r\n        }\r\n      })\r\n      .catch(() => {\r\n        this.remove();\r\n      });\r\n  }\r\n  private buildIcon(): HTMLElement {\r\n    const icon = $$('span', { className: 'coveo-follow-item-icon' }, SVGIcons.icons.dropdownFollowQuery);\r\n    SVGDom.addClassToSVGInContainer(icon.el, 'coveo-follow-item-icon-svg');\r\n    return icon.el;\r\n  }\r\n\r\n  private buildLoadingIcon(): HTMLElement {\r\n    const loadingIcon = $$('span', { className: 'coveo-follow-item-icon-loading' }, SVGIcons.icons.loading);\r\n    SVGDom.addClassToSVGInContainer(loadingIcon.el, 'coveo-follow-item-icon-loading-svg');\r\n    return loadingIcon.el;\r\n  }\r\n\r\n  private handleSubscriptionDeleted(args: ISearchAlertsEventArgs) {\r\n    if (args.subscription && args.subscription.type == SUBSCRIPTION_TYPE.followDocument) {\r\n      const typeConfig = <ISubscriptionItemRequest>args.subscription.typeConfig;\r\n      if (typeConfig.id == this.getId()) {\r\n        this.setNotFollowed();\r\n      }\r\n    }\r\n  }\r\n\r\n  private handleSubscriptionCreated(args: ISearchAlertsEventArgs) {\r\n    if (args.subscription && args.subscription.type == SUBSCRIPTION_TYPE.followDocument) {\r\n      const typeConfig = <ISubscriptionItemRequest>args.subscription.typeConfig;\r\n      if (typeConfig.id == this.getId()) {\r\n        this.setFollowed(args.subscription);\r\n      }\r\n    }\r\n  }\r\n\r\n  private remove() {\r\n    this.element.parentElement && this.element.parentElement.removeChild(this.element);\r\n  }\r\n\r\n  private getId() {\r\n    return Utils.getFieldValue(this.result, 'sysurihash') || Utils.getFieldValue(this.result, 'urihash');\r\n  }\r\n\r\n  private static buildFollowRequest(id: string, title: string, options: IFollowItemOptions): ISubscriptionRequest {\r\n    const typeCofig: ISubscriptionItemRequest = {\r\n      id: id,\r\n      title: title\r\n    };\r\n\r\n    if (options.modifiedDateField) {\r\n      typeCofig.modifiedDateField = options.modifiedDateField;\r\n    }\r\n\r\n    if (options.watchedFields) {\r\n      typeCofig.watchedFields = <string[]>options.watchedFields;\r\n    }\r\n\r\n    return {\r\n      type: SUBSCRIPTION_TYPE.followDocument,\r\n      typeConfig: typeCofig,\r\n      name: title\r\n    };\r\n  }\r\n\r\n  private logAnalyticsEvent(type: IAnalyticsActionCause) {\r\n    this.usageAnalytics.logCustomEvent<IAnalyticsSearchAlertsFollowDocumentMeta>(\r\n      type,\r\n      {\r\n        author: QueryUtils.getAuthor(this.result),\r\n        documentLanguage: QueryUtils.getLanguage(this.result),\r\n        documentSource: QueryUtils.getSource(this.result),\r\n        documentTitle: this.result.title,\r\n        contentIDValue: QueryUtils.getPermanentId(this.result).fieldValue,\r\n        contentIDKey: QueryUtils.getPermanentId(this.result).fieldUsed\r\n      },\r\n      this.element\r\n    );\r\n  }\r\n}\r\n\r\nInitialization.registerAutoCreateComponent(FollowItem);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/FollowItem/FollowItem.ts"],"sourceRoot":""}