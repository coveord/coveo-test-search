{"version":3,"sources":["./src/ui/FieldValue/FieldValue.ts","./src/ui/Facet/FacetUtils.ts","./src/ui/FieldValue/IFieldValueCompatibleFacet.ts"],"names":[],"mappings":"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","file":"FieldValue__1728cc16e4d2d82aa5db.js","sourcesContent":["import { contains, each, escape, extend, filter, find, isArray, isObject, isString, keys, map, omit } from 'underscore';\r\nimport { exportGlobally } from '../../GlobalExports';\r\nimport { Assert } from '../../misc/Assert';\r\nimport { IQueryResult } from '../../rest/QueryResult';\r\nimport { l } from '../../strings/Strings';\r\nimport { AccessibleButton } from '../../utils/AccessibleButton';\r\nimport { DateUtils, IDateToStringOptions } from '../../utils/DateUtils';\r\nimport { $$ } from '../../utils/Dom';\r\nimport { StringUtils } from '../../utils/StringUtils';\r\nimport { Utils } from '../../utils/Utils';\r\nimport { analyticsActionCauseList } from '../Analytics/AnalyticsActionListMeta';\r\nimport { Component } from '../Base/Component';\r\nimport { IComponentBindings } from '../Base/ComponentBindings';\r\nimport { ComponentOptions } from '../Base/ComponentOptions';\r\nimport { IComponentOptionsObjectOptionArgs, IFieldConditionOption, IFieldOption } from '../Base/IComponentOptions';\r\nimport { Initialization } from '../Base/Initialization';\r\nimport { FacetUtils } from '../Facet/FacetUtils';\r\nimport { TemplateFieldsEvaluator } from '../Templates/TemplateFieldsEvaluator';\r\nimport { TemplateHelpers } from '../Templates/TemplateHelpers';\r\nimport { IFieldValueCompatibleFacet, isFacetFieldValueCompatible } from './IFieldValueCompatibleFacet';\r\nimport { ComponentsTypes } from '../../utils/ComponentsTypes';\r\n\r\nexport interface IFieldValueOptions {\r\n  field?: IFieldOption;\r\n  facet?: string;\r\n  dynamicFacet?: string;\r\n  htmlValue?: boolean;\r\n  helper?: string;\r\n  helperOptions?: { [key: string]: any };\r\n  splitValues?: boolean;\r\n  separator?: string;\r\n  displaySeparator?: string;\r\n  textCaption?: string;\r\n  conditions?: IFieldConditionOption[];\r\n}\r\n\r\nexport interface IAnalyticsFieldValueMeta {\r\n  facetId: string;\r\n  facetField: string;\r\n  facetValue?: string;\r\n  facetTitle?: string;\r\n}\r\n\r\nfunction showOnlyWithHelper<T>(helpers: string[], options?: T): T {\r\n  if (options == null) {\r\n    options = <any>{};\r\n  }\r\n  (<any>options).helpers = helpers;\r\n  return options;\r\n}\r\n\r\n/**\r\n * The FieldValue component displays the value of a field associated to its parent search result. It is normally usable\r\n * within a {@link FieldTable}.\r\n *\r\n * This component is a result template component (see [Result Templates](https://docs.coveo.com/en/413/)).\r\n *\r\n * A common use of this component is to display a specific field value which also happens to be an existing\r\n * {@link Facet.options.field}. When the user clicks on the FieldValue component, it activates the corresponding Facet.\r\n */\r\nexport class FieldValue extends Component {\r\n  static ID = 'FieldValue';\r\n\r\n  static doExport = () => {\r\n    exportGlobally({\r\n      FieldValue: FieldValue\r\n    });\r\n  };\r\n\r\n  /**\r\n   * The options for the component\r\n   * @componentOptions\r\n   */\r\n  static options: IFieldValueOptions = {\r\n    /**\r\n     * Specifies the field that the FieldValue should display.\r\n     *\r\n     * Specifying a value for this parameter is required in order for the FieldValue component to work.\r\n     */\r\n    field: ComponentOptions.buildFieldOption({ defaultValue: '@field', required: true }),\r\n\r\n    /**\r\n     * Specifies the {@link Facet} component to toggle when the end user clicks the FieldValue.\r\n     *\r\n     * Default value is the value of {@link FieldValue.options.field}.\r\n     *\r\n     * **Note:**\r\n     * > If the target {@link Facet.options.id} is is not the same as its {@link Facet.options.field}), you must specify\r\n     * > this option manually in order to link to the correct Facet.\r\n     */\r\n    facet: ComponentOptions.buildStringOption({ postProcessing: (value, options) => value || options.field }),\r\n\r\n    /**\r\n     * Specifies whether the content to display is an HTML element.\r\n     *\r\n     * Default value is `false`.\r\n     */\r\n    htmlValue: ComponentOptions.buildBooleanOption({ defaultValue: false }),\r\n\r\n    /**\r\n     * Specifies whether to split the FieldValue at each {@link FieldValue.options.separator}.\r\n     *\r\n     * This is useful for splitting groups using a {@link Facet.options.field}.\r\n     *\r\n     * When this option is `true`, the displayed values are split by the {@link FieldValue.options.displaySeparator}.\r\n     *\r\n     * Default value is `false`.\r\n     */\r\n    splitValues: ComponentOptions.buildBooleanOption({ defaultValue: false }),\r\n\r\n    /**\r\n     * If {@link FieldValue.options.splitValues} is `true`, specifies the separator string which separates multi-value\r\n     * fields in the index.\r\n     *\r\n     * See {@link FieldValue.options.displaySeparator}.\r\n     *\r\n     * Default value is `\";\"`.\r\n     */\r\n    separator: ComponentOptions.buildStringOption({ depend: 'splitValues', defaultValue: ';' }),\r\n\r\n    /**\r\n     * If {@link FieldValue.options.splitValues} is `true`, specifies the string to use when displaying multi-value\r\n     * fields in the UI.\r\n     *\r\n     * The component will insert this string between each value it displays from a multi-value field.\r\n     *\r\n     * See also {@link FieldValue.options.separator}.\r\n     *\r\n     * Default value is `\", \"`.\r\n     */\r\n    displaySeparator: ComponentOptions.buildStringOption({ depend: 'splitValues', defaultValue: ', ' }),\r\n\r\n    /**\r\n     * Specifies the helper that the FieldValue should use to display its content.\r\n     *\r\n     * While several helpers exist by default (see {@link ICoreHelpers}), it is also possible for you to create your own\r\n     * custom helpers (see {@link TemplateHelpers}).\r\n     */\r\n    helper: ComponentOptions.buildHelperOption(),\r\n\r\n    /**\r\n     * Specifies the options to call on the specified helper.\r\n     */\r\n    helperOptions: ComponentOptions.buildObjectOption(<IComponentOptionsObjectOptionArgs>{\r\n      subOptions: {\r\n        text: ComponentOptions.buildStringOption(showOnlyWithHelper(['anchor'])),\r\n        target: ComponentOptions.buildStringOption(showOnlyWithHelper(['anchor'])),\r\n        class: ComponentOptions.buildStringOption(showOnlyWithHelper(['anchor'])),\r\n\r\n        format: ComponentOptions.buildStringOption(showOnlyWithHelper(['number'])),\r\n\r\n        decimals: ComponentOptions.buildNumberOption(showOnlyWithHelper(['currency'], { min: 0 })),\r\n        symbol: ComponentOptions.buildStringOption(showOnlyWithHelper(['currency'])),\r\n\r\n        useTodayYesterdayAndTomorrow: ComponentOptions.buildBooleanOption(\r\n          showOnlyWithHelper(['date', 'dateTime', 'emailDateTime', 'time'], { defaultValue: true })\r\n        ),\r\n        useWeekdayIfThisWeek: ComponentOptions.buildBooleanOption(\r\n          showOnlyWithHelper(['date', 'dateTime', 'emailDateTime', 'time'], { defaultValue: true })\r\n        ),\r\n        omitYearIfCurrentOne: ComponentOptions.buildBooleanOption(\r\n          showOnlyWithHelper(['date', 'dateTime', 'emailDateTime', 'time'], { defaultValue: true })\r\n        ),\r\n        useLongDateFormat: ComponentOptions.buildBooleanOption(\r\n          showOnlyWithHelper(['date', 'dateTime', 'emailDateTime', 'time'], { defaultValue: false })\r\n        ),\r\n        includeTimeIfToday: ComponentOptions.buildBooleanOption(\r\n          showOnlyWithHelper(['date', 'dateTime', 'emailDateTime', 'time'], { defaultValue: true })\r\n        ),\r\n        includeTimeIfThisWeek: ComponentOptions.buildBooleanOption(\r\n          showOnlyWithHelper(['date', 'dateTime', 'emailDateTime', 'time'], { defaultValue: true })\r\n        ),\r\n        alwaysIncludeTime: ComponentOptions.buildBooleanOption(\r\n          showOnlyWithHelper(['date', 'dateTime', 'emailDateTime', 'time'], { defaultValue: false })\r\n        ),\r\n        predefinedFormat: ComponentOptions.buildStringOption(showOnlyWithHelper(['date', 'dateTime', 'emailDateTime', 'time'])),\r\n\r\n        companyDomain: ComponentOptions.buildStringOption(showOnlyWithHelper(['email'])),\r\n        me: ComponentOptions.buildStringOption(showOnlyWithHelper(['email'])),\r\n        lengthLimit: ComponentOptions.buildNumberOption(showOnlyWithHelper(['email'], { min: 1 })),\r\n        truncateName: ComponentOptions.buildBooleanOption(showOnlyWithHelper(['email'])),\r\n\r\n        alt: ComponentOptions.buildStringOption(showOnlyWithHelper(['image'])),\r\n        height: ComponentOptions.buildStringOption(showOnlyWithHelper(['image'])),\r\n        width: ComponentOptions.buildStringOption(showOnlyWithHelper(['image'])),\r\n        srcTemplate: ComponentOptions.buildStringOption(showOnlyWithHelper(['image'])),\r\n\r\n        precision: ComponentOptions.buildNumberOption(showOnlyWithHelper(['size'], { min: 0, defaultValue: 2 })),\r\n        base: ComponentOptions.buildNumberOption(showOnlyWithHelper(['size'], { min: 0, defaultValue: 0 })),\r\n        isMilliseconds: ComponentOptions.buildBooleanOption(showOnlyWithHelper(['timeSpan'])),\r\n\r\n        length: ComponentOptions.buildNumberOption(showOnlyWithHelper(['shorten', 'shortenPath', 'shortenUri'], { defaultValue: 200 }))\r\n      }\r\n    }),\r\n\r\n    /**\r\n     * Specifies a caption to display before the value.\r\n     *\r\n     * Default value is `undefined`.\r\n     *\r\n     * @availablesince [January 2017 Release (v1.1865.9)](https://docs.coveo.com/en/396/#january-2017-release-v118659)\r\n     */\r\n    textCaption: ComponentOptions.buildLocalizedStringOption(),\r\n\r\n    /**\r\n     * A field-based condition that must be satisfied by the query result item for the component to be rendered.\r\n     *\r\n     * Note: This option uses a distinctive markup configuration syntax allowing multiple conditions to be expressed. Its underlying logic is the same as that of the field value conditions mechanism used by result templates.\r\n     *\r\n     * **Examples:**\r\n     * Render the component if the query result item's @documenttype field value is Article or Documentation.\r\n     * ```html\r\n     * <div class=\"CoveoFieldValue\" data-field=\"@author\" data-condition-field-documenttype=\"Article, Documentation\"></div>\r\n     * ```\r\n     * Render the component if the query result item's @documenttype field value is anything but Case.\r\n     * ```html\r\n     * <div class=\"CoveoFieldValue\" data-field=\"@author\" data-condition-field-not-documenttype=\"Case\"></div>\r\n     * ```\r\n     * Render the component if the query result item's @documenttype field value is Article, and if its @author field value is anything but Anonymous.\r\n     * ```html\r\n     * <div class=\"CoveoFieldValue\" data-field=\"@author\" data-condition-field-documenttype=\"Article\" data-condition-field-not-author=\"Anonymous\"></div>\r\n     * ```\r\n     * Default value is `undefined`.\r\n     */\r\n    conditions: ComponentOptions.buildFieldConditionOption()\r\n  };\r\n\r\n  static simpleOptions = omit(FieldValue.options, 'helperOptions');\r\n\r\n  static helperOptions = <any>{\r\n    helperOptions: FieldValue.options.helperOptions\r\n  };\r\n\r\n  /**\r\n   * Creates a new FieldValue.\r\n   * @param element The HTMLElement on which to instantiate the component.\r\n   * @param options The options for the FieldValue component.\r\n   * @param bindings The bindings that the component requires to function normally. If not set, these will be\r\n   * automatically resolved (with a slower execution time).\r\n   * @param result The result to associate the component with.\r\n   */\r\n  constructor(\r\n    public element: HTMLElement,\r\n    public options: IFieldValueOptions,\r\n    bindings?: IComponentBindings,\r\n    public result?: IQueryResult,\r\n    fieldValueClassId: string = FieldValue.ID\r\n  ) {\r\n    super(element, fieldValueClassId, bindings);\r\n\r\n    this.options = ComponentOptions.initOptions(element, FieldValue.simpleOptions, options, FieldValue.ID);\r\n\r\n    if (this.options.helper != null) {\r\n      this.normalizeHelperAndOptions();\r\n    }\r\n\r\n    this.result = this.result || this.resolveResult();\r\n    Assert.exists(this.result);\r\n\r\n    if (TemplateFieldsEvaluator.evaluateFieldsToMatch(this.options.conditions, this.result) && this.getValue()) {\r\n      this.initialize();\r\n    } else if (this.element.parentElement != null) {\r\n      this.element.parentElement.removeChild(this.element);\r\n    }\r\n  }\r\n\r\n  private initialize() {\r\n    let loadedValueFromComponent = this.getValue();\r\n    let values: string[];\r\n\r\n    if (isArray(loadedValueFromComponent)) {\r\n      values = loadedValueFromComponent;\r\n    } else if (this.options.splitValues) {\r\n      if (isString(loadedValueFromComponent)) {\r\n        values = map(loadedValueFromComponent.split(this.options.separator), (v: string) => {\r\n          return v.trim();\r\n        });\r\n      }\r\n    } else {\r\n      loadedValueFromComponent = loadedValueFromComponent.toString();\r\n      values = [loadedValueFromComponent];\r\n    }\r\n    this.appendValuesToDom(values);\r\n    if (this.options.textCaption != null) {\r\n      this.prependTextCaptionToDom();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets the current FieldValue from the current {@link IQueryResult}.\r\n   *\r\n   * @returns {any} The current FieldValue or `null` if value is and `Object`.\r\n   */\r\n  public getValue() {\r\n    let value = Utils.getFieldValue(this.result, <string>this.options.field);\r\n    if (!isArray(value) && isObject(value)) {\r\n      value = null;\r\n    }\r\n    return value;\r\n  }\r\n\r\n  /**\r\n   * Renders a value to HTML using all of the current FieldValue component options.\r\n   * @param value The value to render.\r\n   * @returns {HTMLElement} The element containing the rendered value.\r\n   */\r\n  public renderOneValue(value: string): HTMLElement {\r\n    const element = $$('span').el;\r\n    let toRender = this.getCaption(value);\r\n\r\n    if (this.options.helper) {\r\n      // Try to resolve and execute version 2 of each helper function if available\r\n      const helper = TemplateHelpers.getHelper(`${this.options.helper}v2`) || TemplateHelpers.getHelper(`${this.options.helper}`);\r\n\r\n      if (Utils.exists(helper)) {\r\n        toRender = helper.call(this, value, this.getHelperOptions());\r\n      } else {\r\n        this.logger.warn(\r\n          `Helper ${this.options.helper} is not found in available helpers. The list of supported helpers is :`,\r\n          keys(TemplateHelpers.getHelpers())\r\n        );\r\n      }\r\n\r\n      const fullDateStr = this.getFullDate(value, this.options.helper);\r\n      if (fullDateStr) {\r\n        element.setAttribute('title', fullDateStr);\r\n      }\r\n      if (this.options.helper == 'date' || this.options.helper == 'dateTime' || this.options.helper == 'emailDateTime') {\r\n        toRender = StringUtils.capitalizeFirstLetter(toRender);\r\n      }\r\n    }\r\n\r\n    if (this.options.htmlValue) {\r\n      element.innerHTML = toRender;\r\n    } else {\r\n      element.appendChild(document.createTextNode(toRender));\r\n    }\r\n    this.bindEventOnValue(element, value, toRender);\r\n    return element;\r\n  }\r\n\r\n  protected getValueContainer() {\r\n    return this.element;\r\n  }\r\n\r\n  private normalizeHelperAndOptions() {\r\n    this.options = ComponentOptions.initOptions(this.element, FieldValue.helperOptions, this.options, FieldValue.ID);\r\n    const toFilter = keys(FieldValue.options.helperOptions['subOptions']);\r\n    const toKeep = filter(toFilter, optionKey => {\r\n      const optionDefinition = FieldValue.options.helperOptions['subOptions'][optionKey];\r\n      if (optionDefinition) {\r\n        const helpers = optionDefinition.helpers;\r\n        return helpers != null && contains(helpers, this.options.helper);\r\n      }\r\n      return false;\r\n    });\r\n    this.options.helperOptions = omit(this.options.helperOptions, (value, key) => {\r\n      return !contains(toKeep, key);\r\n    });\r\n  }\r\n\r\n  private getHelperOptions() {\r\n    const inlineOptions = ComponentOptions.loadStringOption(this.element, 'helperOptions', {});\r\n    if (Utils.isNonEmptyString(inlineOptions)) {\r\n      return extend({}, this.options.helperOptions, eval('(' + inlineOptions + ')'));\r\n    }\r\n    return this.options.helperOptions;\r\n  }\r\n\r\n  private getFullDate(date: string, helper: string) {\r\n    const fullDateOptions: IDateToStringOptions = {\r\n      useLongDateFormat: true,\r\n      useTodayYesterdayAndTomorrow: false,\r\n      useWeekdayIfThisWeek: false,\r\n      omitYearIfCurrentOne: false\r\n    };\r\n\r\n    if (helper == 'date') {\r\n      return DateUtils.dateToString(new Date(parseInt(date)), fullDateOptions);\r\n    } else if (helper == 'dateTime' || helper == 'emailDateTime') {\r\n      return DateUtils.dateTimeToString(new Date(parseInt(date)), fullDateOptions);\r\n    }\r\n    return '';\r\n  }\r\n\r\n  private appendValuesToDom(values: string[]): void {\r\n    each(values, (value, index) => {\r\n      if (value != undefined) {\r\n        this.getValueContainer().appendChild(this.renderOneValue(value));\r\n        if (index !== values.length - 1) {\r\n          this.getValueContainer().appendChild(document.createTextNode(this.options.displaySeparator));\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  private renderTextCaption(): HTMLElement {\r\n    const element = $$('span', { className: 'coveo-field-caption' }, escape(this.options.textCaption));\r\n    return element.el;\r\n  }\r\n\r\n  protected prependTextCaptionToDom(): void {\r\n    const elem = this.getValueContainer();\r\n    $$(elem).prepend(this.renderTextCaption());\r\n    // Add a class to the container so the value and the caption wrap together.\r\n    $$(elem).addClass('coveo-with-label');\r\n  }\r\n\r\n  private bindEventOnValue(element: HTMLElement, originalFacetValue: string, renderedFacetValue: string) {\r\n    this.bindFacets(element, originalFacetValue, renderedFacetValue);\r\n  }\r\n\r\n  private getCaption(value: string) {\r\n    for (let facet of this.getFacets()) {\r\n      const caption = facet.getCaptionForStringValue(value);\r\n      if (caption) {\r\n        return caption;\r\n      }\r\n    }\r\n    return FacetUtils.tryToGetTranslatedCaption(this.options.field as string, value);\r\n  }\r\n\r\n  private getFacets() {\r\n    const facets = ComponentsTypes.getAllFacetsFromSearchInterface(this.searchInterface)\r\n      .filter(isFacetFieldValueCompatible)\r\n      .filter(facet => !facet.disabled);\r\n\r\n    const facetsWithMatchingId = facets.filter(facet => facet.options.id === this.options.facet);\r\n    if (facetsWithMatchingId.length) {\r\n      return facetsWithMatchingId;\r\n    }\r\n    return facets.filter(facet => facet.options.field === this.options.field);\r\n  }\r\n\r\n  private bindFacets(element: HTMLElement, originalFacetValue: string, renderedFacetValue: string) {\r\n    const facets = this.getFacets();\r\n\r\n    if (!facets.length) {\r\n      return;\r\n    }\r\n\r\n    const isValueSelected = !!find(facets, facet => facet.hasSelectedValue(originalFacetValue));\r\n    const selectAction = () => this.handleFacetSelection(isValueSelected, facets, originalFacetValue);\r\n    this.buildClickableElement(element, isValueSelected, renderedFacetValue, selectAction);\r\n  }\r\n\r\n  private buildClickableElement(element: HTMLElement, isSelected: boolean, value: string, selectAction: () => void) {\r\n    const label = isSelected ? l('RemoveFilterOn', value) : l('FilterOn', value);\r\n    new AccessibleButton().withTitle(label).withElement(element).withSelectAction(selectAction).build();\r\n\r\n    if (isSelected) {\r\n      $$(element).addClass('coveo-selected');\r\n    }\r\n    $$(element).addClass('coveo-clickable');\r\n  }\r\n\r\n  private handleFacetSelection(isValueSelected: boolean, facets: IFieldValueCompatibleFacet[], value: string) {\r\n    facets.forEach(facet => {\r\n      isValueSelected ? facet.deselectValue(value) : facet.selectValue(value);\r\n    });\r\n\r\n    this.executeQuery(value);\r\n  }\r\n\r\n  private executeQuery(value: string) {\r\n    this.queryController.deferExecuteQuery({\r\n      beforeExecuteQuery: () =>\r\n        this.usageAnalytics.logSearchEvent<IAnalyticsFieldValueMeta>(analyticsActionCauseList.documentField, {\r\n          facetId: this.options.facet,\r\n          facetField: this.options.field.toString(),\r\n          facetValue: value.toLowerCase()\r\n        })\r\n    });\r\n  }\r\n}\r\n\r\nInitialization.registerAutoCreateComponent(FieldValue);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/FieldValue/FieldValue.ts","/// <reference path='Facet.ts' />\r\nimport { StringUtils } from '../../utils/StringUtils';\r\nimport { QueryUtils } from '../../utils/QueryUtils';\r\nimport { FileTypes } from '../Misc/FileTypes';\r\nimport { DateUtils } from '../../utils/DateUtils';\r\nimport { Utils } from '../../utils/Utils';\r\nimport { $$ } from '../../utils/Dom';\r\nimport * as _ from 'underscore';\r\nimport FacetModuleDefinition = require('./Facet');\r\nimport { l } from '../../strings/Strings';\r\n\r\nexport class FacetUtils {\r\n  static getRegexToUseForFacetSearch(value: string, ignoreAccent: boolean) {\r\n    return new RegExp(StringUtils.stringToRegex(value, ignoreAccent), 'i');\r\n  }\r\n\r\n  static getDisplayValueFromValueCaption(value: string, field: string, valueCaption: Record<string, string>) {\r\n    const returnValue = this.tryToGetTranslatedCaption(field, value);\r\n    return valueCaption[value] || returnValue;\r\n  }\r\n\r\n  static getValuesToUseForSearchInFacet(original: string, facet: FacetModuleDefinition.Facet): string[] {\r\n    let ret = [original];\r\n    let regex = this.getRegexToUseForFacetSearch(original, facet.options.facetSearchIgnoreAccents);\r\n    if (facet.options.valueCaption) {\r\n      _.chain(facet.options.valueCaption)\r\n        .pairs()\r\n        .filter(pair => {\r\n          return regex.test(pair[1]);\r\n        })\r\n        .each(match => {\r\n          ret.push(match[0]);\r\n        });\r\n      if (\r\n        QueryUtils.isStratusAgnosticField(<string>facet.options.field, '@objecttype') ||\r\n        QueryUtils.isStratusAgnosticField(<string>facet.options.field, '@filetype')\r\n      ) {\r\n        _.each(FileTypes.getFileTypeCaptions(), (value: string, key: string) => {\r\n          if (!(key in facet.options.valueCaption) && regex.test(value)) {\r\n            ret.push(key);\r\n          }\r\n        });\r\n      }\r\n    } else if (\r\n      QueryUtils.isStratusAgnosticField(<string>facet.options.field, '@objecttype') ||\r\n      QueryUtils.isStratusAgnosticField(<string>facet.options.field, '@filetype')\r\n    ) {\r\n      _.each(\r\n        _.filter(_.pairs(FileTypes.getFileTypeCaptions()), pair => {\r\n          return regex.test(pair[1]);\r\n        }),\r\n        match => {\r\n          ret.push(match[0]);\r\n        }\r\n      );\r\n    } else if (QueryUtils.isStratusAgnosticField(<string>facet.options.field, '@month')) {\r\n      _.each(_.range(1, 13), month => {\r\n        if (regex.test(DateUtils.monthToString(month - 1))) {\r\n          ret.push(('0' + month.toString()).substr(-2));\r\n        }\r\n      });\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  static buildFacetSearchPattern(values: string[]) {\r\n    values = _.map(values, value => {\r\n      return Utils.escapeRegexCharacter(value);\r\n    });\r\n    values[0] = '.*' + values[0] + '.*';\r\n    return values.join('|');\r\n  }\r\n\r\n  static needAnotherFacetSearch(\r\n    currentSearchLength: number,\r\n    newSearchLength: number,\r\n    oldSearchLength: number,\r\n    desiredSearchLength: number\r\n  ) {\r\n    // Something was removed (currentSearch < newSearch)\r\n    // && we might want to display more facet search result(currentSearch < desiredSearch)\r\n    // && the new query returned more stuff than the old one so there's still more results(currentSearchLength > oldLength)\r\n    return currentSearchLength < newSearchLength && currentSearchLength < desiredSearchLength && currentSearchLength > oldSearchLength;\r\n  }\r\n\r\n  static addNoStateCssClassToFacetValues(facet: FacetModuleDefinition.Facet, container: HTMLElement) {\r\n    // This takes care of adding the correct css class on each facet value checkbox (empty white box) if at least one value is selected in that facet\r\n    if (facet.values.getSelected().length != 0) {\r\n      let noStates = $$(container).findAll('li:not(.coveo-selected)');\r\n      _.each(noStates, noState => {\r\n        $$(noState).addClass('coveo-no-state');\r\n      });\r\n    }\r\n  }\r\n\r\n  static tryToGetTranslatedCaption(field: string, value: string) {\r\n    let found: string;\r\n\r\n    if (QueryUtils.isStratusAgnosticField(field.toLowerCase(), '@filetype')) {\r\n      found = FileTypes.getFileType(value).caption;\r\n    } else if (QueryUtils.isStratusAgnosticField(field.toLowerCase(), '@objecttype')) {\r\n      found = FileTypes.getObjectType(value).caption;\r\n    } else if (FacetUtils.isMonthFieldValue(field, value)) {\r\n      const month = parseInt(value, 10);\r\n      found = DateUtils.monthToString(month - 1);\r\n    } else {\r\n      found = l(value);\r\n    }\r\n    return found != undefined && Utils.isNonEmptyString(found) ? found : value;\r\n  }\r\n\r\n  static isMonthFieldValue(field: string, value: string) {\r\n    if (!QueryUtils.isStratusAgnosticField(field.toLowerCase(), '@month')) {\r\n      return false;\r\n    }\r\n\r\n    const asInt = parseInt(value, 10);\r\n\r\n    if (isNaN(asInt)) {\r\n      return false;\r\n    }\r\n\r\n    if (asInt < 1 || asInt > 12) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/Facet/FacetUtils.ts","import { Component } from '../Base/Component';\r\n\r\nexport function isFacetFieldValueCompatible(facet: Component): facet is IFieldValueCompatibleFacet {\r\n  return !!facet['isFieldValueCompatible'];\r\n}\r\n\r\nexport interface IFieldValueCompatibleFacet extends Component {\r\n  isFieldValueCompatible: boolean;\r\n  hasSelectedValue(value: string): boolean;\r\n  selectValue(value: string): void;\r\n  deselectValue(value: string): void;\r\n  getCaptionForStringValue(value: string): string;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/FieldValue/IFieldValueCompatibleFacet.ts"],"sourceRoot":""}