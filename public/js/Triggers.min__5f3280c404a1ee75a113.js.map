{"version":3,"sources":["Triggers.min__5f3280c404a1ee75a113.js","./src/ui/Triggers/Triggers.ts"],"names":["webpackJsonpCoveo__temporary","284","module","exports","__webpack_require__","__extends","this","extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__","constructor","prototype","create","defineProperty","value","element","options","bindings","_window","Triggers","ID","window","ComponentOptions","initComponentOptions","Assert","exists","notifications","bind","onRootElement","QueryEvents","querySuccess","handleProcessNewQueryResults","_this","data","results","$$","empty","length","showElement","undefined","triggers","toggleClass","executeTriggers","trigger","usageAnalytics","logCustomEvent","analyticsActionCauseList","triggerNotify","notification","content","push","appendChild","className","el","triggerRedirect","redirectedTo","location","replace","queryStateModel","set","QueryStateModel","attributesEnum","q","queryController","executeQuery","beforeExecuteQuery","triggerQuery","query","func","name","params","object","map","index","triggerExecute","executed","apply","logger","error","type","single","triggersOfType","filter","oneOrAllTriggers","take","Number","MAX_VALUE","each","doExport","exportGlobally","Component","Initialization","registerAutoCreateComponent","672"],"mappings":"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","file":"Triggers.min__5f3280c404a1ee75a113.js","sourcesContent":["webpackJsonpCoveo__temporary([56],{\n\n/***/ 284:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Component_1 = __webpack_require__(7);\r\nvar ComponentOptions_1 = __webpack_require__(8);\r\nvar Assert_1 = __webpack_require__(5);\r\nvar QueryEvents_1 = __webpack_require__(11);\r\nvar Dom_1 = __webpack_require__(1);\r\nvar AnalyticsActionListMeta_1 = __webpack_require__(10);\r\nvar QueryStateModel_1 = __webpack_require__(13);\r\nvar Initialization_1 = __webpack_require__(2);\r\nvar underscore_1 = __webpack_require__(0);\r\nvar GlobalExports_1 = __webpack_require__(3);\r\n__webpack_require__(672);\r\n/**\r\n * The Triggers component enables the use of triggers (`notify`, `execute`, `query`, `redirect`) generated by the Coveo\r\n * Search API (see [Trigger](https://docs.coveo.com/en/1458/)) in the query pipeline (see\r\n * [Managing the Query Pipeline](https://docs.coveo.com/en/1450/)).\r\n *\r\n * Note: adding the Triggers component gives query pipeline administrators the power to influence users' search experience.\r\n * Bad actors will be able to perform XSS attacks, or redirect users to dangerous sites. Make sure only individuals you trust\r\n * have query pipeline edit privileges.\r\n */\r\nvar Triggers = /** @class */ (function (_super) {\r\n    __extends(Triggers, _super);\r\n    /**\r\n     * Creates a new Triggers component.\r\n     * @param element The HTMLElement on which to instantiate the component.\r\n     * @param options The options for the Triggers component.\r\n     * @param bindings The bindings that the component requires to function normally. If not set, these will be\r\n     * automatically resolved (with a slower execution time).\r\n     * @param _window The window on which to execute the triggers.\r\n     */\r\n    function Triggers(element, options, bindings, _window) {\r\n        var _this = _super.call(this, element, Triggers.ID, bindings) || this;\r\n        _this.element = element;\r\n        _this.options = options;\r\n        _this.bindings = bindings;\r\n        _this._window = _window;\r\n        _this._window = _this._window || window;\r\n        _this.options = ComponentOptions_1.ComponentOptions.initComponentOptions(element, Triggers, options);\r\n        Assert_1.Assert.exists(element);\r\n        Assert_1.Assert.exists(_this.options);\r\n        _this.notifications = [];\r\n        _this.bind.onRootElement(QueryEvents_1.QueryEvents.querySuccess, _this.handleProcessNewQueryResults);\r\n        return _this;\r\n    }\r\n    Triggers.prototype.handleProcessNewQueryResults = function (data) {\r\n        var _this = this;\r\n        Assert_1.Assert.exists(data);\r\n        Assert_1.Assert.exists(data.results);\r\n        Dom_1.$$(this.element).empty();\r\n        this.notifications.length = 0;\r\n        var showElement = false;\r\n        if (data.results.triggers === undefined) {\r\n            Dom_1.$$(this.element).toggleClass('coveo-visible', showElement);\r\n            return;\r\n        }\r\n        this.executeTriggers(data.results.triggers, 'notify', function (trigger) {\r\n            _this.usageAnalytics.logCustomEvent(AnalyticsActionListMeta_1.analyticsActionCauseList.triggerNotify, {\r\n                notification: trigger.content\r\n            }, _this.element);\r\n            _this.notifications.push(trigger.content);\r\n            _this.element.appendChild(Dom_1.$$('div', { className: 'coveo-trigger-notify' }, trigger.content).el);\r\n            showElement = true;\r\n        });\r\n        this.executeTriggers(data.results.triggers, 'redirect', function (trigger) {\r\n            _this.usageAnalytics.logCustomEvent(AnalyticsActionListMeta_1.analyticsActionCauseList.triggerRedirect, {\r\n                redirectedTo: trigger.content\r\n            }, _this.element);\r\n            _this._window.location.replace(trigger.content);\r\n        }, true);\r\n        this.executeTriggers(data.results.triggers, 'query', function (trigger) {\r\n            _this.queryStateModel.set(QueryStateModel_1.QueryStateModel.attributesEnum.q, trigger.content);\r\n            _this.queryController.executeQuery({\r\n                beforeExecuteQuery: function () {\r\n                    _this.usageAnalytics.logCustomEvent(AnalyticsActionListMeta_1.analyticsActionCauseList.triggerQuery, {\r\n                        query: trigger.content\r\n                    }, _this.element);\r\n                }\r\n            });\r\n        }, true);\r\n        this.executeTriggers(data.results.triggers, 'execute', function (trigger) {\r\n            try {\r\n                var func = _this._window['' + trigger.content.name];\r\n                if (typeof func === 'function') {\r\n                    var params = underscore_1.object(underscore_1.map(trigger.content.params, function (value, index) {\r\n                        return ['param' + (index + 1), value];\r\n                    }));\r\n                    params['element'] = _this.element;\r\n                    _this.usageAnalytics.logCustomEvent(AnalyticsActionListMeta_1.analyticsActionCauseList.triggerExecute, {\r\n                        executed: trigger.content.name\r\n                    }, _this.element);\r\n                    func.apply(_this._window, [params]);\r\n                }\r\n                else {\r\n                    _this.logger.error(\"A trigger tried to call the function '\" + trigger.content.name + \"', which doesn't exist.\", _this, data.query, trigger);\r\n                }\r\n            }\r\n            catch (error) {\r\n                _this.logger.error(\"A trigger called the function '\" + trigger.content.name + \"', which threw an error.\", _this, data.query, trigger);\r\n            }\r\n        });\r\n        Dom_1.$$(this.element).toggleClass('coveo-visible', showElement);\r\n    };\r\n    Triggers.prototype.executeTriggers = function (trigger, type, func, single) {\r\n        if (single === void 0) { single = false; }\r\n        var triggersOfType = underscore_1.filter(trigger, function (trigger) {\r\n            return trigger.type == type;\r\n        });\r\n        var oneOrAllTriggers = underscore_1.take(triggersOfType, single ? 1 : Number.MAX_VALUE);\r\n        underscore_1.each(oneOrAllTriggers, func);\r\n    };\r\n    Triggers.ID = 'Triggers';\r\n    Triggers.options = {};\r\n    Triggers.doExport = function () {\r\n        GlobalExports_1.exportGlobally({\r\n            Triggers: Triggers\r\n        });\r\n    };\r\n    return Triggers;\r\n}(Component_1.Component));\r\nexports.Triggers = Triggers;\r\nInitialization_1.Initialization.registerAutoCreateComponent(Triggers);\r\n\n\n/***/ }),\n\n/***/ 672:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// Triggers.min__5f3280c404a1ee75a113.js","import { Component } from '../Base/Component';\r\nimport { IComponentBindings } from '../Base/ComponentBindings';\r\nimport { ComponentOptions } from '../Base/ComponentOptions';\r\nimport { Assert } from '../../misc/Assert';\r\nimport { QueryEvents, IQuerySuccessEventArgs } from '../../events/QueryEvents';\r\nimport { ITriggerNotify, ITriggerExecute, ITriggerRedirect, ITriggerQuery, ITrigger } from '../../rest/Trigger';\r\nimport { $$ } from '../../utils/Dom';\r\nimport {\r\n  IAnalyticsTriggerNotify,\r\n  analyticsActionCauseList,\r\n  IAnalyticsTriggerRedirect,\r\n  IAnalyticsTriggerQuery,\r\n  IAnalyticsTriggerExecute\r\n} from '../Analytics/AnalyticsActionListMeta';\r\nimport { QueryStateModel } from '../../models/QueryStateModel';\r\nimport { Initialization } from '../Base/Initialization';\r\nimport { object, map, filter, each, take } from 'underscore';\r\nimport { exportGlobally } from '../../GlobalExports';\r\n\r\nimport 'styling/_Triggers';\r\n\r\nexport interface ITriggersOptions {}\r\n\r\n/**\r\n * The Triggers component enables the use of triggers (`notify`, `execute`, `query`, `redirect`) generated by the Coveo\r\n * Search API (see [Trigger](https://docs.coveo.com/en/1458/)) in the query pipeline (see\r\n * [Managing the Query Pipeline](https://docs.coveo.com/en/1450/)).\r\n *\r\n * Note: adding the Triggers component gives query pipeline administrators the power to influence users' search experience.\r\n * Bad actors will be able to perform XSS attacks, or redirect users to dangerous sites. Make sure only individuals you trust\r\n * have query pipeline edit privileges.\r\n */\r\nexport class Triggers extends Component {\r\n  static ID = 'Triggers';\r\n  static options: ITriggersOptions = {};\r\n\r\n  static doExport = () => {\r\n    exportGlobally({\r\n      Triggers: Triggers\r\n    });\r\n  };\r\n\r\n  /**\r\n   * The list of notifications returned by the Search API for the current query (via `notify` triggers).\r\n   *\r\n   * The Triggers component automatically renders this list visually.\r\n   */\r\n  public notifications: string[];\r\n\r\n  /**\r\n   * Creates a new Triggers component.\r\n   * @param element The HTMLElement on which to instantiate the component.\r\n   * @param options The options for the Triggers component.\r\n   * @param bindings The bindings that the component requires to function normally. If not set, these will be\r\n   * automatically resolved (with a slower execution time).\r\n   * @param _window The window on which to execute the triggers.\r\n   */\r\n  constructor(\r\n    public element: HTMLElement,\r\n    public options?: ITriggersOptions,\r\n    public bindings?: IComponentBindings,\r\n    public _window?: Window\r\n  ) {\r\n    super(element, Triggers.ID, bindings);\r\n\r\n    this._window = this._window || window;\r\n    this.options = ComponentOptions.initComponentOptions(element, Triggers, options);\r\n    Assert.exists(element);\r\n    Assert.exists(this.options);\r\n\r\n    this.notifications = [];\r\n\r\n    this.bind.onRootElement(QueryEvents.querySuccess, this.handleProcessNewQueryResults);\r\n  }\r\n\r\n  private handleProcessNewQueryResults(data: IQuerySuccessEventArgs) {\r\n    Assert.exists(data);\r\n    Assert.exists(data.results);\r\n\r\n    $$(this.element).empty();\r\n    this.notifications.length = 0;\r\n    let showElement = false;\r\n\r\n    if (data.results.triggers === undefined) {\r\n      $$(this.element).toggleClass('coveo-visible', showElement);\r\n      return;\r\n    }\r\n\r\n    this.executeTriggers(data.results.triggers, 'notify', (trigger: ITriggerNotify) => {\r\n      this.usageAnalytics.logCustomEvent<IAnalyticsTriggerNotify>(\r\n        analyticsActionCauseList.triggerNotify,\r\n        {\r\n          notification: trigger.content\r\n        },\r\n        this.element\r\n      );\r\n\r\n      this.notifications.push(trigger.content);\r\n      this.element.appendChild($$('div', { className: 'coveo-trigger-notify' }, trigger.content).el);\r\n\r\n      showElement = true;\r\n    });\r\n\r\n    this.executeTriggers(\r\n      data.results.triggers,\r\n      'redirect',\r\n      (trigger: ITriggerRedirect) => {\r\n        this.usageAnalytics.logCustomEvent<IAnalyticsTriggerRedirect>(\r\n          analyticsActionCauseList.triggerRedirect,\r\n          {\r\n            redirectedTo: trigger.content\r\n          },\r\n          this.element\r\n        );\r\n\r\n        this._window.location.replace(trigger.content);\r\n      },\r\n      true\r\n    );\r\n\r\n    this.executeTriggers(\r\n      data.results.triggers,\r\n      'query',\r\n      (trigger: ITriggerQuery) => {\r\n        this.queryStateModel.set(QueryStateModel.attributesEnum.q, trigger.content);\r\n        this.queryController.executeQuery({\r\n          beforeExecuteQuery: () => {\r\n            this.usageAnalytics.logCustomEvent<IAnalyticsTriggerQuery>(\r\n              analyticsActionCauseList.triggerQuery,\r\n              {\r\n                query: trigger.content\r\n              },\r\n              this.element\r\n            );\r\n          }\r\n        });\r\n      },\r\n      true\r\n    );\r\n\r\n    this.executeTriggers(data.results.triggers, 'execute', (trigger: ITriggerExecute) => {\r\n      try {\r\n        let func: Function = this._window['' + trigger.content.name];\r\n        if (typeof func === 'function') {\r\n          let params = object(\r\n            map(trigger.content.params, (value, index) => {\r\n              return ['param' + (index + 1), value];\r\n            })\r\n          );\r\n          params['element'] = this.element;\r\n\r\n          this.usageAnalytics.logCustomEvent<IAnalyticsTriggerExecute>(\r\n            analyticsActionCauseList.triggerExecute,\r\n            {\r\n              executed: trigger.content.name\r\n            },\r\n            this.element\r\n          );\r\n\r\n          func.apply(this._window, [params]);\r\n        } else {\r\n          this.logger.error(\r\n            `A trigger tried to call the function '${trigger.content.name}', which doesn't exist.`,\r\n            this,\r\n            data.query,\r\n            trigger\r\n          );\r\n        }\r\n      } catch (error) {\r\n        this.logger.error(`A trigger called the function '${trigger.content.name}', which threw an error.`, this, data.query, trigger);\r\n      }\r\n    });\r\n\r\n    $$(this.element).toggleClass('coveo-visible', showElement);\r\n  }\r\n\r\n  private executeTriggers(trigger: ITrigger<any>[], type: string, func: (trigger: ITrigger<any>) => any, single: boolean = false) {\r\n    let triggersOfType = filter(trigger, (trigger: ITrigger<any>) => {\r\n      return trigger.type == type;\r\n    });\r\n    let oneOrAllTriggers = take(triggersOfType, single ? 1 : Number.MAX_VALUE);\r\n\r\n    each(oneOrAllTriggers, func);\r\n  }\r\n}\r\n\r\nInitialization.registerAutoCreateComponent(Triggers);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/Triggers/Triggers.ts"],"sourceRoot":""}