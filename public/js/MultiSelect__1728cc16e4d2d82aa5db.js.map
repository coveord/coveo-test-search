{"version":3,"sources":["./src/ui/FormWidgets/MultiSelect.ts","./sass/vapor/_MultiSelect.scss"],"names":[],"mappings":"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","file":"MultiSelect__1728cc16e4d2d82aa5db.js","sourcesContent":["import { IFormWidget, IFormWidgetSettable } from './FormWidgets';\r\nimport { $$ } from '../../utils/Dom';\r\nimport * as _ from 'underscore';\r\nimport { l } from '../../strings/Strings';\r\nimport 'styling/vapor/_MultiSelect';\r\nimport { Utils } from '../../utils/Utils';\r\nimport { exportGlobally } from '../../GlobalExports';\r\n\r\n/**\r\n * A multi select widget with standard styling.\r\n */\r\nexport class MultiSelect implements IFormWidget, IFormWidgetSettable {\r\n  private element: HTMLSelectElement;\r\n\r\n  static doExport() {\r\n    exportGlobally({\r\n      MultiSelect: MultiSelect\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Creates a new `MultiSelect`.\r\n   * @param onChange The function to call when the widget selected values change. This function takes the current\r\n   * `MultiSelect` instance as an argument.\r\n   * @param options The values which can be selected with the multi select.\r\n   * @param label The label to display for the multi select.\r\n   */\r\n  constructor(\r\n    public onChange: (multiSelect: MultiSelect) => void = (multiSelect: MultiSelect) => {},\r\n    public options: string[],\r\n    public label: string\r\n  ) {\r\n    this.buildContent();\r\n  }\r\n\r\n  /**\r\n   * Gets the element on which the multi select is bound.\r\n   * @returns {HTMLSelectElement} The multi select element.\r\n   */\r\n  public build(): HTMLElement {\r\n    return this.element;\r\n  }\r\n\r\n  /**\r\n   * Gets the element on which the multi select is bound.\r\n   * @returns {HTMLSelectElement} The multi select element.\r\n   */\r\n  public getElement(): HTMLElement {\r\n    return this.element;\r\n  }\r\n\r\n  /**\r\n   * Gets the currently selected values.\r\n   * @returns {string[]} The array of selected multi select values.\r\n   */\r\n  public getValue(): string[] {\r\n    return _.chain(<any>this.element.options)\r\n      .toArray()\r\n      .filter((opt: HTMLOptionElement) => opt.selected)\r\n      .map((selected: HTMLOptionElement) => selected.value)\r\n      .value();\r\n  }\r\n\r\n  /**\r\n   * Gets the currently un-selected values.\r\n   * @returns {string[]} The array of un-selected multi select values.\r\n   */\r\n  public getUnselectedValues(): string[] {\r\n    return _.chain(<any>this.element.options)\r\n      .toArray()\r\n      .filter((opt: HTMLOptionElement) => !opt.selected)\r\n      .map((selected: HTMLOptionElement) => selected.value)\r\n      .value();\r\n  }\r\n\r\n  /**\r\n   * Sets the currently selected values.\r\n   * @param values The values to select.\r\n   */\r\n  public setValue(values: string[]) {\r\n    const currentlySelected = this.getValue();\r\n\r\n    const currentStateSplit = _.partition(_.toArray(this.element.options), (opt: HTMLOptionElement) =>\r\n      _.contains(currentlySelected, opt.value)\r\n    );\r\n    const newStateToApplySplit = _.partition(_.toArray(this.element.options), (opt: HTMLOptionElement) => _.contains(values, opt.value));\r\n\r\n    _.each(newStateToApplySplit[0], (toSelect: HTMLOptionElement) => (toSelect.selected = true));\r\n    _.each(newStateToApplySplit[1], (toUnSelect: HTMLOptionElement) => (toUnSelect.selected = false));\r\n\r\n    let hasChanged = false;\r\n    if (!Utils.arrayEqual(currentStateSplit[0], newStateToApplySplit[0], false)) {\r\n      hasChanged = true;\r\n    }\r\n    if (!Utils.arrayEqual(currentStateSplit[1], newStateToApplySplit[1], false)) {\r\n      hasChanged = true;\r\n    }\r\n\r\n    if (hasChanged) {\r\n      $$(this.element).trigger('change');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Resets the multi select.\r\n   */\r\n  public reset() {\r\n    const currentlySelected = this.getValue();\r\n    this.element.selectedIndex = -1;\r\n    if (!Utils.isEmptyArray(currentlySelected)) {\r\n      $$(this.element).trigger('change');\r\n    }\r\n  }\r\n\r\n  private buildContent() {\r\n    this.element = <HTMLSelectElement>$$('select', {\r\n      className: 'coveo-multi-select',\r\n      multiple: '',\r\n      size: this.options.length.toString()\r\n    }).el;\r\n    const optgroup = $$('optgroup', {\r\n      className: 'coveo-list-group',\r\n      label: this.label\r\n    });\r\n    const options = _.map(this.options, opt => {\r\n      return $$('option', { value: opt, className: 'coveo-list-item' }, l(opt));\r\n    });\r\n    _.each(options, opt => optgroup.append(opt.el));\r\n    this.element.appendChild(optgroup.el);\r\n    $$(this.element).on('change', () => this.onChange(this));\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/FormWidgets/MultiSelect.ts","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./sass/vapor/_MultiSelect.scss\n// module id = 573\n// module chunks = 24 54 88"],"sourceRoot":""}