{"version":3,"sources":["./src/utils/ChatterUtils.ts","./src/ui/ChatterPostAttachment/ChatterPostAttachment.ts"],"names":[],"mappings":";;;;;;;;AAAA;IAAA;IAQA,CAAC;IAPQ,qBAAQ,GAAf,UAAgB,SAAiB,EAAE,QAAgB,EAAE,WAAmB;QACtE,OAAO,SAAS,CAAC,OAAO,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;IAClD,CAAC;IAEM,oCAAuB,GAA9B,UAA+B,OAAoB,EAAE,gBAAyB,EAAE,YAAqB;QACnG,OAAO,OAAO,CAAC;IACjB,CAAC;IACH,mBAAC;AAAD,CAAC;AARY,oCAAY;;;;;;;;;;;;;;;;;;;;;ACAzB,yCAA8C;AAG9C,qCAA0C;AAC1C,8CAAwD;AACxD,uCAA0C;AAC1C,8CAAwD;AACxD,mCAAqC;AACrC,6CAAqD;AAIrD;IAA2C,yCAAS;IASlD,+BACS,OAAoB,EACpB,OAAsC,EACtC,QAAoC,EACpC,MAAqB;QAJ9B,YAME,kBAAM,OAAO,EAAE,qBAAqB,CAAC,EAAE,EAAE,QAAQ,CAAC,SA+BnD;QApCQ,aAAO,GAAP,OAAO,CAAa;QACpB,aAAO,GAAP,OAAO,CAA+B;QACtC,cAAQ,GAAR,QAAQ,CAA4B;QACpC,YAAM,GAAN,MAAM,CAAe;QAI5B,IAAI,CAAC,aAAK,CAAC,iBAAiB,CAAC,aAAK,CAAC,aAAa,CAAC,MAAM,EAAE,oBAAoB,CAAC,CAAC,EAAE;YAC/E,IAAI,WAAW,GAAG,QAAE,CAAC,KAAK,EAAE;gBAC1B,SAAS,EAAE,8BAA8B;aAC1C,CAAC,CAAC;YACH,QAAE,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;YAEnC,IAAI,IAAI,GAAG,QAAE,CAAC,KAAK,EAAE;gBACnB,SAAS,EAAE,2DAA2D;aACvE,CAAC,CAAC;YACH,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAE5B,IAAI,WAAW,GAAG,QAAE,CAAC,GAAG,EAAE;gBACxB,IAAI,EAAE,2BAAY,CAAC,QAAQ,CACzB,MAAM,CAAC,QAAQ,EACf,aAAK,CAAC,aAAa,CAAC,MAAM,EAAE,cAAc,CAAC,EAC3C,aAAK,CAAC,aAAa,CAAC,MAAM,EAAE,oBAAoB,CAAC,CAClD;aACF,CAAC,CAAC;YAEH,WAAW,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;YAEnC,IAAM,UAAU,GAAG,aAAK,CAAC,2BAA2B,CAAC,MAAM,EAAE,CAAC,mBAAmB,EAAE,SAAS,EAAE,UAAU,CAAC,CAAC,CAAC;YAE3G,IAAI,CAAC,aAAK,CAAC,iBAAiB,CAAC,UAAU,CAAC,EAAE;gBACxC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aAC9B;iBAAM;gBACL,WAAW,CAAC,IAAI,CAAC,WAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;aACvC;SACF;;IACH,CAAC;IA7CM,wBAAE,GAAG,uBAAuB,CAAC;IAE7B,8BAAQ,GAAG;QAChB,8BAAc,CAAC;YACb,qBAAqB,EAAE,qBAAqB;SAC7C,CAAC,CAAC;IACL,CAAC,CAAC;IAwCJ,4BAAC;CAAA,CA/C0C,qBAAS,GA+CnD;AA/CY,sDAAqB;AAiDlC,+BAAc,CAAC,2BAA2B,CAAC,qBAAqB,CAAC,CAAC","file":"ChatterPostAttachment__1728cc16e4d2d82aa5db.js","sourcesContent":["export class ChatterUtils {\r\n  static buildURI(objectURI: string, objectId: string, newObjectId: string) {\r\n    return objectURI.replace(objectId, newObjectId);\r\n  }\r\n\r\n  static bindClickEventToElement(element: HTMLElement, openInPrimaryTab: boolean, openInSubTab: boolean) {\r\n    return element;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/ChatterUtils.ts","import { Component } from '../Base/Component';\r\nimport { IResultsComponentBindings } from '../Base/ResultsComponentBindings';\r\nimport { IQueryResult } from '../../rest/QueryResult';\r\nimport { Utils } from '../../utils/Utils';\r\nimport { ChatterUtils } from '../../utils/ChatterUtils';\r\nimport { l } from '../../strings/Strings';\r\nimport { Initialization } from '../Base/Initialization';\r\nimport { $$ } from '../../utils/Dom';\r\nimport { exportGlobally } from '../../GlobalExports';\r\n\r\nexport interface IChatterPostAttachmentOption {}\r\n\r\nexport class ChatterPostAttachment extends Component {\r\n  static ID = 'ChatterPostAttachment';\r\n\r\n  static doExport = () => {\r\n    exportGlobally({\r\n      ChatterPostAttachment: ChatterPostAttachment\r\n    });\r\n  };\r\n\r\n  constructor(\r\n    public element: HTMLElement,\r\n    public options?: IChatterPostAttachmentOption,\r\n    public bindings?: IResultsComponentBindings,\r\n    public result?: IQueryResult\r\n  ) {\r\n    super(element, ChatterPostAttachment.ID, bindings);\r\n\r\n    if (!Utils.isNullOrUndefined(Utils.getFieldValue(result, 'sfcontentversionid'))) {\r\n      let rootElement = $$('div', {\r\n        className: 'coveo-chatter-result-box-row'\r\n      });\r\n      $$(element).append(rootElement.el);\r\n\r\n      let icon = $$('div', {\r\n        className: 'coveo-sprites-common-system coveo-chatter-result-box-icon'\r\n      });\r\n      rootElement.append(icon.el);\r\n\r\n      let linkElement = $$('a', {\r\n        href: ChatterUtils.buildURI(\r\n          result.clickUri,\r\n          Utils.getFieldValue(result, 'sffeeditemid'),\r\n          Utils.getFieldValue(result, 'sfcontentversionid')\r\n        )\r\n      });\r\n\r\n      rootElement.append(linkElement.el);\r\n\r\n      const fieldValue = Utils.getFirstAvailableFieldValue(result, ['sfcontentfilename', 'sftitle', 'sf_title']);\r\n\r\n      if (!Utils.isNullOrUndefined(fieldValue)) {\r\n        linkElement.text(fieldValue);\r\n      } else {\r\n        linkElement.text(l('ShowAttachment'));\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nInitialization.registerAutoCreateComponent(ChatterPostAttachment);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/ChatterPostAttachment/ChatterPostAttachment.ts"],"sourceRoot":""}