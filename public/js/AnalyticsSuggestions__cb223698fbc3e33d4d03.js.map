{"version":3,"sources":["./src/ui/AnalyticsSuggestions/AnalyticsSuggestions.ts","./src/ui/Misc/SuggestionForOmnibox.ts"],"names":[],"mappings":"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","file":"AnalyticsSuggestions__cb223698fbc3e33d4d03.js","sourcesContent":["import * as _ from 'underscore';\r\nimport { IPopulateOmniboxEventArgs, OmniboxEvents } from '../../events/OmniboxEvents';\r\nimport { QueryEvents } from '../../events/QueryEvents';\r\nimport { exportGlobally } from '../../GlobalExports';\r\nimport { Assert } from '../../misc/Assert';\r\nimport { QueryStateModel } from '../../models/QueryStateModel';\r\nimport { IStringMap } from '../../rest/GenericParam';\r\nimport { l } from '../../strings/Strings';\r\nimport { AccessibleButton } from '../../utils/AccessibleButton';\r\nimport { $$ } from '../../utils/Dom';\r\nimport { analyticsActionCauseList, IAnalyticsTopSuggestionMeta } from '../Analytics/AnalyticsActionListMeta';\r\nimport { Component } from '../Base/Component';\r\nimport { IComponentBindings } from '../Base/ComponentBindings';\r\nimport { ComponentOptions } from '../Base/ComponentOptions';\r\nimport { Initialization } from '../Base/Initialization';\r\nimport { ISuggestionForOmniboxOptions, ISuggestionForOmniboxTemplate, SuggestionForOmnibox } from '../Misc/SuggestionForOmnibox';\r\nimport { StandaloneSearchInterface } from '../SearchInterface/SearchInterface';\r\n\r\nexport interface IAnalyticsSuggestionsOptions extends ISuggestionForOmniboxOptions {}\r\n\r\n/**\r\n * The AnalyticsSuggestion component provides query suggestions based on the queries that a Coveo Analytics service most\r\n * commonly logs.\r\n *\r\n * This component orders possible query suggestions by their respective number of successful item views, thus\r\n * prioritizing the most relevant query suggestions. Consequently, when better options are available, this component\r\n * does not suggest queries resulting in no clicks from users or requiring refinements.\r\n *\r\n * The query suggestions appear in the {@link Omnibox} Component. The AnalyticsSuggestion component strongly\r\n * relates to the {@link Analytics} component. While a user is typing in a query box, the AnalyticsSuggestion component\r\n * allows them to see and select the most commonly used and relevant queries.\r\n *\r\n * @deprecated This component is exposed for legacy reasons. If possible, you should avoid using this component.\r\n * Instead, you should use the [`Omnibox`]{@link Omnibox}\r\n * [`enableQuerySuggestAddon`]{@link Omnibox.options.enableQuerySuggestAddon} option.\r\n */\r\nexport class AnalyticsSuggestions extends Component {\r\n  static ID = 'AnalyticsSuggestions';\r\n\r\n  static doExport() {\r\n    exportGlobally({\r\n      AnalyticsSuggestions: AnalyticsSuggestions\r\n    });\r\n  }\r\n\r\n  /**\r\n   * The options for the component\r\n   * @componentOptions\r\n   */\r\n  static options: IAnalyticsSuggestionsOptions = {\r\n    /**\r\n     * Specifies the z-index position at which the query suggestions render themselves in the {@link Omnibox}\r\n     * component. Higher values are placed first.\r\n     *\r\n     * Default value is `52` and minimum value is `0`.\r\n     */\r\n    omniboxZIndex: ComponentOptions.buildNumberOption({ defaultValue: 52, min: 0 }),\r\n\r\n    /**\r\n     * Specifies the title of the query suggestions group in the {@link Omnibox} component. This option is not available\r\n     * when using the default Lightning Friendly Theme.\r\n     *\r\n     * Default value is the localized string for `\"Suggested Queries\"`.\r\n     */\r\n    headerTitle: ComponentOptions.buildLocalizedStringOption({\r\n      localizedString: () => l('SuggestedQueries')\r\n    }),\r\n\r\n    /**\r\n     * Specifies the number of query suggestions to request and display in the {@link Omnibox} component.\r\n     *\r\n     * Default value is `5` and minimum value is `1`.\r\n     */\r\n    numberOfSuggestions: ComponentOptions.buildNumberOption({ defaultValue: 5, min: 1 })\r\n  };\r\n\r\n  private suggestionForOmnibox: SuggestionForOmnibox;\r\n  private partialQueries: string[] = [];\r\n  private lastSuggestions: string[] = [];\r\n  private resultsToBuildWith = [];\r\n  private currentlyDisplayedSuggestions: { [suggestion: string]: { element: HTMLElement; pos: number } };\r\n\r\n  /**\r\n   * Creates a new AnalyticsSuggestions component.\r\n   *\r\n   * Also binds event handlers so that when a user selects a suggestion, an `omniboxFromLink` usage analytics event is\r\n   * logged if the suggestion comes from a standalone search box, or an `omniboxAnalytics` usage analytics\r\n   * event is logged otherwise.\r\n   *\r\n   * @param element The HTMLElement on which to instantiate the component.\r\n   * @param options The options for the AnalyticsSuggestions component.\r\n   * @param bindings The bindings that the component requires to function normally. If not set, these will be\r\n   * automatically resolved (with a slower execution time).\r\n   */\r\n  constructor(element: HTMLElement, public options: IAnalyticsSuggestionsOptions, bindings?: IComponentBindings) {\r\n    super(element, AnalyticsSuggestions.ID, bindings);\r\n\r\n    if (this.options && 'omniboxSuggestionOptions' in this.options) {\r\n      this.options = _.extend(this.options, this.options['omniboxSuggestionOptions']);\r\n    }\r\n\r\n    this.options = ComponentOptions.initComponentOptions(element, AnalyticsSuggestions, this.options);\r\n\r\n    const rowTemplate = (toRender: IStringMap<any>) => {\r\n      const rowElement = $$('div', {\r\n        className: 'magic-box-suggestion coveo-omnibox-selectable coveo-top-analytics-suggestion-row'\r\n      });\r\n\r\n      new AccessibleButton()\r\n        .withElement(rowElement)\r\n        .withLabel(toRender.rawValue)\r\n        .build();\r\n\r\n      if (toRender['data']) {\r\n        rowElement.el.innerHTML = toRender['data'];\r\n      }\r\n      return rowElement.el.outerHTML;\r\n    };\r\n\r\n    this.options.onSelect = this.options.onSelect || this.onRowSelection;\r\n\r\n    const suggestionStructure: ISuggestionForOmniboxTemplate = {\r\n      row: rowTemplate\r\n    };\r\n\r\n    this.suggestionForOmnibox = new SuggestionForOmnibox(\r\n      suggestionStructure,\r\n      (value: string, args: IPopulateOmniboxEventArgs) => {\r\n        this.options.onSelect.call(this, value, args);\r\n      },\r\n      (value: string, args: IPopulateOmniboxEventArgs) => {\r\n        this.onRowTab.call(this, value, args);\r\n      }\r\n    );\r\n    this.bind.onRootElement(OmniboxEvents.populateOmnibox, (args: IPopulateOmniboxEventArgs) => this.handlePopulateOmnibox(args));\r\n    this.bind.onRootElement(QueryEvents.querySuccess, () => (this.partialQueries = []));\r\n  }\r\n\r\n  /**\r\n   * Selects a currently displayed query suggestion. This implies that at least one suggestion must have been returned\r\n   * at least once. The suggestion parameter can either be a number (0-based index position of the query suggestion to\r\n   * select) or a string that matches the suggestion.\r\n   *\r\n   * @param suggestion\r\n   */\r\n  public selectSuggestion(suggestion: number);\r\n  public selectSuggestion(suggestion: string);\r\n  public selectSuggestion(suggestion: any) {\r\n    if (this.currentlyDisplayedSuggestions) {\r\n      if (isNaN(suggestion)) {\r\n        if (this.currentlyDisplayedSuggestions[suggestion]) {\r\n          $$(this.currentlyDisplayedSuggestions[suggestion].element).trigger('click');\r\n        }\r\n      } else {\r\n        const currentlySuggested = <{ element: HTMLElement; pos: number }>_.findWhere(<any>this.currentlyDisplayedSuggestions, {\r\n          pos: suggestion\r\n        });\r\n        if (currentlySuggested) {\r\n          $$(currentlySuggested.element).trigger('click');\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private handlePopulateOmnibox(args: IPopulateOmniboxEventArgs) {\r\n    Assert.exists(args);\r\n\r\n    var promise = new Promise((resolve, reject) => {\r\n      const searchPromise = this.usageAnalytics.getTopQueries({\r\n        pageSize: this.options.numberOfSuggestions,\r\n        queryText: args.completeQueryExpression.word\r\n      });\r\n\r\n      searchPromise.then((results: string[]) => {\r\n        this.resultsToBuildWith = _.map(results, result => {\r\n          return {\r\n            value: result\r\n          };\r\n        });\r\n        this.lastSuggestions = results;\r\n        if (!_.isEmpty(this.resultsToBuildWith) && args.completeQueryExpression.word != '') {\r\n          this.partialQueries.push(args.completeQueryExpression.word);\r\n        }\r\n        const element = this.suggestionForOmnibox.buildOmniboxElement(this.resultsToBuildWith, args);\r\n        this.currentlyDisplayedSuggestions = {};\r\n        if (element) {\r\n          _.map($$(element).findAll('.coveo-omnibox-selectable'), (selectable, i?) => {\r\n            this.currentlyDisplayedSuggestions[$$(selectable).text()] = {\r\n              element: selectable,\r\n              pos: i\r\n            };\r\n          });\r\n        }\r\n        resolve({\r\n          element: element,\r\n          zIndex: this.options.omniboxZIndex\r\n        });\r\n      });\r\n      searchPromise.catch(() => {\r\n        resolve({\r\n          element: undefined\r\n        });\r\n      });\r\n    });\r\n\r\n    args.rows.push({ deferred: promise });\r\n  }\r\n\r\n  private onRowSelection(value: string, args: IPopulateOmniboxEventArgs) {\r\n    args.clear();\r\n    args.closeOmnibox();\r\n    this.queryStateModel.set(QueryStateModel.attributesEnum.q, value);\r\n    this.usageAnalytics.logSearchEvent<IAnalyticsTopSuggestionMeta>(this.getOmniboxAnalyticsEventCause(), {\r\n      partialQueries: this.cleanCustomData(this.partialQueries),\r\n      suggestionRanking: _.indexOf(_.pluck(this.resultsToBuildWith, 'value'), value),\r\n      suggestions: this.cleanCustomData(this.lastSuggestions),\r\n      partialQuery: args.completeQueryExpression.word\r\n    });\r\n    this.queryController.executeQuery();\r\n  }\r\n\r\n  private onRowTab(value: string, args: IPopulateOmniboxEventArgs) {\r\n    args.clear();\r\n    args.closeOmnibox();\r\n    this.queryStateModel.set(QueryStateModel.attributesEnum.q, `${value}`);\r\n    this.usageAnalytics.logCustomEvent<IAnalyticsTopSuggestionMeta>(\r\n      this.getOmniboxAnalyticsEventCause(),\r\n      {\r\n        partialQueries: this.cleanCustomData(this.partialQueries),\r\n        suggestionRanking: _.indexOf(_.pluck(this.resultsToBuildWith, 'value'), value),\r\n        suggestions: this.cleanCustomData(this.lastSuggestions),\r\n        partialQuery: args.completeQueryExpression.word\r\n      },\r\n      this.element\r\n    );\r\n  }\r\n\r\n  private cleanCustomData(toClean: string[], rejectLength = 256) {\r\n    // Filter out only consecutive values that are the identical\r\n    toClean = _.compact(\r\n      _.filter(toClean, (partial: string, pos?: number, array?: string[]) => {\r\n        return pos === 0 || partial !== array[pos - 1];\r\n      })\r\n    );\r\n\r\n    // Custom dimensions cannot be an array in analytics service: Send a string joined by ; instead.\r\n    // Need to replace ;\r\n    toClean = _.map(toClean, partial => {\r\n      return partial.replace(/;/g, '');\r\n    });\r\n\r\n    // Reduce right to get the last X words that adds to less then rejectLength\r\n    const reducedToRejectLengthOrLess = [];\r\n    _.reduceRight(\r\n      toClean,\r\n      (memo: number, partial: string) => {\r\n        const totalSoFar = memo + partial.length;\r\n        if (totalSoFar <= rejectLength) {\r\n          reducedToRejectLengthOrLess.push(partial);\r\n        }\r\n        return totalSoFar;\r\n      },\r\n      0\r\n    );\r\n    toClean = reducedToRejectLengthOrLess.reverse();\r\n    const ret = toClean.join(';');\r\n\r\n    // analytics service can store max 256 char in a custom event\r\n    // if we're over that, call cleanup again with an arbitrary 10 less char accepted\r\n    if (ret.length >= 256) {\r\n      return this.cleanCustomData(toClean, rejectLength - 10);\r\n    }\r\n\r\n    return toClean.join(';');\r\n  }\r\n\r\n  private getOmniboxAnalyticsEventCause() {\r\n    if (this.searchInterface instanceof StandaloneSearchInterface) {\r\n      return analyticsActionCauseList.omniboxFromLink;\r\n    }\r\n    return analyticsActionCauseList.omniboxAnalytics;\r\n  }\r\n}\r\nInitialization.registerAutoCreateComponent(AnalyticsSuggestions);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/AnalyticsSuggestions/AnalyticsSuggestions.ts","import { IPopulateOmniboxEventArgs } from '../../events/OmniboxEvents';\r\nimport { DomUtils } from '../../utils/DomUtils';\r\nimport { $$ } from '../../utils/Dom';\r\nimport * as _ from 'underscore';\r\n\r\nexport interface ISuggestionForOmniboxOptionsOnSelect {\r\n  (value: string, args: IPopulateOmniboxEventArgs): void;\r\n}\r\n\r\nexport interface ISuggestionForOmniboxOptions {\r\n  omniboxZIndex?: number;\r\n  headerTitle?: string;\r\n  onSelect?: ISuggestionForOmniboxOptionsOnSelect;\r\n  numberOfSuggestions?: number;\r\n}\r\n\r\nexport interface ISuggestionForOmniboxTemplate {\r\n  header?: {\r\n    template: (...args: any[]) => string;\r\n    title: string;\r\n  };\r\n  row: (...args: any[]) => string;\r\n}\r\n\r\nexport interface ISuggestionForOmniboxResult {\r\n  value: string;\r\n}\r\n\r\nexport class SuggestionForOmnibox {\r\n  constructor(\r\n    public structure: ISuggestionForOmniboxTemplate,\r\n    public onSelect: (value: string, args: IPopulateOmniboxEventArgs) => void,\r\n    public onTabPress: (value: string, args: IPopulateOmniboxEventArgs) => void\r\n  ) {}\r\n\r\n  public buildOmniboxElement(results: ISuggestionForOmniboxResult[], args: IPopulateOmniboxEventArgs): HTMLElement {\r\n    let element: HTMLElement;\r\n    if (results.length != 0) {\r\n      element = $$('div').el;\r\n      if (this.structure.header) {\r\n        let header = this.buildElementHeader();\r\n        element.appendChild(header);\r\n      }\r\n      let rows = this.buildRowElements(results, args);\r\n      _.each(rows, row => {\r\n        element.appendChild(row);\r\n      });\r\n    }\r\n    return element;\r\n  }\r\n\r\n  private buildElementHeader(): HTMLElement {\r\n    return $$(\r\n      'div',\r\n      undefined,\r\n      this.structure.header.template({\r\n        headerTitle: this.structure.header.title\r\n      })\r\n    ).el;\r\n  }\r\n\r\n  private buildRowElements(results: ISuggestionForOmniboxResult[], args: IPopulateOmniboxEventArgs): HTMLElement[] {\r\n    let ret = [];\r\n    _.each(results, result => {\r\n      let row = $$(\r\n        'div',\r\n        undefined,\r\n        this.structure.row({\r\n          rawValue: result.value,\r\n          data: DomUtils.highlightElement(result.value, args.completeQueryExpression.word)\r\n        })\r\n      ).el;\r\n      $$(row).on('click', () => {\r\n        this.onSelect.call(this, result.value, args);\r\n      });\r\n      $$(row).on('keyboardSelect', () => {\r\n        this.onSelect.call(this, result.value, args);\r\n      });\r\n      $$(row).on('tabSelect', () => {\r\n        this.onTabPress.call(this, result.value, args);\r\n      });\r\n      ret.push(row);\r\n    });\r\n    return ret;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/Misc/SuggestionForOmnibox.ts"],"sourceRoot":""}