{"version":3,"sources":["Quickview.min__357bcc62ac6cf96ae47b.js","./src/utils/AccessibleModal.ts","./src/events/QuickviewEvents.ts","./src/ui/Quickview/QuickviewDocument.ts","./src/ui/Quickview/Quickview.ts","./src/ui/FocusTrap/FocusTrap.ts","./src/ui/Quickview/DefaultQuickviewTemplate.ts","./src/ui/Quickview/QuickviewDocumentIframe.ts","./src/ui/Quickview/QuickviewDocumentHeader.ts","./src/ui/Quickview/QuickviewDocumentWords.ts","./src/ui/Quickview/QuickviewDocumentWord.ts","./src/ui/Quickview/QuickviewDocumentWordColor.ts","./src/ui/Quickview/QuickviewDocumentWordButton.ts","./src/ui/Quickview/QuickviewDocumentPreviewBar.ts"],"names":["webpackJsonpCoveo__temporary","221","module","exports","__webpack_require__","__assign","this","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","defineProperty","value","className","ownerElement","modalboxModule","options","ModalBox","sizeMod","get","focusTrap","enumerable","configurable","activeModal","modalBox","content","wrapper","element","querySelector","openResult","parameters","isOpen","openModalAndTrap","validation","origin","title","DomUtils","getQuickviewHeader","result","bindings","el","makeAccessible","open","initiallyFocusedElement","document","activeElement","onModalClose","body","overlayClose","FocusTrap","close","setAttribute","headerElement","makeCloseButtonAccessible","closeButton","l","tabIndex","focus","$$","on","KeyboardUtils","keypressAction","KEYBOARD","ENTER","click","disable","contains","AccessibleModal","226","quickviewLoaded","openQuickview","QuickviewEvents","232","__extends","extendStatics","setPrototypeOf","__proto__","Array","d","b","__","constructor","create","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","e","rejected","done","then","apply","__generator","verb","v","op","f","TypeError","_","y","label","ops","pop","trys","push","g","sent","throw","return","Symbol","iterator","HIGHLIGHT_PREFIX","QuickviewDocument","ID","ComponentOptions","initComponentOptions","resolveResult","Assert","exists","_this","createDom","container","appendChild","header","QuickviewDocumentHeader","iframe","QuickviewDocumentIframe","append","beforeLoad","termsToHighlight","termsWereModified","documentHTML","documentWords","previewBar_1","afterLoad","error_1","_a","ensureDom","Date","getTime","initialTermsToHighlight","triggerOpenQuickViewEvent","wereTermsToHighlightModified","handleTermsToHighlight","query","queryController","getEndpoint","getDocumentHtml","uniqueId","queryObject","requestedOutputSize","maximumDocumentSize","render","QuickviewDocumentWords","QuickviewDocumentPreviewBar","each","words","word","button","QuickviewDocumentWordButton","addWord","triggerQuickviewLoaded","renderError","keys","args","root","trigger","getLastQuery","duration","term","substring","q","Utils","arrayEqual","buildNumberOption","defaultValue","min","Component","Initialization","registerAutoCreateComponent","267","Quickview","contentTemplate","DefaultQuickviewTemplate","test","innerHTML","buildContent","bindClick","resultElement","bind","ResultListEvents","event","stopPropagation","modalbox","searchInterface","modalContainer","icon","buildIcon","caption","buildCaption","buildTooltipIfNotInCardLayout","SVGIcons","icons","quickview","SVGDom","addClassToSVGInContainer","toLocaleString","resultsAreInCardLayout","arrow","buildPopper","queryStateModel","QueryStateModel","attributesEnum","layout","popperReference","placement","tooltipPlacement","modifiers","preventOverflow","boundariesElement","padding","offset","eventsEnabled","update","resultCurrentlyBeingRendered","HTMLElement","prepareOpenQuickviewObject","createModalBox","bindQuickviewEvents","animateAndOpen","logUsageAnalyticsEvent","set","getHashId","queryUid","index","StringUtils","hashCode","usageAnalytics","logClickEvent","analyticsActionCauseList","documentQuickview","author","getFieldValue","documentURL","clickUri","documentTitle","hasHtmlVersion","alwaysShow","clickAction","AccessibleButton","withElement","withSelectAction","withLabel","withOwner","build","style","display","openerObject","anim","loadingAnimation","remove","quickviewDocument","find","computeCssClassName","dispatchNamedMethodCallOrComponentCreation","computedModalBoxContent","addClass","builtContent","showDate","closeQuickview","prepareQuickviewContent","domContent","initOptions","initParameters","containsQuickviewDocumentAndCustomAnimation","instantiateTemplateToDom","getBindings","automaticallyCreateComponentsInside","initResult","undefined","enableLoadingAnimation","prepend","templateInstantiated","e_1","instantiateToElement","logger","warn","doExport","exportGlobally","buildBooleanOption","buildStringOption","TemplateComponentOptions","buildTemplateOption","selectorAttr","idAttr","buildOption","ComponentOptionsType","NONE","loadingAnimationSelector","getAttribute","documentElement","detach","id","loadingAnimationTemplate","loadResultTemplateFromId","checkCondition","getBasicLoadingAnimation","buildCustomOption","471","focusableSelector","hiddenElements","enable","chain","Dom","nodeListToArray","querySelectorAll","filter","isVisible","sortBy","removeEventListener","focusInEvent","focusOutEvent","showHiddenElements","enabled","addEventListener","onFocusIn","onFocusOut","hideAllExcept","removeAttribute","hideElement","hideSiblings","allowedElement","parent","parentElement","without","children","forEach","elementToHide","getFocusableSibling","previous","elements","focusableElements","currentIndex","indexOf","focusSibling","sibling","focusFirstElement","elementIsBefore","oldElement","newElement","compareDocumentPosition","Node","DOCUMENT_POSITION_PRECEDING","onLosingFocus","Defer","defer","focusIsAllowed","elementIsInPage","relatedTarget","target","641","642","instantiateToString","queryResult","Template","643","buildIFrame","iframeElement","contentWindow","isNewQuickviewDocument","meta","head","htmlDocument","quickviewIsClosedByEndUser","onload","addClientSideTweaksToIFrameStyling","writeToIFrame","error","errorMessage","status","errorDocument","implementation","createHTMLDocument","fontFamily","text","contentDocument","sandbox","src","iframewrapper","allowDocumentLinkToEscapeSandbox","write","getElementsByTagName","outerHTML","findAll","link","type","cssText","DeviceUtils","isIos","margin","createTextNode","644","buildHeader","wordButton","645","scanDocument","quickviewWord","QuickviewDocumentWord","doCompleteInitialScanForKeywordInDocument","alreadyScannedKeyword","indexIdentifier","addElement","occurrence","646","count","currentNavigationPosition","Logger","navigateForward","highlightNavigation","putElementIntoView","navigateBackward","navigateTo","position","parsed","parseKeywordIdentifier","keywordIdentifier","keywordOccurrencesInDocument","indexTermPart","keywordTermPart","getText","color","QuickviewDocumentWordColor","backgroundColor","isTaggedWord","nodeName","toLowerCase","currentElement","otherElements","htmlColor","invert","scrollIntoView","innerTextOfHTMLElement","getHighlightedInnerText","resolveOriginalTerm","highlight","originalTerm","originalTermMatch","equalsCaseInsensitive","expansionMatch","expansion","first","parts","substr","match","parseInt","647","rgbExtracted","r","saturate","hsv","ColorUtils","rgbToHsv","rgb","hsvToRgb","648","previewBar","wordHtml","buildName","renderArrow","borderColor","name","navigate","backward","pdf","closest","direction","arrowIcon","649","wordIndicators","Map","renderPreviewBar","currentWord","indicators","border","defaultStyleColor","width","top","right","height","indicator","renderWordPositionIndicator","has","handleOverlappingIndicators","docHeight","Doc","elementPosition","getBoundingClientRect","previewUnit","allIndicators","otherIndicatorAtSamePositionInDocument","otherIndicator"],"mappings":"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","file":"Quickview.min__357bcc62ac6cf96ae47b.js","sourcesContent":["webpackJsonpCoveo__temporary([19],{\n\n/***/ 221:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ExternalModulesShim_1 = __webpack_require__(26);\nvar FocusTrap_1 = __webpack_require__(471);\nvar Strings_1 = __webpack_require__(6);\nvar Dom_1 = __webpack_require__(1);\nvar KeyboardUtils_1 = __webpack_require__(25);\nvar Core_1 = __webpack_require__(20);\nvar AccessibleModal = /** @class */ (function () {\n    function AccessibleModal(className, ownerElement, modalboxModule, options) {\n        if (modalboxModule === void 0) { modalboxModule = ExternalModulesShim_1.ModalBox; }\n        if (options === void 0) { options = {}; }\n        this.className = className;\n        this.ownerElement = ownerElement;\n        this.modalboxModule = modalboxModule;\n        this.options = __assign({\n            sizeMod: 'big'\n        }, options);\n    }\n    Object.defineProperty(AccessibleModal.prototype, \"isOpen\", {\n        get: function () {\n            return !!this.focusTrap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AccessibleModal.prototype, \"element\", {\n        get: function () {\n            return this.activeModal && this.activeModal.modalBox;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AccessibleModal.prototype, \"content\", {\n        get: function () {\n            return this.activeModal && this.activeModal.content;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AccessibleModal.prototype, \"wrapper\", {\n        get: function () {\n            return this.activeModal && this.activeModal.wrapper;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AccessibleModal.prototype, \"headerElement\", {\n        get: function () {\n            return this.element && this.element.querySelector('.coveo-modal-header h1');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AccessibleModal.prototype.openResult = function (parameters) {\n        if (this.isOpen) {\n            return;\n        }\n        this.openModalAndTrap({\n            content: parameters.content,\n            validation: parameters.validation,\n            origin: parameters.origin,\n            title: Core_1.DomUtils.getQuickviewHeader(parameters.result, parameters.options, parameters.bindings).el\n        });\n        this.makeAccessible(parameters.options.title || parameters.result.title);\n    };\n    AccessibleModal.prototype.open = function (parameters) {\n        if (this.isOpen) {\n            return;\n        }\n        this.openModalAndTrap(parameters);\n        this.makeAccessible();\n    };\n    AccessibleModal.prototype.openModalAndTrap = function (parameters) {\n        var _this = this;\n        this.initiallyFocusedElement = parameters.origin || document.activeElement;\n        this.activeModal = this.modalboxModule.open(parameters.content, {\n            title: parameters.title,\n            className: this.className,\n            validation: function () {\n                _this.onModalClose();\n                return parameters.validation();\n            },\n            body: this.ownerElement,\n            sizeMod: this.options.sizeMod,\n            overlayClose: this.options.overlayClose\n        });\n        this.focusTrap = new FocusTrap_1.FocusTrap(this.element);\n    };\n    AccessibleModal.prototype.close = function () {\n        if (!this.isOpen) {\n            return;\n        }\n        this.activeModal.close();\n        this.activeModal = null;\n    };\n    AccessibleModal.prototype.makeAccessible = function (title) {\n        this.element.setAttribute('aria-modal', 'true');\n        if (title) {\n            this.headerElement.setAttribute('aria-label', title);\n        }\n        this.makeCloseButtonAccessible();\n    };\n    AccessibleModal.prototype.makeCloseButtonAccessible = function () {\n        var closeButton = this.element.querySelector('.coveo-small-close');\n        closeButton.setAttribute('aria-label', Strings_1.l('Close'));\n        closeButton.setAttribute('role', 'button');\n        closeButton.tabIndex = 0;\n        closeButton.focus();\n        Dom_1.$$(closeButton).on('keyup', KeyboardUtils_1.KeyboardUtils.keypressAction(KeyboardUtils_1.KEYBOARD.ENTER, function () { return closeButton.click(); }));\n    };\n    AccessibleModal.prototype.onModalClose = function () {\n        this.focusTrap.disable();\n        this.focusTrap = null;\n        if (this.initiallyFocusedElement && document.body.contains(this.initiallyFocusedElement)) {\n            this.initiallyFocusedElement.focus();\n        }\n    };\n    return AccessibleModal;\n}());\nexports.AccessibleModal = AccessibleModal;\n\n\n/***/ }),\n\n/***/ 226:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * The `QuickviewEvents` static class contains the string definitions of all events that strongly relate to the\n * [`Quickview`]{@link Quickview} component.\n */\nvar QuickviewEvents = /** @class */ (function () {\n    function QuickviewEvents() {\n    }\n    /**\n     * Triggered by the [`QuickviewDocument`]{@link QuickviewDocument} component when the content to display in the\n     * quickview modal window has just finished downloading.\n     *\n     * The [`Quickview`]{@link Quickview} component listens to this event to know when to remove its loading animation.\n     *\n     * All `quickviewLoaded` event handlers receive a [`QuickviewLoadedEventArgs`]{@link IQuickviewLoadedEventArgs} object\n     * as an argument.\n     *\n     * @type {string} The string value is `quickviewLoaded`.\n     */\n    QuickviewEvents.quickviewLoaded = 'quickviewLoaded';\n    /**\n     * Triggered by the [`QuickviewDocument`]{@link QuickviewDocument} component when the end user has just clicked the\n     * **Quickview** button/link to open the quickview modal window.\n     *\n     * This event allows external code to modify the terms to highlight before the content of the quickview modal window\n     * is rendered.\n     *\n     * All `openQuickview` event handlers receive an\n     * [`OpenQuickviewEventArgs`]{@link ResultListEvents.IOpenQuickviewEventArgs} object as an argument.\n     *\n     * @type {string} The string value is `openQuickview`.\n     */\n    QuickviewEvents.openQuickview = 'openQuickview';\n    return QuickviewEvents;\n}());\nexports.QuickviewEvents = QuickviewEvents;\n\n\n/***/ }),\n\n/***/ 232:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar QuickviewEvents_1 = __webpack_require__(226);\nvar Assert_1 = __webpack_require__(5);\nvar Dom_1 = __webpack_require__(1);\nvar Utils_1 = __webpack_require__(4);\nvar Component_1 = __webpack_require__(7);\nvar ComponentOptions_1 = __webpack_require__(8);\nvar Initialization_1 = __webpack_require__(2);\nvar QuickviewDocumentIframe_1 = __webpack_require__(643);\nvar QuickviewDocumentHeader_1 = __webpack_require__(644);\nvar QuickviewDocumentWords_1 = __webpack_require__(645);\nvar underscore_1 = __webpack_require__(0);\nvar QuickviewDocumentWordButton_1 = __webpack_require__(648);\nvar QuickviewDocumentPreviewBar_1 = __webpack_require__(649);\nexports.HIGHLIGHT_PREFIX = 'CoveoHighlight';\n/**\n * The `QuickviewDocument` component normally exists within a [`Quickview`]{@link Quickview} component. The sole purpose\n * of this component is to add an `<iframe>` which loads the correct HTML version of the current item.\n *\n * The default [`contentTemplate`]{@link Quickview.options.contentTemplate} of the\n * `Quickview` component includes the `QuickviewDocument` component.\n *\n * This component is a result template component (see [Result Templates](https://docs.coveo.com/en/413/)).\n */\nvar QuickviewDocument = /** @class */ (function (_super) {\n    __extends(QuickviewDocument, _super);\n    /**\n     * Creates a new `QuickviewDocument` component.\n     * @param element The HTMLElement on which to instantiate the component.\n     * @param options The options for the `QuickviewDocument` component.\n     * @param bindings The bindings that the component requires to function normally. If not set, these will be\n     * automatically resolved (with a slower execution time).\n     * @param result The current result.\n     */\n    function QuickviewDocument(element, options, bindings, result) {\n        var _this = _super.call(this, element, QuickviewDocument.ID, bindings) || this;\n        _this.element = element;\n        _this.options = options;\n        _this.result = result;\n        _this.options = ComponentOptions_1.ComponentOptions.initComponentOptions(element, QuickviewDocument, options);\n        _this.result = result || _this.resolveResult();\n        Assert_1.Assert.exists(_this.result);\n        return _this;\n    }\n    QuickviewDocument.prototype.createDom = function () {\n        var container = Dom_1.$$('div', {\n            className: 'coveo-quickview-document'\n        });\n        this.element.appendChild(container.el);\n        this.header = new QuickviewDocumentHeader_1.QuickviewDocumentHeader();\n        this.iframe = new QuickviewDocumentIframe_1.QuickviewDocumentIframe();\n        container.append(this.header.el);\n        container.append(this.iframe.el);\n    };\n    QuickviewDocument.prototype.open = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var beforeLoad, termsToHighlight, termsWereModified, documentHTML, documentWords, previewBar_1, afterLoad, error_1, afterLoad;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.ensureDom();\n                        beforeLoad = new Date().getTime();\n                        termsToHighlight = this.initialTermsToHighlight;\n                        this.triggerOpenQuickViewEvent({ termsToHighlight: termsToHighlight });\n                        termsWereModified = this.wereTermsToHighlightModified(termsToHighlight);\n                        if (termsWereModified) {\n                            this.handleTermsToHighlight(termsToHighlight, this.query);\n                        }\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 4, , 6]);\n                        return [4 /*yield*/, this.queryController.getEndpoint().getDocumentHtml(this.result.uniqueId, {\n                                queryObject: this.query,\n                                requestedOutputSize: this.options.maximumDocumentSize\n                            })];\n                    case 2:\n                        documentHTML = _a.sent();\n                        return [4 /*yield*/, this.iframe.render(documentHTML, this.result.title)];\n                    case 3:\n                        _a.sent();\n                        documentWords = new QuickviewDocumentWords_1.QuickviewDocumentWords(this.iframe, this.result);\n                        previewBar_1 = new QuickviewDocumentPreviewBar_1.QuickviewDocumentPreviewBar(this.iframe, documentWords);\n                        underscore_1.each(documentWords.words, function (word) {\n                            var button = new QuickviewDocumentWordButton_1.QuickviewDocumentWordButton(word, previewBar_1, _this.iframe);\n                            _this.header.addWord(button);\n                        });\n                        afterLoad = new Date().getTime();\n                        this.triggerQuickviewLoaded(afterLoad - beforeLoad);\n                        return [3 /*break*/, 6];\n                    case 4:\n                        error_1 = _a.sent();\n                        return [4 /*yield*/, this.iframe.renderError(error_1)];\n                    case 5:\n                        _a.sent();\n                        afterLoad = new Date().getTime();\n                        this.triggerQuickviewLoaded(afterLoad - beforeLoad);\n                        return [3 /*break*/, 6];\n                    case 6: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Object.defineProperty(QuickviewDocument.prototype, \"initialTermsToHighlight\", {\n        get: function () {\n            return underscore_1.keys(this.result.termsToHighlight);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    QuickviewDocument.prototype.triggerOpenQuickViewEvent = function (args) {\n        Dom_1.$$(this.root).trigger(QuickviewEvents_1.QuickviewEvents.openQuickview, args);\n    };\n    Object.defineProperty(QuickviewDocument.prototype, \"query\", {\n        get: function () {\n            return __assign({}, this.queryController.getLastQuery());\n        },\n        enumerable: true,\n        configurable: true\n    });\n    QuickviewDocument.prototype.triggerQuickviewLoaded = function (duration) {\n        Dom_1.$$(this.element).trigger(QuickviewEvents_1.QuickviewEvents.quickviewLoaded, {\n            duration: duration\n        });\n    };\n    QuickviewDocument.prototype.handleTermsToHighlight = function (termsToHighlight, queryObject) {\n        var _this = this;\n        for (var term in this.result.termsToHighlight) {\n            delete this.result.termsToHighlight[term];\n        }\n        var query = '';\n        underscore_1.each(termsToHighlight, function (term) {\n            query += term + ' ';\n            _this.result.termsToHighlight[term] = [term];\n        });\n        query = query.substring(0, query.length - 1);\n        queryObject.q = query;\n    };\n    QuickviewDocument.prototype.wereTermsToHighlightModified = function (termsToHighlight) {\n        return !Utils_1.Utils.arrayEqual(termsToHighlight, this.initialTermsToHighlight);\n    };\n    QuickviewDocument.ID = 'QuickviewDocument';\n    /**\n     * The options for the component\n     * @componentOptions\n     */\n    QuickviewDocument.options = {\n        /**\n         * Specifies the maximum preview size that the index should return.\n         *\n         * Default value is `0`, and the index returns the entire preview. Minimum value is `0`.\n         */\n        maximumDocumentSize: ComponentOptions_1.ComponentOptions.buildNumberOption({ defaultValue: 0, min: 0 })\n    };\n    return QuickviewDocument;\n}(Component_1.Component));\nexports.QuickviewDocument = QuickviewDocument;\nInitialization_1.Initialization.registerAutoCreateComponent(QuickviewDocument);\n\n\n/***/ }),\n\n/***/ 267:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar popper_js_1 = __webpack_require__(94);\n__webpack_require__(641);\nvar QuickviewEvents_1 = __webpack_require__(226);\nvar ResultListEvents_1 = __webpack_require__(29);\nvar ExternalModulesShim_1 = __webpack_require__(26);\nvar GlobalExports_1 = __webpack_require__(3);\nvar QueryStateModel_1 = __webpack_require__(13);\nvar Strings_1 = __webpack_require__(6);\nvar AccessibleButton_1 = __webpack_require__(17);\nvar Dom_1 = __webpack_require__(1);\nvar DomUtils_1 = __webpack_require__(93);\nvar StringUtils_1 = __webpack_require__(22);\nvar SVGDom_1 = __webpack_require__(15);\nvar SVGIcons_1 = __webpack_require__(12);\nvar Utils_1 = __webpack_require__(4);\nvar AnalyticsActionListMeta_1 = __webpack_require__(10);\nvar Component_1 = __webpack_require__(7);\nvar ComponentOptions_1 = __webpack_require__(8);\nvar IComponentOptions_1 = __webpack_require__(49);\nvar Initialization_1 = __webpack_require__(2);\nvar TemplateComponentOptions_1 = __webpack_require__(61);\nvar DefaultQuickviewTemplate_1 = __webpack_require__(642);\nvar QuickviewDocument_1 = __webpack_require__(232);\nvar AccessibleModal_1 = __webpack_require__(221);\n/**\n * The `Quickview` component renders a button/link which the end user can click to open a modal box containing certain\n * information about a result. Most of the time, this component references a\n * [`QuickviewDocument`]{@link QuickviewDocument} in its [`contentTemplate`]{@link Quickview.options.contentTemplate}.\n *\n * **Notes:**\n * > - `Quickview` is not meant to replace a [ResultLink]{@link ResultLink} to access an item; it has certain limitations (e.g., custom styles and embedded\n * images/links may not work as expected in a `Quickview`).\n * > - You can change the appearance of the `Quickview` link/button by adding elements in the inner HTML of its `div`.\n * > - You can change the content of the `Quickview` modal box link by specifying a template `id` or CSS selector (see\n * > the [`contentTemplate`]{@link Quickview.options.contentTemplate} option).\n * > - When using Coveo for Salesforce 3.16, in an environment compliant with LockerService, ensure you use `CoveoSalesforceQuickview` (see [Changing the Default Quick View in Coveo for Salesforce](https://docs.coveo.com/en/1234/)).\n *\n * **Example:**\n * ```html\n * [ ... ]\n *\n * <script class='result-template' type='text/underscore' id='myContentTemplateId'>\n *   <div>\n *     <span>This content will be displayed when then end user opens the quickview modal box. It could also include other Coveo component, and use core helpers.</span>\n *     <table class=\"CoveoFieldTable\">\n *       <tr data-field=\"@liboardshorttitle\" data-caption=\"Board\" />\n *       <tr data-field=\"@licategoryshorttitle\" data-caption=\"Category\" />\n *       <tr data-field=\"@sysauthor\" data-caption=\"Author\" />\n *     </table>\n *   </div>\n * </script>\n *\n * [ ... ]\n *\n * <div class='CoveoResultList'>\n *   <script class='result-template' type='text/underscore' id='myResultTemplateId'>\n *\n *   [ ... ]\n *\n *     <!-- The `myContentTemplateId` template applies when displaying content in the quickview modal box. -->\n *       <div class='CoveoQuickview' data-template-id='myContentTemplateId'>\n *         <!-- This changes the appearance of the Quickview button itself in the results -->\n *         <span>Click here for a quickview</span>\n *       </div>\n *   </script>\n *\n *   [ ... ]\n *\n * <!-- Note that simply including `<div class='CoveoQuickview'></div>` in the markup will be enough most of the time, since the component includes a default template and a default button appearance. -->\n * ```\n *\n * This component is a result template component (see [Result Templates](https://docs.coveo.com/en/413/)).\n */\nvar Quickview = /** @class */ (function (_super) {\n    __extends(Quickview, _super);\n    /**\n     * Creates a new `Quickview` component.\n     * @param element The HTMLElement on which to instantiate the component.\n     * @param options The options for the `Quickview` component.\n     * @param bindings The bindings that the component requires to function normally. If not set, these will be\n     * automatically resolved (with a slower execution time).\n     * @param result The result to associate the component with.\n     * @param ModalBox The quickview modal box.\n     */\n    function Quickview(element, options, bindings, result, ModalBox) {\n        if (ModalBox === void 0) { ModalBox = ExternalModulesShim_1.ModalBox; }\n        var _this = _super.call(this, element, Quickview.ID, bindings) || this;\n        _this.element = element;\n        _this.options = options;\n        _this.bindings = bindings;\n        _this.result = result;\n        _this.options = ComponentOptions_1.ComponentOptions.initComponentOptions(element, Quickview, options);\n        if (_this.options.contentTemplate == null) {\n            _this.options.contentTemplate = new DefaultQuickviewTemplate_1.DefaultQuickviewTemplate();\n        }\n        // If there is no content inside the Quickview div,\n        // we need to add something that will show up in the result template itself\n        if (/^\\s*$/.test(_this.element.innerHTML)) {\n            _this.buildContent();\n        }\n        _this.bindClick(result);\n        if (_this.bindings.resultElement) {\n            _this.bind.on(_this.bindings.resultElement, ResultListEvents_1.ResultListEvents.openQuickview, function (event) {\n                event && event.stopPropagation();\n                _this.open();\n            });\n        }\n        _this.modalbox = new AccessibleModal_1.AccessibleModal('coveo-quick-view', _this.searchInterface.options.modalContainer, ModalBox);\n        return _this;\n    }\n    Quickview.prototype.buildContent = function () {\n        var icon = this.buildIcon();\n        var caption = this.buildCaption();\n        var content = Dom_1.$$('div');\n        content.append(icon);\n        content.append(caption);\n        Dom_1.$$(this.element).append(content.el);\n        this.buildTooltipIfNotInCardLayout(icon, caption);\n    };\n    Quickview.prototype.buildIcon = function () {\n        var icon = Dom_1.$$('div', { className: 'coveo-icon-for-quickview' }, SVGIcons_1.SVGIcons.icons.quickview).el;\n        SVGDom_1.SVGDom.addClassToSVGInContainer(icon, 'coveo-icon-for-quickview-svg');\n        return icon;\n    };\n    Quickview.prototype.buildCaption = function () {\n        return Dom_1.$$('div', { className: 'coveo-caption-for-icon' }, 'Quickview'.toLocaleString()).el;\n    };\n    Quickview.prototype.buildTooltipIfNotInCardLayout = function (icon, caption) {\n        if (this.resultsAreInCardLayout) {\n            return;\n        }\n        var arrow = Dom_1.$$('div').el;\n        caption.appendChild(arrow);\n        this.buildPopper(icon, caption, arrow);\n    };\n    Object.defineProperty(Quickview.prototype, \"resultsAreInCardLayout\", {\n        get: function () {\n            return this.queryStateModel.get(QueryStateModel_1.QueryStateModel.attributesEnum.layout) === 'card';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Quickview.prototype.buildPopper = function (icon, caption, arrow) {\n        var popperReference = new popper_js_1.default(icon, caption, {\n            placement: this.options.tooltipPlacement,\n            modifiers: {\n                preventOverflow: {\n                    boundariesElement: Dom_1.$$(this.root).el,\n                    padding: 0\n                },\n                arrow: {\n                    element: arrow\n                },\n                // X,Y offset of the tooltip relative to the icon\n                offset: {\n                    offset: '0,8'\n                }\n            },\n            eventsEnabled: false\n        });\n        Dom_1.$$(this.element).on('mouseover', function () {\n            popperReference.update();\n        });\n    };\n    /**\n     * Opens the `Quickview` modal box.\n     */\n    Quickview.prototype.open = function () {\n        var _this = this;\n        if (!this.modalbox.isOpen) {\n            // To prevent the keyboard from opening on mobile if the search bar has focus\n            Quickview.resultCurrentlyBeingRendered = this.result;\n            // activeElement does not exist in LockerService\n            if (document.activeElement && document.activeElement instanceof HTMLElement) {\n                Dom_1.$$(document.activeElement).trigger('blur');\n            }\n            var openerObject_1 = this.prepareOpenQuickviewObject();\n            return this.createModalBox(openerObject_1).then(function () {\n                _this.bindQuickviewEvents(openerObject_1);\n                _this.animateAndOpen();\n                _this.logUsageAnalyticsEvent();\n                _this.queryStateModel.set(QueryStateModel_1.QueryStateModel.attributesEnum.quickview, _this.getHashId());\n                Quickview.resultCurrentlyBeingRendered = null;\n            });\n        }\n    };\n    /**\n     * Closes the `Quickview` modal box.\n     */\n    Quickview.prototype.close = function () {\n        if (this.modalbox.isOpen) {\n            this.modalbox.close();\n        }\n    };\n    Quickview.prototype.getHashId = function () {\n        return this.result.queryUid + '.' + this.result.index + '.' + StringUtils_1.StringUtils.hashCode(this.result.uniqueId);\n    };\n    Quickview.prototype.logUsageAnalyticsEvent = function () {\n        this.usageAnalytics.logClickEvent(AnalyticsActionListMeta_1.analyticsActionCauseList.documentQuickview, {\n            author: Utils_1.Utils.getFieldValue(this.result, 'author'),\n            documentURL: this.result.clickUri,\n            documentTitle: this.result.title\n        }, this.result, this.element);\n    };\n    Quickview.prototype.bindClick = function (result) {\n        var _this = this;\n        if (typeof result.hasHtmlVersion == 'undefined' || result.hasHtmlVersion || this.options.alwaysShow) {\n            var clickAction = function () { return _this.open(); };\n            new AccessibleButton_1.AccessibleButton().withElement(this.element).withSelectAction(clickAction).withLabel(Strings_1.l('Quickview')).withOwner(this.bind).build();\n        }\n        else {\n            this.element.style.display = 'none';\n        }\n    };\n    Quickview.prototype.bindQuickviewEvents = function (openerObject) {\n        var _this = this;\n        Dom_1.$$(this.modalbox.content).on(QuickviewEvents_1.QuickviewEvents.quickviewLoaded, function () { return __awaiter(_this, void 0, void 0, function () {\n            var anim;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, openerObject.loadingAnimation];\n                    case 1:\n                        anim = _a.sent();\n                        Dom_1.$$(anim).remove();\n                        return [2 /*return*/];\n                }\n            });\n        }); });\n    };\n    Quickview.prototype.animateAndOpen = function () {\n        var quickviewDocument = Dom_1.$$(this.modalbox.element).find('.' + Component_1.Component.computeCssClassName(QuickviewDocument_1.QuickviewDocument));\n        if (quickviewDocument) {\n            Initialization_1.Initialization.dispatchNamedMethodCallOrComponentCreation('open', quickviewDocument, null);\n        }\n    };\n    Quickview.prototype.createModalBox = function (openerObject) {\n        var _this = this;\n        var computedModalBoxContent = Dom_1.$$('div');\n        computedModalBoxContent.addClass('coveo-computed-modal-box-content');\n        return openerObject.content.then(function (builtContent) {\n            computedModalBoxContent.append(builtContent.el);\n            _this.modalbox.openResult({\n                result: _this.result,\n                options: {\n                    showDate: _this.options.showDate,\n                    title: _this.options.title\n                },\n                bindings: _this.bindings,\n                content: computedModalBoxContent.el,\n                validation: function () {\n                    _this.closeQuickview();\n                    return true;\n                },\n                origin: _this.element\n            });\n            return computedModalBoxContent;\n        });\n    };\n    Quickview.prototype.prepareOpenQuickviewObject = function () {\n        var loadingAnimation = this.options.loadingAnimation;\n        return {\n            loadingAnimation: loadingAnimation,\n            content: this.prepareQuickviewContent(loadingAnimation)\n        };\n    };\n    Quickview.prototype.prepareQuickviewContent = function (loadingAnimation) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var domContent, initOptions, initParameters, containsQuickviewDocumentAndCustomAnimation;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.instantiateTemplateToDom()];\n                    case 1:\n                        domContent = _a.sent();\n                        initOptions = this.searchInterface.options;\n                        initParameters = {\n                            options: initOptions,\n                            bindings: this.getBindings(),\n                            result: this.result\n                        };\n                        return [4 /*yield*/, Initialization_1.Initialization.automaticallyCreateComponentsInside(domContent.el, initParameters).initResult];\n                    case 2:\n                        _a.sent();\n                        containsQuickviewDocumentAndCustomAnimation = function () {\n                            return domContent.find(\".\" + Component_1.Component.computeCssClassName(QuickviewDocument_1.QuickviewDocument)) != undefined && _this.options.enableLoadingAnimation;\n                        };\n                        if (containsQuickviewDocumentAndCustomAnimation()) {\n                            if (loadingAnimation instanceof HTMLElement) {\n                                domContent.prepend(loadingAnimation);\n                            }\n                            else if (loadingAnimation instanceof Promise) {\n                                loadingAnimation.then(function (anim) {\n                                    domContent.prepend(anim);\n                                });\n                            }\n                        }\n                        return [2 /*return*/, domContent];\n                }\n            });\n        });\n    };\n    Quickview.prototype.instantiateTemplateToDom = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var templateInstantiated, e_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, 3, 6]);\n                        return [4 /*yield*/, this.options.contentTemplate.instantiateToElement(this.result)];\n                    case 1:\n                        templateInstantiated = _a.sent();\n                        return [3 /*break*/, 6];\n                    case 2:\n                        e_1 = _a.sent();\n                        this.logger.warn(e_1);\n                        return [3 /*break*/, 6];\n                    case 3:\n                        if (!!templateInstantiated) return [3 /*break*/, 5];\n                        this.logger.warn('An unexpected error happened while trying to render a custom template quickview, fallbacking on default quickview template...', this.options.contentTemplate);\n                        return [4 /*yield*/, new DefaultQuickviewTemplate_1.DefaultQuickviewTemplate().instantiateToElement(this.result)];\n                    case 4:\n                        templateInstantiated = _a.sent();\n                        _a.label = 5;\n                    case 5: return [7 /*endfinally*/];\n                    case 6: return [2 /*return*/, Dom_1.$$(templateInstantiated)];\n                }\n            });\n        });\n    };\n    Quickview.prototype.closeQuickview = function () {\n        this.queryStateModel.set(QueryStateModel_1.QueryStateModel.attributesEnum.quickview, '');\n    };\n    Quickview.ID = 'Quickview';\n    Quickview.doExport = function () {\n        GlobalExports_1.exportGlobally({\n            Quickview: Quickview,\n            QuickviewDocument: QuickviewDocument_1.QuickviewDocument\n        });\n    };\n    /**\n     * @componentOptions\n     */\n    Quickview.options = {\n        /**\n         * Specifies whether to always show the `Quickview` button/link, even when the index body of an item is empty.\n         *\n         * In such cases, the [`contentTemplate`]{@link Quickview.options.contentTemplate} defines what appears in the\n         * `Quickview` modal box. Consequently, if there is no quickview for the item, you *MUST* specify a custom\n         * `contentTemplate`, otherwise the component will throw an error when opened.\n         *\n         * Default value is `false`.\n         *\n         * @availablesince [September 2015 Release (v1.0.59)](https://docs.coveo.com/en/289/#september-2015-release-v1059)\n         */\n        alwaysShow: ComponentOptions_1.ComponentOptions.buildBooleanOption({ defaultValue: false }),\n        /**\n         * Specifies the title that should appear in the `Quickview` modal box header.\n         *\n         * Default value is undefined, which is equivalent to the empty string.\n         */\n        title: ComponentOptions_1.ComponentOptions.buildStringOption(),\n        /**\n         * Specifies whether to display the item date in the `Quickview` modal box header.\n         *\n         * Default value is `true`.\n         */\n        showDate: ComponentOptions_1.ComponentOptions.buildBooleanOption({ defaultValue: true }),\n        /**\n         * Specifies whether to enable the loading animation.\n         *\n         * See also [`loadingAnimation`]{Quickview.options.loadingAnimation}.\n         *\n         * Default value is `true`.\n         */\n        enableLoadingAnimation: ComponentOptions_1.ComponentOptions.buildBooleanOption({ defaultValue: true }),\n        /**\n         * Specifies a custom template to use when displaying content in the `Quickview` modal box.\n         *\n         * **Note:**\n         * > You can use [`CoreHelpers`]{@link ICoreHelpers} methods in your content template.\n         *\n         * You can specify a previously registered template to use either by referring to its HTML `id` attribute or to a\n         * CSS selector (see [`TemplateCache`]{@link TemplateCache}).\n         *\n         * **Example:**\n         *\n         * * Specifying a previously registered template by referring to its HTML `id` attribute:\n         *\n         * ```html\n         * <div class=\"CoveoQuickview\" data-template-id=\"myContentTemplateId\"></div>\n         * ```\n         *\n         * * Specifying a previously registered template by referring to a CSS selector:\n         *\n         * ```html\n         * <div class='CoveoQuickview' data-template-selector=\".myContentTemplateSelector\"></div>\n         * ```\n         *\n         * If you do not specify a custom content template, the component uses its default template.\n         */\n        contentTemplate: TemplateComponentOptions_1.TemplateComponentOptions.buildTemplateOption({\n            selectorAttr: 'data-template-selector',\n            idAttr: 'data-template-id'\n        }),\n        /**\n         * If [`enableLoadingAnimation`]{@link Quickview.options.enableLoadingAnimation} is `true`, specifies a custom\n         * animation to display while the content of the quickview modal window is loading. You can either specify the CSS\n         * selector of the HTML element you wish to display, or the `id` of a previously registered template (see\n         * [`TemplateCache`]{@link TemplateCache}).\n         *\n         * See [Customizing the Quickview Loading Animation](https://docs.coveo.com/en/296/#customizing-the-quickview-loading-animation).\n         *\n         * **Examples:**\n         *\n         * * Specifying the CSS selector of the HTML element to display:\n         *\n         * ```html\n         * <div class=\"CoveoQuickview\" data-loading-animation-selector=\".my-loading-animation\"></div>\n         * ```\n         *\n         * * Specifying the `id` of a previously registered template:\n         *\n         * ```html\n         * <div class=\"CoveoQuickview\" data-loading-animation-template-id=\"my-loading-animation-template\"></div>\n         * ```\n         *\n         * By default, the loading animation is a Coveo animation, which you can customize with CSS (see\n         * [Customizing the Default Loading Animation](https://docs.coveo.com/en/296/#customizing-the-default-search-page-animation).\n         */\n        loadingAnimation: ComponentOptions_1.ComponentOptions.buildOption(IComponentOptions_1.ComponentOptionsType.NONE, function (element) {\n            var loadingAnimationSelector = element.getAttribute('data-loading-animation-selector');\n            if (loadingAnimationSelector != null) {\n                var loadingAnimation = Dom_1.$$(document.documentElement).find(loadingAnimationSelector);\n                if (loadingAnimation != null) {\n                    Dom_1.$$(loadingAnimation).detach();\n                    return loadingAnimation;\n                }\n            }\n            var id = element.getAttribute('data-loading-animation-template-id');\n            if (id != null) {\n                var loadingAnimationTemplate = TemplateComponentOptions_1.TemplateComponentOptions.loadResultTemplateFromId(id);\n                if (loadingAnimationTemplate) {\n                    return loadingAnimationTemplate.instantiateToElement(undefined, {\n                        checkCondition: false\n                    });\n                }\n            }\n            return DomUtils_1.DomUtils.getBasicLoadingAnimation();\n        }),\n        /**\n         * Specifies the emplacement of the tooltip in relation to the `Quickview` HTML element.\n         *\n         * **Example:**\n         * > Setting this option to `top-start` will make the tooltip appear on top of the `Quickview` button, aligned to the left.\n         *\n         * @availablesince [January 2019 Release (v2.5395.12)](https://docs.coveo.com/en/2938/)\n         */\n        tooltipPlacement: ComponentOptions_1.ComponentOptions.buildCustomOption(function (value) { return value; }, {\n            defaultValue: 'bottom'\n        })\n    };\n    Quickview.resultCurrentlyBeingRendered = null;\n    return Quickview;\n}(Component_1.Component));\nexports.Quickview = Quickview;\nInitialization_1.Initialization.registerAutoCreateComponent(Quickview);\n\n\n/***/ }),\n\n/***/ 471:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Defer_1 = __webpack_require__(31);\nvar underscore_1 = __webpack_require__(0);\nvar Dom_1 = __webpack_require__(1);\nvar FocusTrap = /** @class */ (function () {\n    function FocusTrap(container, options) {\n        if (options === void 0) { options = {\n            focusableSelector: '[tabindex], button'\n        }; }\n        this.container = container;\n        this.options = options;\n        this.hiddenElements = [];\n        this.enable();\n    }\n    Object.defineProperty(FocusTrap.prototype, \"focusableElements\", {\n        get: function () {\n            return underscore_1.chain(Dom_1.Dom.nodeListToArray(this.container.querySelectorAll(this.options.focusableSelector)))\n                .filter(function (element) { return Dom_1.$$(element).isVisible(); })\n                .sortBy(function (element) { return element.tabIndex; })\n                .value();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FocusTrap.prototype.disable = function () {\n        document.removeEventListener('focusin', this.focusInEvent);\n        document.removeEventListener('focusout', this.focusOutEvent);\n        this.showHiddenElements();\n        this.enabled = false;\n    };\n    FocusTrap.prototype.enable = function () {\n        var _this = this;\n        document.addEventListener('focusin', (this.focusInEvent = function (e) { return _this.onFocusIn(e); }));\n        document.addEventListener('focusout', (this.focusOutEvent = function (e) { return _this.onFocusOut(e); }));\n        this.hideAllExcept(this.container);\n        this.enabled = true;\n    };\n    FocusTrap.prototype.showHiddenElements = function () {\n        while (this.hiddenElements.length) {\n            this.hiddenElements.pop().removeAttribute('aria-hidden');\n        }\n    };\n    FocusTrap.prototype.hideElement = function (element) {\n        if (element.getAttribute('aria-hidden')) {\n            return;\n        }\n        this.hiddenElements.push(element);\n        element.setAttribute('aria-hidden', \"\" + true);\n    };\n    FocusTrap.prototype.hideSiblings = function (allowedElement) {\n        var _this = this;\n        var parent = allowedElement.parentElement;\n        if (parent) {\n            underscore_1.without(Dom_1.$$(parent).children(), allowedElement).forEach(function (elementToHide) {\n                _this.hideElement(elementToHide);\n            });\n        }\n    };\n    FocusTrap.prototype.hideAllExcept = function (allowedElement) {\n        this.hideSiblings(allowedElement);\n        var parent = allowedElement.parentElement;\n        if (parent && parent !== document.body) {\n            this.hideAllExcept(parent);\n        }\n    };\n    FocusTrap.prototype.getFocusableSibling = function (element, previous) {\n        if (previous === void 0) { previous = false; }\n        var elements = this.focusableElements;\n        var currentIndex = elements.indexOf(element);\n        if (currentIndex === -1) {\n            return null;\n        }\n        return elements[(currentIndex + (previous ? -1 : 1) + elements.length) % elements.length];\n    };\n    FocusTrap.prototype.focusSibling = function (element, previous) {\n        if (previous === void 0) { previous = false; }\n        var sibling = this.getFocusableSibling(element, previous);\n        if (sibling) {\n            sibling.focus();\n        }\n    };\n    FocusTrap.prototype.focusFirstElement = function () {\n        var elements = this.focusableElements;\n        if (elements.length) {\n            elements[0].focus();\n        }\n    };\n    FocusTrap.prototype.elementIsBefore = function (oldElement, newElement) {\n        if (!newElement) {\n            return false;\n        }\n        return oldElement.compareDocumentPosition(newElement) === Node.DOCUMENT_POSITION_PRECEDING;\n    };\n    FocusTrap.prototype.onLosingFocus = function (oldElement, newElement) {\n        var _this = this;\n        Defer_1.Defer.defer(function () {\n            if (!_this.enabled) {\n                return;\n            }\n            _this.enabled = false;\n            if (oldElement && _this.focusIsAllowed(oldElement)) {\n                _this.focusSibling(oldElement, _this.elementIsBefore(oldElement, newElement));\n            }\n            else {\n                _this.focusFirstElement();\n            }\n            _this.enabled = true;\n        });\n    };\n    FocusTrap.prototype.focusIsAllowed = function (element) {\n        return this.container.contains(element);\n    };\n    FocusTrap.prototype.elementIsInPage = function (element) {\n        return element && element !== document.body.parentElement;\n    };\n    FocusTrap.prototype.onFocusIn = function (e) {\n        if (!this.enabled) {\n            return;\n        }\n        var oldElement = e.relatedTarget;\n        var handledByFocusOut = this.elementIsInPage(oldElement);\n        if (handledByFocusOut) {\n            return;\n        }\n        var newElement = e.target;\n        if (!this.elementIsInPage(newElement)) {\n            return;\n        }\n        if (!this.focusIsAllowed(newElement)) {\n            this.onLosingFocus(null, newElement);\n        }\n    };\n    FocusTrap.prototype.onFocusOut = function (e) {\n        if (!this.enabled) {\n            return;\n        }\n        var newElement = e.relatedTarget;\n        if (!this.elementIsInPage(newElement)) {\n            return;\n        }\n        if (!newElement || !this.focusIsAllowed(newElement)) {\n            this.onLosingFocus(e.target, newElement);\n        }\n    };\n    return FocusTrap;\n}());\nexports.FocusTrap = FocusTrap;\n\n\n/***/ }),\n\n/***/ 641:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 642:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Template_1 = __webpack_require__(27);\nvar DefaultQuickviewTemplate = /** @class */ (function (_super) {\n    __extends(DefaultQuickviewTemplate, _super);\n    function DefaultQuickviewTemplate() {\n        return _super.call(this) || this;\n    }\n    DefaultQuickviewTemplate.prototype.instantiateToString = function (queryResult) {\n        return '<div class=\"coveo-quick-view-full-height\"><div class=\"CoveoQuickviewDocument\"></div></div>';\n    };\n    return DefaultQuickviewTemplate;\n}(Template_1.Template));\nexports.DefaultQuickviewTemplate = DefaultQuickviewTemplate;\n\n\n/***/ }),\n\n/***/ 643:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar underscore_1 = __webpack_require__(0);\nvar Core_1 = __webpack_require__(20);\nvar Dom_1 = __webpack_require__(1);\nvar QuickviewDocumentIframe = /** @class */ (function () {\n    function QuickviewDocumentIframe() {\n        this.el = this.buildIFrame().el;\n    }\n    Object.defineProperty(QuickviewDocumentIframe.prototype, \"iframeHTMLElement\", {\n        get: function () {\n            return this.iframeElement;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QuickviewDocumentIframe.prototype, \"document\", {\n        get: function () {\n            return this.iframeElement.contentWindow.document;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QuickviewDocumentIframe.prototype, \"body\", {\n        get: function () {\n            return this.document.body;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QuickviewDocumentIframe.prototype, \"window\", {\n        get: function () {\n            return this.iframeElement.contentWindow;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    QuickviewDocumentIframe.prototype.isNewQuickviewDocument = function () {\n        var meta = Dom_1.$$(this.document.head).find(\"meta[name='generator']\");\n        return meta && meta.getAttribute('content') == 'pdf2htmlEX';\n    };\n    QuickviewDocumentIframe.prototype.render = function (htmlDocument, title) {\n        var _this = this;\n        if (this.quickviewIsClosedByEndUser()) {\n            return Promise.reject(null);\n        }\n        return new Promise(function (resolve, reject) {\n            // Take care to bind the onload function before actually writing to the iframe :\n            // Safari, IE, Edge need this, otherwise the onload function is never called\n            _this.iframeElement.onload = function () {\n                resolve(_this.iframeElement);\n            };\n            _this.addClientSideTweaksToIFrameStyling(htmlDocument);\n            _this.writeToIFrame(htmlDocument);\n            _this.iframeElement.title = title;\n        });\n    };\n    QuickviewDocumentIframe.prototype.renderError = function (error) {\n        var _this = this;\n        if (this.quickviewIsClosedByEndUser()) {\n            return Promise.reject(null);\n        }\n        return new Promise(function (resolve, reject) {\n            var errorMessage = '';\n            switch (error.status) {\n                case 400:\n                    errorMessage = Core_1.l('NoQuickview');\n                    break;\n                default:\n                    errorMessage = Core_1.l('OoopsError');\n                    break;\n            }\n            var errorDocument = document.implementation.createHTMLDocument();\n            errorDocument.body.style.fontFamily = \"Arimo, 'Helvetica Neue', Helvetica, Arial, sans-serif\";\n            Dom_1.$$(errorDocument.body).text(errorMessage);\n            _this.writeToIFrame(errorDocument);\n            resolve(_this.iframeElement);\n        });\n    };\n    QuickviewDocumentIframe.prototype.quickviewIsClosedByEndUser = function () {\n        return this.iframeElement.contentDocument == null;\n    };\n    QuickviewDocumentIframe.prototype.buildIFrame = function () {\n        var iframe = Dom_1.$$('iframe', {\n            sandbox: 'allow-popups allow-same-origin allow-top-navigation',\n            src: 'about:blank'\n        });\n        this.iframeElement = iframe.el;\n        var iframewrapper = Dom_1.$$('div', {\n            className: 'coveo-iframeWrapper'\n        });\n        iframewrapper.append(iframe.el);\n        return iframewrapper;\n    };\n    QuickviewDocumentIframe.prototype.writeToIFrame = function (htmlDocument) {\n        this.allowDocumentLinkToEscapeSandbox(htmlDocument);\n        this.document.open();\n        this.document.write(htmlDocument.getElementsByTagName('html')[0].outerHTML);\n        this.document.close();\n    };\n    QuickviewDocumentIframe.prototype.allowDocumentLinkToEscapeSandbox = function (htmlDocument) {\n        // On the iframe, we set the sandbox attribute to \"allow top navigation\".\n        // For this to work, we need to force all link to target _top.\n        // This is especially useful for quickview on web pages.\n        underscore_1.each(Dom_1.$$(htmlDocument.body).findAll('a'), function (link) {\n            link.setAttribute('target', '_top');\n        });\n    };\n    QuickviewDocumentIframe.prototype.addClientSideTweaksToIFrameStyling = function (htmlDocument) {\n        var style = Dom_1.$$('style', { type: 'text/css' }).el;\n        // Safari on iOS forces resize iframes to fit their content, even if an explicit size\n        // is set on the iframe. Isn't that great? By chance there is a trick around it: by\n        // setting a very small size on the body and instead using min-* to set the size to\n        // 100% we're able to trick Safari from thinking it must expand the iframe. Amazed.\n        // The 'scrolling' part is required otherwise the hack doesn't work.\n        //\n        // https://stackoverflow.com/questions/23083462/how-to-get-an-iframe-to-be-responsive-in-ios-safari\n        var cssHackForIOS = \"\\n      body, html {\\n        height: 1px !important;\\n        min-height: 100%;\\n        width: 1px !important;\\n        min-width: 100%;\\n        overflow: scroll;\\n        margin: auto\\n      }\\n      \";\n        var cssText = \"\\n      html pre {\\n        white-space: pre-wrap;\\n        word-wrap: break-word;\\n      }\\n      body, html {\\n        font-family: Arimo, 'Helvetica Neue', Helvetica, Arial, sans-serif; -webkit-text-size-adjust: none;\\n      }\\n      \" + (Core_1.DeviceUtils.isIos() ? cssHackForIOS : '') + \"\\n      \";\n        if (Core_1.DeviceUtils.isIos()) {\n            Dom_1.$$(this.iframeElement).setAttribute('scrolling', 'no');\n            this.iframeElement.parentElement.style.margin = '0 0 5px 5px';\n        }\n        style.appendChild(document.createTextNode(cssText));\n        htmlDocument.head.appendChild(style);\n    };\n    return QuickviewDocumentIframe;\n}());\nexports.QuickviewDocumentIframe = QuickviewDocumentIframe;\n\n\n/***/ }),\n\n/***/ 644:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Dom_1 = __webpack_require__(1);\nvar QuickviewDocumentHeader = /** @class */ (function () {\n    function QuickviewDocumentHeader() {\n        this.el = this.buildHeader().el;\n    }\n    QuickviewDocumentHeader.prototype.addWord = function (wordButton) {\n        this.el.appendChild(wordButton.el);\n    };\n    QuickviewDocumentHeader.prototype.buildHeader = function () {\n        var header = Dom_1.$$('div', {\n            className: 'coveo-quickview-header'\n        });\n        return header;\n    };\n    return QuickviewDocumentHeader;\n}());\nexports.QuickviewDocumentHeader = QuickviewDocumentHeader;\n\n\n/***/ }),\n\n/***/ 645:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Dom_1 = __webpack_require__(1);\nvar underscore_1 = __webpack_require__(0);\nvar QuickviewDocumentWord_1 = __webpack_require__(646);\nvar QuickviewDocument_1 = __webpack_require__(232);\nvar QuickviewDocumentWords = /** @class */ (function () {\n    function QuickviewDocumentWords(iframe, result) {\n        this.iframe = iframe;\n        this.result = result;\n        this.words = {};\n        this.scanDocument();\n    }\n    QuickviewDocumentWords.prototype.scanDocument = function () {\n        var _this = this;\n        underscore_1.each(Dom_1.$$(this.iframe.body).findAll(\"[id^=\\\"\" + QuickviewDocument_1.HIGHLIGHT_PREFIX + \"\\\"]\"), function (element, index) {\n            var quickviewWord = new QuickviewDocumentWord_1.QuickviewDocumentWord(_this.result);\n            quickviewWord.doCompleteInitialScanForKeywordInDocument(element);\n            if (!quickviewWord.text) {\n                return;\n            }\n            var alreadyScannedKeyword = _this.words[quickviewWord.indexIdentifier];\n            if (!alreadyScannedKeyword) {\n                _this.words[quickviewWord.indexIdentifier] = quickviewWord;\n            }\n            else {\n                alreadyScannedKeyword.addElement(element);\n                // Special code needed to workaround invalid HTML returned by the index with embedded keyword\n                if (alreadyScannedKeyword.occurrence == quickviewWord.occurrence) {\n                    alreadyScannedKeyword.text += quickviewWord.text;\n                }\n            }\n        });\n    };\n    return QuickviewDocumentWords;\n}());\nexports.QuickviewDocumentWords = QuickviewDocumentWords;\n\n\n/***/ }),\n\n/***/ 646:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar underscore_1 = __webpack_require__(0);\nvar Core_1 = __webpack_require__(20);\nvar Logger_1 = __webpack_require__(9);\nvar Dom_1 = __webpack_require__(1);\nvar QuickviewDocument_1 = __webpack_require__(232);\nvar QuickviewDocumentWordColor_1 = __webpack_require__(647);\nvar QuickviewDocumentWord = /** @class */ (function () {\n    function QuickviewDocumentWord(result) {\n        this.result = result;\n        this.count = 0;\n        this.elements = [];\n        this.currentNavigationPosition = -1;\n        this.logger = new Logger_1.Logger(this);\n    }\n    QuickviewDocumentWord.prototype.addElement = function (element) {\n        this.count++;\n        this.elements.push(element);\n    };\n    QuickviewDocumentWord.prototype.navigateForward = function () {\n        this.currentNavigationPosition++;\n        if (this.currentNavigationPosition >= this.elements.length) {\n            this.currentNavigationPosition = 0;\n        }\n        this.highlightNavigation();\n        this.putElementIntoView();\n        return this.elements[this.currentNavigationPosition];\n    };\n    QuickviewDocumentWord.prototype.navigateBackward = function () {\n        this.currentNavigationPosition--;\n        if (this.currentNavigationPosition < 0) {\n            this.currentNavigationPosition = this.elements.length - 1;\n        }\n        this.highlightNavigation();\n        this.putElementIntoView();\n        return this.elements[this.currentNavigationPosition];\n    };\n    QuickviewDocumentWord.prototype.navigateTo = function (position) {\n        this.currentNavigationPosition = position;\n        if (this.currentNavigationPosition < 0 || this.currentNavigationPosition >= this.elements.length) {\n            this.currentNavigationPosition = 0;\n            this.logger.warn(\"Invalid position in quickview navigation: \" + position);\n        }\n        this.highlightNavigation();\n        return this.elements[this.currentNavigationPosition];\n    };\n    QuickviewDocumentWord.prototype.doCompleteInitialScanForKeywordInDocument = function (element) {\n        var parsed = this.parseKeywordIdentifier(element);\n        if (parsed) {\n            this.indexIdentifier = parsed.keywordIdentifier;\n            this.occurrence = parsed.keywordOccurrencesInDocument;\n            this.indexTermPart = parsed.keywordTermPart;\n            this.text = this.getText(element);\n            this.color = new QuickviewDocumentWordColor_1.QuickviewDocumentWordColor(element.style.backgroundColor);\n            this.addElement(element);\n        }\n    };\n    QuickviewDocumentWord.prototype.isTaggedWord = function (element) {\n        return element.nodeName.toLowerCase() == 'coveotaggedword';\n    };\n    QuickviewDocumentWord.prototype.highlightNavigation = function () {\n        var _this = this;\n        var currentElement = this.elements[this.currentNavigationPosition];\n        var otherElements = underscore_1.without(this.elements, currentElement);\n        currentElement.style.color = this.color.htmlColor;\n        currentElement.style.backgroundColor = this.color.invert();\n        otherElements.forEach(function (element) {\n            element.style.color = '';\n            element.style.backgroundColor = _this.color.htmlColor;\n        });\n    };\n    QuickviewDocumentWord.prototype.putElementIntoView = function () {\n        var element = this.elements[this.currentNavigationPosition];\n        element.scrollIntoView();\n    };\n    QuickviewDocumentWord.prototype.getText = function (element) {\n        var innerTextOfHTMLElement = this.getHighlightedInnerText(element);\n        return this.resolveOriginalTerm(innerTextOfHTMLElement);\n    };\n    QuickviewDocumentWord.prototype.resolveOriginalTerm = function (highlight) {\n        var _this = this;\n        if (!this.result || !this.result.termsToHighlight) {\n            return highlight;\n        }\n        var found = underscore_1.find(underscore_1.keys(this.result.termsToHighlight), function (originalTerm) {\n            // The expansions do NOT include the original term (makes sense), so be sure to check\n            // the original term for a match too.\n            var originalTermMatch = Core_1.StringUtils.equalsCaseInsensitive(originalTerm, highlight);\n            var expansionMatch = underscore_1.find(_this.result.termsToHighlight[originalTerm], function (expansion) { return Core_1.StringUtils.equalsCaseInsensitive(expansion, highlight); }) !=\n                undefined;\n            return originalTermMatch || expansionMatch;\n        });\n        return found || highlight;\n    };\n    QuickviewDocumentWord.prototype.getHighlightedInnerText = function (element) {\n        if (!this.isTaggedWord(element)) {\n            return Dom_1.$$(element).text() || '';\n        }\n        var children = Dom_1.$$(element).children();\n        if (children.length >= 1) {\n            return Dom_1.$$(underscore_1.first(children)).text() || '';\n        }\n        return '';\n    };\n    QuickviewDocumentWord.prototype.parseKeywordIdentifier = function (element) {\n        var parts = element.id.substr(QuickviewDocument_1.HIGHLIGHT_PREFIX.length + 1).match(/^([0-9]+)\\.([0-9]+)\\.([0-9]+)$/);\n        if (!parts || parts.length <= 3) {\n            return null;\n        }\n        return {\n            keywordIdentifier: parts[1],\n            keywordOccurrencesInDocument: parseInt(parts[2], 10),\n            keywordTermPart: parseInt(parts[3], 10)\n        };\n    };\n    return QuickviewDocumentWord;\n}());\nexports.QuickviewDocumentWord = QuickviewDocumentWord;\n\n\n/***/ }),\n\n/***/ 647:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ColorUtils_1 = __webpack_require__(140);\nvar QuickviewDocumentWordColor = /** @class */ (function () {\n    function QuickviewDocumentWordColor(htmlColor) {\n        this.htmlColor = htmlColor;\n        var rgbExtracted = htmlColor.match(/\\d+/g);\n        if (rgbExtracted) {\n            this.r = parseInt(rgbExtracted[0], 10);\n            this.g = parseInt(rgbExtracted[1], 10);\n            this.b = parseInt(rgbExtracted[2], 10);\n        }\n    }\n    QuickviewDocumentWordColor.prototype.invert = function () {\n        return \"rgb(\" + (255 - this.r) + \", \" + (255 - this.g) + \", \" + (255 - this.b) + \")\";\n    };\n    QuickviewDocumentWordColor.prototype.saturate = function () {\n        var hsv = ColorUtils_1.ColorUtils.rgbToHsv(this.r, this.g, this.b);\n        hsv[1] *= 2;\n        if (hsv[1] > 1) {\n            hsv[1] = 1;\n        }\n        var rgb = ColorUtils_1.ColorUtils.hsvToRgb(hsv[0], hsv[1], hsv[2]);\n        return \"rgb(\" + rgb[0] + \", \" + rgb[1] + \", \" + rgb[2] + \")\";\n    };\n    return QuickviewDocumentWordColor;\n}());\nexports.QuickviewDocumentWordColor = QuickviewDocumentWordColor;\n\n\n/***/ }),\n\n/***/ 648:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Dom_1 = __webpack_require__(1);\nvar QuickviewDocumentWordButton = /** @class */ (function () {\n    function QuickviewDocumentWordButton(word, previewBar, iframe) {\n        this.word = word;\n        this.previewBar = previewBar;\n        this.iframe = iframe;\n        this.el = this.render();\n    }\n    QuickviewDocumentWordButton.prototype.render = function () {\n        var wordHtml = Dom_1.$$('span', {\n            className: 'coveo-term-for-quickview'\n        });\n        wordHtml.append(this.buildName().el);\n        wordHtml.append(this.renderArrow('up').el);\n        wordHtml.append(this.renderArrow('down').el);\n        wordHtml.el.style.backgroundColor = this.word.color.htmlColor;\n        wordHtml.el.style.borderColor = this.word.color.saturate();\n        return wordHtml.el;\n    };\n    QuickviewDocumentWordButton.prototype.buildName = function () {\n        var _this = this;\n        var name = Dom_1.$$('span', {\n            className: 'coveo-term-for-quickview-name'\n        }, this.word.text + \" (\" + this.word.count + \")\");\n        name.on('click', function () { return _this.navigate(false); });\n        return name;\n    };\n    QuickviewDocumentWordButton.prototype.navigate = function (backward) {\n        var element;\n        if (backward) {\n            element = this.word.navigateBackward();\n            this.previewBar.navigateBackward(this.word);\n        }\n        else {\n            element = this.word.navigateForward();\n            this.previewBar.navigateForward(this.word);\n        }\n        // pdf2html docs hide the non-visible frames by default, to speed up browsers.\n        // But this prevents keyword navigation from working so we must force show it. This\n        // is done by adding the 'opened' class to it (defined by pdf2html).\n        if (this.iframe.isNewQuickviewDocument()) {\n            var pdf = Dom_1.$$(element).closest('.pc');\n            Dom_1.$$(pdf).addClass('opened');\n        }\n        element.scrollIntoView();\n    };\n    QuickviewDocumentWordButton.prototype.renderArrow = function (direction) {\n        var _this = this;\n        var arrow = Dom_1.$$('span', {\n            className: \"coveo-term-for-quickview-\" + direction + \"-arrow\"\n        });\n        var arrowIcon = Dom_1.$$('span', {\n            className: \"coveo-term-for-quickview-\" + direction + \"-arrow-icon\"\n        });\n        arrow.append(arrowIcon.el);\n        arrow.on('click', function () { return _this.navigate(direction == 'up'); });\n        return arrow;\n    };\n    return QuickviewDocumentWordButton;\n}());\nexports.QuickviewDocumentWordButton = QuickviewDocumentWordButton;\n\n\n/***/ }),\n\n/***/ 649:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Dom_1 = __webpack_require__(1);\nvar underscore_1 = __webpack_require__(0);\nvar Logger_1 = __webpack_require__(9);\nvar QuickviewDocumentPreviewBar = /** @class */ (function () {\n    function QuickviewDocumentPreviewBar(iframe, words) {\n        this.iframe = iframe;\n        this.words = words;\n        this.wordIndicators = new Map();\n        this.logger = new Logger_1.Logger(this);\n        this.renderPreviewBar();\n    }\n    QuickviewDocumentPreviewBar.prototype.navigateForward = function (word) {\n        var currentWord = this.wordIndicators.get(word);\n        if (!currentWord) {\n            this.logger.warn(\"Invalid navigation for given word.\", word);\n            return null;\n        }\n        currentWord.position++;\n        if (currentWord.position >= currentWord.indicators.length) {\n            currentWord.position = 0;\n        }\n        this.highlightNavigation(word);\n        return currentWord.indicators[currentWord.position];\n    };\n    QuickviewDocumentPreviewBar.prototype.navigateBackward = function (word) {\n        var currentWord = this.wordIndicators.get(word);\n        if (!currentWord) {\n            this.logger.warn(\"Invalid navigation for the given word.\", word);\n            return null;\n        }\n        currentWord.position--;\n        if (currentWord.position < 0) {\n            currentWord.position = currentWord.indicators.length - 1;\n        }\n        this.highlightNavigation(word);\n        return currentWord.indicators[currentWord.position];\n    };\n    QuickviewDocumentPreviewBar.prototype.navigateTo = function (position, word) {\n        var currentWord = this.wordIndicators.get(word);\n        if (!currentWord) {\n            this.logger.warn(\"Invalid navigation for the given word\", word);\n            return null;\n        }\n        currentWord.position = position;\n        if (currentWord.position < 0 || currentWord.position >= currentWord.indicators.length) {\n            this.logger.warn(\"Invalid navigation for the given position: \" + position);\n            currentWord.position = 0;\n        }\n        this.highlightNavigation(word);\n        return currentWord.indicators[currentWord.position];\n    };\n    QuickviewDocumentPreviewBar.prototype.highlightNavigation = function (word) {\n        var _this = this;\n        var currentWord = this.wordIndicators.get(word);\n        var currentElement = currentWord.indicators[currentWord.position];\n        var otherElements = underscore_1.without(currentWord.indicators, currentElement);\n        currentElement.style.backgroundColor = word.color.invert();\n        currentElement.style.border = \"1px solid \" + word.color.invert();\n        otherElements.forEach(function (element) { return _this.defaultStyleColor(element, word); });\n    };\n    QuickviewDocumentPreviewBar.prototype.renderPreviewBar = function () {\n        var _this = this;\n        var previewBar = Dom_1.$$('div');\n        previewBar.el.style.width = '15px';\n        previewBar.el.style.position = 'fixed';\n        previewBar.el.style.top = '0';\n        previewBar.el.style.right = '0px';\n        previewBar.el.style.height = '100%';\n        this.iframe.body.appendChild(previewBar.el);\n        underscore_1.each(this.words.words, function (word) {\n            underscore_1.each(word.elements, function (element) {\n                var indicator = _this.renderWordPositionIndicator(element, word).el;\n                if (_this.wordIndicators.has(word)) {\n                    _this.wordIndicators.get(word).indicators.push(indicator);\n                }\n                else {\n                    _this.wordIndicators.set(word, {\n                        indicators: [indicator],\n                        position: -1\n                    });\n                }\n                previewBar.append(indicator);\n            });\n            _this.handleOverlappingIndicators(word);\n        });\n    };\n    QuickviewDocumentPreviewBar.prototype.renderWordPositionIndicator = function (element, word) {\n        var docHeight = new Dom_1.Doc(this.iframe.document).height();\n        var elementPosition = element.getBoundingClientRect().top;\n        var previewUnit = Dom_1.$$('div');\n        previewUnit.el.style.position = 'absolute';\n        previewUnit.el.style.top = elementPosition / docHeight * 100 + \"%\";\n        previewUnit.el.style.width = '100%';\n        previewUnit.el.style.height = '1px';\n        this.defaultStyleColor(previewUnit.el, word);\n        return previewUnit;\n    };\n    QuickviewDocumentPreviewBar.prototype.defaultStyleColor = function (element, word) {\n        element.style.border = \"1px solid \" + word.color.saturate();\n        element.style.backgroundColor = word.color.htmlColor;\n    };\n    QuickviewDocumentPreviewBar.prototype.handleOverlappingIndicators = function (word) {\n        var allIndicators = this.wordIndicators.get(word).indicators;\n        var _loop_1 = function (i) {\n            var otherIndicatorAtSamePositionInDocument = underscore_1.chain(allIndicators)\n                .without(allIndicators[i])\n                .find(function (otherIndicator) { return otherIndicator.style.top == allIndicators[i].style.top; })\n                .value();\n            if (otherIndicatorAtSamePositionInDocument) {\n                Dom_1.$$(allIndicators[i]).remove();\n                allIndicators[i] = otherIndicatorAtSamePositionInDocument;\n            }\n        };\n        for (var i = 0; i < allIndicators.length; i++) {\n            _loop_1(i);\n        }\n    };\n    return QuickviewDocumentPreviewBar;\n}());\nexports.QuickviewDocumentPreviewBar = QuickviewDocumentPreviewBar;\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// Quickview.min__357bcc62ac6cf96ae47b.js","import { ModalBox as ModalBoxModule } from '../ExternalModulesShim';\nimport { FocusTrap } from '../ui/FocusTrap/FocusTrap';\nimport { l } from '../strings/Strings';\nimport { $$ } from './Dom';\nimport { KeyboardUtils, KEYBOARD } from './KeyboardUtils';\nimport { IQuickViewHeaderOptions } from './DomUtils';\nimport { IQueryResult } from '../rest/QueryResult';\nimport { IComponentBindings } from '../ui/Base/ComponentBindings';\nimport { DomUtils } from '../Core';\n\nexport interface IAccessibleModalOptions {\n  overlayClose?: boolean;\n  sizeMod: 'small' | 'normal' | 'big';\n}\n\nexport interface IAccessibleModalOpenParameters {\n  content: HTMLElement;\n  validation: () => boolean;\n  origin: HTMLElement;\n}\n\nexport interface IAccessibleModalOpenResultParameters extends IAccessibleModalOpenParameters {\n  result: IQueryResult;\n  options: IQuickViewHeaderOptions;\n  bindings: IComponentBindings;\n}\n\nexport interface IAccessibleModalOpenNormalParameters extends IAccessibleModalOpenParameters {\n  title: HTMLElement;\n}\n\nexport class AccessibleModal {\n  private focusTrap: FocusTrap;\n  private activeModal: Coveo.ModalBox.ModalBox;\n  private options: IAccessibleModalOptions;\n  private initiallyFocusedElement: HTMLElement;\n\n  public get isOpen() {\n    return !!this.focusTrap;\n  }\n\n  public get element() {\n    return this.activeModal && this.activeModal.modalBox;\n  }\n\n  public get content() {\n    return this.activeModal && this.activeModal.content;\n  }\n\n  public get wrapper() {\n    return this.activeModal && this.activeModal.wrapper;\n  }\n\n  private get headerElement() {\n    return this.element && this.element.querySelector<HTMLElement>('.coveo-modal-header h1');\n  }\n\n  constructor(\n    private className: string,\n    private ownerElement: HTMLElement,\n    private modalboxModule: Coveo.ModalBox.ModalBox = ModalBoxModule,\n    options: Partial<IAccessibleModalOptions> = {}\n  ) {\n    this.options = {\n      ...{\n        sizeMod: 'big'\n      },\n      ...options\n    };\n  }\n\n  public openResult(parameters: IAccessibleModalOpenResultParameters) {\n    if (this.isOpen) {\n      return;\n    }\n    this.openModalAndTrap({\n      content: parameters.content,\n      validation: parameters.validation,\n      origin: parameters.origin,\n      title: DomUtils.getQuickviewHeader(parameters.result, parameters.options, parameters.bindings).el\n    });\n    this.makeAccessible(parameters.options.title || parameters.result.title);\n  }\n\n  public open(parameters: IAccessibleModalOpenNormalParameters) {\n    if (this.isOpen) {\n      return;\n    }\n    this.openModalAndTrap(parameters);\n    this.makeAccessible();\n  }\n\n  private openModalAndTrap(parameters: IAccessibleModalOpenNormalParameters) {\n    this.initiallyFocusedElement = parameters.origin || (document.activeElement as HTMLElement);\n    this.activeModal = this.modalboxModule.open(parameters.content, {\n      title: parameters.title,\n      className: this.className,\n      validation: () => {\n        this.onModalClose();\n        return parameters.validation();\n      },\n      body: this.ownerElement,\n      sizeMod: this.options.sizeMod,\n      overlayClose: this.options.overlayClose\n    });\n    this.focusTrap = new FocusTrap(this.element);\n  }\n\n  public close() {\n    if (!this.isOpen) {\n      return;\n    }\n    this.activeModal.close();\n    this.activeModal = null;\n  }\n\n  private makeAccessible(title?: string) {\n    this.element.setAttribute('aria-modal', 'true');\n    if (title) {\n      this.headerElement.setAttribute('aria-label', title);\n    }\n    this.makeCloseButtonAccessible();\n  }\n\n  private makeCloseButtonAccessible() {\n    const closeButton: HTMLElement = this.element.querySelector('.coveo-small-close');\n    closeButton.setAttribute('aria-label', l('Close'));\n    closeButton.setAttribute('role', 'button');\n    closeButton.tabIndex = 0;\n    closeButton.focus();\n    $$(closeButton).on('keyup', KeyboardUtils.keypressAction(KEYBOARD.ENTER, () => closeButton.click()));\n  }\n\n  private onModalClose() {\n    this.focusTrap.disable();\n    this.focusTrap = null;\n    if (this.initiallyFocusedElement && document.body.contains(this.initiallyFocusedElement)) {\n      this.initiallyFocusedElement.focus();\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/AccessibleModal.ts","/**\n * The `IQuickviewLoadedEventArgs` interface describes the object that all\n * [`quickviewLoaded`]{@link QuickviewEvents.quickviewLoaded} event handlers receive as an argument.\n */\nexport interface IQuickviewLoadedEventArgs {\n  /**\n   * The amount of time it took to download the content to display in the quickview modal window (in milliseconds).\n   */\n  duration: number;\n}\n\n/**\n * The `QuickviewEvents` static class contains the string definitions of all events that strongly relate to the\n * [`Quickview`]{@link Quickview} component.\n */\nexport class QuickviewEvents {\n  /**\n   * Triggered by the [`QuickviewDocument`]{@link QuickviewDocument} component when the content to display in the\n   * quickview modal window has just finished downloading.\n   *\n   * The [`Quickview`]{@link Quickview} component listens to this event to know when to remove its loading animation.\n   *\n   * All `quickviewLoaded` event handlers receive a [`QuickviewLoadedEventArgs`]{@link IQuickviewLoadedEventArgs} object\n   * as an argument.\n   *\n   * @type {string} The string value is `quickviewLoaded`.\n   */\n  public static quickviewLoaded = 'quickviewLoaded';\n\n  /**\n   * Triggered by the [`QuickviewDocument`]{@link QuickviewDocument} component when the end user has just clicked the\n   * **Quickview** button/link to open the quickview modal window.\n   *\n   * This event allows external code to modify the terms to highlight before the content of the quickview modal window\n   * is rendered.\n   *\n   * All `openQuickview` event handlers receive an\n   * [`OpenQuickviewEventArgs`]{@link ResultListEvents.IOpenQuickviewEventArgs} object as an argument.\n   *\n   * @type {string} The string value is `openQuickview`.\n   */\n  public static openQuickview = 'openQuickview';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/events/QuickviewEvents.ts","import { IQuickviewLoadedEventArgs, QuickviewEvents } from '../../events/QuickviewEvents';\nimport { IOpenQuickviewEventArgs } from '../../events/ResultListEvents';\nimport { Assert } from '../../misc/Assert';\nimport { IQuery } from '../../rest/Query';\nimport { IQueryResult } from '../../rest/QueryResult';\nimport { IViewAsHtmlOptions } from '../../rest/SearchEndpointInterface';\nimport { $$ } from '../../utils/Dom';\nimport { Utils } from '../../utils/Utils';\nimport { Component } from '../Base/Component';\nimport { IComponentBindings } from '../Base/ComponentBindings';\nimport { ComponentOptions } from '../Base/ComponentOptions';\nimport { Initialization } from '../Base/Initialization';\nimport { QuickviewDocumentIframe } from './QuickviewDocumentIframe';\nimport { QuickviewDocumentHeader } from './QuickviewDocumentHeader';\nimport { QuickviewDocumentWords } from './QuickviewDocumentWords';\nimport { each, keys } from 'underscore';\nimport { QuickviewDocumentWordButton } from './QuickviewDocumentWordButton';\nimport { QuickviewDocumentPreviewBar } from './QuickviewDocumentPreviewBar';\n\nexport const HIGHLIGHT_PREFIX = 'CoveoHighlight';\n\nexport interface IQuickviewDocumentOptions {\n  maximumDocumentSize?: number;\n}\n\n/**\n * The `QuickviewDocument` component normally exists within a [`Quickview`]{@link Quickview} component. The sole purpose\n * of this component is to add an `<iframe>` which loads the correct HTML version of the current item.\n *\n * The default [`contentTemplate`]{@link Quickview.options.contentTemplate} of the\n * `Quickview` component includes the `QuickviewDocument` component.\n *\n * This component is a result template component (see [Result Templates](https://docs.coveo.com/en/413/)).\n */\nexport class QuickviewDocument extends Component {\n  static ID = 'QuickviewDocument';\n\n  /**\n   * The options for the component\n   * @componentOptions\n   */\n  static options: IQuickviewDocumentOptions = {\n    /**\n     * Specifies the maximum preview size that the index should return.\n     *\n     * Default value is `0`, and the index returns the entire preview. Minimum value is `0`.\n     */\n    maximumDocumentSize: ComponentOptions.buildNumberOption({ defaultValue: 0, min: 0 })\n  };\n\n  private iframe: QuickviewDocumentIframe;\n  private header: QuickviewDocumentHeader;\n\n  /**\n   * Creates a new `QuickviewDocument` component.\n   * @param element The HTMLElement on which to instantiate the component.\n   * @param options The options for the `QuickviewDocument` component.\n   * @param bindings The bindings that the component requires to function normally. If not set, these will be\n   * automatically resolved (with a slower execution time).\n   * @param result The current result.\n   */\n  constructor(\n    public element: HTMLElement,\n    public options?: IQuickviewDocumentOptions,\n    bindings?: IComponentBindings,\n    public result?: IQueryResult\n  ) {\n    super(element, QuickviewDocument.ID, bindings);\n\n    this.options = ComponentOptions.initComponentOptions(element, QuickviewDocument, options);\n\n    this.result = result || this.resolveResult();\n    Assert.exists(this.result);\n  }\n\n  public createDom() {\n    const container = $$('div', {\n      className: 'coveo-quickview-document'\n    });\n    this.element.appendChild(container.el);\n\n    this.header = new QuickviewDocumentHeader();\n    this.iframe = new QuickviewDocumentIframe();\n\n    container.append(this.header.el);\n    container.append(this.iframe.el);\n  }\n\n  public async open() {\n    this.ensureDom();\n\n    const beforeLoad = new Date().getTime();\n    const termsToHighlight = this.initialTermsToHighlight;\n\n    this.triggerOpenQuickViewEvent({ termsToHighlight });\n\n    const termsWereModified = this.wereTermsToHighlightModified(termsToHighlight);\n\n    if (termsWereModified) {\n      this.handleTermsToHighlight(termsToHighlight, this.query);\n    }\n\n    try {\n      const documentHTML = await this.queryController.getEndpoint().getDocumentHtml(this.result.uniqueId, {\n        queryObject: this.query,\n        requestedOutputSize: this.options.maximumDocumentSize\n      } as IViewAsHtmlOptions);\n\n      await this.iframe.render(documentHTML, this.result.title);\n\n      const documentWords = new QuickviewDocumentWords(this.iframe, this.result);\n      const previewBar = new QuickviewDocumentPreviewBar(this.iframe, documentWords);\n\n      each(documentWords.words, word => {\n        const button = new QuickviewDocumentWordButton(word, previewBar, this.iframe);\n        this.header.addWord(button);\n      });\n\n      const afterLoad = new Date().getTime();\n\n      this.triggerQuickviewLoaded(afterLoad - beforeLoad);\n    } catch (error) {\n      await this.iframe.renderError(error);\n      const afterLoad = new Date().getTime();\n\n      this.triggerQuickviewLoaded(afterLoad - beforeLoad);\n    }\n  }\n\n  private get initialTermsToHighlight() {\n    return keys(this.result.termsToHighlight);\n  }\n\n  private triggerOpenQuickViewEvent(args: IOpenQuickviewEventArgs) {\n    $$(this.root).trigger(QuickviewEvents.openQuickview, args);\n  }\n\n  private get query() {\n    return { ...this.queryController.getLastQuery() };\n  }\n\n  private triggerQuickviewLoaded(duration: number) {\n    $$(this.element).trigger(QuickviewEvents.quickviewLoaded, {\n      duration\n    } as IQuickviewLoadedEventArgs);\n  }\n\n  private handleTermsToHighlight(termsToHighlight: string[], queryObject: IQuery) {\n    for (const term in this.result.termsToHighlight) {\n      delete this.result.termsToHighlight[term];\n    }\n    let query = '';\n    each(termsToHighlight, term => {\n      query += term + ' ';\n      this.result.termsToHighlight[term] = [term];\n    });\n    query = query.substring(0, query.length - 1);\n    queryObject.q = query;\n  }\n\n  private wereTermsToHighlightModified(termsToHighlight: string[]) {\n    return !Utils.arrayEqual(termsToHighlight, this.initialTermsToHighlight);\n  }\n}\n\nInitialization.registerAutoCreateComponent(QuickviewDocument);\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/Quickview/QuickviewDocument.ts","import PopperJs from 'popper.js';\nimport 'styling/_Quickview';\nimport { QuickviewEvents } from '../../events/QuickviewEvents';\nimport { ResultListEvents } from '../../events/ResultListEvents';\nimport { ModalBox as ModalBoxModule } from '../../ExternalModulesShim';\nimport { exportGlobally } from '../../GlobalExports';\nimport { QueryStateModel } from '../../models/QueryStateModel';\nimport { IQueryResult } from '../../rest/QueryResult';\nimport { l } from '../../strings/Strings';\nimport { AccessibleButton } from '../../utils/AccessibleButton';\nimport { $$, Dom } from '../../utils/Dom';\nimport { DomUtils } from '../../utils/DomUtils';\nimport { StringUtils } from '../../utils/StringUtils';\nimport { SVGDom } from '../../utils/SVGDom';\nimport { SVGIcons } from '../../utils/SVGIcons';\nimport { Utils } from '../../utils/Utils';\nimport { analyticsActionCauseList } from '../Analytics/AnalyticsActionListMeta';\nimport { Component } from '../Base/Component';\nimport { ComponentOptions } from '../Base/ComponentOptions';\nimport { ComponentOptionsType } from '../Base/IComponentOptions';\nimport { IInitializationParameters, Initialization } from '../Base/Initialization';\nimport { IResultsComponentBindings } from '../Base/ResultsComponentBindings';\nimport { TemplateComponentOptions } from '../Base/TemplateComponentOptions';\nimport { Template } from '../Templates/Template';\nimport { DefaultQuickviewTemplate } from './DefaultQuickviewTemplate';\nimport { QuickviewDocument } from './QuickviewDocument';\nimport { AccessibleModal } from '../../utils/AccessibleModal';\n\n/**\n * The allowed [`Quickview`]{@link Quickview} [`tooltipPlacement`]{@link Quickview.options.tooltipPlacement} option values. The `-start` and `-end` variations indicate relative alignement. Horizontally (`top`, `bottom`), `-start` means _left_ and `-end` means _right_. Vertically (`left`, `right`), `-start` means _top_ and `-end` means _bottom_. No variation means _center_.\n */\nexport type ValidTooltipPlacement =\n  | 'auto-start'\n  | 'auto'\n  | 'auto-end'\n  | 'top-start'\n  | 'top'\n  | 'top-end'\n  | 'right-start'\n  | 'right'\n  | 'right-end'\n  | 'bottom-end'\n  | 'bottom'\n  | 'bottom-start'\n  | 'left-end'\n  | 'left'\n  | 'left-start';\n\nexport interface IQuickviewOptions {\n  title?: string;\n  showDate?: boolean;\n  contentTemplate?: Template;\n  enableLoadingAnimation?: boolean;\n  loadingAnimation?: HTMLElement | Promise<HTMLElement>;\n  alwaysShow?: boolean;\n  tooltipPlacement?: ValidTooltipPlacement;\n}\n\ninterface IQuickviewOpenerObject {\n  content: Promise<Dom>;\n  loadingAnimation: HTMLElement | Promise<HTMLElement>;\n}\n\n/**\n * The `Quickview` component renders a button/link which the end user can click to open a modal box containing certain\n * information about a result. Most of the time, this component references a\n * [`QuickviewDocument`]{@link QuickviewDocument} in its [`contentTemplate`]{@link Quickview.options.contentTemplate}.\n *\n * **Notes:**\n * > - `Quickview` is not meant to replace a [ResultLink]{@link ResultLink} to access an item; it has certain limitations (e.g., custom styles and embedded\n * images/links may not work as expected in a `Quickview`).\n * > - You can change the appearance of the `Quickview` link/button by adding elements in the inner HTML of its `div`.\n * > - You can change the content of the `Quickview` modal box link by specifying a template `id` or CSS selector (see\n * > the [`contentTemplate`]{@link Quickview.options.contentTemplate} option).\n * > - When using Coveo for Salesforce 3.16, in an environment compliant with LockerService, ensure you use `CoveoSalesforceQuickview` (see [Changing the Default Quick View in Coveo for Salesforce](https://docs.coveo.com/en/1234/)).\n *\n * **Example:**\n * ```html\n * [ ... ]\n *\n * <script class='result-template' type='text/underscore' id='myContentTemplateId'>\n *   <div>\n *     <span>This content will be displayed when then end user opens the quickview modal box. It could also include other Coveo component, and use core helpers.</span>\n *     <table class=\"CoveoFieldTable\">\n *       <tr data-field=\"@liboardshorttitle\" data-caption=\"Board\" />\n *       <tr data-field=\"@licategoryshorttitle\" data-caption=\"Category\" />\n *       <tr data-field=\"@sysauthor\" data-caption=\"Author\" />\n *     </table>\n *   </div>\n * </script>\n *\n * [ ... ]\n *\n * <div class='CoveoResultList'>\n *   <script class='result-template' type='text/underscore' id='myResultTemplateId'>\n *\n *   [ ... ]\n *\n *     <!-- The `myContentTemplateId` template applies when displaying content in the quickview modal box. -->\n *       <div class='CoveoQuickview' data-template-id='myContentTemplateId'>\n *         <!-- This changes the appearance of the Quickview button itself in the results -->\n *         <span>Click here for a quickview</span>\n *       </div>\n *   </script>\n *\n *   [ ... ]\n *\n * <!-- Note that simply including `<div class='CoveoQuickview'></div>` in the markup will be enough most of the time, since the component includes a default template and a default button appearance. -->\n * ```\n *\n * This component is a result template component (see [Result Templates](https://docs.coveo.com/en/413/)).\n */\nexport class Quickview extends Component {\n  static ID = 'Quickview';\n\n  static doExport = () => {\n    exportGlobally({\n      Quickview: Quickview,\n      QuickviewDocument: QuickviewDocument\n    });\n  };\n\n  /**\n   * @componentOptions\n   */\n  static options: IQuickviewOptions = {\n    /**\n     * Specifies whether to always show the `Quickview` button/link, even when the index body of an item is empty.\n     *\n     * In such cases, the [`contentTemplate`]{@link Quickview.options.contentTemplate} defines what appears in the\n     * `Quickview` modal box. Consequently, if there is no quickview for the item, you *MUST* specify a custom\n     * `contentTemplate`, otherwise the component will throw an error when opened.\n     *\n     * Default value is `false`.\n     *\n     * @availablesince [September 2015 Release (v1.0.59)](https://docs.coveo.com/en/289/#september-2015-release-v1059)\n     */\n    alwaysShow: ComponentOptions.buildBooleanOption({ defaultValue: false }),\n\n    /**\n     * Specifies the title that should appear in the `Quickview` modal box header.\n     *\n     * Default value is undefined, which is equivalent to the empty string.\n     */\n    title: ComponentOptions.buildStringOption(),\n\n    /**\n     * Specifies whether to display the item date in the `Quickview` modal box header.\n     *\n     * Default value is `true`.\n     */\n    showDate: ComponentOptions.buildBooleanOption({ defaultValue: true }),\n\n    /**\n     * Specifies whether to enable the loading animation.\n     *\n     * See also [`loadingAnimation`]{Quickview.options.loadingAnimation}.\n     *\n     * Default value is `true`.\n     */\n    enableLoadingAnimation: ComponentOptions.buildBooleanOption({ defaultValue: true }),\n\n    /**\n     * Specifies a custom template to use when displaying content in the `Quickview` modal box.\n     *\n     * **Note:**\n     * > You can use [`CoreHelpers`]{@link ICoreHelpers} methods in your content template.\n     *\n     * You can specify a previously registered template to use either by referring to its HTML `id` attribute or to a\n     * CSS selector (see [`TemplateCache`]{@link TemplateCache}).\n     *\n     * **Example:**\n     *\n     * * Specifying a previously registered template by referring to its HTML `id` attribute:\n     *\n     * ```html\n     * <div class=\"CoveoQuickview\" data-template-id=\"myContentTemplateId\"></div>\n     * ```\n     *\n     * * Specifying a previously registered template by referring to a CSS selector:\n     *\n     * ```html\n     * <div class='CoveoQuickview' data-template-selector=\".myContentTemplateSelector\"></div>\n     * ```\n     *\n     * If you do not specify a custom content template, the component uses its default template.\n     */\n    contentTemplate: TemplateComponentOptions.buildTemplateOption({\n      selectorAttr: 'data-template-selector',\n      idAttr: 'data-template-id'\n    }),\n\n    /**\n     * If [`enableLoadingAnimation`]{@link Quickview.options.enableLoadingAnimation} is `true`, specifies a custom\n     * animation to display while the content of the quickview modal window is loading. You can either specify the CSS\n     * selector of the HTML element you wish to display, or the `id` of a previously registered template (see\n     * [`TemplateCache`]{@link TemplateCache}).\n     *\n     * See [Customizing the Quickview Loading Animation](https://docs.coveo.com/en/296/#customizing-the-quickview-loading-animation).\n     *\n     * **Examples:**\n     *\n     * * Specifying the CSS selector of the HTML element to display:\n     *\n     * ```html\n     * <div class=\"CoveoQuickview\" data-loading-animation-selector=\".my-loading-animation\"></div>\n     * ```\n     *\n     * * Specifying the `id` of a previously registered template:\n     *\n     * ```html\n     * <div class=\"CoveoQuickview\" data-loading-animation-template-id=\"my-loading-animation-template\"></div>\n     * ```\n     *\n     * By default, the loading animation is a Coveo animation, which you can customize with CSS (see\n     * [Customizing the Default Loading Animation](https://docs.coveo.com/en/296/#customizing-the-default-search-page-animation).\n     */\n    loadingAnimation: ComponentOptions.buildOption<HTMLElement | Promise<HTMLElement>>(\n      ComponentOptionsType.NONE,\n      (element: HTMLElement) => {\n        const loadingAnimationSelector = element.getAttribute('data-loading-animation-selector');\n        if (loadingAnimationSelector != null) {\n          const loadingAnimation = $$(document.documentElement).find(loadingAnimationSelector);\n          if (loadingAnimation != null) {\n            $$(loadingAnimation).detach();\n            return loadingAnimation;\n          }\n        }\n        const id = element.getAttribute('data-loading-animation-template-id');\n        if (id != null) {\n          const loadingAnimationTemplate = TemplateComponentOptions.loadResultTemplateFromId(id);\n          if (loadingAnimationTemplate) {\n            return loadingAnimationTemplate.instantiateToElement(undefined, {\n              checkCondition: false\n            });\n          }\n        }\n        return DomUtils.getBasicLoadingAnimation();\n      }\n    ),\n\n    /**\n     * Specifies the emplacement of the tooltip in relation to the `Quickview` HTML element.\n     *\n     * **Example:**\n     * > Setting this option to `top-start` will make the tooltip appear on top of the `Quickview` button, aligned to the left.\n     *\n     * @availablesince [January 2019 Release (v2.5395.12)](https://docs.coveo.com/en/2938/)\n     */\n    tooltipPlacement: ComponentOptions.buildCustomOption<ValidTooltipPlacement>((value: ValidTooltipPlacement) => value, {\n      defaultValue: 'bottom'\n    })\n  };\n\n  public static resultCurrentlyBeingRendered: IQueryResult = null;\n\n  private modalbox: AccessibleModal;\n\n  /**\n   * Creates a new `Quickview` component.\n   * @param element The HTMLElement on which to instantiate the component.\n   * @param options The options for the `Quickview` component.\n   * @param bindings The bindings that the component requires to function normally. If not set, these will be\n   * automatically resolved (with a slower execution time).\n   * @param result The result to associate the component with.\n   * @param ModalBox The quickview modal box.\n   */\n  constructor(\n    public element: HTMLElement,\n    public options?: IQuickviewOptions,\n    public bindings?: IResultsComponentBindings,\n    public result?: IQueryResult,\n    ModalBox: Coveo.ModalBox.ModalBox = ModalBoxModule\n  ) {\n    super(element, Quickview.ID, bindings);\n    this.options = ComponentOptions.initComponentOptions(element, Quickview, options);\n\n    if (this.options.contentTemplate == null) {\n      this.options.contentTemplate = new DefaultQuickviewTemplate();\n    }\n\n    // If there is no content inside the Quickview div,\n    // we need to add something that will show up in the result template itself\n    if (/^\\s*$/.test(this.element.innerHTML)) {\n      this.buildContent();\n    }\n\n    this.bindClick(result);\n    if (this.bindings.resultElement) {\n      this.bind.on(this.bindings.resultElement, ResultListEvents.openQuickview, (event?: Event) => {\n        event && event.stopPropagation();\n        this.open();\n      });\n    }\n\n    this.modalbox = new AccessibleModal('coveo-quick-view', this.searchInterface.options.modalContainer, ModalBox);\n  }\n\n  private buildContent() {\n    const icon = this.buildIcon();\n    const caption = this.buildCaption();\n    const content = $$('div');\n\n    content.append(icon);\n    content.append(caption);\n    $$(this.element).append(content.el);\n\n    this.buildTooltipIfNotInCardLayout(icon, caption);\n  }\n\n  private buildIcon() {\n    const icon = $$('div', { className: 'coveo-icon-for-quickview' }, SVGIcons.icons.quickview).el;\n    SVGDom.addClassToSVGInContainer(icon, 'coveo-icon-for-quickview-svg');\n    return icon;\n  }\n\n  private buildCaption() {\n    return $$('div', { className: 'coveo-caption-for-icon' }, 'Quickview'.toLocaleString()).el;\n  }\n\n  private buildTooltipIfNotInCardLayout(icon: HTMLElement, caption: HTMLElement) {\n    if (this.resultsAreInCardLayout) {\n      return;\n    }\n\n    const arrow = $$('div').el;\n    caption.appendChild(arrow);\n    this.buildPopper(icon, caption, arrow);\n  }\n\n  private get resultsAreInCardLayout() {\n    return this.queryStateModel.get(QueryStateModel.attributesEnum.layout) === 'card';\n  }\n\n  private buildPopper(icon: HTMLElement, caption: HTMLElement, arrow: HTMLElement) {\n    const popperReference = new PopperJs(icon, caption, {\n      placement: this.options.tooltipPlacement,\n      modifiers: {\n        preventOverflow: {\n          boundariesElement: $$(this.root).el,\n          padding: 0\n        },\n        arrow: {\n          element: arrow\n        },\n        // X,Y offset of the tooltip relative to the icon\n        offset: {\n          offset: '0,8'\n        }\n      },\n      eventsEnabled: false\n    });\n\n    $$(this.element).on('mouseover', () => {\n      popperReference.update();\n    });\n  }\n\n  /**\n   * Opens the `Quickview` modal box.\n   */\n  public open() {\n    if (!this.modalbox.isOpen) {\n      // To prevent the keyboard from opening on mobile if the search bar has focus\n      Quickview.resultCurrentlyBeingRendered = this.result;\n      // activeElement does not exist in LockerService\n      if (document.activeElement && document.activeElement instanceof HTMLElement) {\n        $$(document.activeElement as HTMLElement).trigger('blur');\n      }\n\n      const openerObject = this.prepareOpenQuickviewObject();\n      return this.createModalBox(openerObject).then(() => {\n        this.bindQuickviewEvents(openerObject);\n        this.animateAndOpen();\n        this.logUsageAnalyticsEvent();\n        this.queryStateModel.set(QueryStateModel.attributesEnum.quickview, this.getHashId());\n        Quickview.resultCurrentlyBeingRendered = null;\n      });\n    }\n  }\n\n  /**\n   * Closes the `Quickview` modal box.\n   */\n  public close() {\n    if (this.modalbox.isOpen) {\n      this.modalbox.close();\n    }\n  }\n\n  public getHashId() {\n    return this.result.queryUid + '.' + this.result.index + '.' + StringUtils.hashCode(this.result.uniqueId);\n  }\n\n  private logUsageAnalyticsEvent() {\n    this.usageAnalytics.logClickEvent(\n      analyticsActionCauseList.documentQuickview,\n      {\n        author: Utils.getFieldValue(this.result, 'author'),\n        documentURL: this.result.clickUri,\n        documentTitle: this.result.title\n      },\n      this.result,\n      this.element\n    );\n  }\n\n  private bindClick(result: IQueryResult) {\n    if (typeof result.hasHtmlVersion == 'undefined' || result.hasHtmlVersion || this.options.alwaysShow) {\n      const clickAction = () => this.open();\n\n      new AccessibleButton().withElement(this.element).withSelectAction(clickAction).withLabel(l('Quickview')).withOwner(this.bind).build();\n    } else {\n      this.element.style.display = 'none';\n    }\n  }\n\n  private bindQuickviewEvents(openerObject: IQuickviewOpenerObject) {\n    $$(this.modalbox.content).on(QuickviewEvents.quickviewLoaded, async () => {\n      const anim = await openerObject.loadingAnimation;\n      $$(anim).remove();\n    });\n  }\n\n  private animateAndOpen() {\n    const quickviewDocument = $$(this.modalbox.element).find('.' + Component.computeCssClassName(QuickviewDocument));\n    if (quickviewDocument) {\n      Initialization.dispatchNamedMethodCallOrComponentCreation('open', quickviewDocument, null);\n    }\n  }\n\n  private createModalBox(openerObject: IQuickviewOpenerObject) {\n    const computedModalBoxContent = $$('div');\n    computedModalBoxContent.addClass('coveo-computed-modal-box-content');\n    return openerObject.content.then(builtContent => {\n      computedModalBoxContent.append(builtContent.el);\n      this.modalbox.openResult({\n        result: this.result,\n        options: {\n          showDate: this.options.showDate,\n          title: this.options.title\n        },\n        bindings: this.bindings,\n        content: computedModalBoxContent.el,\n        validation: () => {\n          this.closeQuickview();\n          return true;\n        },\n        origin: this.element\n      });\n      return computedModalBoxContent;\n    });\n  }\n\n  private prepareOpenQuickviewObject() {\n    const loadingAnimation = this.options.loadingAnimation;\n    return {\n      loadingAnimation: loadingAnimation,\n      content: this.prepareQuickviewContent(loadingAnimation)\n    };\n  }\n\n  private async prepareQuickviewContent(loadingAnimation: HTMLElement | Promise<HTMLElement>): Promise<Dom> {\n    const domContent = await this.instantiateTemplateToDom();\n\n    const initOptions = this.searchInterface.options;\n    const initParameters: IInitializationParameters = {\n      options: initOptions,\n      bindings: this.getBindings(),\n      result: this.result\n    };\n\n    await Initialization.automaticallyCreateComponentsInside(domContent.el, initParameters).initResult;\n\n    const containsQuickviewDocumentAndCustomAnimation = () =>\n      domContent.find(`.${Component.computeCssClassName(QuickviewDocument)}`) != undefined && this.options.enableLoadingAnimation;\n\n    if (containsQuickviewDocumentAndCustomAnimation()) {\n      if (loadingAnimation instanceof HTMLElement) {\n        domContent.prepend(loadingAnimation);\n      } else if (loadingAnimation instanceof Promise) {\n        loadingAnimation.then(anim => {\n          domContent.prepend(anim);\n        });\n      }\n    }\n    return domContent;\n  }\n\n  private async instantiateTemplateToDom(): Promise<Dom> {\n    let templateInstantiated: HTMLElement;\n    try {\n      templateInstantiated = await this.options.contentTemplate.instantiateToElement(this.result);\n    } catch (e) {\n      this.logger.warn(e);\n    } finally {\n      if (!templateInstantiated) {\n        this.logger.warn(\n          'An unexpected error happened while trying to render a custom template quickview, fallbacking on default quickview template...',\n          this.options.contentTemplate\n        );\n        templateInstantiated = await new DefaultQuickviewTemplate().instantiateToElement(this.result);\n      }\n    }\n    return $$(templateInstantiated);\n  }\n\n  private closeQuickview() {\n    this.queryStateModel.set(QueryStateModel.attributesEnum.quickview, '');\n  }\n}\nInitialization.registerAutoCreateComponent(Quickview);\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/Quickview/Quickview.ts","import { Defer } from '../../misc/Defer';\nimport { without, chain } from 'underscore';\nimport { $$, Dom } from '../../utils/Dom';\n\nexport interface FocusTrapOptions {\n  focusableSelector: string;\n}\n\nexport class FocusTrap {\n  private focusInEvent: (e: FocusEvent) => void;\n  private focusOutEvent: (e: FocusEvent) => void;\n  private hiddenElements: HTMLElement[];\n  private enabled: boolean;\n\n  private get focusableElements(): HTMLElement[] {\n    return chain(Dom.nodeListToArray(this.container.querySelectorAll(this.options.focusableSelector)))\n      .filter(element => $$(element).isVisible())\n      .sortBy(element => element.tabIndex)\n      .value();\n  }\n\n  constructor(\n    private container: HTMLElement,\n    private options: FocusTrapOptions = {\n      focusableSelector: '[tabindex], button'\n    }\n  ) {\n    this.hiddenElements = [];\n    this.enable();\n  }\n\n  public disable() {\n    document.removeEventListener('focusin', this.focusInEvent);\n    document.removeEventListener('focusout', this.focusOutEvent);\n    this.showHiddenElements();\n    this.enabled = false;\n  }\n\n  private enable() {\n    document.addEventListener('focusin', (this.focusInEvent = e => this.onFocusIn(e)));\n    document.addEventListener('focusout', (this.focusOutEvent = e => this.onFocusOut(e)));\n    this.hideAllExcept(this.container);\n    this.enabled = true;\n  }\n\n  private showHiddenElements() {\n    while (this.hiddenElements.length) {\n      this.hiddenElements.pop().removeAttribute('aria-hidden');\n    }\n  }\n\n  private hideElement(element: HTMLElement) {\n    if (element.getAttribute('aria-hidden')) {\n      return;\n    }\n    this.hiddenElements.push(element);\n    element.setAttribute('aria-hidden', `${true}`);\n  }\n\n  private hideSiblings(allowedElement: HTMLElement) {\n    const parent = allowedElement.parentElement;\n    if (parent) {\n      without($$(parent).children(), allowedElement).forEach(elementToHide => {\n        this.hideElement(elementToHide);\n      });\n    }\n  }\n\n  private hideAllExcept(allowedElement: HTMLElement) {\n    this.hideSiblings(allowedElement);\n    const parent = allowedElement.parentElement;\n    if (parent && parent !== document.body) {\n      this.hideAllExcept(parent);\n    }\n  }\n\n  private getFocusableSibling(element: HTMLElement, previous = false) {\n    const elements = this.focusableElements;\n    const currentIndex = elements.indexOf(element);\n    if (currentIndex === -1) {\n      return null;\n    }\n    return elements[(currentIndex + (previous ? -1 : 1) + elements.length) % elements.length];\n  }\n\n  private focusSibling(element: HTMLElement, previous = false) {\n    const sibling = this.getFocusableSibling(element, previous);\n    if (sibling) {\n      sibling.focus();\n    }\n  }\n\n  private focusFirstElement() {\n    const elements = this.focusableElements;\n    if (elements.length) {\n      elements[0].focus();\n    }\n  }\n\n  private elementIsBefore(oldElement: HTMLElement, newElement: HTMLElement) {\n    if (!newElement) {\n      return false;\n    }\n    return oldElement.compareDocumentPosition(newElement) === Node.DOCUMENT_POSITION_PRECEDING;\n  }\n\n  private onLosingFocus(oldElement: HTMLElement, newElement: HTMLElement) {\n    Defer.defer(() => {\n      if (!this.enabled) {\n        return;\n      }\n      this.enabled = false;\n      if (oldElement && this.focusIsAllowed(oldElement)) {\n        this.focusSibling(oldElement, this.elementIsBefore(oldElement, newElement));\n      } else {\n        this.focusFirstElement();\n      }\n      this.enabled = true;\n    });\n  }\n\n  private focusIsAllowed(element: HTMLElement) {\n    return this.container.contains(element);\n  }\n\n  private elementIsInPage(element: HTMLElement) {\n    return element && element !== document.body.parentElement;\n  }\n\n  private onFocusIn(e: FocusEvent) {\n    if (!this.enabled) {\n      return;\n    }\n    const oldElement = e.relatedTarget as HTMLElement;\n    const handledByFocusOut = this.elementIsInPage(oldElement);\n    if (handledByFocusOut) {\n      return;\n    }\n    const newElement = e.target as HTMLElement;\n    if (!this.elementIsInPage(newElement)) {\n      return;\n    }\n    if (!this.focusIsAllowed(newElement)) {\n      this.onLosingFocus(null, newElement);\n    }\n  }\n\n  private onFocusOut(e: FocusEvent) {\n    if (!this.enabled) {\n      return;\n    }\n    const newElement = e.relatedTarget as HTMLElement;\n    if (!this.elementIsInPage(newElement)) {\n      return;\n    }\n    if (!newElement || !this.focusIsAllowed(newElement)) {\n      this.onLosingFocus(e.target as HTMLElement, newElement);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/FocusTrap/FocusTrap.ts","import { Template } from '../Templates/Template';\nimport { IQueryResult } from '../../rest/QueryResult';\n\nexport class DefaultQuickviewTemplate extends Template {\n  constructor() {\n    super();\n  }\n\n  instantiateToString(queryResult?: IQueryResult): string {\n    return '<div class=\"coveo-quick-view-full-height\"><div class=\"CoveoQuickviewDocument\"></div></div>';\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/Quickview/DefaultQuickviewTemplate.ts","import { each } from 'underscore';\nimport { DeviceUtils, l } from '../../Core';\nimport { AjaxError } from '../../rest/AjaxError';\nimport { $$, Dom } from '../../utils/Dom';\n\nexport class QuickviewDocumentIframe {\n  public el: HTMLElement;\n  private iframeElement: HTMLIFrameElement;\n\n  constructor() {\n    this.el = this.buildIFrame().el;\n  }\n\n  public get iframeHTMLElement() {\n    return this.iframeElement;\n  }\n\n  public get document() {\n    return this.iframeElement.contentWindow.document;\n  }\n\n  public get body() {\n    return this.document.body;\n  }\n\n  public get window() {\n    return this.iframeElement.contentWindow;\n  }\n\n  public isNewQuickviewDocument(): boolean {\n    const meta = $$(this.document.head).find(\"meta[name='generator']\");\n    return meta && meta.getAttribute('content') == 'pdf2htmlEX';\n  }\n\n  public render(htmlDocument: HTMLDocument, title: string): Promise<HTMLIFrameElement> {\n    if (this.quickviewIsClosedByEndUser()) {\n      return Promise.reject(null);\n    }\n\n    return new Promise((resolve, reject) => {\n      // Take care to bind the onload function before actually writing to the iframe :\n      // Safari, IE, Edge need this, otherwise the onload function is never called\n      this.iframeElement.onload = () => {\n        resolve(this.iframeElement);\n      };\n\n      this.addClientSideTweaksToIFrameStyling(htmlDocument);\n      this.writeToIFrame(htmlDocument);\n      this.iframeElement.title = title;\n    });\n  }\n\n  public renderError(error: AjaxError): Promise<HTMLIFrameElement> {\n    if (this.quickviewIsClosedByEndUser()) {\n      return Promise.reject(null);\n    }\n\n    return new Promise((resolve, reject) => {\n      let errorMessage = '';\n      switch (error.status) {\n        case 400:\n          errorMessage = l('NoQuickview');\n          break;\n        default:\n          errorMessage = l('OoopsError');\n          break;\n      }\n\n      const errorDocument = document.implementation.createHTMLDocument();\n      errorDocument.body.style.fontFamily = `Arimo, \\'Helvetica Neue\\', Helvetica, Arial, sans-serif`;\n      $$(errorDocument.body).text(errorMessage);\n\n      this.writeToIFrame(errorDocument);\n\n      resolve(this.iframeElement);\n    });\n  }\n\n  private quickviewIsClosedByEndUser() {\n    return this.iframeElement.contentDocument == null;\n  }\n\n  private buildIFrame(): Dom {\n    const iframe = $$('iframe', {\n      sandbox: 'allow-popups allow-same-origin allow-top-navigation',\n      src: 'about:blank'\n    });\n    this.iframeElement = iframe.el as HTMLIFrameElement;\n\n    const iframewrapper = $$('div', {\n      className: 'coveo-iframeWrapper'\n    });\n    iframewrapper.append(iframe.el);\n\n    return iframewrapper;\n  }\n\n  private writeToIFrame(htmlDocument: HTMLDocument) {\n    this.allowDocumentLinkToEscapeSandbox(htmlDocument);\n    this.document.open();\n    this.document.write(htmlDocument.getElementsByTagName('html')[0].outerHTML);\n    this.document.close();\n  }\n\n  private allowDocumentLinkToEscapeSandbox(htmlDocument: HTMLDocument) {\n    // On the iframe, we set the sandbox attribute to \"allow top navigation\".\n    // For this to work, we need to force all link to target _top.\n    // This is especially useful for quickview on web pages.\n    each($$(htmlDocument.body).findAll('a'), link => {\n      link.setAttribute('target', '_top');\n    });\n  }\n\n  private addClientSideTweaksToIFrameStyling(htmlDocument: HTMLDocument) {\n    const style = $$('style', { type: 'text/css' }).el as HTMLStyleElement;\n\n    // Safari on iOS forces resize iframes to fit their content, even if an explicit size\n    // is set on the iframe. Isn't that great? By chance there is a trick around it: by\n    // setting a very small size on the body and instead using min-* to set the size to\n    // 100% we're able to trick Safari from thinking it must expand the iframe. Amazed.\n    // The 'scrolling' part is required otherwise the hack doesn't work.\n    //\n    // https://stackoverflow.com/questions/23083462/how-to-get-an-iframe-to-be-responsive-in-ios-safari\n    const cssHackForIOS = `\n      body, html {\n        height: 1px !important;\n        min-height: 100%;\n        width: 1px !important;\n        min-width: 100%;\n        overflow: scroll;\n        margin: auto\n      }\n      `;\n\n    const cssText = `\n      html pre {\n        white-space: pre-wrap;\n        word-wrap: break-word;\n      }\n      body, html {\n        font-family: Arimo, 'Helvetica Neue', Helvetica, Arial, sans-serif; -webkit-text-size-adjust: none;\n      }\n      ${DeviceUtils.isIos() ? cssHackForIOS : ''}\n      `;\n\n    if (DeviceUtils.isIos()) {\n      $$(this.iframeElement).setAttribute('scrolling', 'no');\n      this.iframeElement.parentElement.style.margin = '0 0 5px 5px';\n    }\n\n    style.appendChild(document.createTextNode(cssText));\n    htmlDocument.head.appendChild(style);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/Quickview/QuickviewDocumentIframe.ts","import { $$, Dom } from '../../utils/Dom';\nimport { QuickviewDocumentWordButton } from './QuickviewDocumentWordButton';\n\nexport class QuickviewDocumentHeader {\n  public el: HTMLElement;\n\n  constructor() {\n    this.el = this.buildHeader().el;\n  }\n\n  public addWord(wordButton: QuickviewDocumentWordButton) {\n    this.el.appendChild(wordButton.el);\n  }\n\n  private buildHeader(): Dom {\n    const header = $$('div', {\n      className: 'coveo-quickview-header'\n    });\n    return header;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/Quickview/QuickviewDocumentHeader.ts","import { $$ } from '../../utils/Dom';\nimport { each } from 'underscore';\nimport { QuickviewDocumentIframe } from './QuickviewDocumentIframe';\nimport { QuickviewDocumentWord } from './QuickviewDocumentWord';\nimport { HIGHLIGHT_PREFIX } from './QuickviewDocument';\nimport { IQueryResult } from '../../rest/QueryResult';\n\nexport class QuickviewDocumentWords {\n  public words: Record<string, QuickviewDocumentWord> = {};\n\n  constructor(public iframe: QuickviewDocumentIframe, public result: IQueryResult) {\n    this.scanDocument();\n  }\n\n  private scanDocument() {\n    each($$(this.iframe.body).findAll(`[id^=\"${HIGHLIGHT_PREFIX}\"]`), (element: HTMLElement, index: number) => {\n      const quickviewWord = new QuickviewDocumentWord(this.result);\n      quickviewWord.doCompleteInitialScanForKeywordInDocument(element);\n\n      if (!quickviewWord.text) {\n        return;\n      }\n\n      const alreadyScannedKeyword = this.words[quickviewWord.indexIdentifier];\n\n      if (!alreadyScannedKeyword) {\n        this.words[quickviewWord.indexIdentifier] = quickviewWord;\n      } else {\n        alreadyScannedKeyword.addElement(element);\n\n        // Special code needed to workaround invalid HTML returned by the index with embedded keyword\n        if (alreadyScannedKeyword.occurrence == quickviewWord.occurrence) {\n          alreadyScannedKeyword.text += quickviewWord.text;\n        }\n      }\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/Quickview/QuickviewDocumentWords.ts","import { find, first, keys, without } from 'underscore';\nimport { StringUtils } from '../../Core';\nimport { Logger } from '../../misc/Logger';\nimport { IQueryResult } from '../../rest/QueryResult';\nimport { $$ } from '../../utils/Dom';\nimport { HIGHLIGHT_PREFIX } from './QuickviewDocument';\nimport { QuickviewDocumentWordColor } from './QuickviewDocumentWordColor';\n\nexport class QuickviewDocumentWord {\n  public text: string;\n  public count: number = 0;\n  public numberOfEmbeddedWords: number;\n  public occurrence: number;\n  public indexIdentifier: string;\n  public indexTermPart: number;\n  public elements: HTMLElement[] = [];\n  public currentNavigationPosition = -1;\n  public color: QuickviewDocumentWordColor;\n\n  private logger: Logger;\n\n  constructor(public result: IQueryResult) {\n    this.logger = new Logger(this);\n  }\n\n  public addElement(element: HTMLElement) {\n    this.count++;\n    this.elements.push(element);\n  }\n\n  public navigateForward() {\n    this.currentNavigationPosition++;\n    if (this.currentNavigationPosition >= this.elements.length) {\n      this.currentNavigationPosition = 0;\n    }\n    this.highlightNavigation();\n    this.putElementIntoView();\n    return this.elements[this.currentNavigationPosition];\n  }\n\n  public navigateBackward() {\n    this.currentNavigationPosition--;\n    if (this.currentNavigationPosition < 0) {\n      this.currentNavigationPosition = this.elements.length - 1;\n    }\n    this.highlightNavigation();\n    this.putElementIntoView();\n    return this.elements[this.currentNavigationPosition];\n  }\n\n  public navigateTo(position: number): HTMLElement {\n    this.currentNavigationPosition = position;\n    if (this.currentNavigationPosition < 0 || this.currentNavigationPosition >= this.elements.length) {\n      this.currentNavigationPosition = 0;\n      this.logger.warn(`Invalid position in quickview navigation: ${position}`);\n    }\n    this.highlightNavigation();\n    return this.elements[this.currentNavigationPosition];\n  }\n\n  public doCompleteInitialScanForKeywordInDocument(element: HTMLElement) {\n    const parsed = this.parseKeywordIdentifier(element);\n\n    if (parsed) {\n      this.indexIdentifier = parsed.keywordIdentifier;\n      this.occurrence = parsed.keywordOccurrencesInDocument;\n      this.indexTermPart = parsed.keywordTermPart;\n      this.text = this.getText(element);\n      this.color = new QuickviewDocumentWordColor(element.style.backgroundColor);\n\n      this.addElement(element);\n    }\n  }\n\n  public isTaggedWord(element: HTMLElement) {\n    return element.nodeName.toLowerCase() == 'coveotaggedword';\n  }\n\n  private highlightNavigation() {\n    const currentElement = this.elements[this.currentNavigationPosition];\n    const otherElements = without(this.elements, currentElement);\n    currentElement.style.color = this.color.htmlColor;\n    currentElement.style.backgroundColor = this.color.invert();\n    otherElements.forEach(element => {\n      element.style.color = '';\n      element.style.backgroundColor = this.color.htmlColor;\n    });\n  }\n\n  private putElementIntoView() {\n    const element = this.elements[this.currentNavigationPosition];\n    element.scrollIntoView();\n  }\n\n  private getText(element: HTMLElement) {\n    const innerTextOfHTMLElement = this.getHighlightedInnerText(element);\n    return this.resolveOriginalTerm(innerTextOfHTMLElement);\n  }\n\n  private resolveOriginalTerm(highlight: string): string {\n    if (!this.result || !this.result.termsToHighlight) {\n      return highlight;\n    }\n\n    const found = find(keys(this.result.termsToHighlight), (originalTerm: string) => {\n      // The expansions do NOT include the original term (makes sense), so be sure to check\n      // the original term for a match too.\n      const originalTermMatch = StringUtils.equalsCaseInsensitive(originalTerm, highlight);\n      const expansionMatch =\n        find(this.result.termsToHighlight[originalTerm], (expansion: string) => StringUtils.equalsCaseInsensitive(expansion, highlight)) !=\n        undefined;\n      return originalTermMatch || expansionMatch;\n    });\n\n    return found || highlight;\n  }\n\n  private getHighlightedInnerText(element: HTMLElement): string {\n    if (!this.isTaggedWord(element)) {\n      return $$(element).text() || '';\n    }\n\n    const children = $$(element).children();\n    if (children.length >= 1) {\n      return $$(first(children)).text() || '';\n    }\n\n    return '';\n  }\n\n  private parseKeywordIdentifier(element: HTMLElement) {\n    const parts = element.id.substr(HIGHLIGHT_PREFIX.length + 1).match(/^([0-9]+)\\.([0-9]+)\\.([0-9]+)$/);\n\n    if (!parts || parts.length <= 3) {\n      return null;\n    }\n\n    return {\n      keywordIdentifier: parts[1],\n      keywordOccurrencesInDocument: parseInt(parts[2], 10),\n      keywordTermPart: parseInt(parts[3], 10)\n    };\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/Quickview/QuickviewDocumentWord.ts","import { ColorUtils } from '../../utils/ColorUtils';\n\nexport class QuickviewDocumentWordColor {\n  public r: number;\n  public g: number;\n  public b: number;\n\n  constructor(public htmlColor: string) {\n    const rgbExtracted = htmlColor.match(/\\d+/g);\n    if (rgbExtracted) {\n      this.r = parseInt(rgbExtracted[0], 10);\n      this.g = parseInt(rgbExtracted[1], 10);\n      this.b = parseInt(rgbExtracted[2], 10);\n    }\n  }\n\n  public invert() {\n    return `rgb(${255 - this.r}, ${255 - this.g}, ${255 - this.b})`;\n  }\n\n  public saturate() {\n    const hsv = ColorUtils.rgbToHsv(this.r, this.g, this.b);\n    hsv[1] *= 2;\n    if (hsv[1] > 1) {\n      hsv[1] = 1;\n    }\n    const rgb = ColorUtils.hsvToRgb(hsv[0], hsv[1], hsv[2]);\n    return `rgb(${rgb[0]}, ${rgb[1]}, ${rgb[2]})`;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/Quickview/QuickviewDocumentWordColor.ts","import { QuickviewDocumentIframe } from './QuickviewDocumentIframe';\nimport { $$ } from '../../utils/Dom';\nimport { QuickviewDocumentWord } from './QuickviewDocumentWord';\nimport { QuickviewDocumentPreviewBar } from './QuickviewDocumentPreviewBar';\n\nexport class QuickviewDocumentWordButton {\n  public el: HTMLElement;\n  constructor(public word: QuickviewDocumentWord, public previewBar: QuickviewDocumentPreviewBar, public iframe: QuickviewDocumentIframe) {\n    this.el = this.render();\n  }\n\n  public render() {\n    const wordHtml = $$('span', {\n      className: 'coveo-term-for-quickview'\n    });\n\n    wordHtml.append(this.buildName().el);\n\n    wordHtml.append(this.renderArrow('up').el);\n\n    wordHtml.append(this.renderArrow('down').el);\n\n    wordHtml.el.style.backgroundColor = this.word.color.htmlColor;\n    wordHtml.el.style.borderColor = this.word.color.saturate();\n\n    return wordHtml.el;\n  }\n\n  private buildName() {\n    const name = $$(\n      'span',\n      {\n        className: 'coveo-term-for-quickview-name'\n      },\n      `${this.word.text} (${this.word.count})`\n    );\n\n    name.on('click', () => this.navigate(false));\n    return name;\n  }\n\n  private navigate(backward: boolean) {\n    let element: HTMLElement;\n    if (backward) {\n      element = this.word.navigateBackward();\n      this.previewBar.navigateBackward(this.word);\n    } else {\n      element = this.word.navigateForward();\n      this.previewBar.navigateForward(this.word);\n    }\n\n    // pdf2html docs hide the non-visible frames by default, to speed up browsers.\n    // But this prevents keyword navigation from working so we must force show it. This\n    // is done by adding the 'opened' class to it (defined by pdf2html).\n    if (this.iframe.isNewQuickviewDocument()) {\n      const pdf = $$(element).closest('.pc');\n      $$(pdf).addClass('opened');\n    }\n\n    element.scrollIntoView();\n  }\n\n  private renderArrow(direction: 'up' | 'down') {\n    const arrow = $$('span', {\n      className: `coveo-term-for-quickview-${direction}-arrow`\n    });\n\n    const arrowIcon = $$('span', {\n      className: `coveo-term-for-quickview-${direction}-arrow-icon`\n    });\n\n    arrow.append(arrowIcon.el);\n\n    arrow.on('click', () => this.navigate(direction == 'up'));\n    return arrow;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/Quickview/QuickviewDocumentWordButton.ts","import { QuickviewDocumentIframe } from './QuickviewDocumentIframe';\nimport { QuickviewDocumentWords } from './QuickviewDocumentWords';\nimport { Doc, $$ } from '../../utils/Dom';\nimport { each, without, chain } from 'underscore';\nimport { QuickviewDocumentWord } from './QuickviewDocumentWord';\nimport { Logger } from '../../misc/Logger';\n\nexport class QuickviewDocumentPreviewBar {\n  private logger: Logger;\n  public wordIndicators: Map<QuickviewDocumentWord, { indicators: HTMLElement[]; position: number }> = new Map();\n\n  constructor(public iframe: QuickviewDocumentIframe, public words: QuickviewDocumentWords) {\n    this.logger = new Logger(this);\n    this.renderPreviewBar();\n  }\n\n  public navigateForward(word: QuickviewDocumentWord): HTMLElement {\n    const currentWord = this.wordIndicators.get(word);\n    if (!currentWord) {\n      this.logger.warn(`Invalid navigation for given word.`, word);\n      return null;\n    }\n\n    currentWord.position++;\n\n    if (currentWord.position >= currentWord.indicators.length) {\n      currentWord.position = 0;\n    }\n    this.highlightNavigation(word);\n    return currentWord.indicators[currentWord.position];\n  }\n\n  public navigateBackward(word: QuickviewDocumentWord): HTMLElement {\n    const currentWord = this.wordIndicators.get(word);\n    if (!currentWord) {\n      this.logger.warn(`Invalid navigation for the given word.`, word);\n      return null;\n    }\n\n    currentWord.position--;\n\n    if (currentWord.position < 0) {\n      currentWord.position = currentWord.indicators.length - 1;\n    }\n    this.highlightNavigation(word);\n    return currentWord.indicators[currentWord.position];\n  }\n\n  public navigateTo(position: number, word: QuickviewDocumentWord): HTMLElement {\n    const currentWord = this.wordIndicators.get(word);\n    if (!currentWord) {\n      this.logger.warn(`Invalid navigation for the given word`, word);\n      return null;\n    }\n\n    currentWord.position = position;\n\n    if (currentWord.position < 0 || currentWord.position >= currentWord.indicators.length) {\n      this.logger.warn(`Invalid navigation for the given position: ${position}`);\n      currentWord.position = 0;\n    }\n    this.highlightNavigation(word);\n    return currentWord.indicators[currentWord.position];\n  }\n\n  private highlightNavigation(word: QuickviewDocumentWord) {\n    const currentWord = this.wordIndicators.get(word);\n    const currentElement = currentWord.indicators[currentWord.position];\n\n    const otherElements = without(currentWord.indicators, currentElement);\n\n    currentElement.style.backgroundColor = word.color.invert();\n    currentElement.style.border = `1px solid ${word.color.invert()}`;\n\n    otherElements.forEach(element => this.defaultStyleColor(element, word));\n  }\n\n  private renderPreviewBar() {\n    const previewBar = $$('div');\n\n    previewBar.el.style.width = '15px';\n    previewBar.el.style.position = 'fixed';\n    previewBar.el.style.top = '0';\n    previewBar.el.style.right = '0px';\n    previewBar.el.style.height = '100%';\n\n    this.iframe.body.appendChild(previewBar.el);\n\n    each(this.words.words, word => {\n      each(word.elements, element => {\n        const indicator = this.renderWordPositionIndicator(element, word).el;\n\n        if (this.wordIndicators.has(word)) {\n          this.wordIndicators.get(word).indicators.push(indicator);\n        } else {\n          this.wordIndicators.set(word, {\n            indicators: [indicator],\n            position: -1\n          });\n        }\n\n        previewBar.append(indicator);\n      });\n\n      this.handleOverlappingIndicators(word);\n    });\n  }\n\n  private renderWordPositionIndicator(element: HTMLElement, word: QuickviewDocumentWord) {\n    const docHeight = new Doc(this.iframe.document).height();\n    const elementPosition = element.getBoundingClientRect().top;\n\n    const previewUnit = $$('div');\n    previewUnit.el.style.position = 'absolute';\n    previewUnit.el.style.top = `${elementPosition / docHeight * 100}%`;\n    previewUnit.el.style.width = '100%';\n    previewUnit.el.style.height = '1px';\n    this.defaultStyleColor(previewUnit.el, word);\n    return previewUnit;\n  }\n\n  private defaultStyleColor(element: HTMLElement, word: QuickviewDocumentWord) {\n    element.style.border = `1px solid ${word.color.saturate()}`;\n    element.style.backgroundColor = word.color.htmlColor;\n  }\n\n  private handleOverlappingIndicators(word: QuickviewDocumentWord) {\n    const allIndicators = this.wordIndicators.get(word).indicators;\n\n    for (let i = 0; i < allIndicators.length; i++) {\n      const otherIndicatorAtSamePositionInDocument = chain(allIndicators)\n        .without(allIndicators[i])\n        .find(otherIndicator => otherIndicator.style.top == allIndicators[i].style.top)\n        .value();\n\n      if (otherIndicatorAtSamePositionInDocument) {\n        $$(allIndicators[i]).remove();\n        allIndicators[i] = otherIndicatorAtSamePositionInDocument;\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/Quickview/QuickviewDocumentPreviewBar.ts"],"sourceRoot":""}