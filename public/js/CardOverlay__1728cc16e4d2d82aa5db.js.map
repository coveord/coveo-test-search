{"version":3,"sources":["./src/ui/CardOverlay/CardOverlay.ts","./src/events/CardOverlayEvents.ts","./sass/_CardOverlay.scss"],"names":[],"mappings":"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","file":"CardOverlay__1728cc16e4d2d82aa5db.js","sourcesContent":["import { Component } from '../Base/Component';\r\nimport { ComponentOptions } from '../Base/ComponentOptions';\r\nimport { IComponentBindings } from '../Base/ComponentBindings';\r\nimport { Initialization } from '../Base/Initialization';\r\nimport { CardOverlayEvents } from '../../events/CardOverlayEvents';\r\nimport { $$ } from '../../utils/Dom';\r\nimport { Assert } from '../../misc/Assert';\r\nimport { KeyboardUtils, KEYBOARD } from '../../utils/KeyboardUtils';\r\nimport { exportGlobally } from '../../GlobalExports';\r\nimport 'styling/_CardOverlay';\r\nimport { SVGIcons } from '../../utils/SVGIcons';\r\nimport { SVGDom } from '../../utils/SVGDom';\r\nimport { Utils } from '../../utils/Utils';\r\nimport { l } from '../../strings/Strings';\r\n\r\nexport interface ICardOverlayOptions {\r\n  title: string;\r\n  icon?: string;\r\n}\r\n\r\n/**\r\n * The CardOverlay component displays a button that the user can click to toggle the visibility of an overlay on top of\r\n * an {@link IQueryResult}. While this component typically populates a {@link CardActionBar} component, it is actually\r\n * possible to place a CardOverlay component anywhere in any result.\r\n *\r\n * The primary purpose of the CardOverlay component is to display additional information about a result in a format that\r\n * fits well within a card result layout (see [Result Layouts](https://docs.coveo.com/en/360/)).\r\n *\r\n * When initialized, this component creates a `<div class=\"coveo-card-overlay\">` element as the last child of its parent\r\n * IQueryResult, and displays a button which toggles the visibility of the overlay.\r\n */\r\nexport class CardOverlay extends Component {\r\n  static ID = 'CardOverlay';\r\n\r\n  static doExport = () => {\r\n    exportGlobally({\r\n      CardOverlay: CardOverlay\r\n    });\r\n  };\r\n\r\n  private parentCard: HTMLElement;\r\n  private overlay: HTMLElement;\r\n\r\n  /**\r\n   * @componentOptions\r\n   */\r\n  static options: ICardOverlayOptions = {\r\n    /**\r\n     * Specifies the string to use for the overlay title and for the button text.\r\n     *\r\n     * Setting a value for this option is required for this component to work.\r\n     */\r\n    title: ComponentOptions.buildLocalizedStringOption({\r\n      required: true,\r\n      localizedString: () => l('NoTitle')\r\n    }),\r\n\r\n    /**\r\n     * Specifies the icon to use for the overlay icon and for the button icon.\r\n     *\r\n     * The name of the icon to use should be specified in dashed case. ie: facet-expand\r\n     */\r\n    icon: ComponentOptions.buildIconOption()\r\n  };\r\n\r\n  /**\r\n   * Creates a new CardOverlay component.\r\n   * @param element The HTMLElement on which to instantiate the component.\r\n   * @param options The options for the CardOverlay component.\r\n   * @param bindings The bindings that the component requires to function normally. If not set, these will be\r\n   * automatically resolved (with a slower execution time).\r\n   */\r\n  constructor(public element: HTMLElement, public options?: ICardOverlayOptions, bindings?: IComponentBindings) {\r\n    super(element, CardOverlay.ID, bindings);\r\n    this.options = ComponentOptions.initComponentOptions(element, CardOverlay, options);\r\n\r\n    this.parentCard = $$(this.element).closest('.CoveoResult');\r\n    Assert.exists(this.parentCard);\r\n    $$(this.parentCard).addClass('coveo-with-card-overlay');\r\n    this.createOverlay();\r\n    this.createButton(this.element);\r\n    this.closeOverlay();\r\n  }\r\n\r\n  /**\r\n   * Toggles the CardOverlay visibility.\r\n   *\r\n   * @param swtch Specifying a value for this parameter forces the component visibility to take the corresponding value\r\n   * (`true` for visible; `false` for hidden).\r\n   */\r\n  public toggleOverlay(swtch?: boolean) {\r\n    if (swtch !== undefined) {\r\n      swtch ? this.openOverlay() : this.closeOverlay();\r\n    } else {\r\n      if ($$(this.overlay).hasClass('coveo-opened')) {\r\n        this.closeOverlay();\r\n      } else {\r\n        this.openOverlay();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Opens the CardOverlay.\r\n   *\r\n   * Also triggers the {@link CardOverlayEvents.openCardOverlay} event.\r\n   */\r\n  public openOverlay() {\r\n    $$(this.overlay).removeClass('coveo-hidden-for-tab-nav');\r\n    $$(this.overlay).addClass('coveo-opened');\r\n    $$(this.parentCard).addClass('coveo-card-overlay-opened');\r\n    this.bind.trigger(this.element, CardOverlayEvents.openCardOverlay);\r\n  }\r\n\r\n  /**\r\n   * Closes the CardOverlay.\r\n   *\r\n   * Also triggers the {@link CardOverlayEvents.closeCardOverlay} event.\r\n   */\r\n  public closeOverlay() {\r\n    $$(this.overlay).addClass('coveo-hidden-for-tab-nav');\r\n    $$(this.overlay).removeClass('coveo-opened');\r\n    $$(this.parentCard).removeClass('coveo-card-overlay-opened');\r\n    this.bind.trigger(this.element, CardOverlayEvents.closeCardOverlay);\r\n  }\r\n\r\n  private createOverlay() {\r\n    this.overlay = $$('div', { className: 'coveo-card-overlay' }).el;\r\n\r\n    // Create header\r\n    let overlayHeader = $$('div', { className: 'coveo-card-overlay-header' }).el;\r\n    this.createButton(overlayHeader);\r\n    this.overlay.appendChild(overlayHeader);\r\n\r\n    // Create body\r\n    let overlayBody = $$('div', { className: 'coveo-card-overlay-body' }).el;\r\n    // Transfer all of element's children to the overlay\r\n    while (this.element.childNodes.length > 0) {\r\n      overlayBody.appendChild(this.element.firstChild);\r\n    }\r\n    this.overlay.appendChild(overlayBody);\r\n\r\n    // Create footer\r\n    const icon = $$('span', { className: 'coveo-icon coveo-open-card-overlay' }, SVGIcons.icons.arrowDown);\r\n    SVGDom.addClassToSVGInContainer(icon.el, 'coveo-open-card-overlay-svg');\r\n    let overlayFooter = $$('div', { className: 'coveo-card-overlay-footer', tabindex: '0' }, icon.el);\r\n    overlayFooter.on('click', () => this.toggleOverlay(false));\r\n    this.bind.on(overlayFooter.el, 'keyup', KeyboardUtils.keypressAction(KEYBOARD.ENTER, () => this.toggleOverlay(false)));\r\n\r\n    this.overlay.appendChild(overlayFooter.el);\r\n\r\n    this.parentCard.appendChild(this.overlay);\r\n  }\r\n\r\n  private createButton(element: HTMLElement) {\r\n    if (this.options.icon) {\r\n      const icon = $$('span', { className: 'coveo-icon ' }, SVGIcons.icons[this.options.icon]).el;\r\n      element.appendChild(icon);\r\n      SVGDom.addClassToSVGInContainer(element, `coveo-${Utils.toDashCase(this.options.icon)}-svg`);\r\n    }\r\n    element.appendChild($$('span', { className: 'coveo-label' }, this.options.title).el);\r\n    element.setAttribute('tabindex', '0');\r\n    $$(element).on('click', () => this.toggleOverlay());\r\n    this.bind.on(element, 'keyup', KeyboardUtils.keypressAction(KEYBOARD.ENTER, () => this.toggleOverlay()));\r\n  }\r\n}\r\n\r\nInitialization.registerAutoCreateComponent(CardOverlay);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/CardOverlay/CardOverlay.ts","/**\r\n * The CardOverlayEvents class contains string definitions for all events related to the {@link CardOverlay} component.\r\n */\r\nexport class CardOverlayEvents {\r\n  /**\r\n   * Opening a {@link CardOverlay} component triggers this event (see {@link CardOverlay.openOverlay}).\r\n   *\r\n   * @type {string}\r\n   */\r\n  public static openCardOverlay = 'openCardOverlay';\r\n\r\n  /**\r\n   * Closing a {@link CardOverlay} component triggers this event (see {@link CardOverlay.closeOverlay}).\r\n   *\r\n   * @type {string}\r\n   */\r\n  public static closeCardOverlay = 'closeCardOverlay';\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/events/CardOverlayEvents.ts","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./sass/_CardOverlay.scss\n// module id = 600\n// module chunks = 46 88"],"sourceRoot":""}