{"version":3,"sources":["./src/ui/FacetsMobileMode/FacetsMobileMode.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA,yCAA8C;AAC9C,gDAA4D;AAE5D,6CAAqD;AACrD,qCAAmC;AAUnC;;;;;;;GAOG;AACH;IAAsC,oCAAS;IAkD7C,0BAAmB,OAAoB,EAAE,OAAkC,EAAE,QAA6B;QAA1G,YACE,kBAAM,OAAO,EAAE,gBAAgB,CAAC,EAAE,EAAE,QAAQ,CAAC,SAM9C;QAPkB,aAAO,GAAP,OAAO,CAAa;QAGrC,KAAI,CAAC,OAAO,GAAG,mCAAgB,CAAC,oBAAoB,CAAC,OAAO,EAAE,gBAAgB,EAAE,OAAO,CAAC,CAAC;QACzF,IAAI,KAAI,CAAC,OAAO,CAAC,UAAU,IAAI,CAAC,KAAI,CAAC,OAAO,CAAC,eAAe,EAAE;YAC5D,KAAI,CAAC,OAAO,CAAC,eAAe,GAAG,mCAAgB,CAAC,wBAAwB,CAAC,KAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;SACxG;;IACH,CAAC;IAxDM,mBAAE,GAAG,kBAAkB,CAAC;IAE/B;;OAEG;IACI,wBAAO,GAA6B;QACzC;;;;WAIG;QACH,UAAU,EAAE,mCAAgB,CAAC,iBAAiB,EAAE;QAChD;;WAEG;QACH,OAAO,EAAE,mCAAgB,CAAC,kBAAkB,CAAC,EAAE,YAAY,EAAE,KAAK,EAAE,CAAC;QACrE;;WAEG;QACH,uBAAuB,EAAE,mCAAgB,CAAC,kBAAkB,CAAC;YAC3D,cAAc,EAAE,UAAC,KAAK,EAAE,OAAO,IAAK,QAAC,YAAK,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,EAA3D,CAA2D;SAChG,CAAC;QACF;;WAEG;QACH,UAAU,EAAE,mCAAgB,CAAC,kBAAkB,CAAC,EAAE,YAAY,EAAE,KAAK,EAAE,CAAC;QACxE;;;;;;;;WAQG;QACH,eAAe,EAAE,mCAAgB,CAAC,2BAA2B,CAAC;YAC5D,MAAM,EAAE,YAAY;YACpB,eAAe,EAAE,iBAAO,IAAI,0CAAgB,CAAC,wBAAwB,CAAC,OAAO,CAAC,EAAlD,CAAkD;SAC/E,CAAC;KACH,CAAC;IAEK,yBAAQ,GAAG;QAChB,8BAAc,CAAC;YACb,gBAAgB,EAAE,gBAAgB;SACnC,CAAC,CAAC;IACL,CAAC,CAAC;IAYJ,uBAAC;CAAA,CA1DqC,qBAAS,GA0D9C;AA1DY,4CAAgB","file":"FacetsMobileMode__adbc40cb40499612c8d5.js","sourcesContent":["import { Component } from '../Base/Component';\nimport { ComponentOptions } from '../Base/ComponentOptions';\nimport { IComponentBindings } from '../Base/ComponentBindings';\nimport { exportGlobally } from '../../GlobalExports';\nimport { Utils } from '../../Core';\n\nexport interface IFacetsMobileModeOptions {\n  breakpoint?: number;\n  isModal?: boolean;\n  showBackgroundWhileOpen?: boolean;\n  lockScroll?: boolean;\n  scrollContainer?: HTMLElement;\n}\n\n/**\n * This component lets you customize the mobile responsive behavior of facets in your search interface.\n *\n * **Notes:**\n * - You can include this component anywhere under the root element of your search interface.\n * - You should only include this component once in your search interface.\n * - If you do not include this component in your search interface, facets will still have a default mobile responsive behavior.\n */\nexport class FacetsMobileMode extends Component {\n  static ID = 'FacetsMobileMode';\n\n  /**\n   * @componentOptions\n   */\n  static options: IFacetsMobileModeOptions = {\n    /**\n     * The screen width (in number of pixels) at which facets should enter mobile responsive mode and be collapsed under a single button.\n     *\n     * **Default:** `800`\n     */\n    breakpoint: ComponentOptions.buildNumberOption(),\n    /**\n     * Whether to display the facets in a modal instead of a pop-up when the end user expands them in mobile responsive mode.\n     */\n    isModal: ComponentOptions.buildBooleanOption({ defaultValue: false }),\n    /**\n     * Whether to display a background behind the facets when the end user expands them in mobile responsive mode.\n     */\n    showBackgroundWhileOpen: ComponentOptions.buildBooleanOption({\n      postProcessing: (value, options) => (Utils.isNullOrUndefined(value) ? !options.isModal : value)\n    }),\n    /**\n     * Whether to disable vertical scrolling on the specified or resolved [`scrollContainer`]{@link FacetsMobileMode.options.scrollContainer} while facets are expanded in mobile responsive mode.\n     */\n    lockScroll: ComponentOptions.buildBooleanOption({ defaultValue: false }),\n    /**\n     * The HTML element whose vertical scrolling should be locked while facets are expanded in mobile responsive mode.\n     *\n     * By default, the component tries to detect and use the first ancestor element whose CSS `overflow-y` attribute is set to `scroll`, starting from the `FacetsMobileMode`'s element itself. If no such element is found, the `document.body` element is used.\n     *\n     * Since this heuristic is not perfect, we strongly recommend that you manually set this option by explicitly specifying the desired CSS selector.\n     *\n     * **Example:** `data-scroll-container-selector='#someCssSelector'`\n     */\n    scrollContainer: ComponentOptions.buildChildHtmlElementOption({\n      depend: 'lockScroll',\n      defaultFunction: element => ComponentOptions.findParentScrollLockable(element)\n    })\n  };\n\n  static doExport = () => {\n    exportGlobally({\n      FacetsMobileMode: FacetsMobileMode\n    });\n  };\n\n  public options: IFacetsMobileModeOptions;\n\n  constructor(public element: HTMLElement, options?: IFacetsMobileModeOptions, bindings?: IComponentBindings) {\n    super(element, FacetsMobileMode.ID, bindings);\n\n    this.options = ComponentOptions.initComponentOptions(element, FacetsMobileMode, options);\n    if (this.options.lockScroll && !this.options.scrollContainer) {\n      this.options.scrollContainer = ComponentOptions.findParentScrollLockable(this.searchInterface.element);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/FacetsMobileMode/FacetsMobileMode.ts"],"sourceRoot":""}