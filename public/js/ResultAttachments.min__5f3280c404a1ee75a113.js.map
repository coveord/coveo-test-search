{"version":3,"sources":["ResultAttachments.min__5f3280c404a1ee75a113.js","./src/ui/ResultAttachments/ResultAttachments.ts","./src/ui/ResultAttachments/DefaultResultAttachmentTemplate.ts"],"names":["webpackJsonpCoveo__temporary","268","module","exports","__webpack_require__","__extends","this","extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__","constructor","prototype","create","defineProperty","value","element","options","bindings","result","attachmentLevel","ResultAttachments","ID","ComponentOptions","initComponentOptions","attachments","Utils","isNonEmptyArray","renderAttachments","_this","_","each","attachment","QueryUtils","setStateObjectOnQueryResult","queryStateModel","get","setSearchInterfaceObjectOnQueryResult","searchInterface","subResultTemplate","instantiateToElement","resultTemplate","then","container","autoCreateComponentsInsideResult","extend","$$","addClass","appendChild","attachmentHasSubAttachment","maximumAttachmentLevel","childAttachmentContainer","el","childResults","Assert","exists","initOptions","initParameters","getBindings","Initialization","automaticallyCreateComponentsInside","doExport","exportGlobally","DefaultResultAttachmentTemplate","TemplateComponentOptions","buildTemplateOption","defaultFunction","e","postProcessing","buildNumberOption","defaultValue","min","Component","registerAutoCreateComponent","651","instantiateToString","queryResult","Template","652"],"mappings":"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","file":"ResultAttachments.min__5f3280c404a1ee75a113.js","sourcesContent":["webpackJsonpCoveo__temporary([42],{\n\n/***/ 268:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Component_1 = __webpack_require__(7);\r\nvar ComponentOptions_1 = __webpack_require__(8);\r\nvar DefaultResultAttachmentTemplate_1 = __webpack_require__(651);\r\nvar Utils_1 = __webpack_require__(4);\r\nvar QueryUtils_1 = __webpack_require__(21);\r\nvar Initialization_1 = __webpack_require__(2);\r\nvar Assert_1 = __webpack_require__(5);\r\nvar Dom_1 = __webpack_require__(1);\r\nvar _ = __webpack_require__(0);\r\nvar GlobalExports_1 = __webpack_require__(3);\r\n__webpack_require__(652);\r\nvar TemplateComponentOptions_1 = __webpack_require__(61);\r\n/**\r\n * The `ResultAttachments` component renders attachments in a result set, for example when displaying emails. This\r\n * component is usable inside a result template when there is an active [`Folding`]{@link Folding} component in the\r\n * page.\r\n *\r\n * This component is a result template component (see [Result Templates](https://docs.coveo.com/en/413/)).\r\n * @notSupportedIn salesforcefree\r\n */\r\nvar ResultAttachments = /** @class */ (function (_super) {\r\n    __extends(ResultAttachments, _super);\r\n    /**\r\n     * Creates a new `ResultAttachments` component.\r\n     * @param element The HTMLElement on which to instantiate the component.\r\n     * @param options The options for the `ResultAttachments` component.\r\n     * @param bindings The bindings that the component requires to function normally. If not set, these will be\r\n     * automatically resolved (with a slower execution time).\r\n     * @param result The result to associate the component with.\r\n     * @param attachmentLevel The nesting depth.\r\n     */\r\n    function ResultAttachments(element, options, bindings, result, attachmentLevel) {\r\n        if (attachmentLevel === void 0) { attachmentLevel = 0; }\r\n        var _this = _super.call(this, element, ResultAttachments.ID, bindings) || this;\r\n        _this.element = element;\r\n        _this.options = options;\r\n        _this.bindings = bindings;\r\n        _this.attachmentLevel = attachmentLevel;\r\n        _this.options = ComponentOptions_1.ComponentOptions.initComponentOptions(element, ResultAttachments, options);\r\n        _this.attachments = result.attachments;\r\n        if (Utils_1.Utils.isNonEmptyArray(_this.attachments)) {\r\n            _this.renderAttachments();\r\n        }\r\n        return _this;\r\n    }\r\n    ResultAttachments.prototype.renderAttachments = function () {\r\n        var _this = this;\r\n        _.each(this.attachments, function (attachment) {\r\n            QueryUtils_1.QueryUtils.setStateObjectOnQueryResult(_this.queryStateModel.get(), attachment);\r\n            QueryUtils_1.QueryUtils.setSearchInterfaceObjectOnQueryResult(_this.searchInterface, attachment);\r\n            var subTemplatePromise = _this.attachmentLevel > 0\r\n                ? _this.options.subResultTemplate.instantiateToElement(attachment)\r\n                : _this.options.resultTemplate.instantiateToElement(attachment);\r\n            subTemplatePromise.then(function (container) {\r\n                _this.autoCreateComponentsInsideResult(container, _.extend({}, attachment, { attachments: [] }));\r\n                Dom_1.$$(container).addClass('coveo-result-attachments-container');\r\n                _this.element.appendChild(container);\r\n                if (_this.attachmentHasSubAttachment(attachment) && _this.attachmentLevel < _this.options.maximumAttachmentLevel) {\r\n                    var childAttachmentContainer = Dom_1.$$('div').el;\r\n                    container.appendChild(childAttachmentContainer);\r\n                    new ResultAttachments(childAttachmentContainer, _this.options, _this.bindings, attachment, _this.attachmentLevel + 1);\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ResultAttachments.prototype.attachmentHasSubAttachment = function (attachment) {\r\n        if (Utils_1.Utils.isNonEmptyArray(attachment.attachments)) {\r\n            return true;\r\n        }\r\n        else if (Utils_1.Utils.isNonEmptyArray(attachment.childResults)) {\r\n            attachment.attachments = attachment.childResults;\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    ResultAttachments.prototype.autoCreateComponentsInsideResult = function (element, result) {\r\n        Assert_1.Assert.exists(element);\r\n        var initOptions = this.searchInterface.options;\r\n        var initParameters = {\r\n            options: initOptions,\r\n            bindings: this.getBindings(),\r\n            result: result\r\n        };\r\n        Initialization_1.Initialization.automaticallyCreateComponentsInside(element, initParameters, [ResultAttachments.ID]);\r\n    };\r\n    ResultAttachments.ID = 'ResultAttachments';\r\n    ResultAttachments.doExport = function () {\r\n        GlobalExports_1.exportGlobally({\r\n            ResultAttachments: ResultAttachments,\r\n            DefaultResultAttachmentTemplate: DefaultResultAttachmentTemplate_1.DefaultResultAttachmentTemplate\r\n        });\r\n    };\r\n    /**\r\n     * The options for the component\r\n     * @componentOptions\r\n     */\r\n    ResultAttachments.options = {\r\n        /**\r\n         * Specifies the template to use to render each attachment for a top result.\r\n         *\r\n         * You can specify a previously registered template to use either by referring to its HTML `id` attribute or to a\r\n         * CSS selector (see {@link TemplateCache}).\r\n         *\r\n         * **Examples:**\r\n         *\r\n         * Specifying a previously registered template by referring to its HTML `id` attribute:\r\n         *\r\n         * ```html\r\n         * <div class=\"CoveoResultAttachments\" data-result-template-id=\"Foo\"></div>\r\n         * ```\r\n         *\r\n         * Specifying a previously registered template by referring to a CSS selector:\r\n         *\r\n         * ```html\r\n         * <div class='CoveoResultAttachments' data-result-template-selector=\".Foo\"></div>\r\n         * ```\r\n         *\r\n         * If you do not specify a custom folding template, the component uses the default result attachment template.\r\n         */\r\n        resultTemplate: TemplateComponentOptions_1.TemplateComponentOptions.buildTemplateOption({\r\n            defaultFunction: function (e) { return new DefaultResultAttachmentTemplate_1.DefaultResultAttachmentTemplate(); }\r\n        }),\r\n        /**\r\n         * Specifies the template to use to render sub-attachments, which are attachments within attachments, for example\r\n         * when multiple files are embedded within a `.zip` attachment.\r\n         *\r\n         * Sub-attachments can themselves contain sub-attachments, and so on up to a certain level (see the\r\n         * [`maximumAttachmentLevel`]{@link ResultAttachments.options.maximumAttachmentLevel} option).\r\n         *\r\n         * You can specify a previously registered template to use either by referring to its HTML `id` attribute or to a\r\n         * CSS selector (see {@link TemplateCache}).\r\n         *\r\n         * **Example:**\r\n         *\r\n         * Specifying a previously registered template by referring to its HTML `id` attribute:\r\n         *\r\n         * ```html\r\n         * <div class=\"CoveoResultAttachments\" data-sub-result-template-id=\"Foo\"></div>\r\n         * ```\r\n         *\r\n         * Specifying a previously registered template by referring to a CSS selector:\r\n         *\r\n         * ```html\r\n         * <div class=\"CoveoResultAttachments\" data-sub-result-template-selector=\".Foo\"></div>\r\n         * ```\r\n         *\r\n         * By default, this option uses the same template you specify for the\r\n         * [`resultTemplate`]{@link ResultAttachments.options.resultTemplate} option.\r\n         */\r\n        subResultTemplate: TemplateComponentOptions_1.TemplateComponentOptions.buildTemplateOption({\r\n            postProcessing: function (value, options) { return (value != null ? value : options.resultTemplate); }\r\n        }),\r\n        /**\r\n         * Specifies the maximum nesting depth. Beyond this depth, the component stops rendering sub-attachments.\r\n         *\r\n         * Default value is `5`. Minimum value is `0`.\r\n         */\r\n        maximumAttachmentLevel: ComponentOptions_1.ComponentOptions.buildNumberOption({ defaultValue: 5, min: 0 })\r\n    };\r\n    return ResultAttachments;\r\n}(Component_1.Component));\r\nexports.ResultAttachments = ResultAttachments;\r\nInitialization_1.Initialization.registerAutoCreateComponent(ResultAttachments);\r\n\n\n/***/ }),\n\n/***/ 651:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Template_1 = __webpack_require__(27);\r\nvar DefaultResultAttachmentTemplate = /** @class */ (function (_super) {\r\n    __extends(DefaultResultAttachmentTemplate, _super);\r\n    function DefaultResultAttachmentTemplate() {\r\n        return _super.call(this) || this;\r\n    }\r\n    DefaultResultAttachmentTemplate.prototype.instantiateToString = function (queryResult) {\r\n        return '<div><span class=\"CoveoIcon\"></span> <a class=\"CoveoResultLink\"></a> <span class=\"CoveoQuickview\"></span></div>';\r\n    };\r\n    return DefaultResultAttachmentTemplate;\r\n}(Template_1.Template));\r\nexports.DefaultResultAttachmentTemplate = DefaultResultAttachmentTemplate;\r\n\n\n/***/ }),\n\n/***/ 652:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// ResultAttachments.min__5f3280c404a1ee75a113.js","import { Template } from '../Templates/Template';\r\nimport { Component } from '../Base/Component';\r\nimport { IComponentBindings } from '../Base/ComponentBindings';\r\nimport { ComponentOptions } from '../Base/ComponentOptions';\r\nimport { DefaultResultAttachmentTemplate } from './DefaultResultAttachmentTemplate';\r\nimport { IQueryResult } from '../../rest/QueryResult';\r\nimport { Utils } from '../../utils/Utils';\r\nimport { QueryUtils } from '../../utils/QueryUtils';\r\nimport { Initialization, IInitializationParameters } from '../Base/Initialization';\r\nimport { Assert } from '../../misc/Assert';\r\nimport { $$ } from '../../utils/Dom';\r\nimport * as _ from 'underscore';\r\nimport { exportGlobally } from '../../GlobalExports';\r\n\r\nimport 'styling/_ResultAttachments';\r\nimport { TemplateComponentOptions } from '../Base/TemplateComponentOptions';\r\n\r\nexport interface IResultAttachmentsOptions {\r\n  resultTemplate?: Template;\r\n  subResultTemplate?: Template;\r\n  maximumAttachmentLevel?: number;\r\n}\r\n\r\n/**\r\n * The `ResultAttachments` component renders attachments in a result set, for example when displaying emails. This\r\n * component is usable inside a result template when there is an active [`Folding`]{@link Folding} component in the\r\n * page.\r\n *\r\n * This component is a result template component (see [Result Templates](https://docs.coveo.com/en/413/)).\r\n * @notSupportedIn salesforcefree\r\n */\r\nexport class ResultAttachments extends Component {\r\n  static ID = 'ResultAttachments';\r\n\r\n  static doExport = () => {\r\n    exportGlobally({\r\n      ResultAttachments: ResultAttachments,\r\n      DefaultResultAttachmentTemplate: DefaultResultAttachmentTemplate\r\n    });\r\n  };\r\n\r\n  /**\r\n   * The options for the component\r\n   * @componentOptions\r\n   */\r\n  static options: IResultAttachmentsOptions = {\r\n    /**\r\n     * Specifies the template to use to render each attachment for a top result.\r\n     *\r\n     * You can specify a previously registered template to use either by referring to its HTML `id` attribute or to a\r\n     * CSS selector (see {@link TemplateCache}).\r\n     *\r\n     * **Examples:**\r\n     *\r\n     * Specifying a previously registered template by referring to its HTML `id` attribute:\r\n     *\r\n     * ```html\r\n     * <div class=\"CoveoResultAttachments\" data-result-template-id=\"Foo\"></div>\r\n     * ```\r\n     *\r\n     * Specifying a previously registered template by referring to a CSS selector:\r\n     *\r\n     * ```html\r\n     * <div class='CoveoResultAttachments' data-result-template-selector=\".Foo\"></div>\r\n     * ```\r\n     *\r\n     * If you do not specify a custom folding template, the component uses the default result attachment template.\r\n     */\r\n    resultTemplate: TemplateComponentOptions.buildTemplateOption({\r\n      defaultFunction: e => new DefaultResultAttachmentTemplate()\r\n    }),\r\n\r\n    /**\r\n     * Specifies the template to use to render sub-attachments, which are attachments within attachments, for example\r\n     * when multiple files are embedded within a `.zip` attachment.\r\n     *\r\n     * Sub-attachments can themselves contain sub-attachments, and so on up to a certain level (see the\r\n     * [`maximumAttachmentLevel`]{@link ResultAttachments.options.maximumAttachmentLevel} option).\r\n     *\r\n     * You can specify a previously registered template to use either by referring to its HTML `id` attribute or to a\r\n     * CSS selector (see {@link TemplateCache}).\r\n     *\r\n     * **Example:**\r\n     *\r\n     * Specifying a previously registered template by referring to its HTML `id` attribute:\r\n     *\r\n     * ```html\r\n     * <div class=\"CoveoResultAttachments\" data-sub-result-template-id=\"Foo\"></div>\r\n     * ```\r\n     *\r\n     * Specifying a previously registered template by referring to a CSS selector:\r\n     *\r\n     * ```html\r\n     * <div class=\"CoveoResultAttachments\" data-sub-result-template-selector=\".Foo\"></div>\r\n     * ```\r\n     *\r\n     * By default, this option uses the same template you specify for the\r\n     * [`resultTemplate`]{@link ResultAttachments.options.resultTemplate} option.\r\n     */\r\n    subResultTemplate: TemplateComponentOptions.buildTemplateOption({\r\n      postProcessing: (value: Template, options: IResultAttachmentsOptions) => (value != null ? value : options.resultTemplate)\r\n    }),\r\n\r\n    /**\r\n     * Specifies the maximum nesting depth. Beyond this depth, the component stops rendering sub-attachments.\r\n     *\r\n     * Default value is `5`. Minimum value is `0`.\r\n     */\r\n    maximumAttachmentLevel: ComponentOptions.buildNumberOption({ defaultValue: 5, min: 0 })\r\n  };\r\n\r\n  private attachments: IQueryResult[];\r\n\r\n  /**\r\n   * Creates a new `ResultAttachments` component.\r\n   * @param element The HTMLElement on which to instantiate the component.\r\n   * @param options The options for the `ResultAttachments` component.\r\n   * @param bindings The bindings that the component requires to function normally. If not set, these will be\r\n   * automatically resolved (with a slower execution time).\r\n   * @param result The result to associate the component with.\r\n   * @param attachmentLevel The nesting depth.\r\n   */\r\n  constructor(\r\n    public element: HTMLElement,\r\n    public options?: IResultAttachmentsOptions,\r\n    public bindings?: IComponentBindings,\r\n    result?: IQueryResult,\r\n    public attachmentLevel = 0\r\n  ) {\r\n    super(element, ResultAttachments.ID, bindings);\r\n\r\n    this.options = ComponentOptions.initComponentOptions(element, ResultAttachments, options);\r\n\r\n    this.attachments = result.attachments;\r\n    if (Utils.isNonEmptyArray(this.attachments)) {\r\n      this.renderAttachments();\r\n    }\r\n  }\r\n\r\n  private renderAttachments() {\r\n    _.each(this.attachments, attachment => {\r\n      QueryUtils.setStateObjectOnQueryResult(this.queryStateModel.get(), attachment);\r\n      QueryUtils.setSearchInterfaceObjectOnQueryResult(this.searchInterface, attachment);\r\n      let subTemplatePromise =\r\n        this.attachmentLevel > 0\r\n          ? this.options.subResultTemplate.instantiateToElement(attachment)\r\n          : this.options.resultTemplate.instantiateToElement(attachment);\r\n\r\n      subTemplatePromise.then((container: HTMLElement) => {\r\n        this.autoCreateComponentsInsideResult(container, _.extend({}, attachment, { attachments: [] }));\r\n\r\n        $$(container).addClass('coveo-result-attachments-container');\r\n        this.element.appendChild(container);\r\n\r\n        if (this.attachmentHasSubAttachment(attachment) && this.attachmentLevel < this.options.maximumAttachmentLevel) {\r\n          var childAttachmentContainer = $$('div').el;\r\n          container.appendChild(childAttachmentContainer);\r\n          new ResultAttachments(childAttachmentContainer, this.options, this.bindings, attachment, this.attachmentLevel + 1);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  private attachmentHasSubAttachment(attachment: IQueryResult) {\r\n    if (Utils.isNonEmptyArray(attachment.attachments)) {\r\n      return true;\r\n    } else if (Utils.isNonEmptyArray(attachment.childResults)) {\r\n      attachment.attachments = attachment.childResults;\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  private autoCreateComponentsInsideResult(element: HTMLElement, result: IQueryResult) {\r\n    Assert.exists(element);\r\n    var initOptions = this.searchInterface.options;\r\n    var initParameters: IInitializationParameters = {\r\n      options: initOptions,\r\n      bindings: this.getBindings(),\r\n      result: result\r\n    };\r\n    Initialization.automaticallyCreateComponentsInside(element, initParameters, [ResultAttachments.ID]);\r\n  }\r\n}\r\n\r\nInitialization.registerAutoCreateComponent(ResultAttachments);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/ResultAttachments/ResultAttachments.ts","import { Template } from '../Templates/Template';\r\nimport { IQueryResult } from '../../rest/QueryResult';\r\n\r\nexport class DefaultResultAttachmentTemplate extends Template {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  instantiateToString(queryResult?: IQueryResult): string {\r\n    return '<div><span class=\"CoveoIcon\"></span> <a class=\"CoveoResultLink\"></a> <span class=\"CoveoQuickview\"></span></div>';\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/ResultAttachments/DefaultResultAttachmentTemplate.ts"],"sourceRoot":""}