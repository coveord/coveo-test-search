{"version":3,"sources":["SearchButton.min__5f3280c404a1ee75a113.js","./src/ui/SearchButton/SearchButton.ts"],"names":["webpackJsonpCoveo__temporary","191","module","exports","__webpack_require__","__extends","this","extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__","constructor","prototype","create","defineProperty","value","element","options","bindings","SearchButton","ID","AccessibleButton","withElement","withOwner","bind","withLabel","l","withSelectAction","handleClick","build","Utils","trim","$$","text","svgMagnifierContainer","className","SVGIcons","icons","search","el","SVGDom","addClassToSVGInContainer","svgLoadingAnimationContainer","loading","appendChild","_this","click","logger","debug","updateQueryStateModelWithSearchboxQuery","usageAnalytics","logSearchEvent","analyticsActionCauseList","searchboxSubmit","queryController","executeQuery","origin","searchbox","queryStateModel","set","QueryStateModel","attributesEnum","q","getText","doExport","exportGlobally","Component","Initialization","registerAutoCreateComponent"],"mappings":"AAAAA,8BAA8B,KAExBC,IACA,SAAUC,EAAQC,EAASC,GAEjC,YAEA,IAAIC,GAAaC,MAAQA,KAAKD,WAAc,WACxC,GAAIE,GAAgBC,OAAOC,iBACpBC,uBAA2BC,QAAS,SAAUC,EAAGC,GAAKD,EAAEF,UAAYG,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAIC,KAAKD,GAAOA,EAAEE,eAAeD,KAAIF,EAAEE,GAAKD,EAAEC,IACzE,OAAO,UAAUF,EAAGC,GAEhB,QAASG,KAAOV,KAAKW,YAAcL,EADnCL,EAAcK,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAaL,OAAOW,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,GAAIF,OAGvFR,QAAOY,eAAejB,EAAS,cAAgBkB,OAAO,GCjBtD,YACA,OACA,QACA,OACA,QACA,QACA,OACA,QACA,OAEA,OACA,QAgBA,cAkBE,WAAmBC,EAA6BC,EAAgCC,GAAhF,MACE,YAAMF,EAASG,EAAaC,GAAIF,IAAS,IAUzC,IAXiB,EAAAF,UAA6B,EAAAC,WAG9C,GAAI,GAAAI,kBACDC,YAAYN,GACZO,UAAU,EAAKC,MACfC,UAAU,EAAAC,EAAE,WACZC,iBAAiB,WAAM,SAAKC,gBAC5BC,QAGwC,IAAvC,EAAAC,MAAMC,KAAK,EAAAC,GAAG,EAAKhB,SAASiB,QAAe,CAC7C,GAAMC,GAAwB,EAAAF,GAAG,QAAUG,UAAW,uBAAyB,EAAAC,SAASC,MAAMC,QAAQC,EACtG,GAAAC,OAAOC,yBAAyBP,EAAuB,0BACvD,IAAMQ,GAA+B,EAAAV,GAAG,QAAUG,UAAW,+BAAiC,EAAAC,SAASC,MAAMM,SAASJ,EACtH,GAAAC,OAAOC,yBAAyBC,EAA8B,mCAC9D1B,EAAQ4B,YAAYV,GACpBlB,EAAQ4B,YAAYF,GDClB,MAAOG,GCsBf,MA1DkC,QA2CzB,YAAAC,MAAP,WACE9C,KAAK4B,eAGC,YAAAA,YAAR,WACE5B,KAAK+C,OAAOC,MAAM,2CAClBhD,KAAKiD,0CACLjD,KAAKkD,eAAeC,eAAiC,EAAAC,yBAAyBC,oBAC9ErD,KAAKsD,gBAAgBC,cAAeC,OAAQxD,QAGtC,YAAAiD,wCAAR,WACE,GAAMQ,GAAYzD,KAAKiB,SAAWjB,KAAKiB,QAAQwC,SAC/CA,IAAazD,KAAK0D,gBAAgBC,IAAI,EAAAC,gBAAgBC,eAAeC,EAAGL,EAAUM,YAvD7E,EAAA3C,GAAK,eAEL,EAAA4C,SAAW,WAChB,EAAAC,gBACE9C,aAAcA,KAIX,EAAAF,WAiDT,GA1DkC,EAAAiD,UAArB,GAAA/C,eA4Db,EAAAgD,eAAeC,4BAA4BjD","file":"SearchButton.min__5f3280c404a1ee75a113.js","sourcesContent":["webpackJsonpCoveo__temporary([78],{\n\n/***/ 191:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar GlobalExports_1 = __webpack_require__(3);\r\nvar Strings_1 = __webpack_require__(6);\r\nvar AccessibleButton_1 = __webpack_require__(15);\r\nvar Dom_1 = __webpack_require__(1);\r\nvar SVGDom_1 = __webpack_require__(16);\r\nvar SVGIcons_1 = __webpack_require__(12);\r\nvar Utils_1 = __webpack_require__(4);\r\nvar AnalyticsActionListMeta_1 = __webpack_require__(10);\r\nvar Component_1 = __webpack_require__(7);\r\nvar Initialization_1 = __webpack_require__(2);\r\nvar QueryStateModel_1 = __webpack_require__(13);\r\n/**\r\n * The SearchButton component renders a search icon that the end user can click to trigger a new query.\r\n *\r\n * See also the {@link Searchbox} component, which can automatically instantiate a SearchButton component along with a\r\n * {@link Querybox} component or an {@link Omnibox} component.\r\n */\r\nvar SearchButton = /** @class */ (function (_super) {\r\n    __extends(SearchButton, _super);\r\n    /**\r\n     * Creates a new SearchButton. Binds a `click` event on the element. Adds a search icon on the element.\r\n     * @param element The HTMLElement on which to instantiate the component.\r\n     * @param options The options for the SearchButton component.\r\n     * @param bindings The bindings that the component requires to function normally. If not set, these will be\r\n     * automatically resolved (with a slower execution time).\r\n     */\r\n    function SearchButton(element, options, bindings) {\r\n        var _this = _super.call(this, element, SearchButton.ID, bindings) || this;\r\n        _this.element = element;\r\n        _this.options = options;\r\n        new AccessibleButton_1.AccessibleButton()\r\n            .withElement(element)\r\n            .withOwner(_this.bind)\r\n            .withLabel(Strings_1.l('Search'))\r\n            .withSelectAction(function () { return _this.handleClick(); })\r\n            .build();\r\n        // Provide a magnifier icon if element contains nothing\r\n        if (Utils_1.Utils.trim(Dom_1.$$(_this.element).text()) == '') {\r\n            var svgMagnifierContainer = Dom_1.$$('span', { className: 'coveo-search-button' }, SVGIcons_1.SVGIcons.icons.search).el;\r\n            SVGDom_1.SVGDom.addClassToSVGInContainer(svgMagnifierContainer, 'coveo-search-button-svg');\r\n            var svgLoadingAnimationContainer = Dom_1.$$('span', { className: 'coveo-search-button-loading' }, SVGIcons_1.SVGIcons.icons.loading).el;\r\n            SVGDom_1.SVGDom.addClassToSVGInContainer(svgLoadingAnimationContainer, 'coveo-search-button-loading-svg');\r\n            element.appendChild(svgMagnifierContainer);\r\n            element.appendChild(svgLoadingAnimationContainer);\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Triggers the `click` event handler, which logs a `searchboxSubmit` event in the usage analytics and executes a\r\n     * query.\r\n     */\r\n    SearchButton.prototype.click = function () {\r\n        this.handleClick();\r\n    };\r\n    SearchButton.prototype.handleClick = function () {\r\n        this.logger.debug('Performing query following button click');\r\n        this.updateQueryStateModelWithSearchboxQuery();\r\n        this.usageAnalytics.logSearchEvent(AnalyticsActionListMeta_1.analyticsActionCauseList.searchboxSubmit, {});\r\n        this.queryController.executeQuery({ origin: this });\r\n    };\r\n    SearchButton.prototype.updateQueryStateModelWithSearchboxQuery = function () {\r\n        var searchbox = this.options && this.options.searchbox;\r\n        searchbox && this.queryStateModel.set(QueryStateModel_1.QueryStateModel.attributesEnum.q, searchbox.getText());\r\n    };\r\n    SearchButton.ID = 'SearchButton';\r\n    SearchButton.doExport = function () {\r\n        GlobalExports_1.exportGlobally({\r\n            SearchButton: SearchButton\r\n        });\r\n    };\r\n    SearchButton.options = {};\r\n    return SearchButton;\r\n}(Component_1.Component));\r\nexports.SearchButton = SearchButton;\r\nInitialization_1.Initialization.registerAutoCreateComponent(SearchButton);\r\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// SearchButton.min__5f3280c404a1ee75a113.js","import { exportGlobally } from '../../GlobalExports';\r\nimport { l } from '../../strings/Strings';\r\nimport { AccessibleButton } from '../../utils/AccessibleButton';\r\nimport { $$ } from '../../utils/Dom';\r\nimport { SVGDom } from '../../utils/SVGDom';\r\nimport { SVGIcons } from '../../utils/SVGIcons';\r\nimport { Utils } from '../../utils/Utils';\r\nimport { IAnalyticsNoMeta, analyticsActionCauseList } from '../Analytics/AnalyticsActionListMeta';\r\nimport { Component } from '../Base/Component';\r\nimport { IComponentBindings } from '../Base/ComponentBindings';\r\nimport { Initialization } from '../Base/Initialization';\r\nimport { QueryStateModel } from '../../models/QueryStateModel';\r\n\r\nexport interface ISearchButtonOptions {\r\n  searchbox?: ISearchButtonSearchbox;\r\n}\r\n\r\nexport interface ISearchButtonSearchbox {\r\n  getText: () => string;\r\n}\r\n\r\n/**\r\n * The SearchButton component renders a search icon that the end user can click to trigger a new query.\r\n *\r\n * See also the {@link Searchbox} component, which can automatically instantiate a SearchButton component along with a\r\n * {@link Querybox} component or an {@link Omnibox} component.\r\n */\r\nexport class SearchButton extends Component {\r\n  static ID = 'SearchButton';\r\n\r\n  static doExport = () => {\r\n    exportGlobally({\r\n      SearchButton: SearchButton\r\n    });\r\n  };\r\n\r\n  static options: ISearchButtonOptions = {};\r\n\r\n  /**\r\n   * Creates a new SearchButton. Binds a `click` event on the element. Adds a search icon on the element.\r\n   * @param element The HTMLElement on which to instantiate the component.\r\n   * @param options The options for the SearchButton component.\r\n   * @param bindings The bindings that the component requires to function normally. If not set, these will be\r\n   * automatically resolved (with a slower execution time).\r\n   */\r\n  constructor(public element: HTMLElement, public options?: ISearchButtonOptions, bindings?: IComponentBindings) {\r\n    super(element, SearchButton.ID, bindings);\r\n\r\n    new AccessibleButton()\r\n      .withElement(element)\r\n      .withOwner(this.bind)\r\n      .withLabel(l('Search'))\r\n      .withSelectAction(() => this.handleClick())\r\n      .build();\r\n\r\n    // Provide a magnifier icon if element contains nothing\r\n    if (Utils.trim($$(this.element).text()) == '') {\r\n      const svgMagnifierContainer = $$('span', { className: 'coveo-search-button' }, SVGIcons.icons.search).el;\r\n      SVGDom.addClassToSVGInContainer(svgMagnifierContainer, 'coveo-search-button-svg');\r\n      const svgLoadingAnimationContainer = $$('span', { className: 'coveo-search-button-loading' }, SVGIcons.icons.loading).el;\r\n      SVGDom.addClassToSVGInContainer(svgLoadingAnimationContainer, 'coveo-search-button-loading-svg');\r\n      element.appendChild(svgMagnifierContainer);\r\n      element.appendChild(svgLoadingAnimationContainer);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Triggers the `click` event handler, which logs a `searchboxSubmit` event in the usage analytics and executes a\r\n   * query.\r\n   */\r\n  public click() {\r\n    this.handleClick();\r\n  }\r\n\r\n  private handleClick() {\r\n    this.logger.debug('Performing query following button click');\r\n    this.updateQueryStateModelWithSearchboxQuery();\r\n    this.usageAnalytics.logSearchEvent<IAnalyticsNoMeta>(analyticsActionCauseList.searchboxSubmit, {});\r\n    this.queryController.executeQuery({ origin: this });\r\n  }\r\n\r\n  private updateQueryStateModelWithSearchboxQuery() {\r\n    const searchbox = this.options && this.options.searchbox;\r\n    searchbox && this.queryStateModel.set(QueryStateModel.attributesEnum.q, searchbox.getText());\r\n  }\r\n}\r\n\r\nInitialization.registerAutoCreateComponent(SearchButton);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/SearchButton/SearchButton.ts"],"sourceRoot":""}