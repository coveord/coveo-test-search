{"version":3,"sources":["Quickview.min__5f3280c404a1ee75a113.js","./src/utils/AccessibleModal.ts","./src/events/QuickviewEvents.ts","./src/ui/Quickview/QuickviewDocument.ts","./src/ui/Quickview/Quickview.ts","./src/ui/FocusTrap/FocusTrap.ts","./src/ui/Quickview/DefaultQuickviewTemplate.ts","./src/ui/Quickview/QuickviewDocumentIframe.ts","./src/ui/Quickview/QuickviewDocumentHeader.ts","./src/ui/Quickview/QuickviewDocumentWords.ts","./src/ui/Quickview/QuickviewDocumentWord.ts","./src/ui/Quickview/QuickviewDocumentWordColor.ts","./src/ui/Quickview/QuickviewDocumentWordButton.ts","./src/ui/Quickview/QuickviewDocumentPreviewBar.ts"],"names":["webpackJsonpCoveo__temporary","220","module","exports","__webpack_require__","__assign","this","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","defineProperty","value","className","ownerElement","modalboxModule","options","ModalBox","sizeMod","get","focusTrap","enumerable","configurable","activeModal","modalBox","content","wrapper","element","querySelector","openResult","parameters","isOpen","openModalAndTrap","validation","origin","title","DomUtils","getQuickviewHeader","result","bindings","el","makeAccessible","open","initiallyFocusedElement","document","activeElement","onModalClose","body","overlayClose","FocusTrap","close","setAttribute","headerElement","makeCloseButtonAccessible","closeButton","l","tabIndex","focus","$$","on","KeyboardUtils","keypressAction","KEYBOARD","ENTER","click","disable","contains","AccessibleModal","225","quickviewLoaded","openQuickview","QuickviewEvents","231","__extends","extendStatics","setPrototypeOf","__proto__","Array","d","b","__","constructor","create","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","e","rejected","done","then","apply","__generator","verb","v","op","f","TypeError","_","y","label","ops","pop","trys","push","g","sent","throw","return","Symbol","iterator","HIGHLIGHT_PREFIX","QuickviewDocument","ID","ComponentOptions","initComponentOptions","resolveResult","Assert","exists","_this","createDom","container","appendChild","header","QuickviewDocumentHeader","iframe","QuickviewDocumentIframe","append","beforeLoad","termsToHighlight","termsWereModified","documentHTML","documentWords","previewBar_1","afterLoad","error_1","_a","ensureDom","Date","getTime","initialTermsToHighlight","triggerOpenQuickViewEvent","wereTermsToHighlightModified","handleTermsToHighlight","query","queryController","getEndpoint","getDocumentHtml","uniqueId","queryObject","requestedOutputSize","maximumDocumentSize","render","QuickviewDocumentWords","QuickviewDocumentPreviewBar","each","words","word","button","QuickviewDocumentWordButton","addWord","triggerQuickviewLoaded","renderError","keys","args","root","trigger","getLastQuery","duration","term","substring","q","Utils","arrayEqual","buildNumberOption","defaultValue","min","Component","Initialization","registerAutoCreateComponent","266","Quickview","contentTemplate","DefaultQuickviewTemplate","test","innerHTML","buildContent","bindClick","resultElement","bind","ResultListEvents","event","stopPropagation","modalbox","searchInterface","modalContainer","icon","buildIcon","caption","buildCaption","buildTooltipIfNotInCardLayout","SVGIcons","icons","quickview","SVGDom","addClassToSVGInContainer","toLocaleString","resultsAreInCardLayout","arrow","buildPopper","queryStateModel","QueryStateModel","attributesEnum","layout","popperReference","placement","tooltipPlacement","modifiers","preventOverflow","boundariesElement","padding","offset","eventsEnabled","update","resultCurrentlyBeingRendered","HTMLElement","prepareOpenQuickviewObject","createModalBox","bindQuickviewEvents","animateAndOpen","logUsageAnalyticsEvent","set","getHashId","queryUid","index","StringUtils","hashCode","usageAnalytics","logClickEvent","analyticsActionCauseList","documentQuickview","author","getFieldValue","documentURL","clickUri","documentTitle","hasHtmlVersion","alwaysShow","clickAction","AccessibleButton","withElement","withSelectAction","withLabel","withOwner","build","style","display","openerObject","anim","loadingAnimation","remove","quickviewDocument","find","computeCssClassName","dispatchNamedMethodCallOrComponentCreation","computedModalBoxContent","addClass","builtContent","showDate","closeQuickview","prepareQuickviewContent","domContent","initOptions","initParameters","containsQuickviewDocumentAndCustomAnimation","instantiateTemplateToDom","getBindings","automaticallyCreateComponentsInside","initResult","undefined","enableLoadingAnimation","prepend","templateInstantiated","e_1","instantiateToElement","logger","warn","doExport","exportGlobally","buildBooleanOption","buildStringOption","TemplateComponentOptions","buildTemplateOption","selectorAttr","idAttr","buildOption","ComponentOptionsType","NONE","loadingAnimationSelector","getAttribute","documentElement","detach","id","loadingAnimationTemplate","loadResultTemplateFromId","checkCondition","getBasicLoadingAnimation","buildCustomOption","465","hiddenElements","enable","sortBy","querySelectorAll","removeEventListener","focusInEvent","focusOutEvent","showHiddenElements","enabled","addEventListener","onFocusIn","onFocusOut","hideAllExcept","removeAttribute","hideElement","hideSiblings","allowedElement","parent","parentElement","without","children","forEach","elementToHide","getFocusableSibling","previous","elements","focusableElements","currentIndex","indexOf","focusSibling","sibling","focusFirstElement","elementIsBefore","oldElement","newElement","compareDocumentPosition","Node","DOCUMENT_POSITION_PRECEDING","onLosingFocus","Defer","defer","focusIsAllowed","elementIsInPage","relatedTarget","target","636","637","instantiateToString","queryResult","Template","638","buildIFrame","iframeElement","contentWindow","isNewQuickviewDocument","meta","head","htmlDocument","quickviewIsClosedByEndUser","onload","addClientSideTweaksToIFrameStyling","writeToIFrame","error","errorMessage","status","errorDocument","implementation","createHTMLDocument","fontFamily","text","contentDocument","sandbox","src","iframewrapper","allowDocumentLinkToEscapeSandbox","write","getElementsByTagName","outerHTML","findAll","link","type","cssText","DeviceUtils","isIos","margin","createTextNode","639","buildHeader","wordButton","640","scanDocument","quickviewWord","QuickviewDocumentWord","doCompleteInitialScanForKeywordInDocument","alreadyScannedKeyword","indexIdentifier","addElement","occurrence","641","count","currentNavigationPosition","Logger","navigateForward","highlightNavigation","putElementIntoView","navigateBackward","navigateTo","position","parsed","parseKeywordIdentifier","keywordIdentifier","keywordOccurrencesInDocument","indexTermPart","keywordTermPart","getText","color","QuickviewDocumentWordColor","backgroundColor","isTaggedWord","nodeName","toLowerCase","currentElement","otherElements","htmlColor","invert","scrollIntoView","innerTextOfHTMLElement","getHighlightedInnerText","resolveOriginalTerm","highlight","originalTerm","originalTermMatch","equalsCaseInsensitive","expansionMatch","expansion","first","parts","substr","match","parseInt","642","rgbExtracted","r","saturate","hsv","ColorUtils","rgbToHsv","rgb","hsvToRgb","643","previewBar","wordHtml","buildName","renderArrow","borderColor","name","navigate","backward","pdf","closest","direction","arrowIcon","644","wordIndicators","Map","renderPreviewBar","currentWord","indicators","border","defaultStyleColor","width","top","right","height","indicator","renderWordPositionIndicator","has","handleOverlappingIndicators","docHeight","Doc","elementPosition","getBoundingClientRect","previewUnit","allIndicators","otherIndicatorAtSamePositionInDocument","chain","otherIndicator"],"mappings":"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","file":"Quickview.min__5f3280c404a1ee75a113.js","sourcesContent":["webpackJsonpCoveo__temporary([18],{\n\n/***/ 220:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n            t[p] = s[p];\r\n    }\r\n    return t;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar ExternalModulesShim_1 = __webpack_require__(26);\r\nvar FocusTrap_1 = __webpack_require__(465);\r\nvar Strings_1 = __webpack_require__(6);\r\nvar Dom_1 = __webpack_require__(1);\r\nvar KeyboardUtils_1 = __webpack_require__(25);\r\nvar Core_1 = __webpack_require__(20);\r\nvar AccessibleModal = /** @class */ (function () {\r\n    function AccessibleModal(className, ownerElement, modalboxModule, options) {\r\n        if (modalboxModule === void 0) { modalboxModule = ExternalModulesShim_1.ModalBox; }\r\n        if (options === void 0) { options = {}; }\r\n        this.className = className;\r\n        this.ownerElement = ownerElement;\r\n        this.modalboxModule = modalboxModule;\r\n        this.options = __assign({\r\n            sizeMod: 'big'\r\n        }, options);\r\n    }\r\n    Object.defineProperty(AccessibleModal.prototype, \"isOpen\", {\r\n        get: function () {\r\n            return !!this.focusTrap;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AccessibleModal.prototype, \"element\", {\r\n        get: function () {\r\n            return this.activeModal && this.activeModal.modalBox;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AccessibleModal.prototype, \"content\", {\r\n        get: function () {\r\n            return this.activeModal && this.activeModal.content;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AccessibleModal.prototype, \"wrapper\", {\r\n        get: function () {\r\n            return this.activeModal && this.activeModal.wrapper;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AccessibleModal.prototype, \"headerElement\", {\r\n        get: function () {\r\n            return this.element && this.element.querySelector('.coveo-modal-header h1');\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    AccessibleModal.prototype.openResult = function (parameters) {\r\n        if (this.isOpen) {\r\n            return;\r\n        }\r\n        this.openModalAndTrap({\r\n            content: parameters.content,\r\n            validation: parameters.validation,\r\n            origin: parameters.origin,\r\n            title: Core_1.DomUtils.getQuickviewHeader(parameters.result, parameters.options, parameters.bindings).el\r\n        });\r\n        this.makeAccessible(parameters.options.title || parameters.result.title);\r\n    };\r\n    AccessibleModal.prototype.open = function (parameters) {\r\n        if (this.isOpen) {\r\n            return;\r\n        }\r\n        this.openModalAndTrap(parameters);\r\n        this.makeAccessible();\r\n    };\r\n    AccessibleModal.prototype.openModalAndTrap = function (parameters) {\r\n        var _this = this;\r\n        this.initiallyFocusedElement = parameters.origin || document.activeElement;\r\n        this.activeModal = this.modalboxModule.open(parameters.content, {\r\n            title: parameters.title,\r\n            className: this.className,\r\n            validation: function () {\r\n                _this.onModalClose();\r\n                return parameters.validation();\r\n            },\r\n            body: this.ownerElement,\r\n            sizeMod: this.options.sizeMod,\r\n            overlayClose: this.options.overlayClose\r\n        });\r\n        this.focusTrap = new FocusTrap_1.FocusTrap(this.element);\r\n    };\r\n    AccessibleModal.prototype.close = function () {\r\n        if (!this.isOpen) {\r\n            return;\r\n        }\r\n        this.activeModal.close();\r\n        this.activeModal = null;\r\n    };\r\n    AccessibleModal.prototype.makeAccessible = function (title) {\r\n        this.element.setAttribute('aria-modal', 'true');\r\n        if (title) {\r\n            this.headerElement.setAttribute('aria-label', title);\r\n        }\r\n        this.makeCloseButtonAccessible();\r\n    };\r\n    AccessibleModal.prototype.makeCloseButtonAccessible = function () {\r\n        var closeButton = this.element.querySelector('.coveo-small-close');\r\n        closeButton.setAttribute('aria-label', Strings_1.l('Close'));\r\n        closeButton.setAttribute('role', 'button');\r\n        closeButton.tabIndex = 0;\r\n        closeButton.focus();\r\n        Dom_1.$$(closeButton).on('keyup', KeyboardUtils_1.KeyboardUtils.keypressAction(KeyboardUtils_1.KEYBOARD.ENTER, function () { return closeButton.click(); }));\r\n    };\r\n    AccessibleModal.prototype.onModalClose = function () {\r\n        this.focusTrap.disable();\r\n        this.focusTrap = null;\r\n        if (this.initiallyFocusedElement && document.body.contains(this.initiallyFocusedElement)) {\r\n            this.initiallyFocusedElement.focus();\r\n        }\r\n    };\r\n    return AccessibleModal;\r\n}());\r\nexports.AccessibleModal = AccessibleModal;\r\n\n\n/***/ }),\n\n/***/ 225:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * The `QuickviewEvents` static class contains the string definitions of all events that strongly relate to the\r\n * [`Quickview`]{@link Quickview} component.\r\n */\r\nvar QuickviewEvents = /** @class */ (function () {\r\n    function QuickviewEvents() {\r\n    }\r\n    /**\r\n     * Triggered by the [`QuickviewDocument`]{@link QuickviewDocument} component when the content to display in the\r\n     * quickview modal window has just finished downloading.\r\n     *\r\n     * The [`Quickview`]{@link Quickview} component listens to this event to know when to remove its loading animation.\r\n     *\r\n     * All `quickviewLoaded` event handlers receive a [`QuickviewLoadedEventArgs`]{@link IQuickviewLoadedEventArgs} object\r\n     * as an argument.\r\n     *\r\n     * @type {string} The string value is `quickviewLoaded`.\r\n     */\r\n    QuickviewEvents.quickviewLoaded = 'quickviewLoaded';\r\n    /**\r\n     * Triggered by the [`QuickviewDocument`]{@link QuickviewDocument} component when the end user has just clicked the\r\n     * **Quickview** button/link to open the quickview modal window.\r\n     *\r\n     * This event allows external code to modify the terms to highlight before the content of the quickview modal window\r\n     * is rendered.\r\n     *\r\n     * All `openQuickview` event handlers receive an\r\n     * [`OpenQuickviewEventArgs`]{@link ResultListEvents.IOpenQuickviewEventArgs} object as an argument.\r\n     *\r\n     * @type {string} The string value is `openQuickview`.\r\n     */\r\n    QuickviewEvents.openQuickview = 'openQuickview';\r\n    return QuickviewEvents;\r\n}());\r\nexports.QuickviewEvents = QuickviewEvents;\r\n\n\n/***/ }),\n\n/***/ 231:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n            t[p] = s[p];\r\n    }\r\n    return t;\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar QuickviewEvents_1 = __webpack_require__(225);\r\nvar Assert_1 = __webpack_require__(5);\r\nvar Dom_1 = __webpack_require__(1);\r\nvar Utils_1 = __webpack_require__(4);\r\nvar Component_1 = __webpack_require__(7);\r\nvar ComponentOptions_1 = __webpack_require__(8);\r\nvar Initialization_1 = __webpack_require__(2);\r\nvar QuickviewDocumentIframe_1 = __webpack_require__(638);\r\nvar QuickviewDocumentHeader_1 = __webpack_require__(639);\r\nvar QuickviewDocumentWords_1 = __webpack_require__(640);\r\nvar underscore_1 = __webpack_require__(0);\r\nvar QuickviewDocumentWordButton_1 = __webpack_require__(643);\r\nvar QuickviewDocumentPreviewBar_1 = __webpack_require__(644);\r\nexports.HIGHLIGHT_PREFIX = 'CoveoHighlight';\r\n/**\r\n * The `QuickviewDocument` component normally exists within a [`Quickview`]{@link Quickview} component. The sole purpose\r\n * of this component is to add an `<iframe>` which loads the correct HTML version of the current item.\r\n *\r\n * The default [`contentTemplate`]{@link Quickview.options.contentTemplate} of the\r\n * `Quickview` component includes the `QuickviewDocument` component.\r\n *\r\n * This component is a result template component (see [Result Templates](https://docs.coveo.com/en/413/)).\r\n */\r\nvar QuickviewDocument = /** @class */ (function (_super) {\r\n    __extends(QuickviewDocument, _super);\r\n    /**\r\n     * Creates a new `QuickviewDocument` component.\r\n     * @param element The HTMLElement on which to instantiate the component.\r\n     * @param options The options for the `QuickviewDocument` component.\r\n     * @param bindings The bindings that the component requires to function normally. If not set, these will be\r\n     * automatically resolved (with a slower execution time).\r\n     * @param result The current result.\r\n     */\r\n    function QuickviewDocument(element, options, bindings, result) {\r\n        var _this = _super.call(this, element, QuickviewDocument.ID, bindings) || this;\r\n        _this.element = element;\r\n        _this.options = options;\r\n        _this.result = result;\r\n        _this.options = ComponentOptions_1.ComponentOptions.initComponentOptions(element, QuickviewDocument, options);\r\n        _this.result = result || _this.resolveResult();\r\n        Assert_1.Assert.exists(_this.result);\r\n        return _this;\r\n    }\r\n    QuickviewDocument.prototype.createDom = function () {\r\n        var container = Dom_1.$$('div', {\r\n            className: 'coveo-quickview-document'\r\n        });\r\n        this.element.appendChild(container.el);\r\n        this.header = new QuickviewDocumentHeader_1.QuickviewDocumentHeader();\r\n        this.iframe = new QuickviewDocumentIframe_1.QuickviewDocumentIframe();\r\n        container.append(this.header.el);\r\n        container.append(this.iframe.el);\r\n    };\r\n    QuickviewDocument.prototype.open = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            var beforeLoad, termsToHighlight, termsWereModified, documentHTML, documentWords, previewBar_1, afterLoad, error_1, afterLoad;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.ensureDom();\r\n                        beforeLoad = new Date().getTime();\r\n                        termsToHighlight = this.initialTermsToHighlight;\r\n                        this.triggerOpenQuickViewEvent({ termsToHighlight: termsToHighlight });\r\n                        termsWereModified = this.wereTermsToHighlightModified(termsToHighlight);\r\n                        if (termsWereModified) {\r\n                            this.handleTermsToHighlight(termsToHighlight, this.query);\r\n                        }\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 4, , 6]);\r\n                        return [4 /*yield*/, this.queryController.getEndpoint().getDocumentHtml(this.result.uniqueId, {\r\n                                queryObject: this.query,\r\n                                requestedOutputSize: this.options.maximumDocumentSize\r\n                            })];\r\n                    case 2:\r\n                        documentHTML = _a.sent();\r\n                        return [4 /*yield*/, this.iframe.render(documentHTML, this.result.title)];\r\n                    case 3:\r\n                        _a.sent();\r\n                        documentWords = new QuickviewDocumentWords_1.QuickviewDocumentWords(this.iframe, this.result);\r\n                        previewBar_1 = new QuickviewDocumentPreviewBar_1.QuickviewDocumentPreviewBar(this.iframe, documentWords);\r\n                        underscore_1.each(documentWords.words, function (word) {\r\n                            var button = new QuickviewDocumentWordButton_1.QuickviewDocumentWordButton(word, previewBar_1, _this.iframe);\r\n                            _this.header.addWord(button);\r\n                        });\r\n                        afterLoad = new Date().getTime();\r\n                        this.triggerQuickviewLoaded(afterLoad - beforeLoad);\r\n                        return [3 /*break*/, 6];\r\n                    case 4:\r\n                        error_1 = _a.sent();\r\n                        return [4 /*yield*/, this.iframe.renderError(error_1)];\r\n                    case 5:\r\n                        _a.sent();\r\n                        afterLoad = new Date().getTime();\r\n                        this.triggerQuickviewLoaded(afterLoad - beforeLoad);\r\n                        return [3 /*break*/, 6];\r\n                    case 6: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Object.defineProperty(QuickviewDocument.prototype, \"initialTermsToHighlight\", {\r\n        get: function () {\r\n            return underscore_1.keys(this.result.termsToHighlight);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    QuickviewDocument.prototype.triggerOpenQuickViewEvent = function (args) {\r\n        Dom_1.$$(this.root).trigger(QuickviewEvents_1.QuickviewEvents.openQuickview, args);\r\n    };\r\n    Object.defineProperty(QuickviewDocument.prototype, \"query\", {\r\n        get: function () {\r\n            return __assign({}, this.queryController.getLastQuery());\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    QuickviewDocument.prototype.triggerQuickviewLoaded = function (duration) {\r\n        Dom_1.$$(this.element).trigger(QuickviewEvents_1.QuickviewEvents.quickviewLoaded, {\r\n            duration: duration\r\n        });\r\n    };\r\n    QuickviewDocument.prototype.handleTermsToHighlight = function (termsToHighlight, queryObject) {\r\n        var _this = this;\r\n        for (var term in this.result.termsToHighlight) {\r\n            delete this.result.termsToHighlight[term];\r\n        }\r\n        var query = '';\r\n        underscore_1.each(termsToHighlight, function (term) {\r\n            query += term + ' ';\r\n            _this.result.termsToHighlight[term] = [term];\r\n        });\r\n        query = query.substring(0, query.length - 1);\r\n        queryObject.q = query;\r\n    };\r\n    QuickviewDocument.prototype.wereTermsToHighlightModified = function (termsToHighlight) {\r\n        return !Utils_1.Utils.arrayEqual(termsToHighlight, this.initialTermsToHighlight);\r\n    };\r\n    QuickviewDocument.ID = 'QuickviewDocument';\r\n    /**\r\n     * The options for the component\r\n     * @componentOptions\r\n     */\r\n    QuickviewDocument.options = {\r\n        /**\r\n         * Specifies the maximum preview size that the index should return.\r\n         *\r\n         * Default value is `0`, and the index returns the entire preview. Minimum value is `0`.\r\n         */\r\n        maximumDocumentSize: ComponentOptions_1.ComponentOptions.buildNumberOption({ defaultValue: 0, min: 0 })\r\n    };\r\n    return QuickviewDocument;\r\n}(Component_1.Component));\r\nexports.QuickviewDocument = QuickviewDocument;\r\nInitialization_1.Initialization.registerAutoCreateComponent(QuickviewDocument);\r\n\n\n/***/ }),\n\n/***/ 266:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar popper_js_1 = __webpack_require__(93);\r\n__webpack_require__(636);\r\nvar QuickviewEvents_1 = __webpack_require__(225);\r\nvar ResultListEvents_1 = __webpack_require__(29);\r\nvar ExternalModulesShim_1 = __webpack_require__(26);\r\nvar GlobalExports_1 = __webpack_require__(3);\r\nvar QueryStateModel_1 = __webpack_require__(13);\r\nvar Strings_1 = __webpack_require__(6);\r\nvar AccessibleButton_1 = __webpack_require__(15);\r\nvar Dom_1 = __webpack_require__(1);\r\nvar DomUtils_1 = __webpack_require__(91);\r\nvar StringUtils_1 = __webpack_require__(22);\r\nvar SVGDom_1 = __webpack_require__(16);\r\nvar SVGIcons_1 = __webpack_require__(12);\r\nvar Utils_1 = __webpack_require__(4);\r\nvar AnalyticsActionListMeta_1 = __webpack_require__(10);\r\nvar Component_1 = __webpack_require__(7);\r\nvar ComponentOptions_1 = __webpack_require__(8);\r\nvar IComponentOptions_1 = __webpack_require__(47);\r\nvar Initialization_1 = __webpack_require__(2);\r\nvar TemplateComponentOptions_1 = __webpack_require__(61);\r\nvar DefaultQuickviewTemplate_1 = __webpack_require__(637);\r\nvar QuickviewDocument_1 = __webpack_require__(231);\r\nvar AccessibleModal_1 = __webpack_require__(220);\r\n/**\r\n * The `Quickview` component renders a button/link which the end user can click to open a modal box containing certain\r\n * information about a result. Most of the time, this component references a\r\n * [`QuickviewDocument`]{@link QuickviewDocument} in its [`contentTemplate`]{@link Quickview.options.contentTemplate}.\r\n *\r\n * **Notes:**\r\n * > - `Quickview` is not meant to replace a [ResultLink]{@link ResultLink} to access an item; it has certain limitations (e.g., custom styles and embedded\r\n * images/links may not work as expected in a `Quickview`).\r\n * > - You can change the appearance of the `Quickview` link/button by adding elements in the inner HTML of its `div`.\r\n * > - You can change the content of the `Quickview` modal box link by specifying a template `id` or CSS selector (see\r\n * > the [`contentTemplate`]{@link Quickview.options.contentTemplate} option).\r\n * > - When using Coveo for Salesforce 3.16, in an environment compliant with LockerService, ensure you use `CoveoSalesforceQuickview` (see [Changing the Default Quick View in Coveo for Salesforce](https://docs.coveo.com/en/1234/)).\r\n *\r\n * **Example:**\r\n * ```html\r\n * [ ... ]\r\n *\r\n * <script class='result-template' type='text/underscore' id='myContentTemplateId'>\r\n *   <div>\r\n *     <span>This content will be displayed when then end user opens the quickview modal box. It could also include other Coveo component, and use core helpers.</span>\r\n *     <table class=\"CoveoFieldTable\">\r\n *       <tr data-field=\"@liboardshorttitle\" data-caption=\"Board\" />\r\n *       <tr data-field=\"@licategoryshorttitle\" data-caption=\"Category\" />\r\n *       <tr data-field=\"@sysauthor\" data-caption=\"Author\" />\r\n *     </table>\r\n *   </div>\r\n * </script>\r\n *\r\n * [ ... ]\r\n *\r\n * <div class='CoveoResultList'>\r\n *   <script class='result-template' type='text/underscore' id='myResultTemplateId'>\r\n *\r\n *   [ ... ]\r\n *\r\n *     <!-- The `myContentTemplateId` template applies when displaying content in the quickview modal box. -->\r\n *       <div class='CoveoQuickview' data-template-id='myContentTemplateId'>\r\n *         <!-- This changes the appearance of the Quickview button itself in the results -->\r\n *         <span>Click here for a quickview</span>\r\n *       </div>\r\n *   </script>\r\n *\r\n *   [ ... ]\r\n *\r\n * <!-- Note that simply including `<div class='CoveoQuickview'></div>` in the markup will be enough most of the time, since the component includes a default template and a default button appearance. -->\r\n * ```\r\n *\r\n * This component is a result template component (see [Result Templates](https://docs.coveo.com/en/413/)).\r\n */\r\nvar Quickview = /** @class */ (function (_super) {\r\n    __extends(Quickview, _super);\r\n    /**\r\n     * Creates a new `Quickview` component.\r\n     * @param element The HTMLElement on which to instantiate the component.\r\n     * @param options The options for the `Quickview` component.\r\n     * @param bindings The bindings that the component requires to function normally. If not set, these will be\r\n     * automatically resolved (with a slower execution time).\r\n     * @param result The result to associate the component with.\r\n     * @param ModalBox The quickview modal box.\r\n     */\r\n    function Quickview(element, options, bindings, result, ModalBox) {\r\n        if (ModalBox === void 0) { ModalBox = ExternalModulesShim_1.ModalBox; }\r\n        var _this = _super.call(this, element, Quickview.ID, bindings) || this;\r\n        _this.element = element;\r\n        _this.options = options;\r\n        _this.bindings = bindings;\r\n        _this.result = result;\r\n        _this.options = ComponentOptions_1.ComponentOptions.initComponentOptions(element, Quickview, options);\r\n        if (_this.options.contentTemplate == null) {\r\n            _this.options.contentTemplate = new DefaultQuickviewTemplate_1.DefaultQuickviewTemplate();\r\n        }\r\n        // If there is no content inside the Quickview div,\r\n        // we need to add something that will show up in the result template itself\r\n        if (/^\\s*$/.test(_this.element.innerHTML)) {\r\n            _this.buildContent();\r\n        }\r\n        _this.bindClick(result);\r\n        if (_this.bindings.resultElement) {\r\n            _this.bind.on(_this.bindings.resultElement, ResultListEvents_1.ResultListEvents.openQuickview, function (event) {\r\n                event && event.stopPropagation();\r\n                _this.open();\r\n            });\r\n        }\r\n        _this.modalbox = new AccessibleModal_1.AccessibleModal('coveo-quick-view', _this.searchInterface.options.modalContainer, ModalBox);\r\n        return _this;\r\n    }\r\n    Quickview.prototype.buildContent = function () {\r\n        var icon = this.buildIcon();\r\n        var caption = this.buildCaption();\r\n        var content = Dom_1.$$('div');\r\n        content.append(icon);\r\n        content.append(caption);\r\n        Dom_1.$$(this.element).append(content.el);\r\n        this.buildTooltipIfNotInCardLayout(icon, caption);\r\n    };\r\n    Quickview.prototype.buildIcon = function () {\r\n        var icon = Dom_1.$$('div', { className: 'coveo-icon-for-quickview' }, SVGIcons_1.SVGIcons.icons.quickview).el;\r\n        SVGDom_1.SVGDom.addClassToSVGInContainer(icon, 'coveo-icon-for-quickview-svg');\r\n        return icon;\r\n    };\r\n    Quickview.prototype.buildCaption = function () {\r\n        return Dom_1.$$('div', { className: 'coveo-caption-for-icon' }, 'Quickview'.toLocaleString()).el;\r\n    };\r\n    Quickview.prototype.buildTooltipIfNotInCardLayout = function (icon, caption) {\r\n        if (this.resultsAreInCardLayout) {\r\n            return;\r\n        }\r\n        var arrow = Dom_1.$$('div').el;\r\n        caption.appendChild(arrow);\r\n        this.buildPopper(icon, caption, arrow);\r\n    };\r\n    Object.defineProperty(Quickview.prototype, \"resultsAreInCardLayout\", {\r\n        get: function () {\r\n            return this.queryStateModel.get(QueryStateModel_1.QueryStateModel.attributesEnum.layout) === 'card';\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Quickview.prototype.buildPopper = function (icon, caption, arrow) {\r\n        var popperReference = new popper_js_1.default(icon, caption, {\r\n            placement: this.options.tooltipPlacement,\r\n            modifiers: {\r\n                preventOverflow: {\r\n                    boundariesElement: Dom_1.$$(this.root).el,\r\n                    padding: 0\r\n                },\r\n                arrow: {\r\n                    element: arrow\r\n                },\r\n                // X,Y offset of the tooltip relative to the icon\r\n                offset: {\r\n                    offset: '0,8'\r\n                }\r\n            },\r\n            eventsEnabled: false\r\n        });\r\n        Dom_1.$$(this.element).on('mouseover', function () {\r\n            popperReference.update();\r\n        });\r\n    };\r\n    /**\r\n     * Opens the `Quickview` modal box.\r\n     */\r\n    Quickview.prototype.open = function () {\r\n        var _this = this;\r\n        if (!this.modalbox.isOpen) {\r\n            // To prevent the keyboard from opening on mobile if the search bar has focus\r\n            Quickview.resultCurrentlyBeingRendered = this.result;\r\n            // activeElement does not exist in LockerService\r\n            if (document.activeElement && document.activeElement instanceof HTMLElement) {\r\n                Dom_1.$$(document.activeElement).trigger('blur');\r\n            }\r\n            var openerObject_1 = this.prepareOpenQuickviewObject();\r\n            return this.createModalBox(openerObject_1).then(function () {\r\n                _this.bindQuickviewEvents(openerObject_1);\r\n                _this.animateAndOpen();\r\n                _this.logUsageAnalyticsEvent();\r\n                _this.queryStateModel.set(QueryStateModel_1.QueryStateModel.attributesEnum.quickview, _this.getHashId());\r\n                Quickview.resultCurrentlyBeingRendered = null;\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Closes the `Quickview` modal box.\r\n     */\r\n    Quickview.prototype.close = function () {\r\n        if (this.modalbox.isOpen) {\r\n            this.modalbox.close();\r\n        }\r\n    };\r\n    Quickview.prototype.getHashId = function () {\r\n        return this.result.queryUid + '.' + this.result.index + '.' + StringUtils_1.StringUtils.hashCode(this.result.uniqueId);\r\n    };\r\n    Quickview.prototype.logUsageAnalyticsEvent = function () {\r\n        this.usageAnalytics.logClickEvent(AnalyticsActionListMeta_1.analyticsActionCauseList.documentQuickview, {\r\n            author: Utils_1.Utils.getFieldValue(this.result, 'author'),\r\n            documentURL: this.result.clickUri,\r\n            documentTitle: this.result.title\r\n        }, this.result, this.element);\r\n    };\r\n    Quickview.prototype.bindClick = function (result) {\r\n        var _this = this;\r\n        if (typeof result.hasHtmlVersion == 'undefined' || result.hasHtmlVersion || this.options.alwaysShow) {\r\n            var clickAction = function () { return _this.open(); };\r\n            new AccessibleButton_1.AccessibleButton().withElement(this.element).withSelectAction(clickAction).withLabel(Strings_1.l('Quickview')).withOwner(this.bind).build();\r\n        }\r\n        else {\r\n            this.element.style.display = 'none';\r\n        }\r\n    };\r\n    Quickview.prototype.bindQuickviewEvents = function (openerObject) {\r\n        var _this = this;\r\n        Dom_1.$$(this.modalbox.content).on(QuickviewEvents_1.QuickviewEvents.quickviewLoaded, function () { return __awaiter(_this, void 0, void 0, function () {\r\n            var anim;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, openerObject.loadingAnimation];\r\n                    case 1:\r\n                        anim = _a.sent();\r\n                        Dom_1.$$(anim).remove();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        }); });\r\n    };\r\n    Quickview.prototype.animateAndOpen = function () {\r\n        var quickviewDocument = Dom_1.$$(this.modalbox.element).find('.' + Component_1.Component.computeCssClassName(QuickviewDocument_1.QuickviewDocument));\r\n        if (quickviewDocument) {\r\n            Initialization_1.Initialization.dispatchNamedMethodCallOrComponentCreation('open', quickviewDocument, null);\r\n        }\r\n    };\r\n    Quickview.prototype.createModalBox = function (openerObject) {\r\n        var _this = this;\r\n        var computedModalBoxContent = Dom_1.$$('div');\r\n        computedModalBoxContent.addClass('coveo-computed-modal-box-content');\r\n        return openerObject.content.then(function (builtContent) {\r\n            computedModalBoxContent.append(builtContent.el);\r\n            _this.modalbox.openResult({\r\n                result: _this.result,\r\n                options: {\r\n                    showDate: _this.options.showDate,\r\n                    title: _this.options.title\r\n                },\r\n                bindings: _this.bindings,\r\n                content: computedModalBoxContent.el,\r\n                validation: function () {\r\n                    _this.closeQuickview();\r\n                    return true;\r\n                },\r\n                origin: _this.element\r\n            });\r\n            return computedModalBoxContent;\r\n        });\r\n    };\r\n    Quickview.prototype.prepareOpenQuickviewObject = function () {\r\n        var loadingAnimation = this.options.loadingAnimation;\r\n        return {\r\n            loadingAnimation: loadingAnimation,\r\n            content: this.prepareQuickviewContent(loadingAnimation)\r\n        };\r\n    };\r\n    Quickview.prototype.prepareQuickviewContent = function (loadingAnimation) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            var domContent, initOptions, initParameters, containsQuickviewDocumentAndCustomAnimation;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.instantiateTemplateToDom()];\r\n                    case 1:\r\n                        domContent = _a.sent();\r\n                        initOptions = this.searchInterface.options;\r\n                        initParameters = {\r\n                            options: initOptions,\r\n                            bindings: this.getBindings(),\r\n                            result: this.result\r\n                        };\r\n                        return [4 /*yield*/, Initialization_1.Initialization.automaticallyCreateComponentsInside(domContent.el, initParameters).initResult];\r\n                    case 2:\r\n                        _a.sent();\r\n                        containsQuickviewDocumentAndCustomAnimation = function () {\r\n                            return domContent.find(\".\" + Component_1.Component.computeCssClassName(QuickviewDocument_1.QuickviewDocument)) != undefined && _this.options.enableLoadingAnimation;\r\n                        };\r\n                        if (containsQuickviewDocumentAndCustomAnimation()) {\r\n                            if (loadingAnimation instanceof HTMLElement) {\r\n                                domContent.prepend(loadingAnimation);\r\n                            }\r\n                            else if (loadingAnimation instanceof Promise) {\r\n                                loadingAnimation.then(function (anim) {\r\n                                    domContent.prepend(anim);\r\n                                });\r\n                            }\r\n                        }\r\n                        return [2 /*return*/, domContent];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Quickview.prototype.instantiateTemplateToDom = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var templateInstantiated, e_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, 2, 3, 6]);\r\n                        return [4 /*yield*/, this.options.contentTemplate.instantiateToElement(this.result)];\r\n                    case 1:\r\n                        templateInstantiated = _a.sent();\r\n                        return [3 /*break*/, 6];\r\n                    case 2:\r\n                        e_1 = _a.sent();\r\n                        this.logger.warn(e_1);\r\n                        return [3 /*break*/, 6];\r\n                    case 3:\r\n                        if (!!templateInstantiated) return [3 /*break*/, 5];\r\n                        this.logger.warn('An unexpected error happened while trying to render a custom template quickview, fallbacking on default quickview template...', this.options.contentTemplate);\r\n                        return [4 /*yield*/, new DefaultQuickviewTemplate_1.DefaultQuickviewTemplate().instantiateToElement(this.result)];\r\n                    case 4:\r\n                        templateInstantiated = _a.sent();\r\n                        _a.label = 5;\r\n                    case 5: return [7 /*endfinally*/];\r\n                    case 6: return [2 /*return*/, Dom_1.$$(templateInstantiated)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Quickview.prototype.closeQuickview = function () {\r\n        this.queryStateModel.set(QueryStateModel_1.QueryStateModel.attributesEnum.quickview, '');\r\n    };\r\n    Quickview.ID = 'Quickview';\r\n    Quickview.doExport = function () {\r\n        GlobalExports_1.exportGlobally({\r\n            Quickview: Quickview,\r\n            QuickviewDocument: QuickviewDocument_1.QuickviewDocument\r\n        });\r\n    };\r\n    /**\r\n     * @componentOptions\r\n     */\r\n    Quickview.options = {\r\n        /**\r\n         * Specifies whether to always show the `Quickview` button/link, even when the index body of an item is empty.\r\n         *\r\n         * In such cases, the [`contentTemplate`]{@link Quickview.options.contentTemplate} defines what appears in the\r\n         * `Quickview` modal box. Consequently, if there is no quickview for the item, you *MUST* specify a custom\r\n         * `contentTemplate`, otherwise the component will throw an error when opened.\r\n         *\r\n         * Default value is `false`.\r\n         *\r\n         * @availablesince [September 2015 Release (v1.0.59)](https://docs.coveo.com/en/289/#september-2015-release-v1059)\r\n         */\r\n        alwaysShow: ComponentOptions_1.ComponentOptions.buildBooleanOption({ defaultValue: false }),\r\n        /**\r\n         * Specifies the title that should appear in the `Quickview` modal box header.\r\n         *\r\n         * Default value is undefined, which is equivalent to the empty string.\r\n         */\r\n        title: ComponentOptions_1.ComponentOptions.buildStringOption(),\r\n        /**\r\n         * Specifies whether to display the item date in the `Quickview` modal box header.\r\n         *\r\n         * Default value is `true`.\r\n         */\r\n        showDate: ComponentOptions_1.ComponentOptions.buildBooleanOption({ defaultValue: true }),\r\n        /**\r\n         * Specifies whether to enable the loading animation.\r\n         *\r\n         * See also [`loadingAnimation`]{Quickview.options.loadingAnimation}.\r\n         *\r\n         * Default value is `true`.\r\n         */\r\n        enableLoadingAnimation: ComponentOptions_1.ComponentOptions.buildBooleanOption({ defaultValue: true }),\r\n        /**\r\n         * Specifies a custom template to use when displaying content in the `Quickview` modal box.\r\n         *\r\n         * **Note:**\r\n         * > You can use [`CoreHelpers`]{@link ICoreHelpers} methods in your content template.\r\n         *\r\n         * You can specify a previously registered template to use either by referring to its HTML `id` attribute or to a\r\n         * CSS selector (see [`TemplateCache`]{@link TemplateCache}).\r\n         *\r\n         * **Example:**\r\n         *\r\n         * * Specifying a previously registered template by referring to its HTML `id` attribute:\r\n         *\r\n         * ```html\r\n         * <div class=\"CoveoQuickview\" data-template-id=\"myContentTemplateId\"></div>\r\n         * ```\r\n         *\r\n         * * Specifying a previously registered template by referring to a CSS selector:\r\n         *\r\n         * ```html\r\n         * <div class='CoveoQuickview' data-template-selector=\".myContentTemplateSelector\"></div>\r\n         * ```\r\n         *\r\n         * If you do not specify a custom content template, the component uses its default template.\r\n         */\r\n        contentTemplate: TemplateComponentOptions_1.TemplateComponentOptions.buildTemplateOption({\r\n            selectorAttr: 'data-template-selector',\r\n            idAttr: 'data-template-id'\r\n        }),\r\n        /**\r\n         * If [`enableLoadingAnimation`]{@link Quickview.options.enableLoadingAnimation} is `true`, specifies a custom\r\n         * animation to display while the content of the quickview modal window is loading. You can either specify the CSS\r\n         * selector of the HTML element you wish to display, or the `id` of a previously registered template (see\r\n         * [`TemplateCache`]{@link TemplateCache}).\r\n         *\r\n         * See [Customizing the Quickview Loading Animation](https://docs.coveo.com/en/296/#customizing-the-quickview-loading-animation).\r\n         *\r\n         * **Examples:**\r\n         *\r\n         * * Specifying the CSS selector of the HTML element to display:\r\n         *\r\n         * ```html\r\n         * <div class=\"CoveoQuickview\" data-loading-animation-selector=\".my-loading-animation\"></div>\r\n         * ```\r\n         *\r\n         * * Specifying the `id` of a previously registered template:\r\n         *\r\n         * ```html\r\n         * <div class=\"CoveoQuickview\" data-loading-animation-template-id=\"my-loading-animation-template\"></div>\r\n         * ```\r\n         *\r\n         * By default, the loading animation is a Coveo animation, which you can customize with CSS (see\r\n         * [Customizing the Default Loading Animation](https://docs.coveo.com/en/296/#customizing-the-default-search-page-animation).\r\n         */\r\n        loadingAnimation: ComponentOptions_1.ComponentOptions.buildOption(IComponentOptions_1.ComponentOptionsType.NONE, function (element) {\r\n            var loadingAnimationSelector = element.getAttribute('data-loading-animation-selector');\r\n            if (loadingAnimationSelector != null) {\r\n                var loadingAnimation = Dom_1.$$(document.documentElement).find(loadingAnimationSelector);\r\n                if (loadingAnimation != null) {\r\n                    Dom_1.$$(loadingAnimation).detach();\r\n                    return loadingAnimation;\r\n                }\r\n            }\r\n            var id = element.getAttribute('data-loading-animation-template-id');\r\n            if (id != null) {\r\n                var loadingAnimationTemplate = TemplateComponentOptions_1.TemplateComponentOptions.loadResultTemplateFromId(id);\r\n                if (loadingAnimationTemplate) {\r\n                    return loadingAnimationTemplate.instantiateToElement(undefined, {\r\n                        checkCondition: false\r\n                    });\r\n                }\r\n            }\r\n            return DomUtils_1.DomUtils.getBasicLoadingAnimation();\r\n        }),\r\n        /**\r\n         * Specifies the emplacement of the tooltip in relation to the `Quickview` HTML element.\r\n         *\r\n         * **Example:**\r\n         * > Setting this option to `top-start` will make the tooltip appear on top of the `Quickview` button, aligned to the left.\r\n         *\r\n         * @availablesince [January 2019 Release (v2.5395.12)](https://docs.coveo.com/en/2938/)\r\n         */\r\n        tooltipPlacement: ComponentOptions_1.ComponentOptions.buildCustomOption(function (value) { return value; }, {\r\n            defaultValue: 'bottom'\r\n        })\r\n    };\r\n    Quickview.resultCurrentlyBeingRendered = null;\r\n    return Quickview;\r\n}(Component_1.Component));\r\nexports.Quickview = Quickview;\r\nInitialization_1.Initialization.registerAutoCreateComponent(Quickview);\r\n\n\n/***/ }),\n\n/***/ 465:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Defer_1 = __webpack_require__(31);\r\nvar underscore_1 = __webpack_require__(0);\r\nvar Dom_1 = __webpack_require__(1);\r\nvar FocusTrap = /** @class */ (function () {\r\n    function FocusTrap(container) {\r\n        this.container = container;\r\n        this.hiddenElements = [];\r\n        this.enable();\r\n    }\r\n    Object.defineProperty(FocusTrap.prototype, \"focusableElements\", {\r\n        get: function () {\r\n            return underscore_1.sortBy(this.container.querySelectorAll('[tabindex]'), function (element) { return element.tabIndex; });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FocusTrap.prototype.disable = function () {\r\n        document.removeEventListener('focusin', this.focusInEvent);\r\n        document.removeEventListener('focusout', this.focusOutEvent);\r\n        this.showHiddenElements();\r\n        this.enabled = false;\r\n    };\r\n    FocusTrap.prototype.enable = function () {\r\n        var _this = this;\r\n        document.addEventListener('focusin', (this.focusInEvent = function (e) { return _this.onFocusIn(e); }));\r\n        document.addEventListener('focusout', (this.focusOutEvent = function (e) { return _this.onFocusOut(e); }));\r\n        this.hideAllExcept(this.container);\r\n        this.enabled = true;\r\n    };\r\n    FocusTrap.prototype.showHiddenElements = function () {\r\n        while (this.hiddenElements.length) {\r\n            this.hiddenElements.pop().removeAttribute('aria-hidden');\r\n        }\r\n    };\r\n    FocusTrap.prototype.hideElement = function (element) {\r\n        if (element.getAttribute('aria-hidden')) {\r\n            return;\r\n        }\r\n        this.hiddenElements.push(element);\r\n        element.setAttribute('aria-hidden', \"\" + true);\r\n    };\r\n    FocusTrap.prototype.hideSiblings = function (allowedElement) {\r\n        var _this = this;\r\n        var parent = allowedElement.parentElement;\r\n        if (parent) {\r\n            underscore_1.without(Dom_1.$$(parent).children(), allowedElement).forEach(function (elementToHide) {\r\n                _this.hideElement(elementToHide);\r\n            });\r\n        }\r\n    };\r\n    FocusTrap.prototype.hideAllExcept = function (allowedElement) {\r\n        this.hideSiblings(allowedElement);\r\n        var parent = allowedElement.parentElement;\r\n        if (parent && parent !== document.body) {\r\n            this.hideAllExcept(parent);\r\n        }\r\n    };\r\n    FocusTrap.prototype.getFocusableSibling = function (element, previous) {\r\n        if (previous === void 0) { previous = false; }\r\n        var elements = this.focusableElements;\r\n        var currentIndex = elements.indexOf(element);\r\n        if (currentIndex === -1) {\r\n            return null;\r\n        }\r\n        return elements[(currentIndex + (previous ? -1 : 1) + elements.length) % elements.length];\r\n    };\r\n    FocusTrap.prototype.focusSibling = function (element, previous) {\r\n        if (previous === void 0) { previous = false; }\r\n        var sibling = this.getFocusableSibling(element, previous);\r\n        if (sibling) {\r\n            sibling.focus();\r\n        }\r\n    };\r\n    FocusTrap.prototype.focusFirstElement = function () {\r\n        var elements = this.focusableElements;\r\n        if (elements.length) {\r\n            elements[0].focus();\r\n        }\r\n    };\r\n    FocusTrap.prototype.elementIsBefore = function (oldElement, newElement) {\r\n        if (!newElement) {\r\n            return false;\r\n        }\r\n        return oldElement.compareDocumentPosition(newElement) === Node.DOCUMENT_POSITION_PRECEDING;\r\n    };\r\n    FocusTrap.prototype.onLosingFocus = function (oldElement, newElement) {\r\n        var _this = this;\r\n        Defer_1.Defer.defer(function () {\r\n            if (!_this.enabled) {\r\n                return;\r\n            }\r\n            _this.enabled = false;\r\n            if (oldElement && _this.focusIsAllowed(oldElement)) {\r\n                _this.focusSibling(oldElement, _this.elementIsBefore(oldElement, newElement));\r\n            }\r\n            else {\r\n                _this.focusFirstElement();\r\n            }\r\n            _this.enabled = true;\r\n        });\r\n    };\r\n    FocusTrap.prototype.focusIsAllowed = function (element) {\r\n        return this.container.contains(element);\r\n    };\r\n    FocusTrap.prototype.elementIsInPage = function (element) {\r\n        return element && element !== document.body.parentElement;\r\n    };\r\n    FocusTrap.prototype.onFocusIn = function (e) {\r\n        if (!this.enabled) {\r\n            return;\r\n        }\r\n        var oldElement = e.relatedTarget;\r\n        var handledByFocusOut = this.elementIsInPage(oldElement);\r\n        if (handledByFocusOut) {\r\n            return;\r\n        }\r\n        var newElement = e.target;\r\n        if (!this.elementIsInPage(newElement)) {\r\n            return;\r\n        }\r\n        if (!this.focusIsAllowed(newElement)) {\r\n            this.onLosingFocus(null, newElement);\r\n        }\r\n    };\r\n    FocusTrap.prototype.onFocusOut = function (e) {\r\n        if (!this.enabled) {\r\n            return;\r\n        }\r\n        var newElement = e.relatedTarget;\r\n        if (!this.elementIsInPage(newElement)) {\r\n            return;\r\n        }\r\n        if (!newElement || !this.focusIsAllowed(newElement)) {\r\n            this.onLosingFocus(e.target, newElement);\r\n        }\r\n    };\r\n    return FocusTrap;\r\n}());\r\nexports.FocusTrap = FocusTrap;\r\n\n\n/***/ }),\n\n/***/ 636:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 637:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Template_1 = __webpack_require__(27);\r\nvar DefaultQuickviewTemplate = /** @class */ (function (_super) {\r\n    __extends(DefaultQuickviewTemplate, _super);\r\n    function DefaultQuickviewTemplate() {\r\n        return _super.call(this) || this;\r\n    }\r\n    DefaultQuickviewTemplate.prototype.instantiateToString = function (queryResult) {\r\n        return '<div class=\"coveo-quick-view-full-height\"><div class=\"CoveoQuickviewDocument\"></div></div>';\r\n    };\r\n    return DefaultQuickviewTemplate;\r\n}(Template_1.Template));\r\nexports.DefaultQuickviewTemplate = DefaultQuickviewTemplate;\r\n\n\n/***/ }),\n\n/***/ 638:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar underscore_1 = __webpack_require__(0);\r\nvar Core_1 = __webpack_require__(20);\r\nvar Dom_1 = __webpack_require__(1);\r\nvar QuickviewDocumentIframe = /** @class */ (function () {\r\n    function QuickviewDocumentIframe() {\r\n        this.el = this.buildIFrame().el;\r\n    }\r\n    Object.defineProperty(QuickviewDocumentIframe.prototype, \"iframeHTMLElement\", {\r\n        get: function () {\r\n            return this.iframeElement;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(QuickviewDocumentIframe.prototype, \"document\", {\r\n        get: function () {\r\n            return this.iframeElement.contentWindow.document;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(QuickviewDocumentIframe.prototype, \"body\", {\r\n        get: function () {\r\n            return this.document.body;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(QuickviewDocumentIframe.prototype, \"window\", {\r\n        get: function () {\r\n            return this.iframeElement.contentWindow;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    QuickviewDocumentIframe.prototype.isNewQuickviewDocument = function () {\r\n        var meta = Dom_1.$$(this.document.head).find(\"meta[name='generator']\");\r\n        return meta && meta.getAttribute('content') == 'pdf2htmlEX';\r\n    };\r\n    QuickviewDocumentIframe.prototype.render = function (htmlDocument, title) {\r\n        var _this = this;\r\n        if (this.quickviewIsClosedByEndUser()) {\r\n            return Promise.reject(null);\r\n        }\r\n        return new Promise(function (resolve, reject) {\r\n            // Take care to bind the onload function before actually writing to the iframe :\r\n            // Safari, IE, Edge need this, otherwise the onload function is never called\r\n            _this.iframeElement.onload = function () {\r\n                resolve(_this.iframeElement);\r\n            };\r\n            _this.addClientSideTweaksToIFrameStyling(htmlDocument);\r\n            _this.writeToIFrame(htmlDocument);\r\n            _this.iframeElement.title = title;\r\n        });\r\n    };\r\n    QuickviewDocumentIframe.prototype.renderError = function (error) {\r\n        var _this = this;\r\n        if (this.quickviewIsClosedByEndUser()) {\r\n            return Promise.reject(null);\r\n        }\r\n        return new Promise(function (resolve, reject) {\r\n            var errorMessage = '';\r\n            switch (error.status) {\r\n                case 400:\r\n                    errorMessage = Core_1.l('NoQuickview');\r\n                    break;\r\n                default:\r\n                    errorMessage = Core_1.l('OoopsError');\r\n                    break;\r\n            }\r\n            var errorDocument = document.implementation.createHTMLDocument();\r\n            errorDocument.body.style.fontFamily = \"Arimo, 'Helvetica Neue', Helvetica, Arial, sans-serif\";\r\n            Dom_1.$$(errorDocument.body).text(errorMessage);\r\n            _this.writeToIFrame(errorDocument);\r\n            resolve(_this.iframeElement);\r\n        });\r\n    };\r\n    QuickviewDocumentIframe.prototype.quickviewIsClosedByEndUser = function () {\r\n        return this.iframeElement.contentDocument == null;\r\n    };\r\n    QuickviewDocumentIframe.prototype.buildIFrame = function () {\r\n        var iframe = Dom_1.$$('iframe', {\r\n            sandbox: 'allow-popups allow-same-origin allow-top-navigation',\r\n            src: 'about:blank'\r\n        });\r\n        this.iframeElement = iframe.el;\r\n        var iframewrapper = Dom_1.$$('div', {\r\n            className: 'coveo-iframeWrapper'\r\n        });\r\n        iframewrapper.append(iframe.el);\r\n        return iframewrapper;\r\n    };\r\n    QuickviewDocumentIframe.prototype.writeToIFrame = function (htmlDocument) {\r\n        this.allowDocumentLinkToEscapeSandbox(htmlDocument);\r\n        this.document.open();\r\n        this.document.write(htmlDocument.getElementsByTagName('html')[0].outerHTML);\r\n        this.document.close();\r\n    };\r\n    QuickviewDocumentIframe.prototype.allowDocumentLinkToEscapeSandbox = function (htmlDocument) {\r\n        // On the iframe, we set the sandbox attribute to \"allow top navigation\".\r\n        // For this to work, we need to force all link to target _top.\r\n        // This is especially useful for quickview on web pages.\r\n        underscore_1.each(Dom_1.$$(htmlDocument.body).findAll('a'), function (link) {\r\n            link.setAttribute('target', '_top');\r\n        });\r\n    };\r\n    QuickviewDocumentIframe.prototype.addClientSideTweaksToIFrameStyling = function (htmlDocument) {\r\n        var style = Dom_1.$$('style', { type: 'text/css' }).el;\r\n        // Safari on iOS forces resize iframes to fit their content, even if an explicit size\r\n        // is set on the iframe. Isn't that great? By chance there is a trick around it: by\r\n        // setting a very small size on the body and instead using min-* to set the size to\r\n        // 100% we're able to trick Safari from thinking it must expand the iframe. Amazed.\r\n        // The 'scrolling' part is required otherwise the hack doesn't work.\r\n        //\r\n        // https://stackoverflow.com/questions/23083462/how-to-get-an-iframe-to-be-responsive-in-ios-safari\r\n        var cssHackForIOS = \"\\n      body, html {\\n        height: 1px !important;\\n        min-height: 100%;\\n        width: 1px !important;\\n        min-width: 100%;\\n        overflow: scroll;\\n        margin: auto\\n      }\\n      \";\r\n        var cssText = \"\\n      html pre {\\n        white-space: pre-wrap;\\n        word-wrap: break-word;\\n      }\\n      body, html {\\n        font-family: Arimo, 'Helvetica Neue', Helvetica, Arial, sans-serif; -webkit-text-size-adjust: none;\\n      }\\n      \" + (Core_1.DeviceUtils.isIos() ? cssHackForIOS : '') + \"\\n      \";\r\n        if (Core_1.DeviceUtils.isIos()) {\r\n            Dom_1.$$(this.iframeElement).setAttribute('scrolling', 'no');\r\n            this.iframeElement.parentElement.style.margin = '0 0 5px 5px';\r\n        }\r\n        style.appendChild(document.createTextNode(cssText));\r\n        htmlDocument.head.appendChild(style);\r\n    };\r\n    return QuickviewDocumentIframe;\r\n}());\r\nexports.QuickviewDocumentIframe = QuickviewDocumentIframe;\r\n\n\n/***/ }),\n\n/***/ 639:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Dom_1 = __webpack_require__(1);\r\nvar QuickviewDocumentHeader = /** @class */ (function () {\r\n    function QuickviewDocumentHeader() {\r\n        this.el = this.buildHeader().el;\r\n    }\r\n    QuickviewDocumentHeader.prototype.addWord = function (wordButton) {\r\n        this.el.appendChild(wordButton.el);\r\n    };\r\n    QuickviewDocumentHeader.prototype.buildHeader = function () {\r\n        var header = Dom_1.$$('div', {\r\n            className: 'coveo-quickview-header'\r\n        });\r\n        return header;\r\n    };\r\n    return QuickviewDocumentHeader;\r\n}());\r\nexports.QuickviewDocumentHeader = QuickviewDocumentHeader;\r\n\n\n/***/ }),\n\n/***/ 640:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Dom_1 = __webpack_require__(1);\r\nvar underscore_1 = __webpack_require__(0);\r\nvar QuickviewDocumentWord_1 = __webpack_require__(641);\r\nvar QuickviewDocument_1 = __webpack_require__(231);\r\nvar QuickviewDocumentWords = /** @class */ (function () {\r\n    function QuickviewDocumentWords(iframe, result) {\r\n        this.iframe = iframe;\r\n        this.result = result;\r\n        this.words = {};\r\n        this.scanDocument();\r\n    }\r\n    QuickviewDocumentWords.prototype.scanDocument = function () {\r\n        var _this = this;\r\n        underscore_1.each(Dom_1.$$(this.iframe.body).findAll(\"[id^=\\\"\" + QuickviewDocument_1.HIGHLIGHT_PREFIX + \"\\\"]\"), function (element, index) {\r\n            var quickviewWord = new QuickviewDocumentWord_1.QuickviewDocumentWord(_this.result);\r\n            quickviewWord.doCompleteInitialScanForKeywordInDocument(element);\r\n            if (!quickviewWord.text) {\r\n                return;\r\n            }\r\n            var alreadyScannedKeyword = _this.words[quickviewWord.indexIdentifier];\r\n            if (!alreadyScannedKeyword) {\r\n                _this.words[quickviewWord.indexIdentifier] = quickviewWord;\r\n            }\r\n            else {\r\n                alreadyScannedKeyword.addElement(element);\r\n                // Special code needed to workaround invalid HTML returned by the index with embedded keyword\r\n                if (alreadyScannedKeyword.occurrence == quickviewWord.occurrence) {\r\n                    alreadyScannedKeyword.text += quickviewWord.text;\r\n                }\r\n            }\r\n        });\r\n    };\r\n    return QuickviewDocumentWords;\r\n}());\r\nexports.QuickviewDocumentWords = QuickviewDocumentWords;\r\n\n\n/***/ }),\n\n/***/ 641:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar underscore_1 = __webpack_require__(0);\r\nvar Core_1 = __webpack_require__(20);\r\nvar Logger_1 = __webpack_require__(9);\r\nvar Dom_1 = __webpack_require__(1);\r\nvar QuickviewDocument_1 = __webpack_require__(231);\r\nvar QuickviewDocumentWordColor_1 = __webpack_require__(642);\r\nvar QuickviewDocumentWord = /** @class */ (function () {\r\n    function QuickviewDocumentWord(result) {\r\n        this.result = result;\r\n        this.count = 0;\r\n        this.elements = [];\r\n        this.currentNavigationPosition = -1;\r\n        this.logger = new Logger_1.Logger(this);\r\n    }\r\n    QuickviewDocumentWord.prototype.addElement = function (element) {\r\n        this.count++;\r\n        this.elements.push(element);\r\n    };\r\n    QuickviewDocumentWord.prototype.navigateForward = function () {\r\n        this.currentNavigationPosition++;\r\n        if (this.currentNavigationPosition >= this.elements.length) {\r\n            this.currentNavigationPosition = 0;\r\n        }\r\n        this.highlightNavigation();\r\n        this.putElementIntoView();\r\n        return this.elements[this.currentNavigationPosition];\r\n    };\r\n    QuickviewDocumentWord.prototype.navigateBackward = function () {\r\n        this.currentNavigationPosition--;\r\n        if (this.currentNavigationPosition < 0) {\r\n            this.currentNavigationPosition = this.elements.length - 1;\r\n        }\r\n        this.highlightNavigation();\r\n        this.putElementIntoView();\r\n        return this.elements[this.currentNavigationPosition];\r\n    };\r\n    QuickviewDocumentWord.prototype.navigateTo = function (position) {\r\n        this.currentNavigationPosition = position;\r\n        if (this.currentNavigationPosition < 0 || this.currentNavigationPosition >= this.elements.length) {\r\n            this.currentNavigationPosition = 0;\r\n            this.logger.warn(\"Invalid position in quickview navigation: \" + position);\r\n        }\r\n        this.highlightNavigation();\r\n        return this.elements[this.currentNavigationPosition];\r\n    };\r\n    QuickviewDocumentWord.prototype.doCompleteInitialScanForKeywordInDocument = function (element) {\r\n        var parsed = this.parseKeywordIdentifier(element);\r\n        if (parsed) {\r\n            this.indexIdentifier = parsed.keywordIdentifier;\r\n            this.occurrence = parsed.keywordOccurrencesInDocument;\r\n            this.indexTermPart = parsed.keywordTermPart;\r\n            this.text = this.getText(element);\r\n            this.color = new QuickviewDocumentWordColor_1.QuickviewDocumentWordColor(element.style.backgroundColor);\r\n            this.addElement(element);\r\n        }\r\n    };\r\n    QuickviewDocumentWord.prototype.isTaggedWord = function (element) {\r\n        return element.nodeName.toLowerCase() == 'coveotaggedword';\r\n    };\r\n    QuickviewDocumentWord.prototype.highlightNavigation = function () {\r\n        var _this = this;\r\n        var currentElement = this.elements[this.currentNavigationPosition];\r\n        var otherElements = underscore_1.without(this.elements, currentElement);\r\n        currentElement.style.color = this.color.htmlColor;\r\n        currentElement.style.backgroundColor = this.color.invert();\r\n        otherElements.forEach(function (element) {\r\n            element.style.color = '';\r\n            element.style.backgroundColor = _this.color.htmlColor;\r\n        });\r\n    };\r\n    QuickviewDocumentWord.prototype.putElementIntoView = function () {\r\n        var element = this.elements[this.currentNavigationPosition];\r\n        element.scrollIntoView();\r\n    };\r\n    QuickviewDocumentWord.prototype.getText = function (element) {\r\n        var innerTextOfHTMLElement = this.getHighlightedInnerText(element);\r\n        return this.resolveOriginalTerm(innerTextOfHTMLElement);\r\n    };\r\n    QuickviewDocumentWord.prototype.resolveOriginalTerm = function (highlight) {\r\n        var _this = this;\r\n        if (!this.result || !this.result.termsToHighlight) {\r\n            return highlight;\r\n        }\r\n        var found = underscore_1.find(underscore_1.keys(this.result.termsToHighlight), function (originalTerm) {\r\n            // The expansions do NOT include the original term (makes sense), so be sure to check\r\n            // the original term for a match too.\r\n            var originalTermMatch = Core_1.StringUtils.equalsCaseInsensitive(originalTerm, highlight);\r\n            var expansionMatch = underscore_1.find(_this.result.termsToHighlight[originalTerm], function (expansion) { return Core_1.StringUtils.equalsCaseInsensitive(expansion, highlight); }) !=\r\n                undefined;\r\n            return originalTermMatch || expansionMatch;\r\n        });\r\n        return found || highlight;\r\n    };\r\n    QuickviewDocumentWord.prototype.getHighlightedInnerText = function (element) {\r\n        if (!this.isTaggedWord(element)) {\r\n            return Dom_1.$$(element).text() || '';\r\n        }\r\n        var children = Dom_1.$$(element).children();\r\n        if (children.length >= 1) {\r\n            return Dom_1.$$(underscore_1.first(children)).text() || '';\r\n        }\r\n        return '';\r\n    };\r\n    QuickviewDocumentWord.prototype.parseKeywordIdentifier = function (element) {\r\n        var parts = element.id.substr(QuickviewDocument_1.HIGHLIGHT_PREFIX.length + 1).match(/^([0-9]+)\\.([0-9]+)\\.([0-9]+)$/);\r\n        if (!parts || parts.length <= 3) {\r\n            return null;\r\n        }\r\n        return {\r\n            keywordIdentifier: parts[1],\r\n            keywordOccurrencesInDocument: parseInt(parts[2], 10),\r\n            keywordTermPart: parseInt(parts[3], 10)\r\n        };\r\n    };\r\n    return QuickviewDocumentWord;\r\n}());\r\nexports.QuickviewDocumentWord = QuickviewDocumentWord;\r\n\n\n/***/ }),\n\n/***/ 642:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar ColorUtils_1 = __webpack_require__(141);\r\nvar QuickviewDocumentWordColor = /** @class */ (function () {\r\n    function QuickviewDocumentWordColor(htmlColor) {\r\n        this.htmlColor = htmlColor;\r\n        var rgbExtracted = htmlColor.match(/\\d+/g);\r\n        if (rgbExtracted) {\r\n            this.r = parseInt(rgbExtracted[0], 10);\r\n            this.g = parseInt(rgbExtracted[1], 10);\r\n            this.b = parseInt(rgbExtracted[2], 10);\r\n        }\r\n    }\r\n    QuickviewDocumentWordColor.prototype.invert = function () {\r\n        return \"rgb(\" + (255 - this.r) + \", \" + (255 - this.g) + \", \" + (255 - this.b) + \")\";\r\n    };\r\n    QuickviewDocumentWordColor.prototype.saturate = function () {\r\n        var hsv = ColorUtils_1.ColorUtils.rgbToHsv(this.r, this.g, this.b);\r\n        hsv[1] *= 2;\r\n        if (hsv[1] > 1) {\r\n            hsv[1] = 1;\r\n        }\r\n        var rgb = ColorUtils_1.ColorUtils.hsvToRgb(hsv[0], hsv[1], hsv[2]);\r\n        return \"rgb(\" + rgb[0] + \", \" + rgb[1] + \", \" + rgb[2] + \")\";\r\n    };\r\n    return QuickviewDocumentWordColor;\r\n}());\r\nexports.QuickviewDocumentWordColor = QuickviewDocumentWordColor;\r\n\n\n/***/ }),\n\n/***/ 643:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Dom_1 = __webpack_require__(1);\r\nvar QuickviewDocumentWordButton = /** @class */ (function () {\r\n    function QuickviewDocumentWordButton(word, previewBar, iframe) {\r\n        this.word = word;\r\n        this.previewBar = previewBar;\r\n        this.iframe = iframe;\r\n        this.el = this.render();\r\n    }\r\n    QuickviewDocumentWordButton.prototype.render = function () {\r\n        var wordHtml = Dom_1.$$('span', {\r\n            className: 'coveo-term-for-quickview'\r\n        });\r\n        wordHtml.append(this.buildName().el);\r\n        wordHtml.append(this.renderArrow('up').el);\r\n        wordHtml.append(this.renderArrow('down').el);\r\n        wordHtml.el.style.backgroundColor = this.word.color.htmlColor;\r\n        wordHtml.el.style.borderColor = this.word.color.saturate();\r\n        return wordHtml.el;\r\n    };\r\n    QuickviewDocumentWordButton.prototype.buildName = function () {\r\n        var _this = this;\r\n        var name = Dom_1.$$('span', {\r\n            className: 'coveo-term-for-quickview-name'\r\n        }, this.word.text + \" (\" + this.word.count + \")\");\r\n        name.on('click', function () { return _this.navigate(false); });\r\n        return name;\r\n    };\r\n    QuickviewDocumentWordButton.prototype.navigate = function (backward) {\r\n        var element;\r\n        if (backward) {\r\n            element = this.word.navigateBackward();\r\n            this.previewBar.navigateBackward(this.word);\r\n        }\r\n        else {\r\n            element = this.word.navigateForward();\r\n            this.previewBar.navigateForward(this.word);\r\n        }\r\n        // pdf2html docs hide the non-visible frames by default, to speed up browsers.\r\n        // But this prevents keyword navigation from working so we must force show it. This\r\n        // is done by adding the 'opened' class to it (defined by pdf2html).\r\n        if (this.iframe.isNewQuickviewDocument()) {\r\n            var pdf = Dom_1.$$(element).closest('.pc');\r\n            Dom_1.$$(pdf).addClass('opened');\r\n        }\r\n        element.scrollIntoView();\r\n    };\r\n    QuickviewDocumentWordButton.prototype.renderArrow = function (direction) {\r\n        var _this = this;\r\n        var arrow = Dom_1.$$('span', {\r\n            className: \"coveo-term-for-quickview-\" + direction + \"-arrow\"\r\n        });\r\n        var arrowIcon = Dom_1.$$('span', {\r\n            className: \"coveo-term-for-quickview-\" + direction + \"-arrow-icon\"\r\n        });\r\n        arrow.append(arrowIcon.el);\r\n        arrow.on('click', function () { return _this.navigate(direction == 'up'); });\r\n        return arrow;\r\n    };\r\n    return QuickviewDocumentWordButton;\r\n}());\r\nexports.QuickviewDocumentWordButton = QuickviewDocumentWordButton;\r\n\n\n/***/ }),\n\n/***/ 644:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Dom_1 = __webpack_require__(1);\r\nvar underscore_1 = __webpack_require__(0);\r\nvar Logger_1 = __webpack_require__(9);\r\nvar QuickviewDocumentPreviewBar = /** @class */ (function () {\r\n    function QuickviewDocumentPreviewBar(iframe, words) {\r\n        this.iframe = iframe;\r\n        this.words = words;\r\n        this.wordIndicators = new Map();\r\n        this.logger = new Logger_1.Logger(this);\r\n        this.renderPreviewBar();\r\n    }\r\n    QuickviewDocumentPreviewBar.prototype.navigateForward = function (word) {\r\n        var currentWord = this.wordIndicators.get(word);\r\n        if (!currentWord) {\r\n            this.logger.warn(\"Invalid navigation for given word.\", word);\r\n            return null;\r\n        }\r\n        currentWord.position++;\r\n        if (currentWord.position >= currentWord.indicators.length) {\r\n            currentWord.position = 0;\r\n        }\r\n        this.highlightNavigation(word);\r\n        return currentWord.indicators[currentWord.position];\r\n    };\r\n    QuickviewDocumentPreviewBar.prototype.navigateBackward = function (word) {\r\n        var currentWord = this.wordIndicators.get(word);\r\n        if (!currentWord) {\r\n            this.logger.warn(\"Invalid navigation for the given word.\", word);\r\n            return null;\r\n        }\r\n        currentWord.position--;\r\n        if (currentWord.position < 0) {\r\n            currentWord.position = currentWord.indicators.length - 1;\r\n        }\r\n        this.highlightNavigation(word);\r\n        return currentWord.indicators[currentWord.position];\r\n    };\r\n    QuickviewDocumentPreviewBar.prototype.navigateTo = function (position, word) {\r\n        var currentWord = this.wordIndicators.get(word);\r\n        if (!currentWord) {\r\n            this.logger.warn(\"Invalid navigation for the given word\", word);\r\n            return null;\r\n        }\r\n        currentWord.position = position;\r\n        if (currentWord.position < 0 || currentWord.position >= currentWord.indicators.length) {\r\n            this.logger.warn(\"Invalid navigation for the given position: \" + position);\r\n            currentWord.position = 0;\r\n        }\r\n        this.highlightNavigation(word);\r\n        return currentWord.indicators[currentWord.position];\r\n    };\r\n    QuickviewDocumentPreviewBar.prototype.highlightNavigation = function (word) {\r\n        var _this = this;\r\n        var currentWord = this.wordIndicators.get(word);\r\n        var currentElement = currentWord.indicators[currentWord.position];\r\n        var otherElements = underscore_1.without(currentWord.indicators, currentElement);\r\n        currentElement.style.backgroundColor = word.color.invert();\r\n        currentElement.style.border = \"1px solid \" + word.color.invert();\r\n        otherElements.forEach(function (element) { return _this.defaultStyleColor(element, word); });\r\n    };\r\n    QuickviewDocumentPreviewBar.prototype.renderPreviewBar = function () {\r\n        var _this = this;\r\n        var previewBar = Dom_1.$$('div');\r\n        previewBar.el.style.width = '15px';\r\n        previewBar.el.style.position = 'fixed';\r\n        previewBar.el.style.top = '0';\r\n        previewBar.el.style.right = '0px';\r\n        previewBar.el.style.height = '100%';\r\n        this.iframe.body.appendChild(previewBar.el);\r\n        underscore_1.each(this.words.words, function (word) {\r\n            underscore_1.each(word.elements, function (element) {\r\n                var indicator = _this.renderWordPositionIndicator(element, word).el;\r\n                if (_this.wordIndicators.has(word)) {\r\n                    _this.wordIndicators.get(word).indicators.push(indicator);\r\n                }\r\n                else {\r\n                    _this.wordIndicators.set(word, {\r\n                        indicators: [indicator],\r\n                        position: -1\r\n                    });\r\n                }\r\n                previewBar.append(indicator);\r\n            });\r\n            _this.handleOverlappingIndicators(word);\r\n        });\r\n    };\r\n    QuickviewDocumentPreviewBar.prototype.renderWordPositionIndicator = function (element, word) {\r\n        var docHeight = new Dom_1.Doc(this.iframe.document).height();\r\n        var elementPosition = element.getBoundingClientRect().top;\r\n        var previewUnit = Dom_1.$$('div');\r\n        previewUnit.el.style.position = 'absolute';\r\n        previewUnit.el.style.top = elementPosition / docHeight * 100 + \"%\";\r\n        previewUnit.el.style.width = '100%';\r\n        previewUnit.el.style.height = '1px';\r\n        this.defaultStyleColor(previewUnit.el, word);\r\n        return previewUnit;\r\n    };\r\n    QuickviewDocumentPreviewBar.prototype.defaultStyleColor = function (element, word) {\r\n        element.style.border = \"1px solid \" + word.color.saturate();\r\n        element.style.backgroundColor = word.color.htmlColor;\r\n    };\r\n    QuickviewDocumentPreviewBar.prototype.handleOverlappingIndicators = function (word) {\r\n        var allIndicators = this.wordIndicators.get(word).indicators;\r\n        var _loop_1 = function (i) {\r\n            var otherIndicatorAtSamePositionInDocument = underscore_1.chain(allIndicators)\r\n                .without(allIndicators[i])\r\n                .find(function (otherIndicator) { return otherIndicator.style.top == allIndicators[i].style.top; })\r\n                .value();\r\n            if (otherIndicatorAtSamePositionInDocument) {\r\n                Dom_1.$$(allIndicators[i]).remove();\r\n                allIndicators[i] = otherIndicatorAtSamePositionInDocument;\r\n            }\r\n        };\r\n        for (var i = 0; i < allIndicators.length; i++) {\r\n            _loop_1(i);\r\n        }\r\n    };\r\n    return QuickviewDocumentPreviewBar;\r\n}());\r\nexports.QuickviewDocumentPreviewBar = QuickviewDocumentPreviewBar;\r\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// Quickview.min__5f3280c404a1ee75a113.js","import { ModalBox as ModalBoxModule } from '../ExternalModulesShim';\r\nimport { FocusTrap } from '../ui/FocusTrap/FocusTrap';\r\nimport { l } from '../strings/Strings';\r\nimport { $$ } from './Dom';\r\nimport { KeyboardUtils, KEYBOARD } from './KeyboardUtils';\r\nimport { IQuickViewHeaderOptions } from './DomUtils';\r\nimport { IQueryResult } from '../rest/QueryResult';\r\nimport { IComponentBindings } from '../ui/Base/ComponentBindings';\r\nimport { DomUtils } from '../Core';\r\n\r\nexport interface IAccessibleModalOptions {\r\n  overlayClose?: boolean;\r\n  sizeMod: 'small' | 'normal' | 'big';\r\n}\r\n\r\nexport interface IAccessibleModalOpenParameters {\r\n  content: HTMLElement;\r\n  validation: () => boolean;\r\n  origin: HTMLElement;\r\n}\r\n\r\nexport interface IAccessibleModalOpenResultParameters extends IAccessibleModalOpenParameters {\r\n  result: IQueryResult;\r\n  options: IQuickViewHeaderOptions;\r\n  bindings: IComponentBindings;\r\n}\r\n\r\nexport interface IAccessibleModalOpenNormalParameters extends IAccessibleModalOpenParameters {\r\n  title: HTMLElement;\r\n}\r\n\r\nexport class AccessibleModal {\r\n  private focusTrap: FocusTrap;\r\n  private activeModal: Coveo.ModalBox.ModalBox;\r\n  private options: IAccessibleModalOptions;\r\n  private initiallyFocusedElement: HTMLElement;\r\n\r\n  public get isOpen() {\r\n    return !!this.focusTrap;\r\n  }\r\n\r\n  public get element() {\r\n    return this.activeModal && this.activeModal.modalBox;\r\n  }\r\n\r\n  public get content() {\r\n    return this.activeModal && this.activeModal.content;\r\n  }\r\n\r\n  public get wrapper() {\r\n    return this.activeModal && this.activeModal.wrapper;\r\n  }\r\n\r\n  private get headerElement() {\r\n    return this.element && this.element.querySelector<HTMLElement>('.coveo-modal-header h1');\r\n  }\r\n\r\n  constructor(\r\n    private className: string,\r\n    private ownerElement: HTMLElement,\r\n    private modalboxModule: Coveo.ModalBox.ModalBox = ModalBoxModule,\r\n    options: Partial<IAccessibleModalOptions> = {}\r\n  ) {\r\n    this.options = {\r\n      ...{\r\n        sizeMod: 'big'\r\n      },\r\n      ...options\r\n    };\r\n  }\r\n\r\n  public openResult(parameters: IAccessibleModalOpenResultParameters) {\r\n    if (this.isOpen) {\r\n      return;\r\n    }\r\n    this.openModalAndTrap({\r\n      content: parameters.content,\r\n      validation: parameters.validation,\r\n      origin: parameters.origin,\r\n      title: DomUtils.getQuickviewHeader(parameters.result, parameters.options, parameters.bindings).el\r\n    });\r\n    this.makeAccessible(parameters.options.title || parameters.result.title);\r\n  }\r\n\r\n  public open(parameters: IAccessibleModalOpenNormalParameters) {\r\n    if (this.isOpen) {\r\n      return;\r\n    }\r\n    this.openModalAndTrap(parameters);\r\n    this.makeAccessible();\r\n  }\r\n\r\n  private openModalAndTrap(parameters: IAccessibleModalOpenNormalParameters) {\r\n    this.initiallyFocusedElement = parameters.origin || (document.activeElement as HTMLElement);\r\n    this.activeModal = this.modalboxModule.open(parameters.content, {\r\n      title: parameters.title,\r\n      className: this.className,\r\n      validation: () => {\r\n        this.onModalClose();\r\n        return parameters.validation();\r\n      },\r\n      body: this.ownerElement,\r\n      sizeMod: this.options.sizeMod,\r\n      overlayClose: this.options.overlayClose\r\n    });\r\n    this.focusTrap = new FocusTrap(this.element);\r\n  }\r\n\r\n  public close() {\r\n    if (!this.isOpen) {\r\n      return;\r\n    }\r\n    this.activeModal.close();\r\n    this.activeModal = null;\r\n  }\r\n\r\n  private makeAccessible(title?: string) {\r\n    this.element.setAttribute('aria-modal', 'true');\r\n    if (title) {\r\n      this.headerElement.setAttribute('aria-label', title);\r\n    }\r\n    this.makeCloseButtonAccessible();\r\n  }\r\n\r\n  private makeCloseButtonAccessible() {\r\n    const closeButton: HTMLElement = this.element.querySelector('.coveo-small-close');\r\n    closeButton.setAttribute('aria-label', l('Close'));\r\n    closeButton.setAttribute('role', 'button');\r\n    closeButton.tabIndex = 0;\r\n    closeButton.focus();\r\n    $$(closeButton).on('keyup', KeyboardUtils.keypressAction(KEYBOARD.ENTER, () => closeButton.click()));\r\n  }\r\n\r\n  private onModalClose() {\r\n    this.focusTrap.disable();\r\n    this.focusTrap = null;\r\n    if (this.initiallyFocusedElement && document.body.contains(this.initiallyFocusedElement)) {\r\n      this.initiallyFocusedElement.focus();\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/AccessibleModal.ts","/**\r\n * The `IQuickviewLoadedEventArgs` interface describes the object that all\r\n * [`quickviewLoaded`]{@link QuickviewEvents.quickviewLoaded} event handlers receive as an argument.\r\n */\r\nexport interface IQuickviewLoadedEventArgs {\r\n  /**\r\n   * The amount of time it took to download the content to display in the quickview modal window (in milliseconds).\r\n   */\r\n  duration: number;\r\n}\r\n\r\n/**\r\n * The `QuickviewEvents` static class contains the string definitions of all events that strongly relate to the\r\n * [`Quickview`]{@link Quickview} component.\r\n */\r\nexport class QuickviewEvents {\r\n  /**\r\n   * Triggered by the [`QuickviewDocument`]{@link QuickviewDocument} component when the content to display in the\r\n   * quickview modal window has just finished downloading.\r\n   *\r\n   * The [`Quickview`]{@link Quickview} component listens to this event to know when to remove its loading animation.\r\n   *\r\n   * All `quickviewLoaded` event handlers receive a [`QuickviewLoadedEventArgs`]{@link IQuickviewLoadedEventArgs} object\r\n   * as an argument.\r\n   *\r\n   * @type {string} The string value is `quickviewLoaded`.\r\n   */\r\n  public static quickviewLoaded = 'quickviewLoaded';\r\n\r\n  /**\r\n   * Triggered by the [`QuickviewDocument`]{@link QuickviewDocument} component when the end user has just clicked the\r\n   * **Quickview** button/link to open the quickview modal window.\r\n   *\r\n   * This event allows external code to modify the terms to highlight before the content of the quickview modal window\r\n   * is rendered.\r\n   *\r\n   * All `openQuickview` event handlers receive an\r\n   * [`OpenQuickviewEventArgs`]{@link ResultListEvents.IOpenQuickviewEventArgs} object as an argument.\r\n   *\r\n   * @type {string} The string value is `openQuickview`.\r\n   */\r\n  public static openQuickview = 'openQuickview';\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/events/QuickviewEvents.ts","import { IQuickviewLoadedEventArgs, QuickviewEvents } from '../../events/QuickviewEvents';\r\nimport { IOpenQuickviewEventArgs } from '../../events/ResultListEvents';\r\nimport { Assert } from '../../misc/Assert';\r\nimport { IQuery } from '../../rest/Query';\r\nimport { IQueryResult } from '../../rest/QueryResult';\r\nimport { IViewAsHtmlOptions } from '../../rest/SearchEndpointInterface';\r\nimport { $$ } from '../../utils/Dom';\r\nimport { Utils } from '../../utils/Utils';\r\nimport { Component } from '../Base/Component';\r\nimport { IComponentBindings } from '../Base/ComponentBindings';\r\nimport { ComponentOptions } from '../Base/ComponentOptions';\r\nimport { Initialization } from '../Base/Initialization';\r\nimport { QuickviewDocumentIframe } from './QuickviewDocumentIframe';\r\nimport { QuickviewDocumentHeader } from './QuickviewDocumentHeader';\r\nimport { QuickviewDocumentWords } from './QuickviewDocumentWords';\r\nimport { each, keys } from 'underscore';\r\nimport { QuickviewDocumentWordButton } from './QuickviewDocumentWordButton';\r\nimport { QuickviewDocumentPreviewBar } from './QuickviewDocumentPreviewBar';\r\n\r\nexport const HIGHLIGHT_PREFIX = 'CoveoHighlight';\r\n\r\nexport interface IQuickviewDocumentOptions {\r\n  maximumDocumentSize?: number;\r\n}\r\n\r\n/**\r\n * The `QuickviewDocument` component normally exists within a [`Quickview`]{@link Quickview} component. The sole purpose\r\n * of this component is to add an `<iframe>` which loads the correct HTML version of the current item.\r\n *\r\n * The default [`contentTemplate`]{@link Quickview.options.contentTemplate} of the\r\n * `Quickview` component includes the `QuickviewDocument` component.\r\n *\r\n * This component is a result template component (see [Result Templates](https://docs.coveo.com/en/413/)).\r\n */\r\nexport class QuickviewDocument extends Component {\r\n  static ID = 'QuickviewDocument';\r\n\r\n  /**\r\n   * The options for the component\r\n   * @componentOptions\r\n   */\r\n  static options: IQuickviewDocumentOptions = {\r\n    /**\r\n     * Specifies the maximum preview size that the index should return.\r\n     *\r\n     * Default value is `0`, and the index returns the entire preview. Minimum value is `0`.\r\n     */\r\n    maximumDocumentSize: ComponentOptions.buildNumberOption({ defaultValue: 0, min: 0 })\r\n  };\r\n\r\n  private iframe: QuickviewDocumentIframe;\r\n  private header: QuickviewDocumentHeader;\r\n\r\n  /**\r\n   * Creates a new `QuickviewDocument` component.\r\n   * @param element The HTMLElement on which to instantiate the component.\r\n   * @param options The options for the `QuickviewDocument` component.\r\n   * @param bindings The bindings that the component requires to function normally. If not set, these will be\r\n   * automatically resolved (with a slower execution time).\r\n   * @param result The current result.\r\n   */\r\n  constructor(\r\n    public element: HTMLElement,\r\n    public options?: IQuickviewDocumentOptions,\r\n    bindings?: IComponentBindings,\r\n    public result?: IQueryResult\r\n  ) {\r\n    super(element, QuickviewDocument.ID, bindings);\r\n\r\n    this.options = ComponentOptions.initComponentOptions(element, QuickviewDocument, options);\r\n\r\n    this.result = result || this.resolveResult();\r\n    Assert.exists(this.result);\r\n  }\r\n\r\n  public createDom() {\r\n    const container = $$('div', {\r\n      className: 'coveo-quickview-document'\r\n    });\r\n    this.element.appendChild(container.el);\r\n\r\n    this.header = new QuickviewDocumentHeader();\r\n    this.iframe = new QuickviewDocumentIframe();\r\n\r\n    container.append(this.header.el);\r\n    container.append(this.iframe.el);\r\n  }\r\n\r\n  public async open() {\r\n    this.ensureDom();\r\n\r\n    const beforeLoad = new Date().getTime();\r\n    const termsToHighlight = this.initialTermsToHighlight;\r\n\r\n    this.triggerOpenQuickViewEvent({ termsToHighlight });\r\n\r\n    const termsWereModified = this.wereTermsToHighlightModified(termsToHighlight);\r\n\r\n    if (termsWereModified) {\r\n      this.handleTermsToHighlight(termsToHighlight, this.query);\r\n    }\r\n\r\n    try {\r\n      const documentHTML = await this.queryController.getEndpoint().getDocumentHtml(this.result.uniqueId, {\r\n        queryObject: this.query,\r\n        requestedOutputSize: this.options.maximumDocumentSize\r\n      } as IViewAsHtmlOptions);\r\n\r\n      await this.iframe.render(documentHTML, this.result.title);\r\n\r\n      const documentWords = new QuickviewDocumentWords(this.iframe, this.result);\r\n      const previewBar = new QuickviewDocumentPreviewBar(this.iframe, documentWords);\r\n\r\n      each(documentWords.words, word => {\r\n        const button = new QuickviewDocumentWordButton(word, previewBar, this.iframe);\r\n        this.header.addWord(button);\r\n      });\r\n\r\n      const afterLoad = new Date().getTime();\r\n\r\n      this.triggerQuickviewLoaded(afterLoad - beforeLoad);\r\n    } catch (error) {\r\n      await this.iframe.renderError(error);\r\n      const afterLoad = new Date().getTime();\r\n\r\n      this.triggerQuickviewLoaded(afterLoad - beforeLoad);\r\n    }\r\n  }\r\n\r\n  private get initialTermsToHighlight() {\r\n    return keys(this.result.termsToHighlight);\r\n  }\r\n\r\n  private triggerOpenQuickViewEvent(args: IOpenQuickviewEventArgs) {\r\n    $$(this.root).trigger(QuickviewEvents.openQuickview, args);\r\n  }\r\n\r\n  private get query() {\r\n    return { ...this.queryController.getLastQuery() };\r\n  }\r\n\r\n  private triggerQuickviewLoaded(duration: number) {\r\n    $$(this.element).trigger(QuickviewEvents.quickviewLoaded, {\r\n      duration\r\n    } as IQuickviewLoadedEventArgs);\r\n  }\r\n\r\n  private handleTermsToHighlight(termsToHighlight: string[], queryObject: IQuery) {\r\n    for (const term in this.result.termsToHighlight) {\r\n      delete this.result.termsToHighlight[term];\r\n    }\r\n    let query = '';\r\n    each(termsToHighlight, term => {\r\n      query += term + ' ';\r\n      this.result.termsToHighlight[term] = [term];\r\n    });\r\n    query = query.substring(0, query.length - 1);\r\n    queryObject.q = query;\r\n  }\r\n\r\n  private wereTermsToHighlightModified(termsToHighlight: string[]) {\r\n    return !Utils.arrayEqual(termsToHighlight, this.initialTermsToHighlight);\r\n  }\r\n}\r\n\r\nInitialization.registerAutoCreateComponent(QuickviewDocument);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/Quickview/QuickviewDocument.ts","import PopperJs from 'popper.js';\r\nimport 'styling/_Quickview';\r\nimport { QuickviewEvents } from '../../events/QuickviewEvents';\r\nimport { ResultListEvents } from '../../events/ResultListEvents';\r\nimport { ModalBox as ModalBoxModule } from '../../ExternalModulesShim';\r\nimport { exportGlobally } from '../../GlobalExports';\r\nimport { QueryStateModel } from '../../models/QueryStateModel';\r\nimport { IQueryResult } from '../../rest/QueryResult';\r\nimport { l } from '../../strings/Strings';\r\nimport { AccessibleButton } from '../../utils/AccessibleButton';\r\nimport { $$, Dom } from '../../utils/Dom';\r\nimport { DomUtils } from '../../utils/DomUtils';\r\nimport { StringUtils } from '../../utils/StringUtils';\r\nimport { SVGDom } from '../../utils/SVGDom';\r\nimport { SVGIcons } from '../../utils/SVGIcons';\r\nimport { Utils } from '../../utils/Utils';\r\nimport { analyticsActionCauseList } from '../Analytics/AnalyticsActionListMeta';\r\nimport { Component } from '../Base/Component';\r\nimport { ComponentOptions } from '../Base/ComponentOptions';\r\nimport { ComponentOptionsType } from '../Base/IComponentOptions';\r\nimport { IInitializationParameters, Initialization } from '../Base/Initialization';\r\nimport { IResultsComponentBindings } from '../Base/ResultsComponentBindings';\r\nimport { TemplateComponentOptions } from '../Base/TemplateComponentOptions';\r\nimport { Template } from '../Templates/Template';\r\nimport { DefaultQuickviewTemplate } from './DefaultQuickviewTemplate';\r\nimport { QuickviewDocument } from './QuickviewDocument';\r\nimport { AccessibleModal } from '../../utils/AccessibleModal';\r\n\r\n/**\r\n * The allowed [`Quickview`]{@link Quickview} [`tooltipPlacement`]{@link Quickview.options.tooltipPlacement} option values. The `-start` and `-end` variations indicate relative alignement. Horizontally (`top`, `bottom`), `-start` means _left_ and `-end` means _right_. Vertically (`left`, `right`), `-start` means _top_ and `-end` means _bottom_. No variation means _center_.\r\n */\r\nexport type ValidTooltipPlacement =\r\n  | 'auto-start'\r\n  | 'auto'\r\n  | 'auto-end'\r\n  | 'top-start'\r\n  | 'top'\r\n  | 'top-end'\r\n  | 'right-start'\r\n  | 'right'\r\n  | 'right-end'\r\n  | 'bottom-end'\r\n  | 'bottom'\r\n  | 'bottom-start'\r\n  | 'left-end'\r\n  | 'left'\r\n  | 'left-start';\r\n\r\nexport interface IQuickviewOptions {\r\n  title?: string;\r\n  showDate?: boolean;\r\n  contentTemplate?: Template;\r\n  enableLoadingAnimation?: boolean;\r\n  loadingAnimation?: HTMLElement | Promise<HTMLElement>;\r\n  alwaysShow?: boolean;\r\n  tooltipPlacement?: ValidTooltipPlacement;\r\n}\r\n\r\ninterface IQuickviewOpenerObject {\r\n  content: Promise<Dom>;\r\n  loadingAnimation: HTMLElement | Promise<HTMLElement>;\r\n}\r\n\r\n/**\r\n * The `Quickview` component renders a button/link which the end user can click to open a modal box containing certain\r\n * information about a result. Most of the time, this component references a\r\n * [`QuickviewDocument`]{@link QuickviewDocument} in its [`contentTemplate`]{@link Quickview.options.contentTemplate}.\r\n *\r\n * **Notes:**\r\n * > - `Quickview` is not meant to replace a [ResultLink]{@link ResultLink} to access an item; it has certain limitations (e.g., custom styles and embedded\r\n * images/links may not work as expected in a `Quickview`).\r\n * > - You can change the appearance of the `Quickview` link/button by adding elements in the inner HTML of its `div`.\r\n * > - You can change the content of the `Quickview` modal box link by specifying a template `id` or CSS selector (see\r\n * > the [`contentTemplate`]{@link Quickview.options.contentTemplate} option).\r\n * > - When using Coveo for Salesforce 3.16, in an environment compliant with LockerService, ensure you use `CoveoSalesforceQuickview` (see [Changing the Default Quick View in Coveo for Salesforce](https://docs.coveo.com/en/1234/)).\r\n *\r\n * **Example:**\r\n * ```html\r\n * [ ... ]\r\n *\r\n * <script class='result-template' type='text/underscore' id='myContentTemplateId'>\r\n *   <div>\r\n *     <span>This content will be displayed when then end user opens the quickview modal box. It could also include other Coveo component, and use core helpers.</span>\r\n *     <table class=\"CoveoFieldTable\">\r\n *       <tr data-field=\"@liboardshorttitle\" data-caption=\"Board\" />\r\n *       <tr data-field=\"@licategoryshorttitle\" data-caption=\"Category\" />\r\n *       <tr data-field=\"@sysauthor\" data-caption=\"Author\" />\r\n *     </table>\r\n *   </div>\r\n * </script>\r\n *\r\n * [ ... ]\r\n *\r\n * <div class='CoveoResultList'>\r\n *   <script class='result-template' type='text/underscore' id='myResultTemplateId'>\r\n *\r\n *   [ ... ]\r\n *\r\n *     <!-- The `myContentTemplateId` template applies when displaying content in the quickview modal box. -->\r\n *       <div class='CoveoQuickview' data-template-id='myContentTemplateId'>\r\n *         <!-- This changes the appearance of the Quickview button itself in the results -->\r\n *         <span>Click here for a quickview</span>\r\n *       </div>\r\n *   </script>\r\n *\r\n *   [ ... ]\r\n *\r\n * <!-- Note that simply including `<div class='CoveoQuickview'></div>` in the markup will be enough most of the time, since the component includes a default template and a default button appearance. -->\r\n * ```\r\n *\r\n * This component is a result template component (see [Result Templates](https://docs.coveo.com/en/413/)).\r\n */\r\nexport class Quickview extends Component {\r\n  static ID = 'Quickview';\r\n\r\n  static doExport = () => {\r\n    exportGlobally({\r\n      Quickview: Quickview,\r\n      QuickviewDocument: QuickviewDocument\r\n    });\r\n  };\r\n\r\n  /**\r\n   * @componentOptions\r\n   */\r\n  static options: IQuickviewOptions = {\r\n    /**\r\n     * Specifies whether to always show the `Quickview` button/link, even when the index body of an item is empty.\r\n     *\r\n     * In such cases, the [`contentTemplate`]{@link Quickview.options.contentTemplate} defines what appears in the\r\n     * `Quickview` modal box. Consequently, if there is no quickview for the item, you *MUST* specify a custom\r\n     * `contentTemplate`, otherwise the component will throw an error when opened.\r\n     *\r\n     * Default value is `false`.\r\n     *\r\n     * @availablesince [September 2015 Release (v1.0.59)](https://docs.coveo.com/en/289/#september-2015-release-v1059)\r\n     */\r\n    alwaysShow: ComponentOptions.buildBooleanOption({ defaultValue: false }),\r\n\r\n    /**\r\n     * Specifies the title that should appear in the `Quickview` modal box header.\r\n     *\r\n     * Default value is undefined, which is equivalent to the empty string.\r\n     */\r\n    title: ComponentOptions.buildStringOption(),\r\n\r\n    /**\r\n     * Specifies whether to display the item date in the `Quickview` modal box header.\r\n     *\r\n     * Default value is `true`.\r\n     */\r\n    showDate: ComponentOptions.buildBooleanOption({ defaultValue: true }),\r\n\r\n    /**\r\n     * Specifies whether to enable the loading animation.\r\n     *\r\n     * See also [`loadingAnimation`]{Quickview.options.loadingAnimation}.\r\n     *\r\n     * Default value is `true`.\r\n     */\r\n    enableLoadingAnimation: ComponentOptions.buildBooleanOption({ defaultValue: true }),\r\n\r\n    /**\r\n     * Specifies a custom template to use when displaying content in the `Quickview` modal box.\r\n     *\r\n     * **Note:**\r\n     * > You can use [`CoreHelpers`]{@link ICoreHelpers} methods in your content template.\r\n     *\r\n     * You can specify a previously registered template to use either by referring to its HTML `id` attribute or to a\r\n     * CSS selector (see [`TemplateCache`]{@link TemplateCache}).\r\n     *\r\n     * **Example:**\r\n     *\r\n     * * Specifying a previously registered template by referring to its HTML `id` attribute:\r\n     *\r\n     * ```html\r\n     * <div class=\"CoveoQuickview\" data-template-id=\"myContentTemplateId\"></div>\r\n     * ```\r\n     *\r\n     * * Specifying a previously registered template by referring to a CSS selector:\r\n     *\r\n     * ```html\r\n     * <div class='CoveoQuickview' data-template-selector=\".myContentTemplateSelector\"></div>\r\n     * ```\r\n     *\r\n     * If you do not specify a custom content template, the component uses its default template.\r\n     */\r\n    contentTemplate: TemplateComponentOptions.buildTemplateOption({\r\n      selectorAttr: 'data-template-selector',\r\n      idAttr: 'data-template-id'\r\n    }),\r\n\r\n    /**\r\n     * If [`enableLoadingAnimation`]{@link Quickview.options.enableLoadingAnimation} is `true`, specifies a custom\r\n     * animation to display while the content of the quickview modal window is loading. You can either specify the CSS\r\n     * selector of the HTML element you wish to display, or the `id` of a previously registered template (see\r\n     * [`TemplateCache`]{@link TemplateCache}).\r\n     *\r\n     * See [Customizing the Quickview Loading Animation](https://docs.coveo.com/en/296/#customizing-the-quickview-loading-animation).\r\n     *\r\n     * **Examples:**\r\n     *\r\n     * * Specifying the CSS selector of the HTML element to display:\r\n     *\r\n     * ```html\r\n     * <div class=\"CoveoQuickview\" data-loading-animation-selector=\".my-loading-animation\"></div>\r\n     * ```\r\n     *\r\n     * * Specifying the `id` of a previously registered template:\r\n     *\r\n     * ```html\r\n     * <div class=\"CoveoQuickview\" data-loading-animation-template-id=\"my-loading-animation-template\"></div>\r\n     * ```\r\n     *\r\n     * By default, the loading animation is a Coveo animation, which you can customize with CSS (see\r\n     * [Customizing the Default Loading Animation](https://docs.coveo.com/en/296/#customizing-the-default-search-page-animation).\r\n     */\r\n    loadingAnimation: ComponentOptions.buildOption<HTMLElement | Promise<HTMLElement>>(\r\n      ComponentOptionsType.NONE,\r\n      (element: HTMLElement) => {\r\n        const loadingAnimationSelector = element.getAttribute('data-loading-animation-selector');\r\n        if (loadingAnimationSelector != null) {\r\n          const loadingAnimation = $$(document.documentElement).find(loadingAnimationSelector);\r\n          if (loadingAnimation != null) {\r\n            $$(loadingAnimation).detach();\r\n            return loadingAnimation;\r\n          }\r\n        }\r\n        const id = element.getAttribute('data-loading-animation-template-id');\r\n        if (id != null) {\r\n          const loadingAnimationTemplate = TemplateComponentOptions.loadResultTemplateFromId(id);\r\n          if (loadingAnimationTemplate) {\r\n            return loadingAnimationTemplate.instantiateToElement(undefined, {\r\n              checkCondition: false\r\n            });\r\n          }\r\n        }\r\n        return DomUtils.getBasicLoadingAnimation();\r\n      }\r\n    ),\r\n\r\n    /**\r\n     * Specifies the emplacement of the tooltip in relation to the `Quickview` HTML element.\r\n     *\r\n     * **Example:**\r\n     * > Setting this option to `top-start` will make the tooltip appear on top of the `Quickview` button, aligned to the left.\r\n     *\r\n     * @availablesince [January 2019 Release (v2.5395.12)](https://docs.coveo.com/en/2938/)\r\n     */\r\n    tooltipPlacement: ComponentOptions.buildCustomOption<ValidTooltipPlacement>((value: ValidTooltipPlacement) => value, {\r\n      defaultValue: 'bottom'\r\n    })\r\n  };\r\n\r\n  public static resultCurrentlyBeingRendered: IQueryResult = null;\r\n\r\n  private modalbox: AccessibleModal;\r\n\r\n  /**\r\n   * Creates a new `Quickview` component.\r\n   * @param element The HTMLElement on which to instantiate the component.\r\n   * @param options The options for the `Quickview` component.\r\n   * @param bindings The bindings that the component requires to function normally. If not set, these will be\r\n   * automatically resolved (with a slower execution time).\r\n   * @param result The result to associate the component with.\r\n   * @param ModalBox The quickview modal box.\r\n   */\r\n  constructor(\r\n    public element: HTMLElement,\r\n    public options?: IQuickviewOptions,\r\n    public bindings?: IResultsComponentBindings,\r\n    public result?: IQueryResult,\r\n    ModalBox: Coveo.ModalBox.ModalBox = ModalBoxModule\r\n  ) {\r\n    super(element, Quickview.ID, bindings);\r\n    this.options = ComponentOptions.initComponentOptions(element, Quickview, options);\r\n\r\n    if (this.options.contentTemplate == null) {\r\n      this.options.contentTemplate = new DefaultQuickviewTemplate();\r\n    }\r\n\r\n    // If there is no content inside the Quickview div,\r\n    // we need to add something that will show up in the result template itself\r\n    if (/^\\s*$/.test(this.element.innerHTML)) {\r\n      this.buildContent();\r\n    }\r\n\r\n    this.bindClick(result);\r\n    if (this.bindings.resultElement) {\r\n      this.bind.on(this.bindings.resultElement, ResultListEvents.openQuickview, (event?: Event) => {\r\n        event && event.stopPropagation();\r\n        this.open();\r\n      });\r\n    }\r\n\r\n    this.modalbox = new AccessibleModal('coveo-quick-view', this.searchInterface.options.modalContainer, ModalBox);\r\n  }\r\n\r\n  private buildContent() {\r\n    const icon = this.buildIcon();\r\n    const caption = this.buildCaption();\r\n    const content = $$('div');\r\n\r\n    content.append(icon);\r\n    content.append(caption);\r\n    $$(this.element).append(content.el);\r\n\r\n    this.buildTooltipIfNotInCardLayout(icon, caption);\r\n  }\r\n\r\n  private buildIcon() {\r\n    const icon = $$('div', { className: 'coveo-icon-for-quickview' }, SVGIcons.icons.quickview).el;\r\n    SVGDom.addClassToSVGInContainer(icon, 'coveo-icon-for-quickview-svg');\r\n    return icon;\r\n  }\r\n\r\n  private buildCaption() {\r\n    return $$('div', { className: 'coveo-caption-for-icon' }, 'Quickview'.toLocaleString()).el;\r\n  }\r\n\r\n  private buildTooltipIfNotInCardLayout(icon: HTMLElement, caption: HTMLElement) {\r\n    if (this.resultsAreInCardLayout) {\r\n      return;\r\n    }\r\n\r\n    const arrow = $$('div').el;\r\n    caption.appendChild(arrow);\r\n    this.buildPopper(icon, caption, arrow);\r\n  }\r\n\r\n  private get resultsAreInCardLayout() {\r\n    return this.queryStateModel.get(QueryStateModel.attributesEnum.layout) === 'card';\r\n  }\r\n\r\n  private buildPopper(icon: HTMLElement, caption: HTMLElement, arrow: HTMLElement) {\r\n    const popperReference = new PopperJs(icon, caption, {\r\n      placement: this.options.tooltipPlacement,\r\n      modifiers: {\r\n        preventOverflow: {\r\n          boundariesElement: $$(this.root).el,\r\n          padding: 0\r\n        },\r\n        arrow: {\r\n          element: arrow\r\n        },\r\n        // X,Y offset of the tooltip relative to the icon\r\n        offset: {\r\n          offset: '0,8'\r\n        }\r\n      },\r\n      eventsEnabled: false\r\n    });\r\n\r\n    $$(this.element).on('mouseover', () => {\r\n      popperReference.update();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Opens the `Quickview` modal box.\r\n   */\r\n  public open() {\r\n    if (!this.modalbox.isOpen) {\r\n      // To prevent the keyboard from opening on mobile if the search bar has focus\r\n      Quickview.resultCurrentlyBeingRendered = this.result;\r\n      // activeElement does not exist in LockerService\r\n      if (document.activeElement && document.activeElement instanceof HTMLElement) {\r\n        $$(document.activeElement as HTMLElement).trigger('blur');\r\n      }\r\n\r\n      const openerObject = this.prepareOpenQuickviewObject();\r\n      return this.createModalBox(openerObject).then(() => {\r\n        this.bindQuickviewEvents(openerObject);\r\n        this.animateAndOpen();\r\n        this.logUsageAnalyticsEvent();\r\n        this.queryStateModel.set(QueryStateModel.attributesEnum.quickview, this.getHashId());\r\n        Quickview.resultCurrentlyBeingRendered = null;\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Closes the `Quickview` modal box.\r\n   */\r\n  public close() {\r\n    if (this.modalbox.isOpen) {\r\n      this.modalbox.close();\r\n    }\r\n  }\r\n\r\n  public getHashId() {\r\n    return this.result.queryUid + '.' + this.result.index + '.' + StringUtils.hashCode(this.result.uniqueId);\r\n  }\r\n\r\n  private logUsageAnalyticsEvent() {\r\n    this.usageAnalytics.logClickEvent(\r\n      analyticsActionCauseList.documentQuickview,\r\n      {\r\n        author: Utils.getFieldValue(this.result, 'author'),\r\n        documentURL: this.result.clickUri,\r\n        documentTitle: this.result.title\r\n      },\r\n      this.result,\r\n      this.element\r\n    );\r\n  }\r\n\r\n  private bindClick(result: IQueryResult) {\r\n    if (typeof result.hasHtmlVersion == 'undefined' || result.hasHtmlVersion || this.options.alwaysShow) {\r\n      const clickAction = () => this.open();\r\n\r\n      new AccessibleButton().withElement(this.element).withSelectAction(clickAction).withLabel(l('Quickview')).withOwner(this.bind).build();\r\n    } else {\r\n      this.element.style.display = 'none';\r\n    }\r\n  }\r\n\r\n  private bindQuickviewEvents(openerObject: IQuickviewOpenerObject) {\r\n    $$(this.modalbox.content).on(QuickviewEvents.quickviewLoaded, async () => {\r\n      const anim = await openerObject.loadingAnimation;\r\n      $$(anim).remove();\r\n    });\r\n  }\r\n\r\n  private animateAndOpen() {\r\n    const quickviewDocument = $$(this.modalbox.element).find('.' + Component.computeCssClassName(QuickviewDocument));\r\n    if (quickviewDocument) {\r\n      Initialization.dispatchNamedMethodCallOrComponentCreation('open', quickviewDocument, null);\r\n    }\r\n  }\r\n\r\n  private createModalBox(openerObject: IQuickviewOpenerObject) {\r\n    const computedModalBoxContent = $$('div');\r\n    computedModalBoxContent.addClass('coveo-computed-modal-box-content');\r\n    return openerObject.content.then(builtContent => {\r\n      computedModalBoxContent.append(builtContent.el);\r\n      this.modalbox.openResult({\r\n        result: this.result,\r\n        options: {\r\n          showDate: this.options.showDate,\r\n          title: this.options.title\r\n        },\r\n        bindings: this.bindings,\r\n        content: computedModalBoxContent.el,\r\n        validation: () => {\r\n          this.closeQuickview();\r\n          return true;\r\n        },\r\n        origin: this.element\r\n      });\r\n      return computedModalBoxContent;\r\n    });\r\n  }\r\n\r\n  private prepareOpenQuickviewObject() {\r\n    const loadingAnimation = this.options.loadingAnimation;\r\n    return {\r\n      loadingAnimation: loadingAnimation,\r\n      content: this.prepareQuickviewContent(loadingAnimation)\r\n    };\r\n  }\r\n\r\n  private async prepareQuickviewContent(loadingAnimation: HTMLElement | Promise<HTMLElement>): Promise<Dom> {\r\n    const domContent = await this.instantiateTemplateToDom();\r\n\r\n    const initOptions = this.searchInterface.options;\r\n    const initParameters: IInitializationParameters = {\r\n      options: initOptions,\r\n      bindings: this.getBindings(),\r\n      result: this.result\r\n    };\r\n\r\n    await Initialization.automaticallyCreateComponentsInside(domContent.el, initParameters).initResult;\r\n\r\n    const containsQuickviewDocumentAndCustomAnimation = () =>\r\n      domContent.find(`.${Component.computeCssClassName(QuickviewDocument)}`) != undefined && this.options.enableLoadingAnimation;\r\n\r\n    if (containsQuickviewDocumentAndCustomAnimation()) {\r\n      if (loadingAnimation instanceof HTMLElement) {\r\n        domContent.prepend(loadingAnimation);\r\n      } else if (loadingAnimation instanceof Promise) {\r\n        loadingAnimation.then(anim => {\r\n          domContent.prepend(anim);\r\n        });\r\n      }\r\n    }\r\n    return domContent;\r\n  }\r\n\r\n  private async instantiateTemplateToDom(): Promise<Dom> {\r\n    let templateInstantiated: HTMLElement;\r\n    try {\r\n      templateInstantiated = await this.options.contentTemplate.instantiateToElement(this.result);\r\n    } catch (e) {\r\n      this.logger.warn(e);\r\n    } finally {\r\n      if (!templateInstantiated) {\r\n        this.logger.warn(\r\n          'An unexpected error happened while trying to render a custom template quickview, fallbacking on default quickview template...',\r\n          this.options.contentTemplate\r\n        );\r\n        templateInstantiated = await new DefaultQuickviewTemplate().instantiateToElement(this.result);\r\n      }\r\n    }\r\n    return $$(templateInstantiated);\r\n  }\r\n\r\n  private closeQuickview() {\r\n    this.queryStateModel.set(QueryStateModel.attributesEnum.quickview, '');\r\n  }\r\n}\r\nInitialization.registerAutoCreateComponent(Quickview);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/Quickview/Quickview.ts","import { Defer } from '../../misc/Defer';\r\nimport { sortBy, without } from 'underscore';\r\nimport { $$ } from '../../utils/Dom';\r\n\r\nexport class FocusTrap {\r\n  private focusInEvent: (e: FocusEvent) => void;\r\n  private focusOutEvent: (e: FocusEvent) => void;\r\n  private hiddenElements: HTMLElement[];\r\n  private enabled: boolean;\r\n\r\n  private get focusableElements(): HTMLElement[] {\r\n    return sortBy(this.container.querySelectorAll('[tabindex]'), element => element.tabIndex);\r\n  }\r\n\r\n  constructor(private container: HTMLElement) {\r\n    this.hiddenElements = [];\r\n    this.enable();\r\n  }\r\n\r\n  public disable() {\r\n    document.removeEventListener('focusin', this.focusInEvent);\r\n    document.removeEventListener('focusout', this.focusOutEvent);\r\n    this.showHiddenElements();\r\n    this.enabled = false;\r\n  }\r\n\r\n  private enable() {\r\n    document.addEventListener('focusin', (this.focusInEvent = e => this.onFocusIn(e)));\r\n    document.addEventListener('focusout', (this.focusOutEvent = e => this.onFocusOut(e)));\r\n    this.hideAllExcept(this.container);\r\n    this.enabled = true;\r\n  }\r\n\r\n  private showHiddenElements() {\r\n    while (this.hiddenElements.length) {\r\n      this.hiddenElements.pop().removeAttribute('aria-hidden');\r\n    }\r\n  }\r\n\r\n  private hideElement(element: HTMLElement) {\r\n    if (element.getAttribute('aria-hidden')) {\r\n      return;\r\n    }\r\n    this.hiddenElements.push(element);\r\n    element.setAttribute('aria-hidden', `${true}`);\r\n  }\r\n\r\n  private hideSiblings(allowedElement: HTMLElement) {\r\n    const parent = allowedElement.parentElement;\r\n    if (parent) {\r\n      without($$(parent).children(), allowedElement).forEach(elementToHide => {\r\n        this.hideElement(elementToHide);\r\n      });\r\n    }\r\n  }\r\n\r\n  private hideAllExcept(allowedElement: HTMLElement) {\r\n    this.hideSiblings(allowedElement);\r\n    const parent = allowedElement.parentElement;\r\n    if (parent && parent !== document.body) {\r\n      this.hideAllExcept(parent);\r\n    }\r\n  }\r\n\r\n  private getFocusableSibling(element: HTMLElement, previous = false) {\r\n    const elements = this.focusableElements;\r\n    const currentIndex = elements.indexOf(element);\r\n    if (currentIndex === -1) {\r\n      return null;\r\n    }\r\n    return elements[(currentIndex + (previous ? -1 : 1) + elements.length) % elements.length];\r\n  }\r\n\r\n  private focusSibling(element: HTMLElement, previous = false) {\r\n    const sibling = this.getFocusableSibling(element, previous);\r\n    if (sibling) {\r\n      sibling.focus();\r\n    }\r\n  }\r\n\r\n  private focusFirstElement() {\r\n    const elements = this.focusableElements;\r\n    if (elements.length) {\r\n      elements[0].focus();\r\n    }\r\n  }\r\n\r\n  private elementIsBefore(oldElement: HTMLElement, newElement: HTMLElement) {\r\n    if (!newElement) {\r\n      return false;\r\n    }\r\n    return oldElement.compareDocumentPosition(newElement) === Node.DOCUMENT_POSITION_PRECEDING;\r\n  }\r\n\r\n  private onLosingFocus(oldElement: HTMLElement, newElement: HTMLElement) {\r\n    Defer.defer(() => {\r\n      if (!this.enabled) {\r\n        return;\r\n      }\r\n      this.enabled = false;\r\n      if (oldElement && this.focusIsAllowed(oldElement)) {\r\n        this.focusSibling(oldElement, this.elementIsBefore(oldElement, newElement));\r\n      } else {\r\n        this.focusFirstElement();\r\n      }\r\n      this.enabled = true;\r\n    });\r\n  }\r\n\r\n  private focusIsAllowed(element: HTMLElement) {\r\n    return this.container.contains(element);\r\n  }\r\n\r\n  private elementIsInPage(element: HTMLElement) {\r\n    return element && element !== document.body.parentElement;\r\n  }\r\n\r\n  private onFocusIn(e: FocusEvent) {\r\n    if (!this.enabled) {\r\n      return;\r\n    }\r\n    const oldElement = e.relatedTarget as HTMLElement;\r\n    const handledByFocusOut = this.elementIsInPage(oldElement);\r\n    if (handledByFocusOut) {\r\n      return;\r\n    }\r\n    const newElement = e.target as HTMLElement;\r\n    if (!this.elementIsInPage(newElement)) {\r\n      return;\r\n    }\r\n    if (!this.focusIsAllowed(newElement)) {\r\n      this.onLosingFocus(null, newElement);\r\n    }\r\n  }\r\n\r\n  private onFocusOut(e: FocusEvent) {\r\n    if (!this.enabled) {\r\n      return;\r\n    }\r\n    const newElement = e.relatedTarget as HTMLElement;\r\n    if (!this.elementIsInPage(newElement)) {\r\n      return;\r\n    }\r\n    if (!newElement || !this.focusIsAllowed(newElement)) {\r\n      this.onLosingFocus(e.target as HTMLElement, newElement);\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/FocusTrap/FocusTrap.ts","import { Template } from '../Templates/Template';\r\nimport { IQueryResult } from '../../rest/QueryResult';\r\n\r\nexport class DefaultQuickviewTemplate extends Template {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  instantiateToString(queryResult?: IQueryResult): string {\r\n    return '<div class=\"coveo-quick-view-full-height\"><div class=\"CoveoQuickviewDocument\"></div></div>';\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/Quickview/DefaultQuickviewTemplate.ts","import { each } from 'underscore';\r\nimport { DeviceUtils, l } from '../../Core';\r\nimport { AjaxError } from '../../rest/AjaxError';\r\nimport { $$, Dom } from '../../utils/Dom';\r\n\r\nexport class QuickviewDocumentIframe {\r\n  public el: HTMLElement;\r\n  private iframeElement: HTMLIFrameElement;\r\n\r\n  constructor() {\r\n    this.el = this.buildIFrame().el;\r\n  }\r\n\r\n  public get iframeHTMLElement() {\r\n    return this.iframeElement;\r\n  }\r\n\r\n  public get document() {\r\n    return this.iframeElement.contentWindow.document;\r\n  }\r\n\r\n  public get body() {\r\n    return this.document.body;\r\n  }\r\n\r\n  public get window() {\r\n    return this.iframeElement.contentWindow;\r\n  }\r\n\r\n  public isNewQuickviewDocument(): boolean {\r\n    const meta = $$(this.document.head).find(\"meta[name='generator']\");\r\n    return meta && meta.getAttribute('content') == 'pdf2htmlEX';\r\n  }\r\n\r\n  public render(htmlDocument: HTMLDocument, title: string): Promise<HTMLIFrameElement> {\r\n    if (this.quickviewIsClosedByEndUser()) {\r\n      return Promise.reject(null);\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n      // Take care to bind the onload function before actually writing to the iframe :\r\n      // Safari, IE, Edge need this, otherwise the onload function is never called\r\n      this.iframeElement.onload = () => {\r\n        resolve(this.iframeElement);\r\n      };\r\n\r\n      this.addClientSideTweaksToIFrameStyling(htmlDocument);\r\n      this.writeToIFrame(htmlDocument);\r\n      this.iframeElement.title = title;\r\n    });\r\n  }\r\n\r\n  public renderError(error: AjaxError): Promise<HTMLIFrameElement> {\r\n    if (this.quickviewIsClosedByEndUser()) {\r\n      return Promise.reject(null);\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n      let errorMessage = '';\r\n      switch (error.status) {\r\n        case 400:\r\n          errorMessage = l('NoQuickview');\r\n          break;\r\n        default:\r\n          errorMessage = l('OoopsError');\r\n          break;\r\n      }\r\n\r\n      const errorDocument = document.implementation.createHTMLDocument();\r\n      errorDocument.body.style.fontFamily = `Arimo, \\'Helvetica Neue\\', Helvetica, Arial, sans-serif`;\r\n      $$(errorDocument.body).text(errorMessage);\r\n\r\n      this.writeToIFrame(errorDocument);\r\n\r\n      resolve(this.iframeElement);\r\n    });\r\n  }\r\n\r\n  private quickviewIsClosedByEndUser() {\r\n    return this.iframeElement.contentDocument == null;\r\n  }\r\n\r\n  private buildIFrame(): Dom {\r\n    const iframe = $$('iframe', {\r\n      sandbox: 'allow-popups allow-same-origin allow-top-navigation',\r\n      src: 'about:blank'\r\n    });\r\n    this.iframeElement = iframe.el as HTMLIFrameElement;\r\n\r\n    const iframewrapper = $$('div', {\r\n      className: 'coveo-iframeWrapper'\r\n    });\r\n    iframewrapper.append(iframe.el);\r\n\r\n    return iframewrapper;\r\n  }\r\n\r\n  private writeToIFrame(htmlDocument: HTMLDocument) {\r\n    this.allowDocumentLinkToEscapeSandbox(htmlDocument);\r\n    this.document.open();\r\n    this.document.write(htmlDocument.getElementsByTagName('html')[0].outerHTML);\r\n    this.document.close();\r\n  }\r\n\r\n  private allowDocumentLinkToEscapeSandbox(htmlDocument: HTMLDocument) {\r\n    // On the iframe, we set the sandbox attribute to \"allow top navigation\".\r\n    // For this to work, we need to force all link to target _top.\r\n    // This is especially useful for quickview on web pages.\r\n    each($$(htmlDocument.body).findAll('a'), link => {\r\n      link.setAttribute('target', '_top');\r\n    });\r\n  }\r\n\r\n  private addClientSideTweaksToIFrameStyling(htmlDocument: HTMLDocument) {\r\n    const style = $$('style', { type: 'text/css' }).el as HTMLStyleElement;\r\n\r\n    // Safari on iOS forces resize iframes to fit their content, even if an explicit size\r\n    // is set on the iframe. Isn't that great? By chance there is a trick around it: by\r\n    // setting a very small size on the body and instead using min-* to set the size to\r\n    // 100% we're able to trick Safari from thinking it must expand the iframe. Amazed.\r\n    // The 'scrolling' part is required otherwise the hack doesn't work.\r\n    //\r\n    // https://stackoverflow.com/questions/23083462/how-to-get-an-iframe-to-be-responsive-in-ios-safari\r\n    const cssHackForIOS = `\r\n      body, html {\r\n        height: 1px !important;\r\n        min-height: 100%;\r\n        width: 1px !important;\r\n        min-width: 100%;\r\n        overflow: scroll;\r\n        margin: auto\r\n      }\r\n      `;\r\n\r\n    const cssText = `\r\n      html pre {\r\n        white-space: pre-wrap;\r\n        word-wrap: break-word;\r\n      }\r\n      body, html {\r\n        font-family: Arimo, 'Helvetica Neue', Helvetica, Arial, sans-serif; -webkit-text-size-adjust: none;\r\n      }\r\n      ${DeviceUtils.isIos() ? cssHackForIOS : ''}\r\n      `;\r\n\r\n    if (DeviceUtils.isIos()) {\r\n      $$(this.iframeElement).setAttribute('scrolling', 'no');\r\n      this.iframeElement.parentElement.style.margin = '0 0 5px 5px';\r\n    }\r\n\r\n    style.appendChild(document.createTextNode(cssText));\r\n    htmlDocument.head.appendChild(style);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/Quickview/QuickviewDocumentIframe.ts","import { $$, Dom } from '../../utils/Dom';\r\nimport { QuickviewDocumentWordButton } from './QuickviewDocumentWordButton';\r\n\r\nexport class QuickviewDocumentHeader {\r\n  public el: HTMLElement;\r\n\r\n  constructor() {\r\n    this.el = this.buildHeader().el;\r\n  }\r\n\r\n  public addWord(wordButton: QuickviewDocumentWordButton) {\r\n    this.el.appendChild(wordButton.el);\r\n  }\r\n\r\n  private buildHeader(): Dom {\r\n    const header = $$('div', {\r\n      className: 'coveo-quickview-header'\r\n    });\r\n    return header;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/Quickview/QuickviewDocumentHeader.ts","import { $$ } from '../../utils/Dom';\r\nimport { each } from 'underscore';\r\nimport { QuickviewDocumentIframe } from './QuickviewDocumentIframe';\r\nimport { QuickviewDocumentWord } from './QuickviewDocumentWord';\r\nimport { HIGHLIGHT_PREFIX } from './QuickviewDocument';\r\nimport { IQueryResult } from '../../rest/QueryResult';\r\n\r\nexport class QuickviewDocumentWords {\r\n  public words: Record<string, QuickviewDocumentWord> = {};\r\n\r\n  constructor(public iframe: QuickviewDocumentIframe, public result: IQueryResult) {\r\n    this.scanDocument();\r\n  }\r\n\r\n  private scanDocument() {\r\n    each($$(this.iframe.body).findAll(`[id^=\"${HIGHLIGHT_PREFIX}\"]`), (element: HTMLElement, index: number) => {\r\n      const quickviewWord = new QuickviewDocumentWord(this.result);\r\n      quickviewWord.doCompleteInitialScanForKeywordInDocument(element);\r\n\r\n      if (!quickviewWord.text) {\r\n        return;\r\n      }\r\n\r\n      const alreadyScannedKeyword = this.words[quickviewWord.indexIdentifier];\r\n\r\n      if (!alreadyScannedKeyword) {\r\n        this.words[quickviewWord.indexIdentifier] = quickviewWord;\r\n      } else {\r\n        alreadyScannedKeyword.addElement(element);\r\n\r\n        // Special code needed to workaround invalid HTML returned by the index with embedded keyword\r\n        if (alreadyScannedKeyword.occurrence == quickviewWord.occurrence) {\r\n          alreadyScannedKeyword.text += quickviewWord.text;\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/Quickview/QuickviewDocumentWords.ts","import { find, first, keys, without } from 'underscore';\r\nimport { StringUtils } from '../../Core';\r\nimport { Logger } from '../../misc/Logger';\r\nimport { IQueryResult } from '../../rest/QueryResult';\r\nimport { $$ } from '../../utils/Dom';\r\nimport { HIGHLIGHT_PREFIX } from './QuickviewDocument';\r\nimport { QuickviewDocumentWordColor } from './QuickviewDocumentWordColor';\r\n\r\nexport class QuickviewDocumentWord {\r\n  public text: string;\r\n  public count: number = 0;\r\n  public numberOfEmbeddedWords: number;\r\n  public occurrence: number;\r\n  public indexIdentifier: string;\r\n  public indexTermPart: number;\r\n  public elements: HTMLElement[] = [];\r\n  public currentNavigationPosition = -1;\r\n  public color: QuickviewDocumentWordColor;\r\n\r\n  private logger: Logger;\r\n\r\n  constructor(public result: IQueryResult) {\r\n    this.logger = new Logger(this);\r\n  }\r\n\r\n  public addElement(element: HTMLElement) {\r\n    this.count++;\r\n    this.elements.push(element);\r\n  }\r\n\r\n  public navigateForward() {\r\n    this.currentNavigationPosition++;\r\n    if (this.currentNavigationPosition >= this.elements.length) {\r\n      this.currentNavigationPosition = 0;\r\n    }\r\n    this.highlightNavigation();\r\n    this.putElementIntoView();\r\n    return this.elements[this.currentNavigationPosition];\r\n  }\r\n\r\n  public navigateBackward() {\r\n    this.currentNavigationPosition--;\r\n    if (this.currentNavigationPosition < 0) {\r\n      this.currentNavigationPosition = this.elements.length - 1;\r\n    }\r\n    this.highlightNavigation();\r\n    this.putElementIntoView();\r\n    return this.elements[this.currentNavigationPosition];\r\n  }\r\n\r\n  public navigateTo(position: number): HTMLElement {\r\n    this.currentNavigationPosition = position;\r\n    if (this.currentNavigationPosition < 0 || this.currentNavigationPosition >= this.elements.length) {\r\n      this.currentNavigationPosition = 0;\r\n      this.logger.warn(`Invalid position in quickview navigation: ${position}`);\r\n    }\r\n    this.highlightNavigation();\r\n    return this.elements[this.currentNavigationPosition];\r\n  }\r\n\r\n  public doCompleteInitialScanForKeywordInDocument(element: HTMLElement) {\r\n    const parsed = this.parseKeywordIdentifier(element);\r\n\r\n    if (parsed) {\r\n      this.indexIdentifier = parsed.keywordIdentifier;\r\n      this.occurrence = parsed.keywordOccurrencesInDocument;\r\n      this.indexTermPart = parsed.keywordTermPart;\r\n      this.text = this.getText(element);\r\n      this.color = new QuickviewDocumentWordColor(element.style.backgroundColor);\r\n\r\n      this.addElement(element);\r\n    }\r\n  }\r\n\r\n  public isTaggedWord(element: HTMLElement) {\r\n    return element.nodeName.toLowerCase() == 'coveotaggedword';\r\n  }\r\n\r\n  private highlightNavigation() {\r\n    const currentElement = this.elements[this.currentNavigationPosition];\r\n    const otherElements = without(this.elements, currentElement);\r\n    currentElement.style.color = this.color.htmlColor;\r\n    currentElement.style.backgroundColor = this.color.invert();\r\n    otherElements.forEach(element => {\r\n      element.style.color = '';\r\n      element.style.backgroundColor = this.color.htmlColor;\r\n    });\r\n  }\r\n\r\n  private putElementIntoView() {\r\n    const element = this.elements[this.currentNavigationPosition];\r\n    element.scrollIntoView();\r\n  }\r\n\r\n  private getText(element: HTMLElement) {\r\n    const innerTextOfHTMLElement = this.getHighlightedInnerText(element);\r\n    return this.resolveOriginalTerm(innerTextOfHTMLElement);\r\n  }\r\n\r\n  private resolveOriginalTerm(highlight: string): string {\r\n    if (!this.result || !this.result.termsToHighlight) {\r\n      return highlight;\r\n    }\r\n\r\n    const found = find(keys(this.result.termsToHighlight), (originalTerm: string) => {\r\n      // The expansions do NOT include the original term (makes sense), so be sure to check\r\n      // the original term for a match too.\r\n      const originalTermMatch = StringUtils.equalsCaseInsensitive(originalTerm, highlight);\r\n      const expansionMatch =\r\n        find(this.result.termsToHighlight[originalTerm], (expansion: string) => StringUtils.equalsCaseInsensitive(expansion, highlight)) !=\r\n        undefined;\r\n      return originalTermMatch || expansionMatch;\r\n    });\r\n\r\n    return found || highlight;\r\n  }\r\n\r\n  private getHighlightedInnerText(element: HTMLElement): string {\r\n    if (!this.isTaggedWord(element)) {\r\n      return $$(element).text() || '';\r\n    }\r\n\r\n    const children = $$(element).children();\r\n    if (children.length >= 1) {\r\n      return $$(first(children)).text() || '';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  private parseKeywordIdentifier(element: HTMLElement) {\r\n    const parts = element.id.substr(HIGHLIGHT_PREFIX.length + 1).match(/^([0-9]+)\\.([0-9]+)\\.([0-9]+)$/);\r\n\r\n    if (!parts || parts.length <= 3) {\r\n      return null;\r\n    }\r\n\r\n    return {\r\n      keywordIdentifier: parts[1],\r\n      keywordOccurrencesInDocument: parseInt(parts[2], 10),\r\n      keywordTermPart: parseInt(parts[3], 10)\r\n    };\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/Quickview/QuickviewDocumentWord.ts","import { ColorUtils } from '../../utils/ColorUtils';\r\n\r\nexport class QuickviewDocumentWordColor {\r\n  public r: number;\r\n  public g: number;\r\n  public b: number;\r\n\r\n  constructor(public htmlColor: string) {\r\n    const rgbExtracted = htmlColor.match(/\\d+/g);\r\n    if (rgbExtracted) {\r\n      this.r = parseInt(rgbExtracted[0], 10);\r\n      this.g = parseInt(rgbExtracted[1], 10);\r\n      this.b = parseInt(rgbExtracted[2], 10);\r\n    }\r\n  }\r\n\r\n  public invert() {\r\n    return `rgb(${255 - this.r}, ${255 - this.g}, ${255 - this.b})`;\r\n  }\r\n\r\n  public saturate() {\r\n    const hsv = ColorUtils.rgbToHsv(this.r, this.g, this.b);\r\n    hsv[1] *= 2;\r\n    if (hsv[1] > 1) {\r\n      hsv[1] = 1;\r\n    }\r\n    const rgb = ColorUtils.hsvToRgb(hsv[0], hsv[1], hsv[2]);\r\n    return `rgb(${rgb[0]}, ${rgb[1]}, ${rgb[2]})`;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/Quickview/QuickviewDocumentWordColor.ts","import { QuickviewDocumentIframe } from './QuickviewDocumentIframe';\r\nimport { $$ } from '../../utils/Dom';\r\nimport { QuickviewDocumentWord } from './QuickviewDocumentWord';\r\nimport { QuickviewDocumentPreviewBar } from './QuickviewDocumentPreviewBar';\r\n\r\nexport class QuickviewDocumentWordButton {\r\n  public el: HTMLElement;\r\n  constructor(public word: QuickviewDocumentWord, public previewBar: QuickviewDocumentPreviewBar, public iframe: QuickviewDocumentIframe) {\r\n    this.el = this.render();\r\n  }\r\n\r\n  public render() {\r\n    const wordHtml = $$('span', {\r\n      className: 'coveo-term-for-quickview'\r\n    });\r\n\r\n    wordHtml.append(this.buildName().el);\r\n\r\n    wordHtml.append(this.renderArrow('up').el);\r\n\r\n    wordHtml.append(this.renderArrow('down').el);\r\n\r\n    wordHtml.el.style.backgroundColor = this.word.color.htmlColor;\r\n    wordHtml.el.style.borderColor = this.word.color.saturate();\r\n\r\n    return wordHtml.el;\r\n  }\r\n\r\n  private buildName() {\r\n    const name = $$(\r\n      'span',\r\n      {\r\n        className: 'coveo-term-for-quickview-name'\r\n      },\r\n      `${this.word.text} (${this.word.count})`\r\n    );\r\n\r\n    name.on('click', () => this.navigate(false));\r\n    return name;\r\n  }\r\n\r\n  private navigate(backward: boolean) {\r\n    let element: HTMLElement;\r\n    if (backward) {\r\n      element = this.word.navigateBackward();\r\n      this.previewBar.navigateBackward(this.word);\r\n    } else {\r\n      element = this.word.navigateForward();\r\n      this.previewBar.navigateForward(this.word);\r\n    }\r\n\r\n    // pdf2html docs hide the non-visible frames by default, to speed up browsers.\r\n    // But this prevents keyword navigation from working so we must force show it. This\r\n    // is done by adding the 'opened' class to it (defined by pdf2html).\r\n    if (this.iframe.isNewQuickviewDocument()) {\r\n      const pdf = $$(element).closest('.pc');\r\n      $$(pdf).addClass('opened');\r\n    }\r\n\r\n    element.scrollIntoView();\r\n  }\r\n\r\n  private renderArrow(direction: 'up' | 'down') {\r\n    const arrow = $$('span', {\r\n      className: `coveo-term-for-quickview-${direction}-arrow`\r\n    });\r\n\r\n    const arrowIcon = $$('span', {\r\n      className: `coveo-term-for-quickview-${direction}-arrow-icon`\r\n    });\r\n\r\n    arrow.append(arrowIcon.el);\r\n\r\n    arrow.on('click', () => this.navigate(direction == 'up'));\r\n    return arrow;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/Quickview/QuickviewDocumentWordButton.ts","import { QuickviewDocumentIframe } from './QuickviewDocumentIframe';\r\nimport { QuickviewDocumentWords } from './QuickviewDocumentWords';\r\nimport { Doc, $$ } from '../../utils/Dom';\r\nimport { each, without, chain } from 'underscore';\r\nimport { QuickviewDocumentWord } from './QuickviewDocumentWord';\r\nimport { Logger } from '../../misc/Logger';\r\n\r\nexport class QuickviewDocumentPreviewBar {\r\n  private logger: Logger;\r\n  public wordIndicators: Map<QuickviewDocumentWord, { indicators: HTMLElement[]; position: number }> = new Map();\r\n\r\n  constructor(public iframe: QuickviewDocumentIframe, public words: QuickviewDocumentWords) {\r\n    this.logger = new Logger(this);\r\n    this.renderPreviewBar();\r\n  }\r\n\r\n  public navigateForward(word: QuickviewDocumentWord): HTMLElement {\r\n    const currentWord = this.wordIndicators.get(word);\r\n    if (!currentWord) {\r\n      this.logger.warn(`Invalid navigation for given word.`, word);\r\n      return null;\r\n    }\r\n\r\n    currentWord.position++;\r\n\r\n    if (currentWord.position >= currentWord.indicators.length) {\r\n      currentWord.position = 0;\r\n    }\r\n    this.highlightNavigation(word);\r\n    return currentWord.indicators[currentWord.position];\r\n  }\r\n\r\n  public navigateBackward(word: QuickviewDocumentWord): HTMLElement {\r\n    const currentWord = this.wordIndicators.get(word);\r\n    if (!currentWord) {\r\n      this.logger.warn(`Invalid navigation for the given word.`, word);\r\n      return null;\r\n    }\r\n\r\n    currentWord.position--;\r\n\r\n    if (currentWord.position < 0) {\r\n      currentWord.position = currentWord.indicators.length - 1;\r\n    }\r\n    this.highlightNavigation(word);\r\n    return currentWord.indicators[currentWord.position];\r\n  }\r\n\r\n  public navigateTo(position: number, word: QuickviewDocumentWord): HTMLElement {\r\n    const currentWord = this.wordIndicators.get(word);\r\n    if (!currentWord) {\r\n      this.logger.warn(`Invalid navigation for the given word`, word);\r\n      return null;\r\n    }\r\n\r\n    currentWord.position = position;\r\n\r\n    if (currentWord.position < 0 || currentWord.position >= currentWord.indicators.length) {\r\n      this.logger.warn(`Invalid navigation for the given position: ${position}`);\r\n      currentWord.position = 0;\r\n    }\r\n    this.highlightNavigation(word);\r\n    return currentWord.indicators[currentWord.position];\r\n  }\r\n\r\n  private highlightNavigation(word: QuickviewDocumentWord) {\r\n    const currentWord = this.wordIndicators.get(word);\r\n    const currentElement = currentWord.indicators[currentWord.position];\r\n\r\n    const otherElements = without(currentWord.indicators, currentElement);\r\n\r\n    currentElement.style.backgroundColor = word.color.invert();\r\n    currentElement.style.border = `1px solid ${word.color.invert()}`;\r\n\r\n    otherElements.forEach(element => this.defaultStyleColor(element, word));\r\n  }\r\n\r\n  private renderPreviewBar() {\r\n    const previewBar = $$('div');\r\n\r\n    previewBar.el.style.width = '15px';\r\n    previewBar.el.style.position = 'fixed';\r\n    previewBar.el.style.top = '0';\r\n    previewBar.el.style.right = '0px';\r\n    previewBar.el.style.height = '100%';\r\n\r\n    this.iframe.body.appendChild(previewBar.el);\r\n\r\n    each(this.words.words, word => {\r\n      each(word.elements, element => {\r\n        const indicator = this.renderWordPositionIndicator(element, word).el;\r\n\r\n        if (this.wordIndicators.has(word)) {\r\n          this.wordIndicators.get(word).indicators.push(indicator);\r\n        } else {\r\n          this.wordIndicators.set(word, {\r\n            indicators: [indicator],\r\n            position: -1\r\n          });\r\n        }\r\n\r\n        previewBar.append(indicator);\r\n      });\r\n\r\n      this.handleOverlappingIndicators(word);\r\n    });\r\n  }\r\n\r\n  private renderWordPositionIndicator(element: HTMLElement, word: QuickviewDocumentWord) {\r\n    const docHeight = new Doc(this.iframe.document).height();\r\n    const elementPosition = element.getBoundingClientRect().top;\r\n\r\n    const previewUnit = $$('div');\r\n    previewUnit.el.style.position = 'absolute';\r\n    previewUnit.el.style.top = `${elementPosition / docHeight * 100}%`;\r\n    previewUnit.el.style.width = '100%';\r\n    previewUnit.el.style.height = '1px';\r\n    this.defaultStyleColor(previewUnit.el, word);\r\n    return previewUnit;\r\n  }\r\n\r\n  private defaultStyleColor(element: HTMLElement, word: QuickviewDocumentWord) {\r\n    element.style.border = `1px solid ${word.color.saturate()}`;\r\n    element.style.backgroundColor = word.color.htmlColor;\r\n  }\r\n\r\n  private handleOverlappingIndicators(word: QuickviewDocumentWord) {\r\n    const allIndicators = this.wordIndicators.get(word).indicators;\r\n\r\n    for (let i = 0; i < allIndicators.length; i++) {\r\n      const otherIndicatorAtSamePositionInDocument = chain(allIndicators)\r\n        .without(allIndicators[i])\r\n        .find(otherIndicator => otherIndicator.style.top == allIndicators[i].style.top)\r\n        .value();\r\n\r\n      if (otherIndicatorAtSamePositionInDocument) {\r\n        $$(allIndicators[i]).remove();\r\n        allIndicators[i] = otherIndicatorAtSamePositionInDocument;\r\n      }\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/Quickview/QuickviewDocumentPreviewBar.ts"],"sourceRoot":""}