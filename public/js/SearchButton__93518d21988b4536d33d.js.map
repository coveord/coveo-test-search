{"version":3,"sources":["./src/ui/SearchButton/SearchButton.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA,6CAAqD;AACrD,uCAA0C;AAC1C,iDAAgE;AAChE,mCAAqC;AACrC,uCAA4C;AAC5C,yCAAgD;AAChD,qCAA0C;AAC1C,wDAAkG;AAClG,yCAA8C;AAE9C,8CAAwD;AACxD,gDAA+D;AAU/D;;;;;GAKG;AACH;IAAkC,gCAAS;IAWzC;;;;;;OAMG;IACH,sBAAmB,OAAoB,EAAS,OAA8B,EAAE,QAA6B;QAA7G,YACE,kBAAM,OAAO,EAAE,YAAY,CAAC,EAAE,EAAE,QAAQ,CAAC,SAkB1C;QAnBkB,aAAO,GAAP,OAAO,CAAa;QAAS,aAAO,GAAP,OAAO,CAAuB;QAG5E,IAAI,mCAAgB,EAAE;aACnB,WAAW,CAAC,OAAO,CAAC;aACpB,SAAS,CAAC,KAAI,CAAC,IAAI,CAAC;aACpB,SAAS,CAAC,WAAC,CAAC,QAAQ,CAAC,CAAC;aACtB,gBAAgB,CAAC,cAAM,YAAI,CAAC,WAAW,EAAE,EAAlB,CAAkB,CAAC;aAC1C,KAAK,EAAE,CAAC;QAEX,uDAAuD;QACvD,IAAI,aAAK,CAAC,IAAI,CAAC,QAAE,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,EAAE;YAC7C,IAAM,qBAAqB,GAAG,QAAE,CAAC,MAAM,EAAE,EAAE,SAAS,EAAE,qBAAqB,EAAE,EAAE,mBAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC;YACzG,eAAM,CAAC,wBAAwB,CAAC,qBAAqB,EAAE,yBAAyB,CAAC,CAAC;YAClF,IAAM,4BAA4B,GAAG,QAAE,CAAC,MAAM,EAAE,EAAE,SAAS,EAAE,6BAA6B,EAAE,EAAE,mBAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC;YACzH,eAAM,CAAC,wBAAwB,CAAC,4BAA4B,EAAE,iCAAiC,CAAC,CAAC;YACjG,OAAO,CAAC,WAAW,CAAC,qBAAqB,CAAC,CAAC;YAC3C,OAAO,CAAC,WAAW,CAAC,4BAA4B,CAAC,CAAC;SACnD;;IACH,CAAC;IAED;;;OAGG;IACI,4BAAK,GAAZ;QACE,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAEO,kCAAW,GAAnB;QACE,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,yCAAyC,CAAC,CAAC;QAC7D,IAAI,CAAC,uCAAuC,EAAE,CAAC;QAC/C,IAAI,CAAC,cAAc,CAAC,cAAc,CAAmB,kDAAwB,CAAC,eAAe,EAAE,EAAE,CAAC,CAAC;QACnG,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;IACtD,CAAC;IAEO,8DAAuC,GAA/C;QACE,IAAM,SAAS,GAAG,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;QACzD,SAAS,IAAI,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,iCAAe,CAAC,cAAc,CAAC,CAAC,EAAE,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC;IAC/F,CAAC;IAxDM,eAAE,GAAG,cAAc,CAAC;IAEpB,qBAAQ,GAAG;QAChB,8BAAc,CAAC;YACb,YAAY,EAAE,YAAY;SAC3B,CAAC,CAAC;IACL,CAAC,CAAC;IAEK,oBAAO,GAAyB,EAAE,CAAC;IAiD5C,mBAAC;CAAA,CA1DiC,qBAAS,GA0D1C;AA1DY,oCAAY;AA4DzB,+BAAc,CAAC,2BAA2B,CAAC,YAAY,CAAC,CAAC","file":"SearchButton__93518d21988b4536d33d.js","sourcesContent":["import { exportGlobally } from '../../GlobalExports';\r\nimport { l } from '../../strings/Strings';\r\nimport { AccessibleButton } from '../../utils/AccessibleButton';\r\nimport { $$ } from '../../utils/Dom';\r\nimport { SVGDom } from '../../utils/SVGDom';\r\nimport { SVGIcons } from '../../utils/SVGIcons';\r\nimport { Utils } from '../../utils/Utils';\r\nimport { IAnalyticsNoMeta, analyticsActionCauseList } from '../Analytics/AnalyticsActionListMeta';\r\nimport { Component } from '../Base/Component';\r\nimport { IComponentBindings } from '../Base/ComponentBindings';\r\nimport { Initialization } from '../Base/Initialization';\r\nimport { QueryStateModel } from '../../models/QueryStateModel';\r\n\r\nexport interface ISearchButtonOptions {\r\n  searchbox?: ISearchButtonSearchbox;\r\n}\r\n\r\nexport interface ISearchButtonSearchbox {\r\n  getText: () => string;\r\n}\r\n\r\n/**\r\n * The SearchButton component renders a search icon that the end user can click to trigger a new query.\r\n *\r\n * See also the {@link Searchbox} component, which can automatically instantiate a SearchButton component along with a\r\n * {@link Querybox} component or an {@link Omnibox} component.\r\n */\r\nexport class SearchButton extends Component {\r\n  static ID = 'SearchButton';\r\n\r\n  static doExport = () => {\r\n    exportGlobally({\r\n      SearchButton: SearchButton\r\n    });\r\n  };\r\n\r\n  static options: ISearchButtonOptions = {};\r\n\r\n  /**\r\n   * Creates a new SearchButton. Binds a `click` event on the element. Adds a search icon on the element.\r\n   * @param element The HTMLElement on which to instantiate the component.\r\n   * @param options The options for the SearchButton component.\r\n   * @param bindings The bindings that the component requires to function normally. If not set, these will be\r\n   * automatically resolved (with a slower execution time).\r\n   */\r\n  constructor(public element: HTMLElement, public options?: ISearchButtonOptions, bindings?: IComponentBindings) {\r\n    super(element, SearchButton.ID, bindings);\r\n\r\n    new AccessibleButton()\r\n      .withElement(element)\r\n      .withOwner(this.bind)\r\n      .withLabel(l('Search'))\r\n      .withSelectAction(() => this.handleClick())\r\n      .build();\r\n\r\n    // Provide a magnifier icon if element contains nothing\r\n    if (Utils.trim($$(this.element).text()) == '') {\r\n      const svgMagnifierContainer = $$('span', { className: 'coveo-search-button' }, SVGIcons.icons.search).el;\r\n      SVGDom.addClassToSVGInContainer(svgMagnifierContainer, 'coveo-search-button-svg');\r\n      const svgLoadingAnimationContainer = $$('span', { className: 'coveo-search-button-loading' }, SVGIcons.icons.loading).el;\r\n      SVGDom.addClassToSVGInContainer(svgLoadingAnimationContainer, 'coveo-search-button-loading-svg');\r\n      element.appendChild(svgMagnifierContainer);\r\n      element.appendChild(svgLoadingAnimationContainer);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Triggers the `click` event handler, which logs a `searchboxSubmit` event in the usage analytics and executes a\r\n   * query.\r\n   */\r\n  public click() {\r\n    this.handleClick();\r\n  }\r\n\r\n  private handleClick() {\r\n    this.logger.debug('Performing query following button click');\r\n    this.updateQueryStateModelWithSearchboxQuery();\r\n    this.usageAnalytics.logSearchEvent<IAnalyticsNoMeta>(analyticsActionCauseList.searchboxSubmit, {});\r\n    this.queryController.executeQuery({ origin: this });\r\n  }\r\n\r\n  private updateQueryStateModelWithSearchboxQuery() {\r\n    const searchbox = this.options && this.options.searchbox;\r\n    searchbox && this.queryStateModel.set(QueryStateModel.attributesEnum.q, searchbox.getText());\r\n  }\r\n}\r\n\r\nInitialization.registerAutoCreateComponent(SearchButton);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/SearchButton/SearchButton.ts"],"sourceRoot":""}