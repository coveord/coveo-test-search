{"version":3,"sources":["TemplateLoader.min__5f3280c404a1ee75a113.js","./src/ui/TemplateLoader/TemplateLoader.ts"],"names":["webpackJsonpCoveo__temporary","281","module","exports","__webpack_require__","__extends","this","extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__","constructor","prototype","create","defineProperty","value","element","options","bindings","result","TemplateLoader","ID","ComponentOptions","initComponentOptions","resolveResult","Assert","exists","condition","Function","initialize","_this","template","initOptions","searchInterface","initParameters","parents","$$","Component","computeCssClassName","each","parent","clone","cloneNode","empty","outerHTMLParent","outerHTML","check","indexOf","innerHTML","instantiateToString","checkCondition","responsiveComponents","Initialization","automaticallyCreateComponentsInside","doExport","exportGlobally","TemplateComponentOptions","buildTemplateOption","buildStringOption","registerAutoCreateComponent"],"mappings":"AAAAA,8BAA8B,KAExBC,IACA,SAAUC,EAAQC,EAASC,GAEjC,YAEA,IAAIC,GAAaC,MAAQA,KAAKD,WAAc,WACxC,GAAIE,GAAgBC,OAAOC,iBACpBC,uBAA2BC,QAAS,SAAUC,EAAGC,GAAKD,EAAEF,UAAYG,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAIC,KAAKD,GAAOA,EAAEE,eAAeD,KAAIF,EAAEE,GAAKD,EAAEC,IACzE,OAAO,UAAUF,EAAGC,GAEhB,QAASG,KAAOV,KAAKW,YAAcL,EADnCL,EAAcK,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAaL,OAAOW,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,GAAIF,OAGvFR,QAAOY,eAAejB,EAAS,cAAgBkB,OAAO,GCjBtD,YACA,OACA,OAEA,OACA,OAEA,OACA,OACA,QAwDA,cA0CE,WACSC,EACAC,EACAC,EACAC,GAJT,MAME,YAAMH,EAASI,EAAeC,GAAIH,IAAS,IAK3C,IAVO,EAAAF,UACA,EAAAC,UACA,EAAAC,WACA,EAAAC,SAGP,EAAKF,QAAU,EAAAK,iBAAiBC,qBAAqBP,EAASI,EAAgBH,GAC9E,EAAKE,OAAS,EAAKA,QAAU,EAAKK,gBAClC,EAAAC,OAAOC,OAAO,EAAKP,QAEW,MAA1B,EAAKF,QAAQU,UAAmB,CACV,GAAIC,UAAS,MAAO,wBAA0B,EAAKX,QAAQU,UAAY,KACzE,EAAKR,SACzB,EAAKU,iBAGP,GAAKA,YDtBH,OAAOC,GCkDf,MAvFoC,QA+D1B,YAAAD,WAAR,qBACE,IAA6B,MAAzB7B,KAAKiB,QAAQc,SAAkB,CACjC,GAAIC,GAAchC,KAAKiC,gBAAgBhB,QACnCiB,GACFjB,QAASe,EACTd,SAAUlB,KAAKkB,SACfC,OAAQnB,KAAKmB,QAGXgB,EAAU,EAAAC,GAAGpC,KAAKgB,SAASmB,QAAQ,EAAAE,UAAUC,oBAAoBlB,GACrE,GAAAmB,KAAKJ,EAAS,SAACK,GACb,GAAIC,GAAqBD,EAAOE,WAChC,GAAAN,GAAGK,GAAOE,OACV,IAAIC,GAAkBH,EAAMI,SAC5B,GAAApB,OAAOqB,OAA2D,IAArDF,EAAgBG,QAAQ,EAAK/B,QAAQ6B,WAAmB,wDAGvE7C,KAAKgB,QAAQgC,UAAYhD,KAAKiB,QAAQc,SAASkB,oBAAoBjD,KAAKmB,QACtE+B,gBAAgB,EAChBC,qBAAsBnD,KAAKkB,SAAWlB,KAAKkB,SAASe,gBAAgBkB,qBAAuB,OAE7F,EAAAC,eAAeC,oCAAoCrD,KAAKgB,QAASkB,KAnF9D,EAAAb,GAAK,iBAEL,EAAAiC,SAAW,WAChB,EAAAC,gBACEnC,eAAgBA,KAQb,EAAAH,SASLc,SAAU,EAAAyB,yBAAyBC,sBASnC9B,UAAW,EAAAL,iBAAiBoC,qBAwDhC,GAvFoC,EAAArB,UAAvB,GAAAjB,iBAyFb,EAAAgC,eAAeO,4BAA4BvC","file":"TemplateLoader.min__5f3280c404a1ee75a113.js","sourcesContent":["webpackJsonpCoveo__temporary([77],{\n\n/***/ 281:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar underscore_1 = __webpack_require__(0);\r\nvar GlobalExports_1 = __webpack_require__(3);\r\nvar Assert_1 = __webpack_require__(5);\r\nvar Dom_1 = __webpack_require__(1);\r\nvar Component_1 = __webpack_require__(7);\r\nvar ComponentOptions_1 = __webpack_require__(8);\r\nvar Initialization_1 = __webpack_require__(2);\r\nvar TemplateComponentOptions_1 = __webpack_require__(61);\r\n/**\r\n * The TemplateLoader component can load one result template into another. You should normally declare any reusable\r\n * result template outside of the {@link ResultList} component. Otherwise, the framework will evaluate the\r\n * `data-condition` of the reusable result template and possibly render it.\r\n *\r\n * **Example:**\r\n *\r\n * ```html\r\n * [ ... ]\r\n *\r\n * <!-- A reusable result template. Note that it is important to declare it outside of the ResultList component. -->\r\n * <script type='text/underscore' class='result-template' id='ReusableTemplate'>\r\n *   <table class='CoveoFieldTable'>\r\n *     <tr data-field='@source' data-caption='Source'></tr>\r\n *     <tr data-field='@percentScore' data-caption='Score'></tr>\r\n *   </table>\r\n * </script>\r\n *\r\n * [ ... ]\r\n *\r\n * <div class=\"CoveoResultList\" data-wait-animation=\"fade\" data-auto-select-fields-to-include=\"true\">\r\n *\r\n *   <!-- A custom result template for Lithium messages. -->\r\n *   <script type='text/underscore' class='result-template' data-condition='raw.filetype == \"lithiummessage\"'>\r\n *     <div>\r\n *       <img class='CoveoIcon' data-small='true'>\r\n *       <a class='CoveoResultLink'></a>\r\n *       <div class='CoveoTemplateLoader' data-template-id='ReusableTemplate'></div>\r\n *     </div>\r\n *   </script>\r\n *\r\n *   <!-- A custom result template for images. -->\r\n *   <script type='text/underscore' class='result-template' data-condition='raw.filetype == \"Image\"'>\r\n *     <div>\r\n *       <img class='CoveoIcon' data-small='true'></img>\r\n *         <a class='CoveoResultLink'>\r\n *           <img class='CoveoThumbnail'>\r\n *         </a>\r\n *       <div class='CoveoTemplateLoader' data-template-id='ReusableTemplate'></div>\r\n *     </div>\r\n *   </script>\r\n * </div>\r\n *\r\n * [ ... ]\r\n * ```\r\n *\r\n * See [Result Templates](https://docs.coveo.com/en/413/).\r\n */\r\nvar TemplateLoader = /** @class */ (function (_super) {\r\n    __extends(TemplateLoader, _super);\r\n    /**\r\n     * Creates a new TemplateLoader.\r\n     * @param element The HTMLElement on which to instantiate the component.\r\n     * @param options The options for the TemplateLoader component.\r\n     * @param bindings The bindings that the component requires to function normally. If not set, these will be\r\n     * automatically resolved (with a slower execution time).\r\n     * @param result The result to associate the component with.\r\n     */\r\n    function TemplateLoader(element, options, bindings, result) {\r\n        var _this = _super.call(this, element, TemplateLoader.ID, bindings) || this;\r\n        _this.element = element;\r\n        _this.options = options;\r\n        _this.bindings = bindings;\r\n        _this.result = result;\r\n        _this.options = ComponentOptions_1.ComponentOptions.initComponentOptions(element, TemplateLoader, options);\r\n        _this.result = _this.result || _this.resolveResult();\r\n        Assert_1.Assert.exists(_this.result);\r\n        if (_this.options.condition != null) {\r\n            var conditionFunction = new Function('obj', 'with(obj||{}){return ' + _this.options.condition + '}');\r\n            if (conditionFunction(_this.result)) {\r\n                _this.initialize();\r\n            }\r\n        }\r\n        else {\r\n            _this.initialize();\r\n        }\r\n        return _this;\r\n    }\r\n    TemplateLoader.prototype.initialize = function () {\r\n        var _this = this;\r\n        if (this.options.template != null) {\r\n            var initOptions = this.searchInterface.options;\r\n            var initParameters = {\r\n                options: initOptions,\r\n                bindings: this.bindings,\r\n                result: this.result\r\n            };\r\n            var parents = Dom_1.$$(this.element).parents(Component_1.Component.computeCssClassName(TemplateLoader));\r\n            underscore_1.each(parents, function (parent) {\r\n                var clone = parent.cloneNode();\r\n                Dom_1.$$(clone).empty();\r\n                var outerHTMLParent = clone.outerHTML;\r\n                Assert_1.Assert.check(outerHTMLParent.indexOf(_this.element.outerHTML) === -1, 'TemplateLoader cannot load a template into itself.');\r\n            });\r\n            this.element.innerHTML = this.options.template.instantiateToString(this.result, {\r\n                checkCondition: false,\r\n                responsiveComponents: this.bindings ? this.bindings.searchInterface.responsiveComponents : null\r\n            });\r\n            Initialization_1.Initialization.automaticallyCreateComponentsInside(this.element, initParameters);\r\n        }\r\n    };\r\n    TemplateLoader.ID = 'TemplateLoader';\r\n    TemplateLoader.doExport = function () {\r\n        GlobalExports_1.exportGlobally({\r\n            TemplateLoader: TemplateLoader\r\n        });\r\n    };\r\n    /**\r\n     * The possible options for a TemplateLoader.\r\n     * @componentOptions\r\n     */\r\n    TemplateLoader.options = {\r\n        /**\r\n         * Specifies how to find the template. This can be either a CSS selector or an HTML `id` attribute.\r\n         *\r\n         * **Examples:**\r\n         *\r\n         * - With a CSS selector: `data-template-selector='.MySelector'`\r\n         * - With an HTML `id`: `data-template-id='MyId'`\r\n         */\r\n        template: TemplateComponentOptions_1.TemplateComponentOptions.buildTemplateOption(),\r\n        /**\r\n         * Specifies the boolean condition that the result must satisfy in order for the template to load.\r\n         *\r\n         * **Example:**\r\n         *\r\n         * `data-condition='percentScore > 80'`\r\n         */\r\n        condition: ComponentOptions_1.ComponentOptions.buildStringOption()\r\n    };\r\n    return TemplateLoader;\r\n}(Component_1.Component));\r\nexports.TemplateLoader = TemplateLoader;\r\nInitialization_1.Initialization.registerAutoCreateComponent(TemplateLoader);\r\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// TemplateLoader.min__5f3280c404a1ee75a113.js","import { each } from 'underscore';\r\nimport { exportGlobally } from '../../GlobalExports';\r\nimport { Assert } from '../../misc/Assert';\r\nimport { IQueryResult } from '../../rest/QueryResult';\r\nimport { $$ } from '../../utils/Dom';\r\nimport { Component } from '../Base/Component';\r\nimport { IComponentBindings } from '../Base/ComponentBindings';\r\nimport { ComponentOptions } from '../Base/ComponentOptions';\r\nimport { IInitializationParameters, Initialization } from '../Base/Initialization';\r\nimport { TemplateComponentOptions } from '../Base/TemplateComponentOptions';\r\nimport { Template } from '../Templates/Template';\r\n\r\nexport interface ITemplateLoaderOptions {\r\n  template: Template;\r\n  condition?: String;\r\n}\r\n\r\n/**\r\n * The TemplateLoader component can load one result template into another. You should normally declare any reusable\r\n * result template outside of the {@link ResultList} component. Otherwise, the framework will evaluate the\r\n * `data-condition` of the reusable result template and possibly render it.\r\n *\r\n * **Example:**\r\n *\r\n * ```html\r\n * [ ... ]\r\n *\r\n * <!-- A reusable result template. Note that it is important to declare it outside of the ResultList component. -->\r\n * <script type='text/underscore' class='result-template' id='ReusableTemplate'>\r\n *   <table class='CoveoFieldTable'>\r\n *     <tr data-field='@source' data-caption='Source'></tr>\r\n *     <tr data-field='@percentScore' data-caption='Score'></tr>\r\n *   </table>\r\n * </script>\r\n *\r\n * [ ... ]\r\n *\r\n * <div class=\"CoveoResultList\" data-wait-animation=\"fade\" data-auto-select-fields-to-include=\"true\">\r\n *\r\n *   <!-- A custom result template for Lithium messages. -->\r\n *   <script type='text/underscore' class='result-template' data-condition='raw.filetype == \"lithiummessage\"'>\r\n *     <div>\r\n *       <img class='CoveoIcon' data-small='true'>\r\n *       <a class='CoveoResultLink'></a>\r\n *       <div class='CoveoTemplateLoader' data-template-id='ReusableTemplate'></div>\r\n *     </div>\r\n *   </script>\r\n *\r\n *   <!-- A custom result template for images. -->\r\n *   <script type='text/underscore' class='result-template' data-condition='raw.filetype == \"Image\"'>\r\n *     <div>\r\n *       <img class='CoveoIcon' data-small='true'></img>\r\n *         <a class='CoveoResultLink'>\r\n *           <img class='CoveoThumbnail'>\r\n *         </a>\r\n *       <div class='CoveoTemplateLoader' data-template-id='ReusableTemplate'></div>\r\n *     </div>\r\n *   </script>\r\n * </div>\r\n *\r\n * [ ... ]\r\n * ```\r\n *\r\n * See [Result Templates](https://docs.coveo.com/en/413/).\r\n */\r\nexport class TemplateLoader extends Component {\r\n  static ID = 'TemplateLoader';\r\n\r\n  static doExport = () => {\r\n    exportGlobally({\r\n      TemplateLoader: TemplateLoader\r\n    });\r\n  };\r\n\r\n  /**\r\n   * The possible options for a TemplateLoader.\r\n   * @componentOptions\r\n   */\r\n  static options: ITemplateLoaderOptions = {\r\n    /**\r\n     * Specifies how to find the template. This can be either a CSS selector or an HTML `id` attribute.\r\n     *\r\n     * **Examples:**\r\n     *\r\n     * - With a CSS selector: `data-template-selector='.MySelector'`\r\n     * - With an HTML `id`: `data-template-id='MyId'`\r\n     */\r\n    template: TemplateComponentOptions.buildTemplateOption(),\r\n\r\n    /**\r\n     * Specifies the boolean condition that the result must satisfy in order for the template to load.\r\n     *\r\n     * **Example:**\r\n     *\r\n     * `data-condition='percentScore > 80'`\r\n     */\r\n    condition: ComponentOptions.buildStringOption()\r\n  };\r\n\r\n  /**\r\n   * Creates a new TemplateLoader.\r\n   * @param element The HTMLElement on which to instantiate the component.\r\n   * @param options The options for the TemplateLoader component.\r\n   * @param bindings The bindings that the component requires to function normally. If not set, these will be\r\n   * automatically resolved (with a slower execution time).\r\n   * @param result The result to associate the component with.\r\n   */\r\n  constructor(\r\n    public element: HTMLElement,\r\n    public options?: ITemplateLoaderOptions,\r\n    public bindings?: IComponentBindings,\r\n    public result?: IQueryResult\r\n  ) {\r\n    super(element, TemplateLoader.ID, bindings);\r\n    this.options = ComponentOptions.initComponentOptions(element, TemplateLoader, options);\r\n    this.result = this.result || this.resolveResult();\r\n    Assert.exists(this.result);\r\n\r\n    if (this.options.condition != null) {\r\n      var conditionFunction = new Function('obj', 'with(obj||{}){return ' + this.options.condition + '}');\r\n      if (conditionFunction(this.result)) {\r\n        this.initialize();\r\n      }\r\n    } else {\r\n      this.initialize();\r\n    }\r\n  }\r\n\r\n  private initialize() {\r\n    if (this.options.template != null) {\r\n      var initOptions = this.searchInterface.options;\r\n      var initParameters: IInitializationParameters = {\r\n        options: initOptions,\r\n        bindings: this.bindings,\r\n        result: this.result\r\n      };\r\n\r\n      var parents = $$(this.element).parents(Component.computeCssClassName(TemplateLoader));\r\n      each(parents, (parent: HTMLElement) => {\r\n        let clone = <HTMLElement>parent.cloneNode();\r\n        $$(clone).empty();\r\n        let outerHTMLParent = clone.outerHTML;\r\n        Assert.check(outerHTMLParent.indexOf(this.element.outerHTML) === -1, 'TemplateLoader cannot load a template into itself.');\r\n      });\r\n\r\n      this.element.innerHTML = this.options.template.instantiateToString(this.result, {\r\n        checkCondition: false,\r\n        responsiveComponents: this.bindings ? this.bindings.searchInterface.responsiveComponents : null\r\n      });\r\n      Initialization.automaticallyCreateComponentsInside(this.element, initParameters);\r\n    }\r\n  }\r\n}\r\n\r\nInitialization.registerAutoCreateComponent(TemplateLoader);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/TemplateLoader/TemplateLoader.ts"],"sourceRoot":""}