{"version":3,"sources":["SearchAlerts.min__5f3280c404a1ee75a113.js","./src/rest/Subscription.ts","./src/ui/SearchAlerts/SearchAlerts.ts","./src/ui/FormWidgets/Dropdown.ts","./src/ui/SearchAlerts/SearchAlertsMessage.ts"],"names":["webpackJsonpCoveo__temporary","226","module","exports","__webpack_require__","Object","defineProperty","value","SUBSCRIPTION_TYPE","followQuery","followDocument","277","__extends","this","extendStatics","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__","constructor","prototype","create","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__generator","body","verb","n","v","op","f","TypeError","_","y","t","call","label","ops","pop","trys","length","push","g","sent","throw","return","Symbol","iterator","element","options","bindings","ModalBox","SearchAlerts","ID","ComponentOptions","initComponentOptions","enableMessage","message","SearchAlertsMessage","closeDelay","messageCloseDelay","getBindings","queryController","getEndpoint","isGuestUser","logger","warn","bind","onRootElement","SettingsEvents","settingsPopulateMenu","args","enableManagePanel","menuData","text","l","className","onOpen","openPanel","onClose","close","svgIcon","SVGIcons","icons","dropdownFollowQuery","svgIconClassName","once","QueryEvents","querySuccess","listSubscriptions","enableFollowQuery","tooltip","catch","status","_this","queryBuilder","createQueryBuilder","request","buildFollowQueryRequest","build","usageAnalytics","logCustomEvent","analyticsActionCauseList","searchAlertsFollowQuery","subscription","name","follow","eventArgs","dom","findQueryBoxDom","$$","root","trigger","SearchAlertsEvents","searchAlertsCreated","triggerSearchAlertsFail","title","titleInfo","container","table","tableHead","rowHead","headerType","headerContent","headerFrequency","headerActions","tableBodySpacer","tableBodySubscriptions","sizeModForModalBox","subscriptions","e_1","_a","append","el","cellspacing","colsspan","colspan","each","addSearchAlert","error","empty","getFailureMessage","modal","open","outerHTML","sizeMod","searchInterface","modalContainer","handleSearchAlertsFail","modalBody","wrapper","find","context","frequencies","textExtracted","innerHTML","type","typeConfig","escape","query","q","id","row","pluckFrequenciesValues","pluck","valueToLabel","valueMappedToLabel","findWhere","contentTypeElement","contextElement","setHtml","frequencyElement","Dropdown","dropdownInstance","searchAlertsUpdateSubscription","frequency","getValue","updateAndSyncSearchAlert","contentActionsElement","noSearchAlerts","insertBefore","on","addClass","deleteSubscription","logAnalyticsEvent","searchAlertsUnfollowDocument","searchAlertsUnfollowQuery","searchAlertsDeleted","removeClass","updatedSearchAlert","searchAlertsFollowDocument","updateSubscription","updated","extend","searchAlertsFail","components","getComponents","first","modifiedDateField","getFollowQueryMessage","cause","Assert","exists","get","SearchInterface","doExport","exportGlobally","buildBooleanOption","defaultValue","buildFieldOption","buildNumberOption","min","depend","Component","Initialization","registerAutoCreateComponent","62","onChange","listOfValues","getDisplayValue","dropdown","optionsElement","buildContent","select","bindEvents","reset","setId","setAttribute","getElement","selectElement","index","executeOnChange","selectOption","setValue","option","getAttribute","selectOptions","buildOptions","opt","ret","buildOption","663","handleSubscriptionCreated","oneRootElement","newQuery","getCssClass","htmlFormatted","populateMessageArguments","searchAlertsPopulateMessage","automaticallyBuiltMessage","additionalMessage","map","formatMessageArgumentsText","join","unescape","showMessage","checkboxHookExclusionMore","toggleClass","closeButton","SVGDom","addClassToSVGInContainer","PopupUtils","positionPopup","horizontal","PopupHorizontalAlignment","INNERLEFT","vertical","PopupVerticalAlignment","BOTTOM","verticalOffset","horizontalClip","startCloseDelay","stopCloseDelay","isString","lineThrough","clearTimeout","closeTimeout","window","setTimeout","remove"],"mappings":"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","file":"SearchAlerts.min__5f3280c404a1ee75a113.js","sourcesContent":["webpackJsonpCoveo__temporary([32,83],{\n\n/***/ 226:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SUBSCRIPTION_TYPE = {\r\n    followQuery: 'followQuery',\r\n    followDocument: 'followDocument'\r\n};\r\n\n\n/***/ }),\n\n/***/ 277:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar _ = __webpack_require__(0);\r\nvar QueryEvents_1 = __webpack_require__(11);\r\nvar SearchAlertEvents_1 = __webpack_require__(83);\r\nvar SettingsEvents_1 = __webpack_require__(53);\r\nvar ExternalModulesShim_1 = __webpack_require__(26);\r\nvar GlobalExports_1 = __webpack_require__(3);\r\nvar Assert_1 = __webpack_require__(5);\r\nvar Subscription_1 = __webpack_require__(226);\r\nvar Strings_1 = __webpack_require__(6);\r\nvar Dom_1 = __webpack_require__(1);\r\nvar SVGIcons_1 = __webpack_require__(12);\r\nvar AnalyticsActionListMeta_1 = __webpack_require__(10);\r\nvar Component_1 = __webpack_require__(7);\r\nvar ComponentOptions_1 = __webpack_require__(8);\r\nvar Initialization_1 = __webpack_require__(2);\r\nvar RegisteredNamedMethods_1 = __webpack_require__(30);\r\nvar Dropdown_1 = __webpack_require__(62);\r\nvar SearchInterface_1 = __webpack_require__(19);\r\nvar SearchAlertsMessage_1 = __webpack_require__(663);\r\n/**\r\n * The Search Alerts component renders items in the {@link Settings} menu that allow the end user to follow queries\r\n * and to manage search alerts. A user following a query receives email notifications when the query results change.\r\n *\r\n * **Note:**\r\n * > It is necessary to meet certain requirements to be able to use this component (see\r\n * > [Deploying Search Alerts on a Coveo JS Search Page](https://docs.coveo.com/en/1932/)).\r\n *\r\n * See also the {@link FollowItem} component.\r\n */\r\nvar SearchAlerts = /** @class */ (function (_super) {\r\n    __extends(SearchAlerts, _super);\r\n    /**\r\n     * Creates a new SearchAlerts component.\r\n     * @param element The HTMLElement on which to instantiate the component.\r\n     * @param options The options for the SearchAlerts component.\r\n     * @param bindings The bindings that the component requires to function normally. If not set, these will be\r\n     * automatically resolved (with a slower execution time).\r\n     */\r\n    function SearchAlerts(element, options, bindings, ModalBox) {\r\n        if (ModalBox === void 0) { ModalBox = ExternalModulesShim_1.ModalBox; }\r\n        var _this = _super.call(this, element, SearchAlerts.ID, bindings) || this;\r\n        _this.element = element;\r\n        _this.options = options;\r\n        _this.ModalBox = ModalBox;\r\n        _this.options = ComponentOptions_1.ComponentOptions.initComponentOptions(element, SearchAlerts, options);\r\n        if (_this.options.enableMessage) {\r\n            _this.message = new SearchAlertsMessage_1.SearchAlertsMessage(element, { closeDelay: _this.options.messageCloseDelay }, _this.getBindings());\r\n        }\r\n        if (!_this.queryController.getEndpoint().options.isGuestUser) {\r\n            _this.bind.onRootElement(SettingsEvents_1.SettingsEvents.settingsPopulateMenu, function (args) {\r\n                if (_this.options.enableManagePanel) {\r\n                    args.menuData.push({\r\n                        text: Strings_1.l('SearchAlerts_Panel'),\r\n                        className: 'coveo-subscriptions-panel',\r\n                        onOpen: function () { return _this.openPanel(); },\r\n                        onClose: function () { return _this.close(); },\r\n                        svgIcon: SVGIcons_1.SVGIcons.icons.dropdownFollowQuery,\r\n                        svgIconClassName: 'coveo-subscriptions-panel-svg'\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            _this.logger.warn('Logged in as guest user, search alerts are therefore not available.');\r\n        }\r\n        var once = false;\r\n        _this.bind.onRootElement(QueryEvents_1.QueryEvents.querySuccess, function () {\r\n            if (!once) {\r\n                once = true;\r\n                _this.queryController\r\n                    .getEndpoint()\r\n                    .listSubscriptions()\r\n                    .then(function () {\r\n                    _this.bind.onRootElement(SettingsEvents_1.SettingsEvents.settingsPopulateMenu, function (args) {\r\n                        if (_this.options.enableFollowQuery) {\r\n                            args.menuData.push({\r\n                                text: Strings_1.l('SearchAlerts_followQuery'),\r\n                                className: 'coveo-follow-query',\r\n                                tooltip: Strings_1.l('FollowQueryDescription'),\r\n                                onOpen: function () { return _this.followQuery(); },\r\n                                onClose: function () { },\r\n                                svgIcon: SVGIcons_1.SVGIcons.icons.dropdownFollowQuery,\r\n                                svgIconClassName: 'coveo-follow-query-svg'\r\n                            });\r\n                        }\r\n                    });\r\n                })\r\n                    .catch(function (e) {\r\n                    // Trap 403 error, as the listSubscription call is called on every page initialization\r\n                    // to check for current subscriptions. By default, the search alert service is not enabled for most organization\r\n                    // Don't want to pollute the console with un-needed noise and confusion\r\n                    if (e.status != 403) {\r\n                        throw e;\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        return _this;\r\n    }\r\n    /**\r\n     * Follows the last query. The user will start receiving email notifications when the query results change.\r\n     *\r\n     * Also logs the `searchAlertsFollowQuery` event in the usage analytics with the name of the request as meta data.\r\n     */\r\n    SearchAlerts.prototype.followQuery = function () {\r\n        var _this = this;\r\n        var queryBuilder = this.queryController.createQueryBuilder({});\r\n        var request = this.buildFollowQueryRequest(queryBuilder.build(), this.options);\r\n        this.usageAnalytics.logCustomEvent(AnalyticsActionListMeta_1.analyticsActionCauseList.searchAlertsFollowQuery, {\r\n            subscription: request.name\r\n        }, this.element);\r\n        this.queryController\r\n            .getEndpoint()\r\n            .follow(request)\r\n            .then(function (subscription) {\r\n            if (subscription) {\r\n                var eventArgs = {\r\n                    subscription: subscription,\r\n                    dom: _this.findQueryBoxDom()\r\n                };\r\n                Dom_1.$$(_this.root).trigger(SearchAlertEvents_1.SearchAlertsEvents.searchAlertsCreated, eventArgs);\r\n            }\r\n            else {\r\n                _this.triggerSearchAlertsFail();\r\n            }\r\n        })\r\n            .catch(function () {\r\n            _this.triggerSearchAlertsFail();\r\n        });\r\n    };\r\n    /**\r\n     * Opens the **Manage Alerts** panel. This panel allows the end user to stop following queries or items. It also\r\n     * allows the end user to specify email notification frequency for each followed query or item.\r\n     */\r\n    SearchAlerts.prototype.openPanel = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            var title, titleInfo, container, table, tableHead, rowHead, headerType, headerContent, headerFrequency, headerActions, tableBodySpacer, tableBodySubscriptions, sizeModForModalBox, subscriptions, e_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        title = Dom_1.$$('div');\r\n                        titleInfo = Dom_1.$$('div', {\r\n                            className: 'coveo-subscriptions-panel-title'\r\n                        }, Strings_1.l('SearchAlerts_Panel'));\r\n                        title.append(titleInfo.el);\r\n                        container = Dom_1.$$('div');\r\n                        table = Dom_1.$$('table', {\r\n                            className: 'coveo-subscriptions-panel-content',\r\n                            cellspacing: 0\r\n                        });\r\n                        container.append(table.el);\r\n                        tableHead = Dom_1.$$('thead');\r\n                        table.append(tableHead.el);\r\n                        rowHead = Dom_1.$$('tr');\r\n                        tableHead.append(rowHead.el);\r\n                        headerType = Dom_1.$$('th', {\r\n                            className: 'coveo-subscriptions-panel-content-type'\r\n                        }, Strings_1.l('SearchAlerts_Type'));\r\n                        headerContent = Dom_1.$$('th', null, Strings_1.l('SearchAlerts_Content'));\r\n                        headerFrequency = Dom_1.$$('th', null, Strings_1.l('SearchAlerts_Frequency'));\r\n                        headerActions = Dom_1.$$('th', {\r\n                            className: 'coveo-subscriptions-panel-content-actions'\r\n                        }, Strings_1.l('SearchAlerts_Actions'));\r\n                        rowHead.append(headerType.el);\r\n                        rowHead.append(headerContent.el);\r\n                        rowHead.append(headerFrequency.el);\r\n                        rowHead.append(headerActions.el);\r\n                        tableBodySpacer = Dom_1.$$('tbody', {\r\n                            className: 'coveo-subscriptions-panel-spacer'\r\n                        }, Dom_1.$$('tr', null, Dom_1.$$('td', {\r\n                            colsspan: 3\r\n                        })));\r\n                        table.append(tableBodySpacer.el);\r\n                        tableBodySubscriptions = Dom_1.$$('tbody', {\r\n                            className: 'coveo-subscriptions-panel-subscriptions'\r\n                        }, Dom_1.$$('tr', {\r\n                            className: 'coveo-subscriptions-panel-no-subscriptions'\r\n                        }, Dom_1.$$('td', {\r\n                            colspan: 3\r\n                        }, Strings_1.l('SearchAlerts_PanelNoSearchAlerts'))));\r\n                        table.append(tableBodySubscriptions.el);\r\n                        sizeModForModalBox = 'big';\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, this.queryController.getEndpoint().listSubscriptions()];\r\n                    case 2:\r\n                        subscriptions = _a.sent();\r\n                        _.each(subscriptions, function (subscription) { return _this.addSearchAlert(subscription, container); });\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        e_1 = _a.sent();\r\n                        this.logger.error('Error retrieving subscriptions', e_1);\r\n                        sizeModForModalBox = 'small';\r\n                        container.empty();\r\n                        container.append(this.getFailureMessage().el);\r\n                        return [3 /*break*/, 4];\r\n                    case 4:\r\n                        this.modal = this.ModalBox.open(container.el, {\r\n                            title: title.el.outerHTML,\r\n                            className: 'coveo-subscriptions-panel',\r\n                            sizeMod: sizeModForModalBox,\r\n                            body: this.searchInterface.options.modalContainer\r\n                        });\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    SearchAlerts.prototype.getFailureMessage = function () {\r\n        return Dom_1.$$('div', {\r\n            className: 'coveo-subscriptions-panel-fail'\r\n        }, Strings_1.l('SearchAlerts_Fail'));\r\n    };\r\n    SearchAlerts.prototype.handleSearchAlertsFail = function () {\r\n        if (this.modal != null) {\r\n            var modalBody = Dom_1.$$(this.modal.wrapper).find('.coveo-modal-body');\r\n            Dom_1.$$(modalBody).empty();\r\n            Dom_1.$$(modalBody).append(this.getFailureMessage().el);\r\n        }\r\n    };\r\n    SearchAlerts.prototype.close = function () {\r\n        if (this.modal) {\r\n            this.modal.close();\r\n            this.modal = null;\r\n        }\r\n    };\r\n    SearchAlerts.prototype.addSearchAlert = function (subscription, container) {\r\n        var _this = this;\r\n        var frequencies = [\r\n            { value: 'monthly', label: Strings_1.l('Monthly') },\r\n            { value: 'daily', label: Strings_1.l('Daily') },\r\n            { value: 'monday', label: Strings_1.l('Monday') },\r\n            { value: 'tuesday', label: Strings_1.l('Tuesday') },\r\n            { value: 'wednesday', label: Strings_1.l('Wednesday') },\r\n            { value: 'thursday', label: Strings_1.l('Thursday') },\r\n            { value: 'friday', label: Strings_1.l('Friday') },\r\n            { value: 'saturday', label: Strings_1.l('Saturday') },\r\n            { value: 'sunday', label: Strings_1.l('Sunday') }\r\n        ];\r\n        var context;\r\n        if (subscription.name) {\r\n            if (subscription.name == '<empty>') {\r\n                context = '&lt;empty&gt;';\r\n            }\r\n            else {\r\n                var textExtracted = Dom_1.$$('div').el;\r\n                textExtracted.innerHTML = subscription.name;\r\n                context = Dom_1.$$(textExtracted).text();\r\n            }\r\n        }\r\n        else if (subscription.type == Subscription_1.SUBSCRIPTION_TYPE.followQuery) {\r\n            var typeConfig = subscription.typeConfig;\r\n            context = _.escape(typeConfig.query.q) || Strings_1.l('EmptyQuery');\r\n        }\r\n        else {\r\n            var typeConfig = subscription.typeConfig;\r\n            context = _.escape(typeConfig.title || typeConfig.id);\r\n        }\r\n        var row = Dom_1.$$('tr', {\r\n            className: 'coveo-subscriptions-panel-subscription'\r\n        });\r\n        var pluckFrequenciesValues = _.pluck(frequencies, 'value');\r\n        var valueToLabel = function (valueMappedToLabel) { return _.findWhere(frequencies, { value: valueMappedToLabel }).label; };\r\n        var buildDropdown = function () {\r\n            return new Dropdown_1.Dropdown(function (dropdownInstance) {\r\n                _this.usageAnalytics.logCustomEvent(AnalyticsActionListMeta_1.analyticsActionCauseList.searchAlertsUpdateSubscription, {\r\n                    subscription: context,\r\n                    frequency: dropdownInstance.getValue()\r\n                }, _this.element);\r\n                subscription.frequency = dropdownInstance.getValue();\r\n                _this.updateAndSyncSearchAlert(subscription);\r\n            }, pluckFrequenciesValues, valueToLabel).build();\r\n        };\r\n        var contentTypeElement = Dom_1.$$('td', {\r\n            className: 'coveo-subscriptions-panel-content-type'\r\n        }, Strings_1.l('SearchAlerts_Type_' + subscription.type));\r\n        var contextElement = Dom_1.$$('td', {\r\n            className: 'coveo-subscriptions-panel-context',\r\n            title: context\r\n        });\r\n        contextElement.setHtml(context);\r\n        var frequencyElement = Dom_1.$$('td', null, Dom_1.$$('div', {\r\n            className: 'coveo-subscriptions-panel-frequency'\r\n        }, buildDropdown()));\r\n        var contentActionsElement = Dom_1.$$('td', {\r\n            className: 'coveo-subscriptions-panel-content-actions'\r\n        }, null, Dom_1.$$('div', {\r\n            className: 'coveo-subscriptions-panel-action coveo-subscriptions-panel-action-unfollow'\r\n        }, Strings_1.l('SearchAlerts_unFollowing')), Dom_1.$$('div', {\r\n            className: 'coveo-subscriptions-panel-action coveo-subscriptions-panel-action-follow'\r\n        }, Strings_1.l('SearchAlerts_follow')));\r\n        row.append(contentTypeElement.el);\r\n        row.append(contextElement.el);\r\n        row.append(frequencyElement.el);\r\n        row.append(contentActionsElement.el);\r\n        var noSearchAlerts = container.find('.coveo-subscriptions-panel-no-subscriptions');\r\n        row.insertBefore(noSearchAlerts);\r\n        var frequencyInput = frequencyElement.find('select');\r\n        frequencyInput.value = subscription.frequency;\r\n        Dom_1.$$(row.find('.coveo-subscriptions-panel-action-unfollow')).on('click', function () {\r\n            row.addClass('coveo-subscription-unfollowed');\r\n            _this.queryController\r\n                .getEndpoint()\r\n                .deleteSubscription(subscription)\r\n                .then(function () {\r\n                if (subscription.type == Subscription_1.SUBSCRIPTION_TYPE.followDocument) {\r\n                    _this.logAnalyticsEvent(AnalyticsActionListMeta_1.analyticsActionCauseList.searchAlertsUnfollowDocument, subscription);\r\n                }\r\n                else if (subscription.type == Subscription_1.SUBSCRIPTION_TYPE.followQuery) {\r\n                    _this.logAnalyticsEvent(AnalyticsActionListMeta_1.analyticsActionCauseList.searchAlertsUnfollowQuery, subscription);\r\n                }\r\n                delete subscription.id;\r\n                var eventArgs = { subscription: subscription };\r\n                Dom_1.$$(_this.root).trigger(SearchAlertEvents_1.SearchAlertsEvents.searchAlertsDeleted, eventArgs);\r\n            })\r\n                .catch(function () {\r\n                _this.handleSearchAlertsFail();\r\n            });\r\n        });\r\n        Dom_1.$$(row.find('.coveo-subscriptions-panel-action-follow')).on('click', function () {\r\n            row.removeClass('coveo-subscription-unfollowed');\r\n            _this.queryController\r\n                .getEndpoint()\r\n                .follow(subscription)\r\n                .then(function (updatedSearchAlert) {\r\n                if (subscription.type == Subscription_1.SUBSCRIPTION_TYPE.followDocument) {\r\n                    _this.logAnalyticsEvent(AnalyticsActionListMeta_1.analyticsActionCauseList.searchAlertsFollowDocument, subscription);\r\n                }\r\n                else if (subscription.type == Subscription_1.SUBSCRIPTION_TYPE.followQuery) {\r\n                    _this.logAnalyticsEvent(AnalyticsActionListMeta_1.analyticsActionCauseList.searchAlertsFollowQuery, subscription);\r\n                }\r\n                subscription.id = updatedSearchAlert.id;\r\n                var eventArgs = { subscription: subscription };\r\n                Dom_1.$$(_this.root).trigger(SearchAlertEvents_1.SearchAlertsEvents.searchAlertsCreated, eventArgs);\r\n            })\r\n                .catch(function () {\r\n                _this.handleSearchAlertsFail();\r\n            });\r\n        });\r\n    };\r\n    SearchAlerts.prototype.updateAndSyncSearchAlert = function (subscription) {\r\n        var _this = this;\r\n        this.queryController\r\n            .getEndpoint()\r\n            .updateSubscription(subscription)\r\n            .then(function (updated) { return _.extend(subscription, updated); })\r\n            .catch(function () {\r\n            _this.handleSearchAlertsFail();\r\n        });\r\n    };\r\n    SearchAlerts.prototype.triggerSearchAlertsFail = function () {\r\n        var eventArgs = {\r\n            dom: this.findQueryBoxDom()\r\n        };\r\n        Dom_1.$$(this.root).trigger(SearchAlertEvents_1.SearchAlertsEvents.searchAlertsFail, eventArgs);\r\n    };\r\n    SearchAlerts.prototype.findQueryBoxDom = function () {\r\n        var dom;\r\n        var components = this.searchInterface.getComponents('Querybox');\r\n        if (components && components.length > 0) {\r\n            dom = _.first(components).element;\r\n        }\r\n        else {\r\n            var components_1 = this.searchInterface.getComponents('Omnibox');\r\n            if (components_1 && components_1.length > 0) {\r\n                dom = _.first(components_1).element;\r\n            }\r\n        }\r\n        return dom;\r\n    };\r\n    SearchAlerts.prototype.buildFollowQueryRequest = function (query, options) {\r\n        var typeConfig = {\r\n            query: query\r\n        };\r\n        if (options.modifiedDateField) {\r\n            typeConfig.modifiedDateField = options.modifiedDateField;\r\n        }\r\n        return {\r\n            type: Subscription_1.SUBSCRIPTION_TYPE.followQuery,\r\n            typeConfig: typeConfig,\r\n            name: this.message.getFollowQueryMessage(query.q)\r\n        };\r\n    };\r\n    SearchAlerts.prototype.logAnalyticsEvent = function (cause, subscription) {\r\n        this.usageAnalytics.logCustomEvent(cause, {\r\n            subscription: subscription.name\r\n        }, this.element);\r\n    };\r\n    SearchAlerts.create = function (element, options, root) {\r\n        Assert_1.Assert.exists(element);\r\n        return new SearchAlerts(element, options, RegisteredNamedMethods_1.get(root, SearchInterface_1.SearchInterface).getBindings());\r\n    };\r\n    SearchAlerts.ID = 'SearchAlerts';\r\n    SearchAlerts.doExport = function () {\r\n        GlobalExports_1.exportGlobally({\r\n            SearchAlerts: SearchAlerts,\r\n            SearchAlertsMessage: SearchAlertsMessage_1.SearchAlertsMessage\r\n        });\r\n    };\r\n    /**\r\n     * The options for the search alerts\r\n     * @componentOptions\r\n     */\r\n    SearchAlerts.options = {\r\n        /**\r\n         * Specifies whether to add the **Manage Alerts** item in the {@link Settings} menu to allow the end user to manage\r\n         * search alerts.\r\n         *\r\n         * Clicking the **Manage Alerts** item calls the {@link SearchAlerts.openPanel} method.\r\n         *\r\n         * Default value is `true`.\r\n         */\r\n        enableManagePanel: ComponentOptions_1.ComponentOptions.buildBooleanOption({ defaultValue: true }),\r\n        /**\r\n         * Specifies whether to add the **Follow Query** item in the {@link Settings} menu to allow the end user to follow\r\n         * the last query.\r\n         *\r\n         * Clicking the **Follow Query** item calls the {@link SearchAlerts.followQuery} method.\r\n         *\r\n         * Default value is `true`.\r\n         */\r\n        enableFollowQuery: ComponentOptions_1.ComponentOptions.buildBooleanOption({ defaultValue: true }),\r\n        /**\r\n         * Specifies which field to use to represent the modification date when sending the\r\n         * {@link ISubscriptionQueryRequest}.\r\n         *\r\n         * Default value is `undefined`.\r\n         */\r\n        modifiedDateField: ComponentOptions_1.ComponentOptions.buildFieldOption(),\r\n        /**\r\n         * Specifies whether to display info and error messages when performing search alerts actions.\r\n         *\r\n         * If this options is `true`, the SearchAlerts constructor will automatically instantiate a\r\n         * {@link SearchAlertsMessage} component and set it to the {@link SearchAlerts.message} attribute.\r\n         *\r\n         * See also {@link SearchAlerts.options.messageCloseDelay}.\r\n         *\r\n         * Default value is `true`.\r\n         */\r\n        enableMessage: ComponentOptions_1.ComponentOptions.buildBooleanOption({ defaultValue: true }),\r\n        /**\r\n         * If {@link SearchAlerts.options.enableMessage} is `true`, specifies how long to display the search alert messages\r\n         * (in milliseconds).\r\n         *\r\n         * Default value is `2000`. Minimum value is `0`.\r\n         */\r\n        messageCloseDelay: ComponentOptions_1.ComponentOptions.buildNumberOption({ defaultValue: 2000, min: 0, depend: 'enableMessage' })\r\n    };\r\n    return SearchAlerts;\r\n}(Component_1.Component));\r\nexports.SearchAlerts = SearchAlerts;\r\nInitialization_1.Initialization.registerAutoCreateComponent(SearchAlerts);\r\n\n\n/***/ }),\n\n/***/ 62:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Dom_1 = __webpack_require__(1);\r\nvar Strings_1 = __webpack_require__(6);\r\nvar _ = __webpack_require__(0);\r\nvar GlobalExports_1 = __webpack_require__(3);\r\n/**\r\n * A dropdown widget with standard styling.\r\n */\r\nvar Dropdown = /** @class */ (function () {\r\n    /**\r\n     * Creates a new `Dropdown`.\r\n     * @param onChange The function to call when the dropdown selected value changes. This function takes the current\r\n     * `Dropdown` instance as an argument.\r\n     * @param listOfValues The selectable values to display in the dropdown.\r\n     * @param getDisplayValue An optional function to modify the display values, rather than using the values as they\r\n     * appear in the `listOfValues`.\r\n     * @param label The label to use for the input for accessibility purposes.\r\n     */\r\n    function Dropdown(onChange, listOfValues, getDisplayValue, label) {\r\n        if (onChange === void 0) { onChange = function (dropdown) { }; }\r\n        if (getDisplayValue === void 0) { getDisplayValue = Strings_1.l; }\r\n        this.onChange = onChange;\r\n        this.listOfValues = listOfValues;\r\n        this.getDisplayValue = getDisplayValue;\r\n        this.label = label;\r\n        this.optionsElement = [];\r\n        this.buildContent();\r\n        this.select(0, false);\r\n        this.bindEvents();\r\n    }\r\n    Dropdown.doExport = function () {\r\n        GlobalExports_1.exportGlobally({\r\n            Dropdown: Dropdown\r\n        });\r\n    };\r\n    /**\r\n     * Resets the dropdown.\r\n     */\r\n    Dropdown.prototype.reset = function () {\r\n        this.select(0, false);\r\n    };\r\n    Dropdown.prototype.setId = function (id) {\r\n        Dom_1.$$(this.element).setAttribute('id', id);\r\n    };\r\n    /**\r\n     * Gets the element on which the dropdown is bound.\r\n     * @returns {HTMLElement} The dropdown element.\r\n     */\r\n    Dropdown.prototype.getElement = function () {\r\n        return this.element;\r\n    };\r\n    /**\r\n     * Gets the currently selected dropdown value.\r\n     * @returns {string} The currently selected dropdown value.\r\n     */\r\n    Dropdown.prototype.getValue = function () {\r\n        return this.selectElement.value;\r\n    };\r\n    /**\r\n     * Selects a value from the dropdown [`listofValues`]{@link Dropdown.listOfValues}.\r\n     * @param index The 0-based index position of the value to select in the `listOfValues`.\r\n     * @param executeOnChange Indicates whether to execute the [`onChange`]{@link Dropdown.onChange} function when this\r\n     * method changes the dropdown selection.\r\n     */\r\n    Dropdown.prototype.select = function (index, executeOnChange) {\r\n        if (executeOnChange === void 0) { executeOnChange = true; }\r\n        this.selectOption(this.optionsElement[index], executeOnChange);\r\n    };\r\n    /**\r\n     * Gets the element on which the dropdown is bound.\r\n     * @returns {HTMLElement} The dropdown element.\r\n     */\r\n    Dropdown.prototype.build = function () {\r\n        return this.element;\r\n    };\r\n    /**\r\n     * Sets the dropdown value.\r\n     * @param value The value to set the dropdown to.\r\n     */\r\n    Dropdown.prototype.setValue = function (value) {\r\n        var _this = this;\r\n        _.each(this.optionsElement, function (option) {\r\n            if (Dom_1.$$(option).getAttribute('data-value') == value) {\r\n                _this.selectOption(option);\r\n            }\r\n        });\r\n    };\r\n    Dropdown.prototype.selectOption = function (option, executeOnChange) {\r\n        if (executeOnChange === void 0) { executeOnChange = true; }\r\n        this.selectElement.value = option.value;\r\n        if (executeOnChange) {\r\n            this.onChange(this);\r\n        }\r\n    };\r\n    Dropdown.prototype.buildContent = function () {\r\n        var _this = this;\r\n        this.selectElement = Dom_1.$$('select', {\r\n            className: 'coveo-dropdown'\r\n        }).el;\r\n        if (this.label) {\r\n            this.selectElement.setAttribute('aria-label', Strings_1.l(this.label));\r\n        }\r\n        var selectOptions = this.buildOptions();\r\n        _.each(selectOptions, function (opt) {\r\n            Dom_1.$$(_this.selectElement).append(opt);\r\n        });\r\n        this.element = this.selectElement;\r\n    };\r\n    Dropdown.prototype.buildOptions = function () {\r\n        var _this = this;\r\n        var ret = [];\r\n        _.each(this.listOfValues, function (value) {\r\n            ret.push(_this.buildOption(value));\r\n        });\r\n        return ret;\r\n    };\r\n    Dropdown.prototype.buildOption = function (value) {\r\n        var option = Dom_1.$$('option');\r\n        option.setAttribute('data-value', value);\r\n        option.setAttribute('value', value);\r\n        option.text(this.getDisplayValue(value));\r\n        this.optionsElement.push(option.el);\r\n        return option.el;\r\n    };\r\n    Dropdown.prototype.bindEvents = function () {\r\n        var _this = this;\r\n        Dom_1.$$(this.selectElement).on('change', function () { return _this.onChange(_this); });\r\n    };\r\n    return Dropdown;\r\n}());\r\nexports.Dropdown = Dropdown;\r\n\n\n/***/ }),\n\n/***/ 663:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Component_1 = __webpack_require__(7);\r\nvar ComponentOptions_1 = __webpack_require__(8);\r\nvar SearchAlertEvents_1 = __webpack_require__(83);\r\nvar QueryEvents_1 = __webpack_require__(11);\r\nvar Subscription_1 = __webpack_require__(226);\r\nvar PopupUtils_1 = __webpack_require__(194);\r\nvar Strings_1 = __webpack_require__(6);\r\nvar Dom_1 = __webpack_require__(1);\r\nvar _ = __webpack_require__(0);\r\nvar SVGIcons_1 = __webpack_require__(12);\r\nvar SVGDom_1 = __webpack_require__(16);\r\n/**\r\n * The SearchAlertsMessage component allows the {@link SearchAlerts} component to display messages.\r\n *\r\n * You should not include this component in your page. Instead, use a {@link SearchAlerts} component, and access the\r\n * {@link SearchAlerts.message} attribute.\r\n */\r\nvar SearchAlertsMessage = /** @class */ (function (_super) {\r\n    __extends(SearchAlertsMessage, _super);\r\n    /**\r\n     * Creates a new SearchAlertsMessage component\r\n     * @param element The HTMLElement on which to instantiate the component.\r\n     * @param options The options for the SearchAlertsMessage component.\r\n     * @param bindings The bindings that the component requires to function normally. If not set, these will be\r\n     * automatically resolved (with a slower execution time).\r\n     */\r\n    function SearchAlertsMessage(element, options, bindings) {\r\n        var _this = _super.call(this, element, SearchAlertsMessage.ID, bindings) || this;\r\n        _this.element = element;\r\n        _this.options = options;\r\n        _this.bindings = bindings;\r\n        _this.bind.onRootElement(SearchAlertEvents_1.SearchAlertsEvents.searchAlertsCreated, function (args) { return _this.handleSubscriptionCreated(args); });\r\n        _this.bind.oneRootElement(SearchAlertEvents_1.SearchAlertsEvents.searchAlertsFail, function (args) { return _this.handleSearchAlertsFail(args); });\r\n        _this.bind.oneRootElement(SearchAlertEvents_1.SearchAlertsEvents.searchAlertsDeleted, function () { return _this.close(); });\r\n        _this.bind.oneRootElement(QueryEvents_1.QueryEvents.newQuery, function () { return _this.close(); });\r\n        return _this;\r\n    }\r\n    SearchAlertsMessage.prototype.getCssClass = function () {\r\n        return 'coveo-subscriptions-messages';\r\n    };\r\n    SearchAlertsMessage.prototype.getFollowQueryMessage = function (query, htmlFormatted) {\r\n        var _this = this;\r\n        if (htmlFormatted === void 0) { htmlFormatted = false; }\r\n        var populateMessageArguments = {\r\n            text: []\r\n        };\r\n        var getAdditionalTextFormatted = function () {\r\n            return _.map(populateMessageArguments.text, function (text) {\r\n                text = _this.formatMessageArgumentsText(text);\r\n                return \"\" + (htmlFormatted ? '<li>' : '(') + text + (htmlFormatted ? '</li>' : ')');\r\n            }).join(' ');\r\n        };\r\n        Dom_1.$$(this.root).trigger(SearchAlertEvents_1.SearchAlertsEvents.searchAlertsPopulateMessage, populateMessageArguments);\r\n        var additionalMessage = \"\" + (htmlFormatted ? '<ul>' : '') + getAdditionalTextFormatted() + (htmlFormatted ? '</ul>' : '');\r\n        var automaticallyBuiltMessage;\r\n        if (query && populateMessageArguments.text.length != 0) {\r\n            automaticallyBuiltMessage = _.escape(query) + \" \" + additionalMessage;\r\n        }\r\n        if (query && populateMessageArguments.text.length == 0) {\r\n            automaticallyBuiltMessage = \"\" + _.escape(query);\r\n        }\r\n        if (!query && populateMessageArguments.text.length != 0) {\r\n            automaticallyBuiltMessage = \"\" + additionalMessage;\r\n        }\r\n        if (!query && populateMessageArguments.text.length == 0) {\r\n            automaticallyBuiltMessage = htmlFormatted ? Strings_1.l('EmptyQuery') : _.unescape(Strings_1.l('EmptyQuery'));\r\n        }\r\n        return automaticallyBuiltMessage;\r\n    };\r\n    /**\r\n     * Displays a message near the passed dom attribute.\r\n     * @param dom Specifies where to display the message.\r\n     * @param message The message.\r\n     * @param error Specifies whether the message is an error message.\r\n     */\r\n    SearchAlertsMessage.prototype.showMessage = function (dom, message, error) {\r\n        var _this = this;\r\n        this.message = Dom_1.$$('div', {\r\n            className: 'coveo-subscriptions-messages'\r\n        });\r\n        this.message.el.innerHTML = \"\\n      <div class='coveo-subscriptions-messages-message'>\\n        <div class='coveo-subscriptions-messages-content'><span>\" + message + \"</span></div>\\n        <div class='coveo-subscriptions-messages-info-close'>\" + SVGIcons_1.SVGIcons.icons.checkboxHookExclusionMore + \"</div>\\n      </div>\";\r\n        this.message.toggleClass('coveo-subscriptions-messages-error', error);\r\n        var closeButton = this.message.find('.coveo-subscriptions-messages-info-close');\r\n        SVGDom_1.SVGDom.addClassToSVGInContainer(closeButton, 'coveo-subscript-messages-info-close-svg');\r\n        Dom_1.$$(closeButton).on('click', function () { return _this.close(); });\r\n        PopupUtils_1.PopupUtils.positionPopup(this.message.el, dom.el, this.root, {\r\n            horizontal: PopupUtils_1.PopupHorizontalAlignment.INNERLEFT,\r\n            vertical: PopupUtils_1.PopupVerticalAlignment.BOTTOM,\r\n            verticalOffset: 12,\r\n            horizontalClip: true\r\n        }, this.root);\r\n        this.startCloseDelay();\r\n        this.message.on('mouseleave', function () {\r\n            _this.startCloseDelay();\r\n        });\r\n        this.message.on('mouseenter', function () {\r\n            _this.stopCloseDelay();\r\n        });\r\n    };\r\n    SearchAlertsMessage.prototype.formatMessageArgumentsText = function (text) {\r\n        if (_.isString(text)) {\r\n            text = _.escape(text);\r\n        }\r\n        else if (text.lineThrough) {\r\n            text = '<span style=\"text-decoration:line-through\">' + _.escape(text.value) + '</span>';\r\n        }\r\n        else {\r\n            text = _.escape(text.value);\r\n        }\r\n        return text;\r\n    };\r\n    SearchAlertsMessage.prototype.handleSubscriptionCreated = function (args) {\r\n        this.close();\r\n        if (args.dom != null) {\r\n            if (args.subscription.type == Subscription_1.SUBSCRIPTION_TYPE.followQuery) {\r\n                var typeConfig = args.subscription.typeConfig;\r\n                this.showMessage(Dom_1.$$(args.dom), Strings_1.l('SubscriptionsMessageFollowQuery', this.getFollowQueryMessage(typeConfig.query.q, true)), false);\r\n            }\r\n            else {\r\n                this.showMessage(Dom_1.$$(args.dom), Strings_1.l('SubscriptionsMessageFollow'), false);\r\n            }\r\n        }\r\n    };\r\n    SearchAlertsMessage.prototype.handleSearchAlertsFail = function (args) {\r\n        this.close();\r\n        if (args.dom != null) {\r\n            this.showMessage(Dom_1.$$(args.dom), Strings_1.l('SearchAlerts_Fail'), true);\r\n        }\r\n    };\r\n    SearchAlertsMessage.prototype.startCloseDelay = function () {\r\n        var _this = this;\r\n        clearTimeout(this.closeTimeout);\r\n        this.closeTimeout = window.setTimeout(function () {\r\n            _this.close();\r\n        }, this.options.closeDelay);\r\n    };\r\n    SearchAlertsMessage.prototype.stopCloseDelay = function () {\r\n        clearTimeout(this.closeTimeout);\r\n    };\r\n    SearchAlertsMessage.prototype.close = function () {\r\n        if (this.message != null) {\r\n            clearTimeout(this.closeTimeout);\r\n            this.message.remove();\r\n            this.message = null;\r\n        }\r\n    };\r\n    SearchAlertsMessage.ID = 'SubscriptionsMessages';\r\n    /**\r\n     * The options for the SearchAlertsMessage component\r\n     * @componentOptions\r\n     */\r\n    SearchAlertsMessage.options = {\r\n        /**\r\n         * Specifies how long to display the search alerts messages (in milliseconds).\r\n         *\r\n         * Default value is `2000`. Minimum value is `0`.\r\n         */\r\n        closeDelay: ComponentOptions_1.ComponentOptions.buildNumberOption({ defaultValue: 2000, min: 0 })\r\n    };\r\n    return SearchAlertsMessage;\r\n}(Component_1.Component));\r\nexports.SearchAlertsMessage = SearchAlertsMessage;\r\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// SearchAlerts.min__5f3280c404a1ee75a113.js","import { IQuery } from './Query';\r\n\r\nexport const SUBSCRIPTION_TYPE = {\r\n  followQuery: 'followQuery',\r\n  followDocument: 'followDocument'\r\n};\r\n\r\nexport interface ISearchAlertsEndpointOptions {\r\n  restUri: string;\r\n  accessToken?: string;\r\n  errorsAsSuccess?: boolean;\r\n}\r\n\r\nexport interface ISearchAlertsEndpointCallOptions {\r\n  type?: string;\r\n  page?: number;\r\n}\r\n\r\nexport interface ISearchAlertsEndpointSearchCallOptions {\r\n  documentIds: string[];\r\n}\r\n\r\n/**\r\n * Describe a subscription to the Coveo Search alerts service\r\n */\r\nexport interface ISubscription extends ISubscriptionRequest {\r\n  /**\r\n   * The id of the subscription\r\n   */\r\n  id: string;\r\n\r\n  /**\r\n   * The user associated with the subscription\r\n   */\r\n  user: ISubscriptionUser;\r\n}\r\n\r\n/**\r\n * Describe a user associated with a subscription to the Coveo Search alerts service\r\n */\r\nexport interface ISubscriptionUser {\r\n  /**\r\n   * The email of the user\r\n   */\r\n  email: string;\r\n\r\n  /**\r\n   * The token used to manage the alerts via email.\r\n   */\r\n  manageToken: string;\r\n}\r\n\r\n/**\r\n * Describe a request to subscribe to the Coveo Search alerts service\r\n */\r\nexport interface ISubscriptionRequest {\r\n  /**\r\n   * Type of subscription.<br/>\r\n   * Can be 'followQuery' or 'followDocument'\r\n   */\r\n  type: string;\r\n  /**\r\n   * Config of the subscription\r\n   */\r\n  typeConfig: ISubscriptionQueryRequest | ISubscriptionItemRequest;\r\n  /**\r\n   * Frequency of the alerts\r\n   */\r\n  frequency?: string;\r\n  /**\r\n   * The name that should be used by the API to identify this subscription\r\n   */\r\n  name: string;\r\n}\r\n\r\n/**\r\n * Describe a subscription to a single query\r\n */\r\nexport interface ISubscriptionQueryRequest {\r\n  /**\r\n   * Query to subscribe to\r\n   */\r\n  query: IQuery;\r\n  /**\r\n   * Which field on the result set represent the modification date for which you wish to receive alerts\r\n   */\r\n  modifiedDateField?: string;\r\n}\r\n\r\n/**\r\n * The `ISubscriptionItemRequest` interface describes a subscription to a single item (a result).\r\n */\r\nexport interface ISubscriptionItemRequest {\r\n  /**\r\n   * Contains the unique ID of the item to subscribe to.\r\n   */\r\n  id: string;\r\n\r\n  /**\r\n   * Contains the title of the item to subscribe to.\r\n   */\r\n  title: string;\r\n\r\n  /**\r\n   * Indicates which field contains the modification date of the item to subscribe to.\r\n   */\r\n  modifiedDateField?: string;\r\n\r\n  /**\r\n   * Contains a list of fields to monitor for the item to subscribe to.\r\n   */\r\n  watchedFields?: string[];\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/rest/Subscription.ts","import * as _ from 'underscore';\r\nimport { QueryEvents } from '../../events/QueryEvents';\r\nimport { ISearchAlertsEventArgs, ISearchAlertsFailEventArgs, SearchAlertsEvents } from '../../events/SearchAlertEvents';\r\nimport { SettingsEvents } from '../../events/SettingsEvents';\r\nimport { ModalBox as ModalBoxModule } from '../../ExternalModulesShim';\r\nimport { exportGlobally } from '../../GlobalExports';\r\nimport { Assert } from '../../misc/Assert';\r\nimport { AjaxError } from '../../rest/AjaxError';\r\nimport { IQuery } from '../../rest/Query';\r\nimport {\r\n  ISubscription,\r\n  ISubscriptionItemRequest,\r\n  ISubscriptionQueryRequest,\r\n  ISubscriptionRequest,\r\n  SUBSCRIPTION_TYPE\r\n} from '../../rest/Subscription';\r\nimport { l } from '../../strings/Strings';\r\nimport { $$, Dom } from '../../utils/Dom';\r\nimport { SVGIcons } from '../../utils/SVGIcons';\r\nimport {\r\n  analyticsActionCauseList,\r\n  IAnalyticsActionCause,\r\n  IAnalyticsSearchAlertsMeta,\r\n  IAnalyticsSearchAlertsUpdateMeta\r\n} from '../Analytics/AnalyticsActionListMeta';\r\nimport { Component } from '../Base/Component';\r\nimport { IComponentBindings } from '../Base/ComponentBindings';\r\nimport { ComponentOptions } from '../Base/ComponentOptions';\r\nimport { IFieldOption } from '../Base/IComponentOptions';\r\nimport { Initialization } from '../Base/Initialization';\r\nimport { get } from '../Base/RegisteredNamedMethods';\r\nimport { Dropdown } from '../FormWidgets/Dropdown';\r\nimport { SearchInterface } from '../SearchInterface/SearchInterface';\r\nimport { ISettingsPopulateMenuArgs } from '../Settings/Settings';\r\nimport { SearchAlertsMessage } from './SearchAlertsMessage';\r\nimport ModalBox = Coveo.ModalBox.ModalBox;\r\n\r\nexport interface ISearchAlertsOptions {\r\n  enableManagePanel?: boolean;\r\n  enableFollowQuery?: boolean;\r\n  modifiedDateField?: IFieldOption;\r\n  enableMessage?: boolean;\r\n  messageCloseDelay?: number;\r\n}\r\n\r\n/**\r\n * The Search Alerts component renders items in the {@link Settings} menu that allow the end user to follow queries\r\n * and to manage search alerts. A user following a query receives email notifications when the query results change.\r\n *\r\n * **Note:**\r\n * > It is necessary to meet certain requirements to be able to use this component (see\r\n * > [Deploying Search Alerts on a Coveo JS Search Page](https://docs.coveo.com/en/1932/)).\r\n *\r\n * See also the {@link FollowItem} component.\r\n */\r\nexport class SearchAlerts extends Component {\r\n  static ID = 'SearchAlerts';\r\n\r\n  static doExport = () => {\r\n    exportGlobally({\r\n      SearchAlerts: SearchAlerts,\r\n      SearchAlertsMessage: SearchAlertsMessage\r\n    });\r\n  };\r\n\r\n  /**\r\n   * The options for the search alerts\r\n   * @componentOptions\r\n   */\r\n  static options: ISearchAlertsOptions = {\r\n    /**\r\n     * Specifies whether to add the **Manage Alerts** item in the {@link Settings} menu to allow the end user to manage\r\n     * search alerts.\r\n     *\r\n     * Clicking the **Manage Alerts** item calls the {@link SearchAlerts.openPanel} method.\r\n     *\r\n     * Default value is `true`.\r\n     */\r\n    enableManagePanel: ComponentOptions.buildBooleanOption({ defaultValue: true }),\r\n\r\n    /**\r\n     * Specifies whether to add the **Follow Query** item in the {@link Settings} menu to allow the end user to follow\r\n     * the last query.\r\n     *\r\n     * Clicking the **Follow Query** item calls the {@link SearchAlerts.followQuery} method.\r\n     *\r\n     * Default value is `true`.\r\n     */\r\n    enableFollowQuery: ComponentOptions.buildBooleanOption({ defaultValue: true }),\r\n\r\n    /**\r\n     * Specifies which field to use to represent the modification date when sending the\r\n     * {@link ISubscriptionQueryRequest}.\r\n     *\r\n     * Default value is `undefined`.\r\n     */\r\n    modifiedDateField: ComponentOptions.buildFieldOption(),\r\n\r\n    /**\r\n     * Specifies whether to display info and error messages when performing search alerts actions.\r\n     *\r\n     * If this options is `true`, the SearchAlerts constructor will automatically instantiate a\r\n     * {@link SearchAlertsMessage} component and set it to the {@link SearchAlerts.message} attribute.\r\n     *\r\n     * See also {@link SearchAlerts.options.messageCloseDelay}.\r\n     *\r\n     * Default value is `true`.\r\n     */\r\n    enableMessage: ComponentOptions.buildBooleanOption({ defaultValue: true }),\r\n\r\n    /**\r\n     * If {@link SearchAlerts.options.enableMessage} is `true`, specifies how long to display the search alert messages\r\n     * (in milliseconds).\r\n     *\r\n     * Default value is `2000`. Minimum value is `0`.\r\n     */\r\n    messageCloseDelay: ComponentOptions.buildNumberOption({ defaultValue: 2000, min: 0, depend: 'enableMessage' })\r\n  };\r\n\r\n  private modal: ModalBox;\r\n\r\n  /**\r\n   * A reference to a {@link SearchAlertsMessage} component that the SearchAlerts component uses to display messages.\r\n   */\r\n  public message: SearchAlertsMessage;\r\n\r\n  /**\r\n   * Creates a new SearchAlerts component.\r\n   * @param element The HTMLElement on which to instantiate the component.\r\n   * @param options The options for the SearchAlerts component.\r\n   * @param bindings The bindings that the component requires to function normally. If not set, these will be\r\n   * automatically resolved (with a slower execution time).\r\n   */\r\n  constructor(\r\n    public element: HTMLElement,\r\n    public options: ISearchAlertsOptions,\r\n    bindings?: IComponentBindings,\r\n    private ModalBox = ModalBoxModule\r\n  ) {\r\n    super(element, SearchAlerts.ID, bindings);\r\n\r\n    this.options = ComponentOptions.initComponentOptions(element, SearchAlerts, options);\r\n\r\n    if (this.options.enableMessage) {\r\n      this.message = new SearchAlertsMessage(element, { closeDelay: this.options.messageCloseDelay }, this.getBindings());\r\n    }\r\n\r\n    if (!this.queryController.getEndpoint().options.isGuestUser) {\r\n      this.bind.onRootElement(SettingsEvents.settingsPopulateMenu, (args: ISettingsPopulateMenuArgs) => {\r\n        if (this.options.enableManagePanel) {\r\n          args.menuData.push({\r\n            text: l('SearchAlerts_Panel'),\r\n            className: 'coveo-subscriptions-panel',\r\n            onOpen: () => this.openPanel(),\r\n            onClose: () => this.close(),\r\n            svgIcon: SVGIcons.icons.dropdownFollowQuery,\r\n            svgIconClassName: 'coveo-subscriptions-panel-svg'\r\n          });\r\n        }\r\n      });\r\n    } else {\r\n      this.logger.warn('Logged in as guest user, search alerts are therefore not available.');\r\n    }\r\n\r\n    let once = false;\r\n\r\n    this.bind.onRootElement(QueryEvents.querySuccess, () => {\r\n      if (!once) {\r\n        once = true;\r\n        this.queryController\r\n          .getEndpoint()\r\n          .listSubscriptions()\r\n          .then(() => {\r\n            this.bind.onRootElement(SettingsEvents.settingsPopulateMenu, (args: ISettingsPopulateMenuArgs) => {\r\n              if (this.options.enableFollowQuery) {\r\n                args.menuData.push({\r\n                  text: l('SearchAlerts_followQuery'),\r\n                  className: 'coveo-follow-query',\r\n                  tooltip: l('FollowQueryDescription'),\r\n                  onOpen: () => this.followQuery(),\r\n                  onClose: () => {},\r\n                  svgIcon: SVGIcons.icons.dropdownFollowQuery,\r\n                  svgIconClassName: 'coveo-follow-query-svg'\r\n                });\r\n              }\r\n            });\r\n          })\r\n          .catch((e: AjaxError) => {\r\n            // Trap 403 error, as the listSubscription call is called on every page initialization\r\n            // to check for current subscriptions. By default, the search alert service is not enabled for most organization\r\n            // Don't want to pollute the console with un-needed noise and confusion\r\n            if (e.status != 403) {\r\n              throw e;\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Follows the last query. The user will start receiving email notifications when the query results change.\r\n   *\r\n   * Also logs the `searchAlertsFollowQuery` event in the usage analytics with the name of the request as meta data.\r\n   */\r\n  public followQuery() {\r\n    const queryBuilder = this.queryController.createQueryBuilder({});\r\n    const request = this.buildFollowQueryRequest(queryBuilder.build(), this.options);\r\n\r\n    this.usageAnalytics.logCustomEvent<IAnalyticsSearchAlertsMeta>(\r\n      analyticsActionCauseList.searchAlertsFollowQuery,\r\n      {\r\n        subscription: request.name\r\n      },\r\n      this.element\r\n    );\r\n\r\n    this.queryController\r\n      .getEndpoint()\r\n      .follow(request)\r\n      .then((subscription: ISubscription) => {\r\n        if (subscription) {\r\n          const eventArgs: ISearchAlertsEventArgs = {\r\n            subscription: subscription,\r\n            dom: this.findQueryBoxDom()\r\n          };\r\n          $$(this.root).trigger(SearchAlertsEvents.searchAlertsCreated, eventArgs);\r\n        } else {\r\n          this.triggerSearchAlertsFail();\r\n        }\r\n      })\r\n      .catch(() => {\r\n        this.triggerSearchAlertsFail();\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Opens the **Manage Alerts** panel. This panel allows the end user to stop following queries or items. It also\r\n   * allows the end user to specify email notification frequency for each followed query or item.\r\n   */\r\n  public async openPanel(): Promise<void> {\r\n    const title = $$('div');\r\n\r\n    const titleInfo = $$(\r\n      'div',\r\n      {\r\n        className: 'coveo-subscriptions-panel-title'\r\n      },\r\n      l('SearchAlerts_Panel')\r\n    );\r\n\r\n    title.append(titleInfo.el);\r\n\r\n    const container = $$('div');\r\n    const table = $$('table', {\r\n      className: 'coveo-subscriptions-panel-content',\r\n      cellspacing: 0\r\n    });\r\n    container.append(table.el);\r\n    const tableHead = $$('thead');\r\n    table.append(tableHead.el);\r\n\r\n    const rowHead = $$('tr');\r\n    tableHead.append(rowHead.el);\r\n\r\n    const headerType = $$(\r\n      'th',\r\n      {\r\n        className: 'coveo-subscriptions-panel-content-type'\r\n      },\r\n      l('SearchAlerts_Type')\r\n    );\r\n    const headerContent = $$('th', null, l('SearchAlerts_Content'));\r\n    const headerFrequency = $$('th', null, l('SearchAlerts_Frequency'));\r\n    const headerActions = $$(\r\n      'th',\r\n      {\r\n        className: 'coveo-subscriptions-panel-content-actions'\r\n      },\r\n      l('SearchAlerts_Actions')\r\n    );\r\n\r\n    rowHead.append(headerType.el);\r\n    rowHead.append(headerContent.el);\r\n    rowHead.append(headerFrequency.el);\r\n    rowHead.append(headerActions.el);\r\n\r\n    const tableBodySpacer = $$(\r\n      'tbody',\r\n      {\r\n        className: 'coveo-subscriptions-panel-spacer'\r\n      },\r\n      $$(\r\n        'tr',\r\n        null,\r\n        $$('td', {\r\n          colsspan: 3\r\n        })\r\n      )\r\n    );\r\n\r\n    table.append(tableBodySpacer.el);\r\n\r\n    const tableBodySubscriptions = $$(\r\n      'tbody',\r\n      {\r\n        className: 'coveo-subscriptions-panel-subscriptions'\r\n      },\r\n      $$(\r\n        'tr',\r\n        {\r\n          className: 'coveo-subscriptions-panel-no-subscriptions'\r\n        },\r\n        $$(\r\n          'td',\r\n          {\r\n            colspan: 3\r\n          },\r\n          l('SearchAlerts_PanelNoSearchAlerts')\r\n        )\r\n      )\r\n    );\r\n\r\n    table.append(tableBodySubscriptions.el);\r\n    let sizeModForModalBox = 'big';\r\n\r\n    try {\r\n      const subscriptions = await this.queryController.getEndpoint().listSubscriptions();\r\n      _.each(subscriptions, subscription => this.addSearchAlert(subscription, container));\r\n    } catch (e) {\r\n      this.logger.error('Error retrieving subscriptions', e);\r\n      sizeModForModalBox = 'small';\r\n      container.empty();\r\n      container.append(this.getFailureMessage().el);\r\n    }\r\n\r\n    this.modal = this.ModalBox.open(container.el, {\r\n      title: title.el.outerHTML,\r\n      className: 'coveo-subscriptions-panel',\r\n      sizeMod: sizeModForModalBox,\r\n      body: this.searchInterface.options.modalContainer\r\n    });\r\n  }\r\n\r\n  private getFailureMessage(): Dom {\r\n    return $$(\r\n      'div',\r\n      {\r\n        className: 'coveo-subscriptions-panel-fail'\r\n      },\r\n      l('SearchAlerts_Fail')\r\n    );\r\n  }\r\n\r\n  private handleSearchAlertsFail() {\r\n    if (this.modal != null) {\r\n      const modalBody = $$(this.modal.wrapper).find('.coveo-modal-body');\r\n      $$(modalBody).empty();\r\n      $$(modalBody).append(this.getFailureMessage().el);\r\n    }\r\n  }\r\n\r\n  private close() {\r\n    if (this.modal) {\r\n      this.modal.close();\r\n      this.modal = null;\r\n    }\r\n  }\r\n\r\n  private addSearchAlert(subscription: ISubscription, container: Dom) {\r\n    const frequencies = [\r\n      { value: 'monthly', label: l('Monthly') },\r\n      { value: 'daily', label: l('Daily') },\r\n      { value: 'monday', label: l('Monday') },\r\n      { value: 'tuesday', label: l('Tuesday') },\r\n      { value: 'wednesday', label: l('Wednesday') },\r\n      { value: 'thursday', label: l('Thursday') },\r\n      { value: 'friday', label: l('Friday') },\r\n      { value: 'saturday', label: l('Saturday') },\r\n      { value: 'sunday', label: l('Sunday') }\r\n    ];\r\n\r\n    let context: string;\r\n    if (subscription.name) {\r\n      if (subscription.name == '<empty>') {\r\n        context = '&lt;empty&gt;';\r\n      } else {\r\n        const textExtracted = $$('div').el;\r\n        textExtracted.innerHTML = subscription.name;\r\n        context = $$(textExtracted).text();\r\n      }\r\n    } else if (subscription.type == SUBSCRIPTION_TYPE.followQuery) {\r\n      const typeConfig = <ISubscriptionQueryRequest>subscription.typeConfig;\r\n      context = _.escape(typeConfig.query.q) || l('EmptyQuery');\r\n    } else {\r\n      const typeConfig = <ISubscriptionItemRequest>subscription.typeConfig;\r\n      context = _.escape(typeConfig.title || typeConfig.id);\r\n    }\r\n\r\n    const row = $$('tr', {\r\n      className: 'coveo-subscriptions-panel-subscription'\r\n    });\r\n\r\n    const pluckFrequenciesValues = _.pluck(frequencies, 'value');\r\n    const valueToLabel = (valueMappedToLabel: string) => _.findWhere(frequencies, { value: valueMappedToLabel }).label;\r\n\r\n    const buildDropdown = () => {\r\n      return new Dropdown(\r\n        (dropdownInstance: Dropdown) => {\r\n          this.usageAnalytics.logCustomEvent<IAnalyticsSearchAlertsUpdateMeta>(\r\n            analyticsActionCauseList.searchAlertsUpdateSubscription,\r\n            {\r\n              subscription: context,\r\n              frequency: dropdownInstance.getValue()\r\n            },\r\n            this.element\r\n          );\r\n          subscription.frequency = dropdownInstance.getValue();\r\n          this.updateAndSyncSearchAlert(subscription);\r\n        },\r\n        pluckFrequenciesValues,\r\n        valueToLabel\r\n      ).build();\r\n    };\r\n\r\n    const contentTypeElement = $$(\r\n      'td',\r\n      {\r\n        className: 'coveo-subscriptions-panel-content-type'\r\n      },\r\n      l('SearchAlerts_Type_' + subscription.type)\r\n    );\r\n\r\n    const contextElement = $$('td', {\r\n      className: 'coveo-subscriptions-panel-context',\r\n      title: context\r\n    });\r\n    contextElement.setHtml(context);\r\n\r\n    const frequencyElement = $$(\r\n      'td',\r\n      null,\r\n      $$(\r\n        'div',\r\n        {\r\n          className: 'coveo-subscriptions-panel-frequency'\r\n        },\r\n        buildDropdown()\r\n      )\r\n    );\r\n\r\n    const contentActionsElement = $$(\r\n      'td',\r\n      {\r\n        className: 'coveo-subscriptions-panel-content-actions'\r\n      },\r\n      null,\r\n      $$(\r\n        'div',\r\n        {\r\n          className: 'coveo-subscriptions-panel-action coveo-subscriptions-panel-action-unfollow'\r\n        },\r\n        l('SearchAlerts_unFollowing')\r\n      ),\r\n      $$(\r\n        'div',\r\n        {\r\n          className: 'coveo-subscriptions-panel-action coveo-subscriptions-panel-action-follow'\r\n        },\r\n        l('SearchAlerts_follow')\r\n      )\r\n    );\r\n\r\n    row.append(contentTypeElement.el);\r\n    row.append(contextElement.el);\r\n    row.append(frequencyElement.el);\r\n    row.append(contentActionsElement.el);\r\n\r\n    const noSearchAlerts = container.find('.coveo-subscriptions-panel-no-subscriptions');\r\n\r\n    row.insertBefore(noSearchAlerts);\r\n\r\n    const frequencyInput = <HTMLSelectElement>frequencyElement.find('select');\r\n    frequencyInput.value = subscription.frequency;\r\n\r\n    $$(row.find('.coveo-subscriptions-panel-action-unfollow')).on('click', () => {\r\n      row.addClass('coveo-subscription-unfollowed');\r\n\r\n      this.queryController\r\n        .getEndpoint()\r\n        .deleteSubscription(subscription)\r\n        .then(() => {\r\n          if (subscription.type == SUBSCRIPTION_TYPE.followDocument) {\r\n            this.logAnalyticsEvent(analyticsActionCauseList.searchAlertsUnfollowDocument, subscription);\r\n          } else if (subscription.type == SUBSCRIPTION_TYPE.followQuery) {\r\n            this.logAnalyticsEvent(analyticsActionCauseList.searchAlertsUnfollowQuery, subscription);\r\n          }\r\n          delete subscription.id;\r\n\r\n          const eventArgs: ISearchAlertsEventArgs = { subscription: subscription };\r\n          $$(this.root).trigger(SearchAlertsEvents.searchAlertsDeleted, eventArgs);\r\n        })\r\n        .catch(() => {\r\n          this.handleSearchAlertsFail();\r\n        });\r\n    });\r\n\r\n    $$(row.find('.coveo-subscriptions-panel-action-follow')).on('click', () => {\r\n      row.removeClass('coveo-subscription-unfollowed');\r\n\r\n      this.queryController\r\n        .getEndpoint()\r\n        .follow(subscription)\r\n        .then(updatedSearchAlert => {\r\n          if (subscription.type == SUBSCRIPTION_TYPE.followDocument) {\r\n            this.logAnalyticsEvent(analyticsActionCauseList.searchAlertsFollowDocument, subscription);\r\n          } else if (subscription.type == SUBSCRIPTION_TYPE.followQuery) {\r\n            this.logAnalyticsEvent(analyticsActionCauseList.searchAlertsFollowQuery, subscription);\r\n          }\r\n          subscription.id = updatedSearchAlert.id;\r\n          const eventArgs: ISearchAlertsEventArgs = { subscription: subscription };\r\n          $$(this.root).trigger(SearchAlertsEvents.searchAlertsCreated, eventArgs);\r\n        })\r\n        .catch(() => {\r\n          this.handleSearchAlertsFail();\r\n        });\r\n    });\r\n  }\r\n\r\n  private updateAndSyncSearchAlert(subscription: ISubscription) {\r\n    this.queryController\r\n      .getEndpoint()\r\n      .updateSubscription(subscription)\r\n      .then((updated: ISubscription) => _.extend(subscription, updated))\r\n      .catch(() => {\r\n        this.handleSearchAlertsFail();\r\n      });\r\n  }\r\n\r\n  private triggerSearchAlertsFail() {\r\n    const eventArgs: ISearchAlertsFailEventArgs = {\r\n      dom: this.findQueryBoxDom()\r\n    };\r\n    $$(this.root).trigger(SearchAlertsEvents.searchAlertsFail, eventArgs);\r\n  }\r\n\r\n  protected findQueryBoxDom(): HTMLElement {\r\n    let dom: HTMLElement;\r\n    const components = this.searchInterface.getComponents<Component>('Querybox');\r\n    if (components && components.length > 0) {\r\n      dom = _.first(components).element;\r\n    } else {\r\n      const components = this.searchInterface.getComponents<Component>('Omnibox');\r\n      if (components && components.length > 0) {\r\n        dom = _.first(components).element;\r\n      }\r\n    }\r\n    return dom;\r\n  }\r\n\r\n  private buildFollowQueryRequest(query: IQuery, options: ISearchAlertsOptions): ISubscriptionRequest {\r\n    const typeConfig: ISubscriptionQueryRequest = {\r\n      query: query\r\n    };\r\n\r\n    if (options.modifiedDateField) {\r\n      typeConfig.modifiedDateField = <string>options.modifiedDateField;\r\n    }\r\n\r\n    return {\r\n      type: SUBSCRIPTION_TYPE.followQuery,\r\n      typeConfig: typeConfig,\r\n      name: this.message.getFollowQueryMessage(query.q)\r\n    };\r\n  }\r\n\r\n  private logAnalyticsEvent(cause: IAnalyticsActionCause, subscription: ISubscription) {\r\n    this.usageAnalytics.logCustomEvent<IAnalyticsSearchAlertsMeta>(\r\n      cause,\r\n      {\r\n        subscription: subscription.name\r\n      },\r\n      this.element\r\n    );\r\n  }\r\n\r\n  static create(element: HTMLElement, options?: ISearchAlertsOptions, root?: HTMLElement): SearchAlerts {\r\n    Assert.exists(element);\r\n    return new SearchAlerts(element, options, (<SearchInterface>get(root, SearchInterface)).getBindings());\r\n  }\r\n}\r\n\r\nInitialization.registerAutoCreateComponent(SearchAlerts);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/SearchAlerts/SearchAlerts.ts","import { $$ } from '../../utils/Dom';\r\nimport { l } from '../../strings/Strings';\r\nimport * as _ from 'underscore';\r\nimport { IFormWidget, IFormWidgetSettable } from './FormWidgets';\r\nimport { exportGlobally } from '../../GlobalExports';\r\n\r\n/**\r\n * A dropdown widget with standard styling.\r\n */\r\nexport class Dropdown implements IFormWidget, IFormWidgetSettable {\r\n  private element: HTMLElement;\r\n  private selectElement: HTMLSelectElement;\r\n  private optionsElement: HTMLOptionElement[] = [];\r\n\r\n  static doExport() {\r\n    exportGlobally({\r\n      Dropdown: Dropdown\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Creates a new `Dropdown`.\r\n   * @param onChange The function to call when the dropdown selected value changes. This function takes the current\r\n   * `Dropdown` instance as an argument.\r\n   * @param listOfValues The selectable values to display in the dropdown.\r\n   * @param getDisplayValue An optional function to modify the display values, rather than using the values as they\r\n   * appear in the `listOfValues`.\r\n   * @param label The label to use for the input for accessibility purposes.\r\n   */\r\n  constructor(\r\n    public onChange: (dropdown: Dropdown) => void = (dropdown: Dropdown) => {},\r\n    protected listOfValues: string[],\r\n    private getDisplayValue: (string) => string = l,\r\n    private label?: string\r\n  ) {\r\n    this.buildContent();\r\n    this.select(0, false);\r\n    this.bindEvents();\r\n  }\r\n\r\n  /**\r\n   * Resets the dropdown.\r\n   */\r\n  public reset() {\r\n    this.select(0, false);\r\n  }\r\n\r\n  public setId(id: string) {\r\n    $$(this.element).setAttribute('id', id);\r\n  }\r\n\r\n  /**\r\n   * Gets the element on which the dropdown is bound.\r\n   * @returns {HTMLElement} The dropdown element.\r\n   */\r\n  public getElement(): HTMLElement {\r\n    return this.element;\r\n  }\r\n\r\n  /**\r\n   * Gets the currently selected dropdown value.\r\n   * @returns {string} The currently selected dropdown value.\r\n   */\r\n  public getValue(): string {\r\n    return this.selectElement.value;\r\n  }\r\n\r\n  /**\r\n   * Selects a value from the dropdown [`listofValues`]{@link Dropdown.listOfValues}.\r\n   * @param index The 0-based index position of the value to select in the `listOfValues`.\r\n   * @param executeOnChange Indicates whether to execute the [`onChange`]{@link Dropdown.onChange} function when this\r\n   * method changes the dropdown selection.\r\n   */\r\n  public select(index: number, executeOnChange = true) {\r\n    this.selectOption(this.optionsElement[index], executeOnChange);\r\n  }\r\n\r\n  /**\r\n   * Gets the element on which the dropdown is bound.\r\n   * @returns {HTMLElement} The dropdown element.\r\n   */\r\n  public build() {\r\n    return this.element;\r\n  }\r\n\r\n  /**\r\n   * Sets the dropdown value.\r\n   * @param value The value to set the dropdown to.\r\n   */\r\n  public setValue(value: string) {\r\n    _.each(this.optionsElement, option => {\r\n      if ($$(option).getAttribute('data-value') == value) {\r\n        this.selectOption(option);\r\n      }\r\n    });\r\n  }\r\n\r\n  private selectOption(option: HTMLOptionElement, executeOnChange = true) {\r\n    this.selectElement.value = option.value;\r\n    if (executeOnChange) {\r\n      this.onChange(this);\r\n    }\r\n  }\r\n\r\n  private buildContent() {\r\n    this.selectElement = <HTMLSelectElement>$$('select', {\r\n      className: 'coveo-dropdown'\r\n    }).el;\r\n\r\n    if (this.label) {\r\n      this.selectElement.setAttribute('aria-label', l(this.label));\r\n    }\r\n\r\n    const selectOptions = this.buildOptions();\r\n    _.each(selectOptions, opt => {\r\n      $$(this.selectElement).append(opt);\r\n    });\r\n    this.element = this.selectElement;\r\n  }\r\n\r\n  private buildOptions(): HTMLElement[] {\r\n    const ret: HTMLElement[] = [];\r\n    _.each(this.listOfValues, (value: string) => {\r\n      ret.push(this.buildOption(value));\r\n    });\r\n    return ret;\r\n  }\r\n\r\n  private buildOption(value: string): HTMLElement {\r\n    const option = $$('option');\r\n    option.setAttribute('data-value', value);\r\n    option.setAttribute('value', value);\r\n    option.text(this.getDisplayValue(value));\r\n    this.optionsElement.push(<HTMLOptionElement>option.el);\r\n    return option.el;\r\n  }\r\n\r\n  private bindEvents() {\r\n    $$(this.selectElement).on('change', () => this.onChange(this));\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/FormWidgets/Dropdown.ts","import { Component } from '../Base/Component';\r\nimport { ComponentOptions } from '../Base/ComponentOptions';\r\nimport { IComponentBindings } from '../Base/ComponentBindings';\r\nimport {\r\n  SearchAlertsEvents,\r\n  ISearchAlertsEventArgs,\r\n  ISearchAlertsFailEventArgs,\r\n  ISearchAlertsPopulateMessageEventArgs\r\n} from '../../events/SearchAlertEvents';\r\nimport { QueryEvents } from '../../events/QueryEvents';\r\nimport { SUBSCRIPTION_TYPE, ISubscriptionQueryRequest } from '../../rest/Subscription';\r\nimport { PopupUtils, PopupHorizontalAlignment, PopupVerticalAlignment } from '../../utils/PopupUtils';\r\nimport { l } from '../../strings/Strings';\r\nimport { $$, Dom } from '../../utils/Dom';\r\nimport * as _ from 'underscore';\r\nimport { ISearchAlertsPopulateMessageText } from '../../events/SearchAlertEvents';\r\nimport { SVGIcons } from '../../utils/SVGIcons';\r\nimport { SVGDom } from '../../utils/SVGDom';\r\n\r\nexport interface ISearchAlertMessageOptions {\r\n  closeDelay: number;\r\n}\r\n\r\n/**\r\n * The SearchAlertsMessage component allows the {@link SearchAlerts} component to display messages.\r\n *\r\n * You should not include this component in your page. Instead, use a {@link SearchAlerts} component, and access the\r\n * {@link SearchAlerts.message} attribute.\r\n */\r\nexport class SearchAlertsMessage extends Component {\r\n  static ID = 'SubscriptionsMessages';\r\n\r\n  /**\r\n   * The options for the SearchAlertsMessage component\r\n   * @componentOptions\r\n   */\r\n  static options: ISearchAlertMessageOptions = {\r\n    /**\r\n     * Specifies how long to display the search alerts messages (in milliseconds).\r\n     *\r\n     * Default value is `2000`. Minimum value is `0`.\r\n     */\r\n    closeDelay: ComponentOptions.buildNumberOption({ defaultValue: 2000, min: 0 })\r\n  };\r\n\r\n  private message: Dom;\r\n  private closeTimeout: number;\r\n\r\n  /**\r\n   * Creates a new SearchAlertsMessage component\r\n   * @param element The HTMLElement on which to instantiate the component.\r\n   * @param options The options for the SearchAlertsMessage component.\r\n   * @param bindings The bindings that the component requires to function normally. If not set, these will be\r\n   * automatically resolved (with a slower execution time).\r\n   */\r\n  constructor(public element: HTMLElement, public options: ISearchAlertMessageOptions, public bindings?: IComponentBindings) {\r\n    super(element, SearchAlertsMessage.ID, bindings);\r\n\r\n    this.bind.onRootElement(SearchAlertsEvents.searchAlertsCreated, (args: ISearchAlertsEventArgs) => this.handleSubscriptionCreated(args));\r\n    this.bind.oneRootElement(SearchAlertsEvents.searchAlertsFail, (args: ISearchAlertsEventArgs) => this.handleSearchAlertsFail(args));\r\n    this.bind.oneRootElement(SearchAlertsEvents.searchAlertsDeleted, () => this.close());\r\n    this.bind.oneRootElement(QueryEvents.newQuery, () => this.close());\r\n  }\r\n\r\n  public getCssClass(): string {\r\n    return 'coveo-subscriptions-messages';\r\n  }\r\n\r\n  public getFollowQueryMessage(query?: string, htmlFormatted = false): string {\r\n    let populateMessageArguments: ISearchAlertsPopulateMessageEventArgs = {\r\n      text: []\r\n    };\r\n\r\n    let getAdditionalTextFormatted = () => {\r\n      return _.map(populateMessageArguments.text, text => {\r\n        text = this.formatMessageArgumentsText(text);\r\n        return `${htmlFormatted ? '<li>' : '('}${text}${htmlFormatted ? '</li>' : ')'}`;\r\n      }).join(' ');\r\n    };\r\n\r\n    $$(this.root).trigger(SearchAlertsEvents.searchAlertsPopulateMessage, populateMessageArguments);\r\n    let additionalMessage = `${htmlFormatted ? '<ul>' : ''}${getAdditionalTextFormatted()}${htmlFormatted ? '</ul>' : ''}`;\r\n\r\n    let automaticallyBuiltMessage: string;\r\n\r\n    if (query && populateMessageArguments.text.length != 0) {\r\n      automaticallyBuiltMessage = `${_.escape(query)} ${additionalMessage}`;\r\n    }\r\n\r\n    if (query && populateMessageArguments.text.length == 0) {\r\n      automaticallyBuiltMessage = `${_.escape(query)}`;\r\n    }\r\n\r\n    if (!query && populateMessageArguments.text.length != 0) {\r\n      automaticallyBuiltMessage = `${additionalMessage}`;\r\n    }\r\n\r\n    if (!query && populateMessageArguments.text.length == 0) {\r\n      automaticallyBuiltMessage = htmlFormatted ? l('EmptyQuery') : _.unescape(l('EmptyQuery'));\r\n    }\r\n\r\n    return automaticallyBuiltMessage;\r\n  }\r\n\r\n  /**\r\n   * Displays a message near the passed dom attribute.\r\n   * @param dom Specifies where to display the message.\r\n   * @param message The message.\r\n   * @param error Specifies whether the message is an error message.\r\n   */\r\n  public showMessage(dom: Dom, message: string, error: boolean) {\r\n    this.message = $$('div', {\r\n      className: 'coveo-subscriptions-messages'\r\n    });\r\n    this.message.el.innerHTML = `\r\n      <div class='coveo-subscriptions-messages-message'>\r\n        <div class='coveo-subscriptions-messages-content'><span>${message}</span></div>\r\n        <div class='coveo-subscriptions-messages-info-close'>${SVGIcons.icons.checkboxHookExclusionMore}</div>\r\n      </div>`;\r\n\r\n    this.message.toggleClass('coveo-subscriptions-messages-error', error);\r\n    let closeButton = this.message.find('.coveo-subscriptions-messages-info-close');\r\n    SVGDom.addClassToSVGInContainer(closeButton, 'coveo-subscript-messages-info-close-svg');\r\n    $$(closeButton).on('click', () => this.close());\r\n\r\n    PopupUtils.positionPopup(\r\n      this.message.el,\r\n      dom.el,\r\n      this.root,\r\n      {\r\n        horizontal: PopupHorizontalAlignment.INNERLEFT,\r\n        vertical: PopupVerticalAlignment.BOTTOM,\r\n        verticalOffset: 12,\r\n        horizontalClip: true\r\n      },\r\n      this.root\r\n    );\r\n\r\n    this.startCloseDelay();\r\n\r\n    this.message.on('mouseleave', () => {\r\n      this.startCloseDelay();\r\n    });\r\n    this.message.on('mouseenter', () => {\r\n      this.stopCloseDelay();\r\n    });\r\n  }\r\n\r\n  private formatMessageArgumentsText(text: string | ISearchAlertsPopulateMessageText) {\r\n    if (_.isString(text)) {\r\n      text = _.escape(text);\r\n    } else if (text.lineThrough) {\r\n      text = '<span style=\"text-decoration:line-through\">' + _.escape(text.value) + '</span>';\r\n    } else {\r\n      text = _.escape(text.value);\r\n    }\r\n    return text;\r\n  }\r\n\r\n  private handleSubscriptionCreated(args: ISearchAlertsEventArgs) {\r\n    this.close();\r\n    if (args.dom != null) {\r\n      if (args.subscription.type == SUBSCRIPTION_TYPE.followQuery) {\r\n        let typeConfig = <ISubscriptionQueryRequest>args.subscription.typeConfig;\r\n        this.showMessage($$(args.dom), l('SubscriptionsMessageFollowQuery', this.getFollowQueryMessage(typeConfig.query.q, true)), false);\r\n      } else {\r\n        this.showMessage($$(args.dom), l('SubscriptionsMessageFollow'), false);\r\n      }\r\n    }\r\n  }\r\n\r\n  private handleSearchAlertsFail(args: ISearchAlertsFailEventArgs) {\r\n    this.close();\r\n    if (args.dom != null) {\r\n      this.showMessage($$(args.dom), l('SearchAlerts_Fail'), true);\r\n    }\r\n  }\r\n\r\n  private startCloseDelay() {\r\n    clearTimeout(this.closeTimeout);\r\n    this.closeTimeout = window.setTimeout(() => {\r\n      this.close();\r\n    }, this.options.closeDelay);\r\n  }\r\n\r\n  private stopCloseDelay() {\r\n    clearTimeout(this.closeTimeout);\r\n  }\r\n\r\n  private close() {\r\n    if (this.message != null) {\r\n      clearTimeout(this.closeTimeout);\r\n      this.message.remove();\r\n      this.message = null;\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/SearchAlerts/SearchAlertsMessage.ts"],"sourceRoot":""}