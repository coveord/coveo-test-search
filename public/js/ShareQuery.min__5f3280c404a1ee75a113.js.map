{"version":3,"sources":["ShareQuery.min__5f3280c404a1ee75a113.js","./src/ui/ShareQuery/ShareQuery.ts"],"names":["webpackJsonpCoveo__temporary","280","module","exports","__webpack_require__","__extends","this","extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__","constructor","prototype","create","defineProperty","value","element","options","bindings","ModalBox","ShareQuery","ID","bind","onRootElement","SettingsEvents","settingsPopulateMenu","args","menuData","push","className","text","l","onOpen","open","onClose","close","svgIcon","SVGIcons","icons","dropdownShareQuery","svgIconClassName","_this","modalbox","dialogBoxContent","buildContent","title","body","searchInterface","modalContainer","getLinkToThisQuery","linkToThisQuery","buildLinkToThisQuery","setLinkToThisQuery","link","getCompleteQuery","completeQuery","buildCompleteQuery","setCompleteQuery","outputIfNotNull","content","$$","el","boxes","appendChild","buildTextBoxWithLabel","Component","pointElementsToDummyForm","type","lastQuery","queryController","getLastQuery","Utils","trim","q","aq","cq","on","select","window","location","href","label","input","labelElement","returnDiv","doExport","exportGlobally","Initialization","registerAutoCreateComponent","667"],"mappings":"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","file":"ShareQuery.min__5f3280c404a1ee75a113.js","sourcesContent":["webpackJsonpCoveo__temporary([59],{\n\n/***/ 280:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Component_1 = __webpack_require__(7);\r\nvar SettingsEvents_1 = __webpack_require__(53);\r\nvar Dom_1 = __webpack_require__(1);\r\nvar Strings_1 = __webpack_require__(6);\r\nvar Utils_1 = __webpack_require__(4);\r\nvar Initialization_1 = __webpack_require__(2);\r\nvar GlobalExports_1 = __webpack_require__(3);\r\nvar ExternalModulesShim_1 = __webpack_require__(26);\r\n__webpack_require__(667);\r\nvar SVGIcons_1 = __webpack_require__(12);\r\n/**\r\n * The ShareQuery component populates the {@link Settings} popup menu with the **Share Query** menu item. When the end\r\n * user clicks this item, it displays a panel containing two input boxes: one containing a shareable link and the other\r\n * containing the complete current query expression.\r\n */\r\nvar ShareQuery = /** @class */ (function (_super) {\r\n    __extends(ShareQuery, _super);\r\n    /**\r\n     * Creates a new ShareQuery component.\r\n     * @param element The HTMLElement on which to instantiate the component.\r\n     * @param options The options for the ShareQuery component.\r\n     * @param bindings The bindings that the component requires to function normally. If not set, these will be\r\n     * automatically resolved (with a slower execution time).\r\n     */\r\n    function ShareQuery(element, options, bindings, ModalBox) {\r\n        if (ModalBox === void 0) { ModalBox = ExternalModulesShim_1.ModalBox; }\r\n        var _this = _super.call(this, element, ShareQuery.ID, bindings) || this;\r\n        _this.element = element;\r\n        _this.options = options;\r\n        _this.ModalBox = ModalBox;\r\n        _this.bind.onRootElement(SettingsEvents_1.SettingsEvents.settingsPopulateMenu, function (args) {\r\n            args.menuData.push({\r\n                className: 'coveo-share-query',\r\n                text: Strings_1.l('ShareQuery'),\r\n                onOpen: function () { return _this.open(); },\r\n                onClose: function () { return _this.close(); },\r\n                svgIcon: SVGIcons_1.SVGIcons.icons.dropdownShareQuery,\r\n                svgIconClassName: 'coveo-share-query-svg'\r\n            });\r\n        });\r\n        return _this;\r\n    }\r\n    /**\r\n     * Open the **Share Query** modal box.\r\n     */\r\n    ShareQuery.prototype.open = function () {\r\n        if (this.modalbox == null) {\r\n            this.dialogBoxContent = this.buildContent();\r\n            this.modalbox = this.ModalBox.open(this.dialogBoxContent, {\r\n                title: Strings_1.l('ShareQuery'),\r\n                className: 'coveo-share-query-opened',\r\n                body: this.searchInterface.options.modalContainer\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Close the **Share Query** modal box.\r\n     */\r\n    ShareQuery.prototype.close = function () {\r\n        if (this.modalbox) {\r\n            this.modalbox.close();\r\n            this.modalbox = null;\r\n        }\r\n    };\r\n    /**\r\n     * Gets the link to the current query.\r\n     */\r\n    ShareQuery.prototype.getLinkToThisQuery = function () {\r\n        if (!this.linkToThisQuery) {\r\n            this.buildLinkToThisQuery();\r\n        }\r\n        return this.linkToThisQuery.value;\r\n    };\r\n    /**\r\n     * Sets the link to the current query.\r\n     */\r\n    ShareQuery.prototype.setLinkToThisQuery = function (link) {\r\n        if (!this.linkToThisQuery) {\r\n            this.buildLinkToThisQuery();\r\n        }\r\n        this.linkToThisQuery.value = link;\r\n    };\r\n    /**\r\n     * Gets the complete query expression string\r\n     */\r\n    ShareQuery.prototype.getCompleteQuery = function () {\r\n        if (!this.completeQuery) {\r\n            this.buildCompleteQuery();\r\n        }\r\n        return this.completeQuery.value;\r\n    };\r\n    /**\r\n     * Set the complete query expression string.\r\n     */\r\n    ShareQuery.prototype.setCompleteQuery = function (completeQuery) {\r\n        if (!this.completeQuery) {\r\n            this.buildCompleteQuery();\r\n        }\r\n        this.completeQuery.value = completeQuery;\r\n    };\r\n    ShareQuery.prototype.outputIfNotNull = function (value) {\r\n        if (value) {\r\n            return '(' + value + ')';\r\n        }\r\n        return '';\r\n    };\r\n    ShareQuery.prototype.buildContent = function () {\r\n        var content = Dom_1.$$('div', {\r\n            className: 'coveo-share-query-summary-info'\r\n        }).el;\r\n        var boxes = Dom_1.$$('div', {\r\n            className: 'coveo-share-query-summary-info-boxes'\r\n        }).el;\r\n        this.buildLinkToThisQuery();\r\n        this.buildCompleteQuery();\r\n        boxes.appendChild(this.buildTextBoxWithLabel(Strings_1.l('Link'), this.linkToThisQuery));\r\n        boxes.appendChild(this.buildTextBoxWithLabel(Strings_1.l('CompleteQuery'), this.completeQuery));\r\n        content.appendChild(boxes);\r\n        Component_1.Component.pointElementsToDummyForm(content);\r\n        return content;\r\n    };\r\n    ShareQuery.prototype.buildCompleteQuery = function () {\r\n        this.completeQuery = Dom_1.$$('input', {\r\n            type: 'text',\r\n            className: 'coveo-share-query-summary-info-input'\r\n        }).el;\r\n        var lastQuery = this.queryController.getLastQuery();\r\n        this.completeQuery.value = Utils_1.Utils.trim(this.outputIfNotNull(lastQuery.q) + \" \" + this.outputIfNotNull(lastQuery.aq) + \" \" + this.outputIfNotNull(lastQuery.cq));\r\n    };\r\n    ShareQuery.prototype.buildLinkToThisQuery = function () {\r\n        var _this = this;\r\n        this.linkToThisQuery = Dom_1.$$('input', {\r\n            type: 'text',\r\n            className: 'coveo-share-query-summary-info-input'\r\n        }).el;\r\n        Dom_1.$$(this.linkToThisQuery).on('click', function () { return _this.linkToThisQuery.select(); });\r\n        this.linkToThisQuery.value = window.location.href;\r\n    };\r\n    ShareQuery.prototype.buildTextBoxWithLabel = function (label, input) {\r\n        var labelElement = Dom_1.$$('span', {\r\n            className: 'coveo-share-query-summary-info-label'\r\n        });\r\n        labelElement.text(label);\r\n        var returnDiv = Dom_1.$$('div').el;\r\n        returnDiv.appendChild(labelElement.el);\r\n        returnDiv.appendChild(input);\r\n        return returnDiv;\r\n    };\r\n    ShareQuery.ID = 'ShareQuery';\r\n    ShareQuery.options = {};\r\n    ShareQuery.doExport = function () {\r\n        GlobalExports_1.exportGlobally({\r\n            ShareQuery: ShareQuery\r\n        });\r\n    };\r\n    return ShareQuery;\r\n}(Component_1.Component));\r\nexports.ShareQuery = ShareQuery;\r\nInitialization_1.Initialization.registerAutoCreateComponent(ShareQuery);\r\n\n\n/***/ }),\n\n/***/ 667:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// ShareQuery.min__5f3280c404a1ee75a113.js","import { Component } from '../Base/Component';\r\nimport { IComponentBindings } from '../Base/ComponentBindings';\r\nimport { SettingsEvents } from '../../events/SettingsEvents';\r\nimport { ISettingsPopulateMenuArgs } from '../Settings/Settings';\r\nimport { $$ } from '../../utils/Dom';\r\nimport { l } from '../../strings/Strings';\r\nimport { Utils } from '../../utils/Utils';\r\nimport { Initialization } from '../Base/Initialization';\r\nimport { exportGlobally } from '../../GlobalExports';\r\nimport { ModalBox as ModalBoxModule } from '../../ExternalModulesShim';\r\n\r\nimport 'styling/_ShareQuery';\r\nimport { SVGIcons } from '../../utils/SVGIcons';\r\n\r\nexport interface IShareQueryOptions {}\r\n\r\n/**\r\n * The ShareQuery component populates the {@link Settings} popup menu with the **Share Query** menu item. When the end\r\n * user clicks this item, it displays a panel containing two input boxes: one containing a shareable link and the other\r\n * containing the complete current query expression.\r\n */\r\nexport class ShareQuery extends Component {\r\n  static ID = 'ShareQuery';\r\n  static options: IShareQueryOptions = {};\r\n\r\n  static doExport = () => {\r\n    exportGlobally({\r\n      ShareQuery: ShareQuery\r\n    });\r\n  };\r\n\r\n  public dialogBoxContent: HTMLElement;\r\n  private linkToThisQuery: HTMLInputElement;\r\n  private completeQuery: HTMLInputElement;\r\n  private modalbox: Coveo.ModalBox.ModalBox;\r\n\r\n  /**\r\n   * Creates a new ShareQuery component.\r\n   * @param element The HTMLElement on which to instantiate the component.\r\n   * @param options The options for the ShareQuery component.\r\n   * @param bindings The bindings that the component requires to function normally. If not set, these will be\r\n   * automatically resolved (with a slower execution time).\r\n   */\r\n  constructor(\r\n    public element: HTMLElement,\r\n    public options: IShareQueryOptions,\r\n    bindings?: IComponentBindings,\r\n    private ModalBox = ModalBoxModule\r\n  ) {\r\n    super(element, ShareQuery.ID, bindings);\r\n\r\n    this.bind.onRootElement(SettingsEvents.settingsPopulateMenu, (args: ISettingsPopulateMenuArgs) => {\r\n      args.menuData.push({\r\n        className: 'coveo-share-query',\r\n        text: l('ShareQuery'),\r\n        onOpen: () => this.open(),\r\n        onClose: () => this.close(),\r\n        svgIcon: SVGIcons.icons.dropdownShareQuery,\r\n        svgIconClassName: 'coveo-share-query-svg'\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Open the **Share Query** modal box.\r\n   */\r\n  public open() {\r\n    if (this.modalbox == null) {\r\n      this.dialogBoxContent = this.buildContent();\r\n      this.modalbox = this.ModalBox.open(this.dialogBoxContent, {\r\n        title: l('ShareQuery'),\r\n        className: 'coveo-share-query-opened',\r\n        body: this.searchInterface.options.modalContainer\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Close the **Share Query** modal box.\r\n   */\r\n  public close() {\r\n    if (this.modalbox) {\r\n      this.modalbox.close();\r\n      this.modalbox = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets the link to the current query.\r\n   */\r\n  public getLinkToThisQuery(): string {\r\n    if (!this.linkToThisQuery) {\r\n      this.buildLinkToThisQuery();\r\n    }\r\n    return this.linkToThisQuery.value;\r\n  }\r\n\r\n  /**\r\n   * Sets the link to the current query.\r\n   */\r\n  public setLinkToThisQuery(link: string): void {\r\n    if (!this.linkToThisQuery) {\r\n      this.buildLinkToThisQuery();\r\n    }\r\n    this.linkToThisQuery.value = link;\r\n  }\r\n\r\n  /**\r\n   * Gets the complete query expression string\r\n   */\r\n  public getCompleteQuery(): string {\r\n    if (!this.completeQuery) {\r\n      this.buildCompleteQuery();\r\n    }\r\n    return this.completeQuery.value;\r\n  }\r\n\r\n  /**\r\n   * Set the complete query expression string.\r\n   */\r\n  public setCompleteQuery(completeQuery: string) {\r\n    if (!this.completeQuery) {\r\n      this.buildCompleteQuery();\r\n    }\r\n    this.completeQuery.value = completeQuery;\r\n  }\r\n\r\n  private outputIfNotNull(value: string): string {\r\n    if (value) {\r\n      return '(' + value + ')';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  private buildContent(): HTMLElement {\r\n    const content = $$('div', {\r\n      className: 'coveo-share-query-summary-info'\r\n    }).el;\r\n\r\n    const boxes = $$('div', {\r\n      className: 'coveo-share-query-summary-info-boxes'\r\n    }).el;\r\n\r\n    this.buildLinkToThisQuery();\r\n    this.buildCompleteQuery();\r\n\r\n    boxes.appendChild(this.buildTextBoxWithLabel(l('Link'), this.linkToThisQuery));\r\n    boxes.appendChild(this.buildTextBoxWithLabel(l('CompleteQuery'), this.completeQuery));\r\n    content.appendChild(boxes);\r\n\r\n    Component.pointElementsToDummyForm(content);\r\n\r\n    return content;\r\n  }\r\n\r\n  private buildCompleteQuery() {\r\n    this.completeQuery = <HTMLInputElement>$$('input', {\r\n      type: 'text',\r\n      className: 'coveo-share-query-summary-info-input'\r\n    }).el;\r\n\r\n    const lastQuery = this.queryController.getLastQuery();\r\n    this.completeQuery.value = Utils.trim(\r\n      `${this.outputIfNotNull(lastQuery.q)} ${this.outputIfNotNull(lastQuery.aq)} ${this.outputIfNotNull(lastQuery.cq)}`\r\n    );\r\n  }\r\n\r\n  private buildLinkToThisQuery() {\r\n    this.linkToThisQuery = <HTMLInputElement>$$('input', {\r\n      type: 'text',\r\n      className: 'coveo-share-query-summary-info-input'\r\n    }).el;\r\n\r\n    $$(this.linkToThisQuery).on('click', () => this.linkToThisQuery.select());\r\n    this.linkToThisQuery.value = window.location.href;\r\n  }\r\n\r\n  private buildTextBoxWithLabel(label: string, input: HTMLInputElement): HTMLElement {\r\n    const labelElement = $$('span', {\r\n      className: 'coveo-share-query-summary-info-label'\r\n    });\r\n    labelElement.text(label);\r\n\r\n    const returnDiv = $$('div').el;\r\n    returnDiv.appendChild(labelElement.el);\r\n    returnDiv.appendChild(input);\r\n    return returnDiv;\r\n  }\r\n}\r\n\r\nInitialization.registerAutoCreateComponent(ShareQuery);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/ShareQuery/ShareQuery.ts"],"sourceRoot":""}