{"version":3,"sources":["Querybox.min__5f3280c404a1ee75a113.js","./src/magicbox/Grammars/Basic.ts","./src/ui/Querybox/Querybox.ts","./src/magicbox/Grammar.ts","./src/magicbox/Expression/ExpressionEndOfInput.ts","./src/magicbox/Expression/ExpressionConstant.ts","./src/magicbox/Grammars/Field.ts","./src/magicbox/SuggestionsManager.ts","./src/magicbox/MagicBox.ts","./src/magicbox/MagicBoxUtils.ts","./src/magicbox/Expression/ExpressionRef.ts","./src/magicbox/Result/RefResult.ts","./src/magicbox/Expression/ExpressionOptions.ts","./src/magicbox/Result/OptionResult.ts","./src/magicbox/Expression/ExpressionRegExp.ts","./src/magicbox/Expression/ExpressionFunction.ts","./src/magicbox/Result/Result.ts","./src/magicbox/Expression/ExpressionList.ts","./src/magicbox/Grammars/NestedQuery.ts","./src/magicbox/Grammars/Date.ts","./src/magicbox/Grammars/QueryExtension.ts","./src/magicbox/Grammars/SubExpression.ts","./src/magicbox/InputManager.ts","./src/magicbox/QueryProcessor.ts","./src/magicbox/Grammars/Complete.ts","./src/magicbox/Grammars/Expressions.ts","./src/events/ResultPreviewsManagerEvents.ts","./src/ui/Querybox/QueryboxOptionsProcessing.ts","./src/ui/Querybox/QueryboxQueryParameters.ts","./src/magicbox/doMagicBoxExport.ts","./src/magicbox/Grammars/Grammars.ts","./src/magicbox/ResultPreviewsManager.ts","./src/magicbox/MagicBoxClear.ts"],"names":["webpackJsonpCoveo__temporary","128","module","exports","__webpack_require__","Object","defineProperty","value","notWordStart","notInWord","Basic","basicExpressions","grammars","DoubleQuoted","NotDoubleQuote","SingleQuoted","NotSingleQuote","Number","Word","input","end","expression","regex","RegExp","replace","groups","match","index","result","Result","isSuccess","length","EndOfInputResult","135","__extends","this","extendStatics","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__","constructor","prototype","create","element","options","bindings","Querybox","ID","HTMLInputElement","logger","error","ComponentOptions","initComponentOptions","QueryboxOptionsProcessing","postProcess","$$","toggleClass","enableQuerySyntax","magicBox","createMagicBox","Grammar","Query","Term","Spaces","inline","find","setAttribute","placeholder","l","bind","onRootElement","QueryEvents","buildingQuery","args","handleBuildingQuery","StandaloneSearchInterfaceEvents","beforeRedirect","updateQueryState","onQueryState","MODEL_EVENTS","CHANGE_ONE","QUERY_STATE_ATTRIBUTES","Q","handleQueryStateChanged","enableSearchAsYouType","addClass","onchange","searchAsYouType","onsubmit","submit","onblur","onclear","triggerQueryOnClear","usageAnalytics","logSearchEvent","analyticsActionCauseList","searchboxClear","triggerNewQuery","_this","clearSuggestion","searchboxSubmit","setText","text","clear","getText","getResult","getDisplayedResult","getCursor","resultAtCursor","Assert","exists","queryBuilder","lastQuery","QueryboxQueryParameters","addParameters","clearTimeout","searchAsYouTypeTimeout","queryController","executeQuery","logInActionsHistory","queryStateModel","set","QueryStateModel","attributesEnum","q","window","setTimeout","logSearchAsYouType","searchboxAsYouType","searchAsYouTypeDelay","doExport","exportGlobally","buildBooleanOption","defaultValue","section","buildNumberOption","min","enableWildcards","enableQuestionMarks","depend","enableLowercaseOperators","enablePartialMatch","partialMatchKeywords","partialMatchThreshold","buildStringOption","Component","Initialization","registerAutoCreateComponent","176","start","expressions","ExpressionRef","addExpressions","_","each","basicExpression","id","addExpression","Error","buildExpression","getExpression","parse","grammar","isString","buildStringExpression","isArray","ExpressionOptions","map","v","i","isRegExp","ExpressionRegExp","isFunction","ExpressionFunction","matchs","stringMatch","spliter","ref","occurrence","ExpressionConstant","ExpressionList","str","re","cloneRegExp","source","group","exec","push","214","ExpressionEndOfInput","215","success","indexOf","toString","216","Field","FieldQuery","FieldQueryOperation","FieldQueryValue","FieldQueryNumeric","FieldSimpleQuery","FieldName","FieldOperator","FieldOperatorNumeric","FieldValue","FieldValueNumeric","FieldValueString","FieldValueList","FieldValueStringList","FieldValueSeparator","FieldValueNotQuoted","NumberRange","include","Date","217","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","e","rejected","done","then","apply","__generator","body","verb","n","op","f","TypeError","y","t","call","label","ops","pop","trys","g","sent","throw","return","Symbol","iterator","Direction","magicBoxContainer","inputManager","suggestionListboxID","QueryUtils","createGuid","suggestionListboxClassName","root","resolveRoot","defaults","suggestionClass","selectedClass","undefined","timeout","on","handleMouseOver","handleMouseOut","suggestionsProcessor","QueryProcessor","resultPreviewsManager","ResultPreviewsManager","suggestionsListbox","buildSuggestionsContainer","append","el","addAccessibilityProperties","appendEmptySuggestionOption","get","currentSuggestions","enumerable","configurable","findClass","hasPreviews","suggestion","dom","classList","contains","target","parents","hasClass","processMouseSelection","targetParents","relatedTarget","isValid","relatedTargetParents","removeSelectedStatus","trigger","OmniboxEvents","querySuggestLoseFocus","moveDown","_a","move","Down","moveUp","Up","moveLeft","Left","moveRight","Right","selectAndReturnKeyboardFocusedElement","selected","keyboardFocusedElement","blur","clearKeyboardFocusedElement","receiveSuggestions","suggestions","results","status","_b","processQueries","ProcessingStatus","Overriden","updateSuggestions","clearSuggestions","empty","activeDescendant","hasSuggestions","expanded","displaySearchResultPreviewsForSuggestion","sort","a","forEach","modifyDomFromExistingSuggestion","createDomFromSuggestion","querySuggestRendered","htmlElementIsSuggestion","returnMoved","processKeyboardSelection","addSelectedStatus","updateSelectedSuggestion","focusedSuggestion","processKeyboardPreviewSelection","preview","className","role","ariaLabel","selectSuggestion","html","innerHTML","separator","suggestionLabel","onSelect","querySuggestSelection","found","direction","firstPreview","focusedPreviewElement","moveWithinPreview","previewElements","moveWithinSuggestion","currentlySelected","selectables","currentIndex","findAll","selectQuerySuggest","removeAttribute","newFocusedPreview","getElementInDirection","previewsOwner","HTMLElement","getElementsByClassName","elem","item","updateAreaSelectedIfDefined","querySuggestGetFocus","removeClass","getAttribute","addAccessibilityPropertiesForMagicBox","addAccessibilityPropertiesForInput","omniboxSelectables","SuggestionsManager","218","MagicBoxInstance","callback","requestAnimationFrame","lastSuggestions","isUndefined","displayedResult","clean","inputContainer","document","createElement","appendChild","InputManager","wordCompletion","onselect","firstSuggestionWithText","addSuggestions","ontabpress","existingValue","getValue","setResult","suggestionsContainer","suggestionsManager","selectableSuggestionClass","selectedSuggestionClass","suggestionTimeout","magicBoxClear","MagicBoxClear","setupHandler","toggleTabindexAndAriaHidden","setCursor","resultAt","onfocus","onkeydown","key","shouldMoveInSuggestions","KEYBOARD","ENTER","ESCAPE","onchangecursor","onkeyup","onmove","UP_ARROW","DOWN_ARROW","LEFT_ARROW","RIGHT_ARROW","selectedSuggestion","focusOnSuggestion","getSuggestions","addSelectEventHandlers","setWordCompletion","firstSuggestionText","onSuggestions","hasFocus","focus","getWordCompletion","doMagicBoxExport","219","escapeRegExp","highlightText","highligth","ignoreCase","matchClass","doNotMatchClass","escaped","stringRegex","notmatch","escapeText","classname","escape","MagicBoxUtils","484","parseOnce","parseMany","refResult","RefResult","all","getBestExpect","expect","subResult","subResults","subInput","substr","getLength","requiredOccurance","isNumber","last","endOfInput","485","lastResult","failAttempt","parent","getExpect","concat","path","first","initial","rest","486","parts","OptionResult","487","reduce","488","489","func","49","until","findParent","subResultFind","expects","groupBy","keys","bestResults","chain","sortBy","pluck","getHumanReadableExpect","getHumanReadable","join","JSON","stringify","before","after","toHtmlElement","createTextNode","nextIndex","clone","subresult","490","491","NestedQuery","NestedField","492","DateYear","DateMonth","DateDay","DateRange","DateRelative","DateRelativeTerm","DateRelativeNegative","DateRelativeNegativeRef","493","QueryExtension","QueryExtensionName","QueryExtensionArguments","QueryExtensionArgumentList","QueryExtensionArgument","QueryExtensionArgumentName","QueryExtensionArgumentValue","494","SubExpression","495","underlay","highlightContainer","ghostTextContainer","insertBefore","addAccessibilitiesProperties","isExpanded","updateInput","updateHighlight","updateWordCompletion","updateScroll","toLowerCase","createTextRange","range","select","selectionStart","setSelectionRange","defer","clientWidth","scrollWidth","style","visibility","scrollLeft","scrollTop","updateScrollDefer","keydown","keyup","oncut","onInputChange","onpaste","keyCode","which","TAB","tabPress","stopPropagation","preventDefault","handleLeftRightArrow","computeCssClassNameForType","496","racePromises","promises","__assign","assign","s","arguments","queries","asyncQueries","overrideIfProcessing","processedResults","query","accumulateResultsChronologically","buildProcessResults","Finished","waitForOverride","waitForTimeout","TimedOut","override","flatten","filter","orderedResults","output","items","499","Complete","500","loadSubGrammar","subGrammar","expressionDef","BasicExpression","Start","Expressions","ExpressionsList","Expression","OptionalSpaces","Empty","subGrammars","501","buildingResultPreviewsQuery","updateResultPreviewsManagerOptions","populateSearchResultPreviews","ResultPreviewsManagerEvents","502","owner","componentOptionsModel","ComponentOptionsModel","searchBox","processQueryOnClearVersusEmptyQuery","processQueryOnClearVersusSearchAsYouType","searchInterface","allowQueriesWithoutKeywords","warn","503","queryIsBlocked","queryIsCurrentlyBlocked","Defer","allowDuplicateQuery","isEmpty","add","556","MagicBox","Grammars","Instance","Utils","GrammarsImportedLocally","557","ExpressionsGrammar","558","previewHeaderText","previewHeaderFieldText","previewClass","previewsProcessor","lastDisplayedSuggestion","suggestionsPreviewContainer","focusedElement","previewSelectables","firstVerticalOffset","offsetTop","firstIndexOnNextRow","findIndex","previewSelectable","externalOptions","currentDelay","isQueryForSuggestionOngoing","arePreviewsForSuggestionCurrentlyDisplayed","getExternalOptions","lastDelay","resolveAfter","isNullOrUndefined","displayAfterDuration","lastQueriedSuggestion","getSearchResultPreviewsQuery","displaySuggestionPreviews","focusedIndex","getIncrementInDirection","numberOfResultsPerRow","setHasPreviews","shouldHavePreviews","initPreviewForSuggestions","revertPreviewForSuggestions","buildPreviewContainer","previewContainerId","remove","resultPreviewsContainer","optionsEventArgs","populateEventArgs","previewsQueries","appendSearchResultPreview","position","elementDom","appendSearchResultPreviews","previews","toggle","559","clearIcon","insertAfter","AccessibleButton","withElement","withLabel","withSelectAction","build","hasText","tabindex","560"],"mappings":"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","file":"Querybox.min__5f3280c404a1ee75a113.js","sourcesContent":["webpackJsonpCoveo__temporary([10],{\n\n/***/ 128:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Result_1 = __webpack_require__(49);\r\nvar Result_2 = __webpack_require__(49);\r\nexports.notWordStart = ' ()[],$@\\'\"';\r\nexports.notInWord = ' ()[],:';\r\nexports.Basic = {\r\n    basicExpressions: ['Word', 'DoubleQuoted'],\r\n    grammars: {\r\n        DoubleQuoted: '\"[NotDoubleQuote]\"',\r\n        NotDoubleQuote: /[^\"]*/,\r\n        SingleQuoted: \"'[NotSingleQuote]'\",\r\n        NotSingleQuote: /[^']*/,\r\n        Number: /-?(0|[1-9]\\d*)(\\.\\d+)?/,\r\n        Word: function (input, end, expression) {\r\n            var regex = new RegExp('[^' + exports.notWordStart.replace(/(.)/g, '\\\\$1') + '][^' + exports.notInWord.replace(/(.)/g, '\\\\$1') + ']*');\r\n            var groups = input.match(regex);\r\n            if (groups != null && groups.index != 0) {\r\n                groups = null;\r\n            }\r\n            var result = new Result_1.Result(groups != null ? groups[0] : null, expression, input);\r\n            if (result.isSuccess() && end && input.length > result.value.length) {\r\n                return new Result_2.EndOfInputResult(result);\r\n            }\r\n            return result;\r\n        }\r\n    }\r\n};\r\n\n\n/***/ }),\n\n/***/ 135:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__webpack_require__(560);\r\nvar QueryEvents_1 = __webpack_require__(11);\r\nvar StandaloneSearchInterfaceEvents_1 = __webpack_require__(95);\r\nvar GlobalExports_1 = __webpack_require__(3);\r\nvar Grammar_1 = __webpack_require__(176);\r\nvar MagicBox_1 = __webpack_require__(218);\r\nvar Assert_1 = __webpack_require__(5);\r\nvar Model_1 = __webpack_require__(18);\r\nvar QueryStateModel_1 = __webpack_require__(13);\r\nvar Strings_1 = __webpack_require__(6);\r\nvar Dom_1 = __webpack_require__(1);\r\nvar AnalyticsActionListMeta_1 = __webpack_require__(10);\r\nvar Component_1 = __webpack_require__(7);\r\nvar ComponentOptions_1 = __webpack_require__(8);\r\nvar Initialization_1 = __webpack_require__(2);\r\nvar QueryboxOptionsProcessing_1 = __webpack_require__(502);\r\nvar QueryboxQueryParameters_1 = __webpack_require__(503);\r\n/**\r\n * The `Querybox` component renders an input which the end user can interact with to enter and submit queries.\r\n *\r\n * When the end user submits a search request, the `Querybox` component triggers a query and logs the corresponding\r\n * usage analytics data.\r\n *\r\n * For technical reasons, it is necessary to instantiate this component on a `div` element rather than on an `input`\r\n * element.\r\n *\r\n * See also the [`Searchbox`]{@link Searchbox} component, which can automatically instantiate a `Querybox` along with an\r\n * optional [`SearchButton`]{@link SearchButton} component.\r\n */\r\nvar Querybox = /** @class */ (function (_super) {\r\n    __extends(Querybox, _super);\r\n    /**\r\n     * Creates a new `Querybox component`. Creates a new `Coveo.Magicbox` instance and wraps the Magicbox methods\r\n     * (`onblur`, `onsubmit` etc.). Binds event on `buildingQuery` and before redirection (for standalone box).\r\n     * @param element The HTMLElement on which to instantiate the component. This cannot be an HTMLInputElement for\r\n     * technical reasons.\r\n     * @param options The options for the `Querybox` component.\r\n     * @param bindings The bindings that the component requires to function normally. If not set, these will be\r\n     * automatically resolved (with a slower execution time).\r\n     */\r\n    function Querybox(element, options, bindings) {\r\n        var _this = _super.call(this, element, Querybox.ID, bindings) || this;\r\n        _this.element = element;\r\n        _this.options = options;\r\n        _this.bindings = bindings;\r\n        if (element instanceof HTMLInputElement) {\r\n            _this.logger.error('Querybox cannot be used on an HTMLInputElement');\r\n        }\r\n        _this.options = ComponentOptions_1.ComponentOptions.initComponentOptions(element, Querybox, options);\r\n        new QueryboxOptionsProcessing_1.QueryboxOptionsProcessing(_this).postProcess();\r\n        Dom_1.$$(_this.element).toggleClass('coveo-query-syntax-disabled', _this.options.enableQuerySyntax == false);\r\n        _this.magicBox = MagicBox_1.createMagicBox(element, new Grammar_1.Grammar('Query', {\r\n            Query: '[Term*][Spaces?]',\r\n            Term: '[Spaces?][Word]',\r\n            Spaces: / +/,\r\n            Word: /[^ ]+/\r\n        }), {\r\n            inline: true\r\n        });\r\n        var input = Dom_1.$$(_this.magicBox.element).find('input');\r\n        if (input) {\r\n            Dom_1.$$(input).setAttribute('aria-label', _this.options.placeholder || Strings_1.l('Search'));\r\n        }\r\n        _this.bind.onRootElement(QueryEvents_1.QueryEvents.buildingQuery, function (args) { return _this.handleBuildingQuery(args); });\r\n        _this.bind.onRootElement(StandaloneSearchInterfaceEvents_1.StandaloneSearchInterfaceEvents.beforeRedirect, function () { return _this.updateQueryState(); });\r\n        _this.bind.onQueryState(Model_1.MODEL_EVENTS.CHANGE_ONE, QueryStateModel_1.QUERY_STATE_ATTRIBUTES.Q, function (args) {\r\n            return _this.handleQueryStateChanged(args);\r\n        });\r\n        if (_this.options.enableSearchAsYouType) {\r\n            Dom_1.$$(_this.element).addClass('coveo-search-as-you-type');\r\n            _this.magicBox.onchange = function () {\r\n                _this.searchAsYouType();\r\n            };\r\n        }\r\n        _this.magicBox.onsubmit = function () {\r\n            _this.submit();\r\n        };\r\n        _this.magicBox.onblur = function () {\r\n            _this.updateQueryState();\r\n        };\r\n        _this.magicBox.onclear = function () {\r\n            _this.updateQueryState();\r\n            if (_this.options.triggerQueryOnClear) {\r\n                _this.usageAnalytics.logSearchEvent(AnalyticsActionListMeta_1.analyticsActionCauseList.searchboxClear, {});\r\n                _this.triggerNewQuery(false);\r\n            }\r\n        };\r\n        return _this;\r\n    }\r\n    /**\r\n     * Adds the current content of the input to the query and triggers a query if the current content of the input has\r\n     * changed since last submit.\r\n     *\r\n     * Also logs the `serachboxSubmit` event in the usage analytics.\r\n     */\r\n    Querybox.prototype.submit = function () {\r\n        this.magicBox.clearSuggestion();\r\n        this.updateQueryState();\r\n        this.usageAnalytics.logSearchEvent(AnalyticsActionListMeta_1.analyticsActionCauseList.searchboxSubmit, {});\r\n        this.triggerNewQuery(false);\r\n    };\r\n    /**\r\n     * Sets the content of the input.\r\n     *\r\n     * @param text The string to set in the input.\r\n     */\r\n    Querybox.prototype.setText = function (text) {\r\n        this.magicBox.setText(text);\r\n        this.updateQueryState();\r\n    };\r\n    /**\r\n     * Clears the content of the input.\r\n     *\r\n     * See also the [`triggerQueryOnClear`]{@link Querybox.options.triggerQueryOnClear} option.\r\n     */\r\n    Querybox.prototype.clear = function () {\r\n        this.magicBox.clear();\r\n    };\r\n    /**\r\n     * Gets the content of the input.\r\n     *\r\n     * @returns {string} The content of the input.\r\n     */\r\n    Querybox.prototype.getText = function () {\r\n        return this.magicBox.getText();\r\n    };\r\n    /**\r\n     * Gets the result from the input.\r\n     *\r\n     * @returns {Result} The result.\r\n     */\r\n    Querybox.prototype.getResult = function () {\r\n        return this.magicBox.getResult();\r\n    };\r\n    /**\r\n     * Gets the displayed result from the input.\r\n     *\r\n     * @returns {Result} The displayed result.\r\n     */\r\n    Querybox.prototype.getDisplayedResult = function () {\r\n        return this.magicBox.getDisplayedResult();\r\n    };\r\n    /**\r\n     * Gets the current cursor position in the input.\r\n     *\r\n     * @returns {number} The cursor position (index starts at 0).\r\n     */\r\n    Querybox.prototype.getCursor = function () {\r\n        return this.magicBox.getCursor();\r\n    };\r\n    /**\r\n     * Gets the result at cursor position.\r\n     *\r\n     * @param match {string | { (result): boolean }} The match condition.\r\n     *\r\n     * @returns {Result[]} The result.\r\n     */\r\n    Querybox.prototype.resultAtCursor = function (match) {\r\n        return this.magicBox.resultAtCursor(match);\r\n    };\r\n    Querybox.prototype.handleBuildingQuery = function (args) {\r\n        Assert_1.Assert.exists(args);\r\n        Assert_1.Assert.exists(args.queryBuilder);\r\n        this.updateQueryState();\r\n        this.lastQuery = this.magicBox.getText();\r\n        new QueryboxQueryParameters_1.QueryboxQueryParameters(this.options).addParameters(args.queryBuilder, this.lastQuery);\r\n    };\r\n    Querybox.prototype.triggerNewQuery = function (searchAsYouType) {\r\n        clearTimeout(this.searchAsYouTypeTimeout);\r\n        var text = this.magicBox.getText();\r\n        if (this.lastQuery != text && text != null) {\r\n            this.lastQuery = text;\r\n            this.queryController.executeQuery({\r\n                searchAsYouType: searchAsYouType,\r\n                logInActionsHistory: true\r\n            });\r\n        }\r\n    };\r\n    Querybox.prototype.updateQueryState = function () {\r\n        this.queryStateModel.set(QueryStateModel_1.QueryStateModel.attributesEnum.q, this.magicBox.getText());\r\n    };\r\n    Querybox.prototype.handleQueryStateChanged = function (args) {\r\n        Assert_1.Assert.exists(args);\r\n        var q = args.value;\r\n        if (q != this.magicBox.getText()) {\r\n            this.magicBox.setText(q);\r\n        }\r\n    };\r\n    Querybox.prototype.searchAsYouType = function () {\r\n        var _this = this;\r\n        clearTimeout(this.searchAsYouTypeTimeout);\r\n        this.searchAsYouTypeTimeout = window.setTimeout(function () {\r\n            _this.usageAnalytics.logSearchAsYouType(AnalyticsActionListMeta_1.analyticsActionCauseList.searchboxAsYouType, {});\r\n            _this.triggerNewQuery(true);\r\n        }, this.options.searchAsYouTypeDelay);\r\n    };\r\n    Querybox.ID = 'Querybox';\r\n    Querybox.doExport = function () {\r\n        GlobalExports_1.exportGlobally({\r\n            Querybox: Querybox,\r\n            QueryboxQueryParameters: QueryboxQueryParameters_1.QueryboxQueryParameters\r\n        });\r\n    };\r\n    /**\r\n     * The options for the Querybox.\r\n     * @componentOptions\r\n     */\r\n    Querybox.options = {\r\n        /**\r\n         * Whether to enable the search-as-you-type feature.\r\n         *\r\n         * **Note:** Enabling this feature can consume lots of queries per month (QPM), especially if the [`searchAsYouTypeDelay`]{@link Querybox.options.searchAsYouTypeDelay} option is set to a low value.\r\n         *\r\n         * Default value is `false`.\r\n         */\r\n        enableSearchAsYouType: ComponentOptions_1.ComponentOptions.buildBooleanOption({ defaultValue: false, section: 'Advanced Options' }),\r\n        /**\r\n         * If the [`enableSearchAsYouType`]{@link Querybox.options.enableSearchAsYouType} option is `true`, specifies how\r\n         * long to wait (in milliseconds) between each key press before triggering a new query.\r\n         *\r\n         * Default value is `50`. Minimum value is `0`\r\n         */\r\n        searchAsYouTypeDelay: ComponentOptions_1.ComponentOptions.buildNumberOption({ defaultValue: 50, min: 0, section: 'Advanced Options' }),\r\n        /**\r\n         * Specifies whether to interpret special query syntax (e.g., `@objecttype=message`) when the end user types\r\n         * a query in the `Querybox` (see\r\n         * [Coveo Query Syntax Reference](https://www.coveo.com/go?dest=adminhelp70&lcid=9&context=10005)). Setting this\r\n         * option to `true` also causes the `Querybox` to highlight any query syntax.\r\n         *\r\n         * Regardless of the value of this option, the Coveo Cloud REST Search API always interprets expressions surrounded\r\n         * by double quotes (`\"`) as exact phrase match requests.\r\n         *\r\n         * See also [`enableLowercaseOperators`]{@link Querybox.options.enableLowercaseOperators}.\r\n         *\r\n         * **Notes:**\r\n         * > * End user preferences can override the value you specify for this option.\r\n         * >\r\n         * > If the end user selects a value other than **Automatic** for the **Enable query syntax** setting (see\r\n         * > the [`enableQuerySyntax`]{@link ResultsPreferences.options.enableQuerySyntax} option of the\r\n         * > [`ResultsPreferences`]{@link ResultsPreferences} component), the end user preference takes precedence over this\r\n         * > option.\r\n         * >\r\n         * > * On-premises versions of the Coveo Search API require this option to be set to `true` in order to interpret\r\n         * > expressions surrounded by double quotes (`\"`) as exact phrase match requests.\r\n         *\r\n         * Default value is `false`.\r\n         */\r\n        enableQuerySyntax: ComponentOptions_1.ComponentOptions.buildBooleanOption({ defaultValue: false, section: 'Advanced Options' }),\r\n        /**\r\n         * Specifies whether to expand basic expression keywords containing wildcards characters (`*`) to the possible\r\n         * matching keywords in order to broaden the query (see\r\n         * [Using Wildcards in Queries](https://docs.coveo.com/en/1580/)).\r\n         *\r\n         * See also [`enableQuestionMarks`]{@link Querybox.options.enableQuestionMarks}.\r\n         *\r\n         *  **Note:**\r\n         * > If you are using an on-premises version of the Coveo Search API, you need to set the\r\n         * > [`enableQuerySyntax`]{@link Querybox.options.enableQuerySyntax} option to `true` to be able to set\r\n         * > `enableWildcards` to `true`.\r\n         *\r\n         * Default value is `false`.\r\n         */\r\n        enableWildcards: ComponentOptions_1.ComponentOptions.buildBooleanOption({ defaultValue: false, section: 'Advanced Options' }),\r\n        /**\r\n         * If [`enableWildcards`]{@link Querybox.options.enableWildcards} is `true`, specifies whether to expand basic\r\n         * expression keywords containing question mark characters (`?`) to the possible matching keywords in order to\r\n         * broaden the query (see\r\n         * [Using Wildcards in Queries](https://docs.coveo.com/en/1580/)).\r\n         *\r\n         * **Note:**\r\n         * > If you are using an on-premises version of the Coveo Search API, you also need to set the\r\n         * > [`enableQuerySyntax`]{@link Querybox.options.enableQuerySyntax} option to `true` in order to be able to set\r\n         * > `enableQuestionMarks` to `true`.\r\n         *\r\n         * Default value is `false`.\r\n         */\r\n        enableQuestionMarks: ComponentOptions_1.ComponentOptions.buildBooleanOption({ defaultValue: false, depend: 'enableWildcards' }),\r\n        /**\r\n         * If the [`enableQuerySyntax`]{@link Querybox.options.enableQuerySyntax} option is `true`, specifies whether to\r\n         * interpret the `AND`, `NOT`, `OR`, and `NEAR` keywords in the `Querybox` as query operators in the query, even if\r\n         * the end user types those keywords in lowercase.\r\n         *\r\n         * This option applies to all query operators (see\r\n         * [Coveo Query Syntax Reference](https://www.coveo.com/go?dest=adminhelp70&lcid=9&context=10005)).\r\n         *\r\n         * **Example:**\r\n         * > If this option and the `enableQuerySyntax` option are both `true`, the Coveo Platform interprets the `near`\r\n         * > keyword in a query such as `service center near me` as the `NEAR` query operator (not as a query term).\r\n         *\r\n         * > Otherwise, if the `enableQuerySyntax` option is `true` and this option is `false`, the end user has to type the\r\n         * > `NEAR` keyword in uppercase for the Coveo Platform to interpret it as a query operator.\r\n         *\r\n         * Default value is `false`.\r\n         */\r\n        enableLowercaseOperators: ComponentOptions_1.ComponentOptions.buildBooleanOption({ defaultValue: false, depend: 'enableQuerySyntax' }),\r\n        /**\r\n         * Whether to convert a basic expression containing at least a certain number of keywords (see the\r\n         * [`partialMatchKeywords`]{@link Querybox.options.partialMatchKeywords} option) to *partial match expression*, so\r\n         * that items containing at least a certain number of those keywords (see the\r\n         * [`partialMatchThreshold`]{@link Querybox.options.partialMatchThreshold} option) will match the expression.\r\n         *\r\n         * **Notes:**\r\n         * - Only the basic expression of the query (see [`q`]{@link q}) can be converted to a partial match expression.\r\n         * - When the [`enableQuerySyntax`]{@link Querybox.options.enableQuerySyntax} option is set to `true`, this feature has no effect if the basic expression contains advanced query syntax (field expressions, operators, etc.).\r\n         *\r\n         * @notSupportedIn salesforcefree\r\n         */\r\n        enablePartialMatch: ComponentOptions_1.ComponentOptions.buildBooleanOption({ defaultValue: false }),\r\n        /**\r\n         * The minimum number of keywords that need to be present in the basic expression to convert it to a partial match expression.\r\n         *\r\n         * See also the [`partialMatchThreshold`]{@link Querybox.options.partialMatchThreshold} option.\r\n         *\r\n         * **Notes:**\r\n         *\r\n         * - Repeated keywords count as a single keyword.\r\n         * - Thesaurus expansions count towards the `partialMatchKeywords` count.\r\n         * - Stemming expansions **do not** count towards the `partialMatchKeywords` count.\r\n         *\r\n         * @notSupportedIn salesforcefree\r\n         */\r\n        partialMatchKeywords: ComponentOptions_1.ComponentOptions.buildNumberOption({ defaultValue: 5, min: 1, depend: 'enablePartialMatch' }),\r\n        /**\r\n         * An absolute or relative value indicating the minimum number of partial match expression keywords an item must contain to match the expression.\r\n         *\r\n         * See also the [`partialMatchKeywords`]{@link Querybox.options.partialMatchKeywords} option.\r\n         *\r\n         * **Notes:**\r\n         * - A keyword and its stemming expansions count as a single keyword when evaluating whether an item meets the `partialMatchThreshold`.\r\n         * - When a relative `partialMatchThreshold` does not yield a whole integer, the fractional part is truncated (e.g., `3.6` becomes `3`).\r\n         *\r\n         * @notSupportedIn salesforcefree\r\n         */\r\n        partialMatchThreshold: ComponentOptions_1.ComponentOptions.buildStringOption({ defaultValue: '50%', depend: 'enablePartialMatch' }),\r\n        /**\r\n         * Whether to trigger a query when clearing the `Querybox`.\r\n         *\r\n         * Default value is `false`.\r\n         */\r\n        triggerQueryOnClear: ComponentOptions_1.ComponentOptions.buildBooleanOption({ defaultValue: false })\r\n    };\r\n    return Querybox;\r\n}(Component_1.Component));\r\nexports.Querybox = Querybox;\r\nInitialization_1.Initialization.registerAutoCreateComponent(Querybox);\r\n\n\n/***/ }),\n\n/***/ 176:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar ExpressionRef_1 = __webpack_require__(484);\r\nvar ExpressionOptions_1 = __webpack_require__(486);\r\nvar ExpressionRegExp_1 = __webpack_require__(488);\r\nvar _ = __webpack_require__(0);\r\nvar ExpressionFunction_1 = __webpack_require__(489);\r\nvar ExpressionConstant_1 = __webpack_require__(215);\r\nvar ExpressionList_1 = __webpack_require__(490);\r\nvar Grammar = /** @class */ (function () {\r\n    function Grammar(start, expressions) {\r\n        if (expressions === void 0) { expressions = {}; }\r\n        this.expressions = {};\r\n        this.start = new ExpressionRef_1.ExpressionRef(start, null, 'start', this);\r\n        this.addExpressions(expressions);\r\n    }\r\n    Grammar.prototype.addExpressions = function (expressions) {\r\n        var _this = this;\r\n        _.each(expressions, function (basicExpression, id) {\r\n            _this.addExpression(id, basicExpression);\r\n        });\r\n    };\r\n    Grammar.prototype.addExpression = function (id, basicExpression) {\r\n        if (id in this.expressions) {\r\n            throw new Error('Grammar already contain the id:' + id);\r\n        }\r\n        this.expressions[id] = Grammar.buildExpression(basicExpression, id, this);\r\n    };\r\n    Grammar.prototype.getExpression = function (id) {\r\n        return this.expressions[id];\r\n    };\r\n    Grammar.prototype.parse = function (value) {\r\n        return this.start.parse(value, true);\r\n    };\r\n    Grammar.buildExpression = function (value, id, grammar) {\r\n        var type = typeof value;\r\n        if (type == 'undefined') {\r\n            throw new Error('Invalid Expression: ' + value);\r\n        }\r\n        if (_.isString(value)) {\r\n            return this.buildStringExpression(value, id, grammar);\r\n        }\r\n        if (_.isArray(value)) {\r\n            return new ExpressionOptions_1.ExpressionOptions(_.map(value, function (v, i) { return new ExpressionRef_1.ExpressionRef(v, null, id + '_' + i, grammar); }), id);\r\n        }\r\n        if (_.isRegExp(value)) {\r\n            return new ExpressionRegExp_1.ExpressionRegExp(value, id, grammar);\r\n        }\r\n        if (_.isFunction(value)) {\r\n            return new ExpressionFunction_1.ExpressionFunction(value, id, grammar);\r\n        }\r\n        throw new Error('Invalid Expression: ' + value);\r\n    };\r\n    Grammar.buildStringExpression = function (value, id, grammar) {\r\n        var matchs = Grammar.stringMatch(value, Grammar.spliter);\r\n        var expressions = _.map(matchs, function (match, i) {\r\n            if (match[1]) {\r\n                // Ref\r\n                var ref = match[1];\r\n                var occurrence = match[3] ? Number(match[3]) : match[2] || null;\r\n                return new ExpressionRef_1.ExpressionRef(ref, occurrence, id + '_' + i, grammar);\r\n            }\r\n            else {\r\n                // Constant\r\n                return new ExpressionConstant_1.ExpressionConstant(match[4], id + '_' + i);\r\n            }\r\n        });\r\n        if (expressions.length == 1) {\r\n            var expression = expressions[0];\r\n            expression.id = id;\r\n            return expression;\r\n        }\r\n        else {\r\n            return new ExpressionList_1.ExpressionList(expressions, id);\r\n        }\r\n    };\r\n    Grammar.stringMatch = function (str, re) {\r\n        var groups = [];\r\n        var cloneRegExp = new RegExp(re.source, 'g');\r\n        var group = cloneRegExp.exec(str);\r\n        while (group !== null) {\r\n            groups.push(group);\r\n            group = cloneRegExp.exec(str);\r\n        }\r\n        return groups;\r\n    };\r\n    Grammar.spliter = /\\[(\\w+)(\\*|\\+|\\?|\\{([1-9][0-9]*)\\})?\\]|(.[^\\[]*)/;\r\n    return Grammar;\r\n}());\r\nexports.Grammar = Grammar;\r\n\n\n/***/ }),\n\n/***/ 214:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ExpressionEndOfInput = {\r\n    id: 'end of input',\r\n    parse: null\r\n};\r\n\n\n/***/ }),\n\n/***/ 215:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Result_1 = __webpack_require__(49);\r\nvar Result_2 = __webpack_require__(49);\r\nvar ExpressionConstant = /** @class */ (function () {\r\n    function ExpressionConstant(value, id) {\r\n        this.value = value;\r\n        this.id = id;\r\n    }\r\n    ExpressionConstant.prototype.parse = function (input, end) {\r\n        // the value must be at the start of the input\r\n        var success = input.indexOf(this.value) == 0;\r\n        var result = new Result_1.Result(success ? this.value : null, this, input);\r\n        // if is successful and we require the end but the length of parsed is\r\n        // lower than the input length, return a EndOfInputExpected Result\r\n        if (success && end && input.length > this.value.length) {\r\n            return new Result_2.EndOfInputResult(result);\r\n        }\r\n        return result;\r\n    };\r\n    ExpressionConstant.prototype.toString = function () {\r\n        return this.value;\r\n    };\r\n    return ExpressionConstant;\r\n}());\r\nexports.ExpressionConstant = ExpressionConstant;\r\n\n\n/***/ }),\n\n/***/ 216:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Basic_1 = __webpack_require__(128);\r\nvar Date_1 = __webpack_require__(492);\r\nexports.Field = {\r\n    basicExpressions: ['FieldSimpleQuery', 'FieldQuery', 'Field'],\r\n    grammars: {\r\n        FieldQuery: '[Field][OptionalSpaces][FieldQueryOperation]',\r\n        FieldQueryOperation: ['FieldQueryValue', 'FieldQueryNumeric'],\r\n        FieldQueryValue: '[FieldOperator][OptionalSpaces][FieldValue]',\r\n        FieldQueryNumeric: '[FieldOperatorNumeric][OptionalSpaces][FieldValueNumeric]',\r\n        FieldSimpleQuery: '[FieldName]:[OptionalSpaces][FieldValue]',\r\n        Field: '@[FieldName]',\r\n        FieldName: /[a-zA-Z][a-zA-Z0-9\\.\\_]*/,\r\n        FieldOperator: /==|=|<>/,\r\n        FieldOperatorNumeric: /<=|>=|<|>/,\r\n        FieldValue: ['DateRange', 'NumberRange', 'DateRelative', 'Date', 'Number', 'FieldValueList', 'FieldValueString'],\r\n        FieldValueNumeric: ['DateRelative', 'Date', 'Number'],\r\n        FieldValueString: ['DoubleQuoted', 'FieldValueNotQuoted'],\r\n        FieldValueList: '([FieldValueString][FieldValueStringList*])',\r\n        FieldValueStringList: '[FieldValueSeparator][FieldValueString]',\r\n        FieldValueSeparator: / *, */,\r\n        FieldValueNotQuoted: /[^ \\(\\)\\[\\],]+/,\r\n        NumberRange: '[Number][Spaces?]..[Spaces?][Number]'\r\n    },\r\n    include: [Date_1.Date, Basic_1.Basic]\r\n};\r\n\n\n/***/ }),\n\n/***/ 217:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar underscore_1 = __webpack_require__(0);\r\nvar OmniboxEvents_1 = __webpack_require__(33);\r\nvar Component_1 = __webpack_require__(7);\r\nvar Dom_1 = __webpack_require__(1);\r\nvar ResultPreviewsManager_1 = __webpack_require__(558);\r\nvar QueryProcessor_1 = __webpack_require__(496);\r\nvar QueryUtils_1 = __webpack_require__(21);\r\nvar Direction;\r\n(function (Direction) {\r\n    Direction[\"Up\"] = \"Up\";\r\n    Direction[\"Down\"] = \"Down\";\r\n    Direction[\"Left\"] = \"Left\";\r\n    Direction[\"Right\"] = \"Right\";\r\n})(Direction = exports.Direction || (exports.Direction = {}));\r\nvar SuggestionsManager = /** @class */ (function () {\r\n    function SuggestionsManager(element, magicBoxContainer, inputManager, options) {\r\n        var _this = this;\r\n        this.element = element;\r\n        this.magicBoxContainer = magicBoxContainer;\r\n        this.inputManager = inputManager;\r\n        this.suggestionListboxID = \"coveo-magicbox-suggestions-\" + QueryUtils_1.QueryUtils.createGuid();\r\n        this.suggestionListboxClassName = \"coveo-magicbox-suggestions\";\r\n        this.root = Component_1.Component.resolveRoot(element);\r\n        this.options = underscore_1.defaults(options, {\r\n            suggestionClass: 'magic-box-suggestion',\r\n            selectedClass: 'magic-box-selected'\r\n        });\r\n        // Put in a sane default, so as to not reject every suggestions if not set on initialization\r\n        if (this.options.timeout == undefined) {\r\n            this.options.timeout = 500;\r\n        }\r\n        Dom_1.$$(this.element).on('mouseover', function (e) {\r\n            _this.handleMouseOver(e);\r\n        });\r\n        Dom_1.$$(this.element).on('mouseout', function (e) {\r\n            _this.handleMouseOut(e);\r\n        });\r\n        this.suggestionsProcessor = new QueryProcessor_1.QueryProcessor({ timeout: this.options.timeout });\r\n        this.resultPreviewsManager = new ResultPreviewsManager_1.ResultPreviewsManager(element, {\r\n            selectedClass: this.options.selectedClass,\r\n            timeout: this.options.timeout\r\n        });\r\n        this.suggestionsListbox = this.buildSuggestionsContainer();\r\n        Dom_1.$$(this.element).append(this.suggestionsListbox.el);\r\n        this.addAccessibilityProperties();\r\n        this.appendEmptySuggestionOption();\r\n    }\r\n    Object.defineProperty(SuggestionsManager.prototype, \"hasSuggestions\", {\r\n        get: function () {\r\n            return this.currentSuggestions && this.currentSuggestions.length > 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SuggestionsManager.prototype, \"hasFocus\", {\r\n        get: function () {\r\n            return Dom_1.$$(this.element).findClass(this.options.selectedClass).length > 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SuggestionsManager.prototype, \"hasPreviews\", {\r\n        get: function () {\r\n            return this.resultPreviewsManager.hasPreviews;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SuggestionsManager.prototype, \"focusedSuggestion\", {\r\n        get: function () {\r\n            var _this = this;\r\n            return underscore_1.find(this.currentSuggestions, function (suggestion) { return suggestion.dom.classList.contains(_this.options.selectedClass); });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    SuggestionsManager.prototype.handleMouseOver = function (e) {\r\n        var target = Dom_1.$$(e.target);\r\n        var parents = target.parents(this.options.suggestionClass);\r\n        if (target.hasClass(this.options.suggestionClass)) {\r\n            this.processMouseSelection(target.el);\r\n        }\r\n        else if (parents.length > 0 && this.element.contains(parents[0])) {\r\n            this.processMouseSelection(parents[0]);\r\n        }\r\n    };\r\n    SuggestionsManager.prototype.handleMouseOut = function (e) {\r\n        var target = Dom_1.$$(e.target);\r\n        var targetParents = target.parents(this.options.suggestionClass);\r\n        //e.relatedTarget is not available if moving off the browser window or is an empty object `{}` when moving out of namespace in LockerService.\r\n        if (e.relatedTarget && Dom_1.$$(e.relatedTarget).isValid()) {\r\n            var relatedTargetParents = Dom_1.$$(e.relatedTarget).parents(this.options.suggestionClass);\r\n            if (target.hasClass(this.options.selectedClass) && !Dom_1.$$(e.relatedTarget).hasClass(this.options.suggestionClass)) {\r\n                this.removeSelectedStatus(target.el);\r\n            }\r\n            else if (relatedTargetParents.length == 0 && targetParents.length > 0) {\r\n                this.removeSelectedStatus(targetParents[0]);\r\n            }\r\n        }\r\n        else {\r\n            if (target.hasClass(this.options.selectedClass)) {\r\n                this.removeSelectedStatus(target.el);\r\n            }\r\n            else if (targetParents.length > 0) {\r\n                this.removeSelectedStatus(targetParents[0]);\r\n            }\r\n        }\r\n        Dom_1.$$(this.root).trigger(OmniboxEvents_1.OmniboxEvents.querySuggestLoseFocus);\r\n    };\r\n    SuggestionsManager.prototype.moveDown = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.move(Direction.Down)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    SuggestionsManager.prototype.moveUp = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.move(Direction.Up)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    SuggestionsManager.prototype.moveLeft = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.move(Direction.Left)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    SuggestionsManager.prototype.moveRight = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.move(Direction.Right)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    SuggestionsManager.prototype.selectAndReturnKeyboardFocusedElement = function () {\r\n        var selected = this.keyboardFocusedElement;\r\n        if (selected) {\r\n            Dom_1.$$(selected).trigger('keyboardSelect');\r\n            // By definition, once an element has been \"selected\" with the keyboard,\r\n            // it is not longer \"active\" since the event has been processed.\r\n            this.keyboardFocusedElement = null;\r\n            this.inputManager.blur();\r\n        }\r\n        return selected;\r\n    };\r\n    SuggestionsManager.prototype.clearKeyboardFocusedElement = function () {\r\n        this.keyboardFocusedElement = null;\r\n    };\r\n    SuggestionsManager.prototype.receiveSuggestions = function (suggestions) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a, results, status;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, this.suggestionsProcessor.processQueries(suggestions)];\r\n                    case 1:\r\n                        _a = _b.sent(), results = _a.results, status = _a.status;\r\n                        if (status === QueryProcessor_1.ProcessingStatus.Overriden) {\r\n                            return [2 /*return*/, []];\r\n                        }\r\n                        this.updateSuggestions(results);\r\n                        return [2 /*return*/, results];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    SuggestionsManager.prototype.clearSuggestions = function () {\r\n        this.updateSuggestions([]);\r\n    };\r\n    SuggestionsManager.prototype.updateSuggestions = function (suggestions) {\r\n        var _this = this;\r\n        this.suggestionsListbox.empty();\r\n        this.inputManager.activeDescendant = null;\r\n        this.currentSuggestions = suggestions;\r\n        Dom_1.$$(this.element).toggleClass('magic-box-hasSuggestion', this.hasSuggestions);\r\n        this.inputManager.expanded = this.hasSuggestions;\r\n        this.resultPreviewsManager.displaySearchResultPreviewsForSuggestion(null);\r\n        if (!this.hasSuggestions) {\r\n            this.appendEmptySuggestionOption();\r\n            Dom_1.$$(this.root).trigger(OmniboxEvents_1.OmniboxEvents.querySuggestLoseFocus);\r\n            return;\r\n        }\r\n        suggestions\r\n            .sort(function (a, b) { return (b.index || 0) - (a.index || 0); })\r\n            .forEach(function (suggestion) {\r\n            var dom = suggestion.dom ? _this.modifyDomFromExistingSuggestion(suggestion.dom) : _this.createDomFromSuggestion(suggestion);\r\n            dom.setAttribute('id', \"magic-box-suggestion-\" + underscore_1.indexOf(suggestions, suggestion));\r\n            dom.setAttribute('role', 'option');\r\n            dom.setAttribute('aria-selected', 'false');\r\n            dom.setAttribute('aria-label', dom.text());\r\n            dom['suggestion'] = suggestion;\r\n            _this.suggestionsListbox.append(dom.el);\r\n        });\r\n        Dom_1.$$(this.root).trigger(OmniboxEvents_1.OmniboxEvents.querySuggestRendered);\r\n    };\r\n    Object.defineProperty(SuggestionsManager.prototype, \"selectedSuggestion\", {\r\n        get: function () {\r\n            if (this.htmlElementIsSuggestion(this.keyboardFocusedElement)) {\r\n                return this.returnMoved(this.keyboardFocusedElement);\r\n            }\r\n            return null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    SuggestionsManager.prototype.processKeyboardSelection = function (suggestion) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.addSelectedStatus(suggestion);\r\n                        this.keyboardFocusedElement = suggestion;\r\n                        return [4 /*yield*/, this.updateSelectedSuggestion(this.focusedSuggestion)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    SuggestionsManager.prototype.processKeyboardPreviewSelection = function (preview) {\r\n        this.addSelectedStatus(preview);\r\n        this.keyboardFocusedElement = preview;\r\n    };\r\n    SuggestionsManager.prototype.processMouseSelection = function (suggestion) {\r\n        this.addSelectedStatus(suggestion);\r\n        this.updateSelectedSuggestion(this.focusedSuggestion);\r\n        this.keyboardFocusedElement = null;\r\n    };\r\n    SuggestionsManager.prototype.buildSuggestionsContainer = function () {\r\n        return Dom_1.$$('div', {\r\n            className: this.suggestionListboxClassName,\r\n            id: this.suggestionListboxID,\r\n            role: 'listbox',\r\n            ariaLabel: 'Search Suggestions'\r\n        });\r\n    };\r\n    SuggestionsManager.prototype.createDomFromSuggestion = function (suggestion) {\r\n        var _this = this;\r\n        var dom = Dom_1.$$('div', {\r\n            className: \"magic-box-suggestion \" + this.options.suggestionClass\r\n        });\r\n        suggestion.dom = dom.el;\r\n        dom.on('click', function () {\r\n            _this.selectSuggestion(suggestion);\r\n        });\r\n        dom.on('keyboardSelect', function () {\r\n            _this.selectSuggestion(suggestion);\r\n        });\r\n        if (suggestion.html) {\r\n            dom.el.innerHTML = suggestion.html;\r\n            return dom;\r\n        }\r\n        if (suggestion.text) {\r\n            dom.text(suggestion.text);\r\n            return dom;\r\n        }\r\n        if (suggestion.separator) {\r\n            dom.addClass('magic-box-suggestion-seperator');\r\n            var suggestionLabel = Dom_1.$$('div', {\r\n                className: 'magic-box-suggestion-seperator-label'\r\n            }, suggestion.separator);\r\n            dom.append(suggestionLabel.el);\r\n            return dom;\r\n        }\r\n        return dom;\r\n    };\r\n    SuggestionsManager.prototype.selectSuggestion = function (suggestion) {\r\n        suggestion.onSelect();\r\n        Dom_1.$$(this.root).trigger(OmniboxEvents_1.OmniboxEvents.querySuggestSelection, { suggestion: suggestion.text });\r\n    };\r\n    SuggestionsManager.prototype.appendEmptySuggestionOption = function () {\r\n        // Accessibility tools reports that a listbox element must always have at least one child with an option\r\n        // Even if there is no suggestions to show.\r\n        this.suggestionsListbox.append(Dom_1.$$('div', { role: 'option' }).el);\r\n    };\r\n    SuggestionsManager.prototype.modifyDomFromExistingSuggestion = function (dom) {\r\n        // this need to be done if the selection is in cache and the dom is set in the suggestion\r\n        this.removeSelectedStatus(dom);\r\n        var found = dom.classList.contains(this.options.suggestionClass) ? dom : Dom_1.$$(dom).find('.' + this.options.suggestionClass);\r\n        this.removeSelectedStatus(found);\r\n        return Dom_1.$$(dom);\r\n    };\r\n    SuggestionsManager.prototype.move = function (direction) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var firstPreview;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!this.resultPreviewsManager.focusedPreviewElement) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.moveWithinPreview(direction)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                    case 2:\r\n                        if (direction === Direction.Right || direction === Direction.Left) {\r\n                            firstPreview = this.resultPreviewsManager.previewElements[0];\r\n                            if (firstPreview) {\r\n                                this.processKeyboardPreviewSelection(firstPreview);\r\n                                return [2 /*return*/];\r\n                            }\r\n                        }\r\n                        return [4 /*yield*/, this.moveWithinSuggestion(direction)];\r\n                    case 3:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    SuggestionsManager.prototype.moveWithinSuggestion = function (direction) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var currentlySelected, selectables, currentIndex, index;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        currentlySelected = Dom_1.$$(this.element).find(\".\" + this.options.selectedClass);\r\n                        selectables = Dom_1.$$(this.element).findAll(\".\" + this.options.suggestionClass);\r\n                        currentIndex = underscore_1.indexOf(selectables, currentlySelected);\r\n                        index = direction === Direction.Up ? currentIndex - 1 : currentIndex + 1;\r\n                        index = (index + selectables.length) % selectables.length;\r\n                        return [4 /*yield*/, this.selectQuerySuggest(selectables[index])];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    SuggestionsManager.prototype.selectQuerySuggest = function (suggestion) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!suggestion) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.processKeyboardSelection(suggestion)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        this.keyboardFocusedElement = null;\r\n                        this.inputManager.input.removeAttribute('aria-activedescendant');\r\n                        _a.label = 3;\r\n                    case 3: return [2 /*return*/, suggestion];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    SuggestionsManager.prototype.moveWithinPreview = function (direction) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var newFocusedPreview;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        newFocusedPreview = this.resultPreviewsManager.getElementInDirection(direction);\r\n                        if (!!newFocusedPreview) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.selectQuerySuggest(this.resultPreviewsManager.previewsOwner.dom)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                    case 2:\r\n                        this.processKeyboardPreviewSelection(newFocusedPreview);\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    SuggestionsManager.prototype.returnMoved = function (selected) {\r\n        if (selected) {\r\n            if (selected['suggestion']) {\r\n                return selected['suggestion'];\r\n            }\r\n            if (selected['no-text-suggestion']) {\r\n                return null;\r\n            }\r\n            if (selected instanceof HTMLElement) {\r\n                return {\r\n                    text: Dom_1.$$(selected).text()\r\n                };\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    SuggestionsManager.prototype.addSelectedStatus = function (element) {\r\n        var selected = this.element.getElementsByClassName(this.options.selectedClass);\r\n        for (var i = 0; i < selected.length; i++) {\r\n            var elem = selected.item(i);\r\n            this.removeSelectedStatus(elem);\r\n        }\r\n        Dom_1.$$(element).addClass(this.options.selectedClass);\r\n        this.updateAreaSelectedIfDefined(element, 'true');\r\n    };\r\n    SuggestionsManager.prototype.updateSelectedSuggestion = function (suggestion) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        Dom_1.$$(this.root).trigger(OmniboxEvents_1.OmniboxEvents.querySuggestGetFocus, {\r\n                            suggestion: suggestion.text\r\n                        });\r\n                        return [4 /*yield*/, this.resultPreviewsManager.displaySearchResultPreviewsForSuggestion(suggestion)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    SuggestionsManager.prototype.removeSelectedStatus = function (suggestion) {\r\n        Dom_1.$$(suggestion).removeClass(this.options.selectedClass);\r\n        this.updateAreaSelectedIfDefined(suggestion, 'false');\r\n    };\r\n    SuggestionsManager.prototype.updateAreaSelectedIfDefined = function (element, value) {\r\n        if (Dom_1.$$(element).getAttribute('aria-selected')) {\r\n            this.inputManager.activeDescendant = element;\r\n            Dom_1.$$(element).setAttribute('aria-selected', value);\r\n        }\r\n    };\r\n    SuggestionsManager.prototype.addAccessibilityProperties = function () {\r\n        this.addAccessibilityPropertiesForMagicBox();\r\n        this.addAccessibilityPropertiesForInput();\r\n    };\r\n    SuggestionsManager.prototype.addAccessibilityPropertiesForMagicBox = function () {\r\n        var magicBox = Dom_1.$$(this.magicBoxContainer);\r\n        magicBox.setAttribute('role', 'search');\r\n        magicBox.setAttribute('aria-haspopup', 'listbox');\r\n    };\r\n    SuggestionsManager.prototype.addAccessibilityPropertiesForInput = function () {\r\n        var input = Dom_1.$$(this.inputManager.input);\r\n        this.inputManager.activeDescendant = null;\r\n        this.inputManager.expanded = false;\r\n        input.setAttribute('aria-owns', this.suggestionListboxID);\r\n        input.setAttribute('aria-controls', this.suggestionListboxID);\r\n    };\r\n    SuggestionsManager.prototype.htmlElementIsSuggestion = function (selected) {\r\n        var omniboxSelectables = Dom_1.$$(this.element).findAll(\".\" + this.options.suggestionClass);\r\n        return underscore_1.indexOf(omniboxSelectables, selected) > -1;\r\n    };\r\n    return SuggestionsManager;\r\n}());\r\nexports.SuggestionsManager = SuggestionsManager;\r\n\n\n/***/ }),\n\n/***/ 218:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar underscore_1 = __webpack_require__(0);\r\nvar Core_1 = __webpack_require__(20);\r\nvar Dom_1 = __webpack_require__(1);\r\nvar doMagicBoxExport_1 = __webpack_require__(556);\r\nvar InputManager_1 = __webpack_require__(495);\r\nvar MagicBoxClear_1 = __webpack_require__(559);\r\nvar SuggestionsManager_1 = __webpack_require__(217);\r\nvar MagicBoxInstance = /** @class */ (function () {\r\n    function MagicBoxInstance(element, grammar, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var _this = this;\r\n        this.element = element;\r\n        this.grammar = grammar;\r\n        this.options = options;\r\n        this.lastSuggestions = [];\r\n        if (underscore_1.isUndefined(this.options.inline)) {\r\n            this.options.inline = false;\r\n        }\r\n        Dom_1.$$(element).addClass('magic-box');\r\n        if (this.options.inline) {\r\n            Dom_1.$$(element).addClass('magic-box-inline');\r\n        }\r\n        this.result = this.grammar.parse('');\r\n        this.displayedResult = this.result.clean();\r\n        var inputContainer = Dom_1.$$(element).find('.magic-box-input');\r\n        if (!inputContainer) {\r\n            inputContainer = document.createElement('div');\r\n            inputContainer.className = 'magic-box-input';\r\n            element.appendChild(inputContainer);\r\n        }\r\n        this.inputManager = new InputManager_1.InputManager(inputContainer, function (text, wordCompletion) {\r\n            if (!wordCompletion) {\r\n                _this.setText(text);\r\n                _this.addSuggestions();\r\n                _this.onchange && _this.onchange();\r\n            }\r\n            else {\r\n                _this.setText(text);\r\n                _this.onselect && _this.onselect(_this.firstSuggestionWithText);\r\n            }\r\n        }, this);\r\n        this.inputManager.ontabpress = function () {\r\n            _this.ontabpress && _this.ontabpress();\r\n        };\r\n        var existingValue = this.inputManager.getValue();\r\n        if (existingValue) {\r\n            this.displayedResult.input = existingValue;\r\n        }\r\n        this.inputManager.setResult(this.displayedResult);\r\n        var suggestionsContainer = document.createElement('div');\r\n        suggestionsContainer.className = 'magic-box-suggestions';\r\n        this.element.appendChild(suggestionsContainer);\r\n        this.suggestionsManager = new SuggestionsManager_1.SuggestionsManager(suggestionsContainer, this.element, this.inputManager, {\r\n            suggestionClass: this.options.selectableSuggestionClass,\r\n            selectedClass: this.options.selectedSuggestionClass,\r\n            timeout: this.options.suggestionTimeout\r\n        });\r\n        this.magicBoxClear = new MagicBoxClear_1.MagicBoxClear(this);\r\n        this.setupHandler();\r\n    }\r\n    Object.defineProperty(MagicBoxInstance.prototype, \"firstSuggestionWithText\", {\r\n        get: function () {\r\n            return underscore_1.find(this.lastSuggestions, function (suggestion) { return suggestion.text; });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MagicBoxInstance.prototype, \"firstSuggestionText\", {\r\n        get: function () {\r\n            var firstSuggestionWithText = this.firstSuggestionWithText;\r\n            return firstSuggestionWithText ? firstSuggestionWithText.text : '';\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    MagicBoxInstance.prototype.getResult = function () {\r\n        return this.result;\r\n    };\r\n    MagicBoxInstance.prototype.getDisplayedResult = function () {\r\n        return this.displayedResult;\r\n    };\r\n    MagicBoxInstance.prototype.setText = function (text) {\r\n        Dom_1.$$(this.element).toggleClass('magic-box-notEmpty', text.length > 0);\r\n        this.magicBoxClear.toggleTabindexAndAriaHidden(text.length > 0);\r\n        this.result = this.grammar.parse(text);\r\n        this.displayedResult = this.result.clean();\r\n        this.inputManager.setResult(this.displayedResult);\r\n    };\r\n    MagicBoxInstance.prototype.setCursor = function (index) {\r\n        this.inputManager.setCursor(index);\r\n    };\r\n    MagicBoxInstance.prototype.getCursor = function () {\r\n        return this.inputManager.getCursor();\r\n    };\r\n    MagicBoxInstance.prototype.resultAtCursor = function (match) {\r\n        return this.displayedResult.resultAt(this.getCursor(), match);\r\n    };\r\n    MagicBoxInstance.prototype.setupHandler = function () {\r\n        var _this = this;\r\n        this.inputManager.onblur = function () {\r\n            Dom_1.$$(_this.element).removeClass('magic-box-hasFocus');\r\n            _this.onblur && _this.onblur();\r\n            if (!_this.options.inline) {\r\n                _this.clearSuggestion();\r\n            }\r\n        };\r\n        this.inputManager.onfocus = function () {\r\n            Dom_1.$$(_this.element).addClass('magic-box-hasFocus');\r\n            _this.addSuggestions();\r\n            _this.onfocus && _this.onfocus();\r\n        };\r\n        this.inputManager.onkeydown = function (key) {\r\n            if (_this.shouldMoveInSuggestions(key)) {\r\n                return false;\r\n            }\r\n            if (key === Core_1.KEYBOARD.ENTER) {\r\n                var suggestion = _this.suggestionsManager.selectAndReturnKeyboardFocusedElement();\r\n                if (suggestion == null) {\r\n                    _this.onsubmit && _this.onsubmit();\r\n                }\r\n                return false;\r\n            }\r\n            else if (key === Core_1.KEYBOARD.ESCAPE) {\r\n                _this.clearSuggestion();\r\n                _this.blur();\r\n            }\r\n            else {\r\n                _this.suggestionsManager.clearKeyboardFocusedElement();\r\n            }\r\n            return true;\r\n        };\r\n        this.inputManager.onchangecursor = function () {\r\n            _this.addSuggestions();\r\n        };\r\n        this.inputManager.onkeyup = function (key) {\r\n            _this.onmove && _this.onmove();\r\n            if (!_this.shouldMoveInSuggestions(key)) {\r\n                return true;\r\n            }\r\n            switch (key) {\r\n                case Core_1.KEYBOARD.UP_ARROW:\r\n                    _this.suggestionsManager.moveUp();\r\n                    break;\r\n                case Core_1.KEYBOARD.DOWN_ARROW:\r\n                    _this.suggestionsManager.moveDown();\r\n                    break;\r\n                case Core_1.KEYBOARD.LEFT_ARROW:\r\n                    _this.suggestionsManager.moveLeft();\r\n                    break;\r\n                case Core_1.KEYBOARD.RIGHT_ARROW:\r\n                    _this.suggestionsManager.moveRight();\r\n                    break;\r\n            }\r\n            if (_this.suggestionsManager.selectedSuggestion) {\r\n                _this.focusOnSuggestion(_this.suggestionsManager.selectedSuggestion);\r\n            }\r\n            _this.onchange && _this.onchange();\r\n            return false;\r\n        };\r\n    };\r\n    MagicBoxInstance.prototype.addSuggestions = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var suggestions;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.suggestionsManager.receiveSuggestions(this.getSuggestions != null ? this.getSuggestions() : [])];\r\n                    case 1:\r\n                        suggestions = _a.sent();\r\n                        this.addSelectEventHandlers(suggestions);\r\n                        this.inputManager.setWordCompletion(this.firstSuggestionText);\r\n                        this.onSuggestions(suggestions);\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    MagicBoxInstance.prototype.shouldMoveInSuggestions = function (key) {\r\n        switch (key) {\r\n            case Core_1.KEYBOARD.UP_ARROW:\r\n            case Core_1.KEYBOARD.DOWN_ARROW:\r\n                return true;\r\n            case Core_1.KEYBOARD.LEFT_ARROW:\r\n            case Core_1.KEYBOARD.RIGHT_ARROW:\r\n                if (this.suggestionsManager.hasFocus && this.suggestionsManager.hasPreviews) {\r\n                    return true;\r\n                }\r\n        }\r\n        return false;\r\n    };\r\n    MagicBoxInstance.prototype.addSelectEventHandlers = function (suggestions) {\r\n        var _this = this;\r\n        underscore_1.each(suggestions, function (suggestion) {\r\n            if (suggestion.onSelect == null && suggestion.text != null) {\r\n                suggestion.onSelect = function () {\r\n                    _this.setText(suggestion.text);\r\n                    _this.onselect && _this.onselect(suggestion);\r\n                };\r\n            }\r\n        });\r\n    };\r\n    MagicBoxInstance.prototype.focus = function () {\r\n        Dom_1.$$(this.element).addClass('magic-box-hasFocus');\r\n        this.inputManager.focus();\r\n    };\r\n    MagicBoxInstance.prototype.blur = function () {\r\n        this.inputManager.blur();\r\n    };\r\n    MagicBoxInstance.prototype.clearSuggestion = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                this.inputManager.setWordCompletion(null);\r\n                this.suggestionsManager.clearSuggestions();\r\n                this.onSuggestions([]);\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    MagicBoxInstance.prototype.focusOnSuggestion = function (suggestion) {\r\n        if (suggestion == null || suggestion.text == null) {\r\n            this.inputManager.setResult(this.displayedResult, this.firstSuggestionText);\r\n        }\r\n        else {\r\n            this.inputManager.setResult(this.grammar.parse(suggestion.text).clean(), suggestion.text);\r\n        }\r\n    };\r\n    MagicBoxInstance.prototype.getText = function () {\r\n        return this.inputManager.getValue();\r\n    };\r\n    MagicBoxInstance.prototype.getWordCompletion = function () {\r\n        return this.inputManager.getWordCompletion();\r\n    };\r\n    MagicBoxInstance.prototype.clear = function () {\r\n        this.setText('');\r\n        this.clearSuggestion();\r\n        this.focus();\r\n        this.onclear && this.onclear();\r\n    };\r\n    MagicBoxInstance.prototype.hasSuggestions = function () {\r\n        return this.suggestionsManager.hasSuggestions;\r\n    };\r\n    return MagicBoxInstance;\r\n}());\r\nexports.MagicBoxInstance = MagicBoxInstance;\r\nfunction createMagicBox(element, grammar, options) {\r\n    return new MagicBoxInstance(element, grammar, options);\r\n}\r\nexports.createMagicBox = createMagicBox;\r\nfunction requestAnimationFrame(callback) {\r\n    if ('requestAnimationFrame' in window) {\r\n        return window.requestAnimationFrame(callback);\r\n    }\r\n    return setTimeout(callback);\r\n}\r\nexports.requestAnimationFrame = requestAnimationFrame;\r\ndoMagicBoxExport_1.doMagicBoxExport();\r\n\n\n/***/ }),\n\n/***/ 219:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar _ = __webpack_require__(0);\r\nvar MagicBoxUtils = /** @class */ (function () {\r\n    function MagicBoxUtils() {\r\n    }\r\n    MagicBoxUtils.escapeRegExp = function (str) {\r\n        return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\r\n    };\r\n    MagicBoxUtils.highlightText = function (text, highligth, ignoreCase, matchClass, doNotMatchClass) {\r\n        var _this = this;\r\n        if (ignoreCase === void 0) { ignoreCase = false; }\r\n        if (matchClass === void 0) { matchClass = 'magic-box-hightlight'; }\r\n        if (doNotMatchClass === void 0) { doNotMatchClass = ''; }\r\n        if (highligth.length == 0) {\r\n            return text;\r\n        }\r\n        var escaped = this.escapeRegExp(highligth);\r\n        var stringRegex = '(' + escaped + ')|(.*?(?=' + escaped + ')|.+)';\r\n        var regex = new RegExp(stringRegex, ignoreCase ? 'gi' : 'g');\r\n        return text.replace(regex, function (text, match, notmatch) { return _this.escapeText(match != null ? matchClass : doNotMatchClass, text); });\r\n    };\r\n    MagicBoxUtils.escapeText = function (classname, text) {\r\n        return \"<span class=\\\"\" + classname + \"\\\">\" + _.escape(text) + \"</span>\";\r\n    };\r\n    return MagicBoxUtils;\r\n}());\r\nexports.MagicBoxUtils = MagicBoxUtils;\r\n\n\n/***/ }),\n\n/***/ 484:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Result_1 = __webpack_require__(49);\r\nvar RefResult_1 = __webpack_require__(485);\r\nvar ExpressionEndOfInput_1 = __webpack_require__(214);\r\nvar _ = __webpack_require__(0);\r\nvar ExpressionRef = /** @class */ (function () {\r\n    function ExpressionRef(ref, occurrence, id, grammar) {\r\n        this.ref = ref;\r\n        this.occurrence = occurrence;\r\n        this.id = id;\r\n        this.grammar = grammar;\r\n    }\r\n    ExpressionRef.prototype.parse = function (input, end) {\r\n        var ref = this.grammar.getExpression(this.ref);\r\n        if (ref == null) {\r\n            throw new Error('Expression not found:' + this.ref);\r\n        }\r\n        if (this.occurrence == '?' || this.occurrence == null) {\r\n            return this.parseOnce(input, end, ref);\r\n        }\r\n        else {\r\n            return this.parseMany(input, end, ref);\r\n        }\r\n    };\r\n    ExpressionRef.prototype.parseOnce = function (input, end, ref) {\r\n        var refResult = ref.parse(input, end);\r\n        var success = refResult.isSuccess();\r\n        if (!success && this.occurrence == '?') {\r\n            if (end) {\r\n                // if end was found\r\n                if (input.length == 0) {\r\n                    return new RefResult_1.RefResult([], this, input, refResult);\r\n                }\r\n                // if end was not found and all error expression are EndOfInput, reparse with end = false.\r\n                if (_.all(refResult.getBestExpect(), function (expect) { return expect.expression == ExpressionEndOfInput_1.ExpressionEndOfInput; })) {\r\n                    return new RefResult_1.RefResult([new Result_1.Result(null, ExpressionEndOfInput_1.ExpressionEndOfInput, input)], this, input, refResult);\r\n                }\r\n                return refResult;\r\n            }\r\n            // the ref is not required and it do not need to end the input\r\n            return new RefResult_1.RefResult([], this, input, null);\r\n        }\r\n        return new RefResult_1.RefResult([refResult], this, input, success ? null : refResult);\r\n    };\r\n    ExpressionRef.prototype.parseMany = function (input, end, ref) {\r\n        var subResults = [];\r\n        var subResult;\r\n        var subInput = input;\r\n        var success;\r\n        // try to parse until it do not match, do not manage the end yet\r\n        do {\r\n            subResult = ref.parse(subInput, false);\r\n            success = subResult.isSuccess();\r\n            if (success) {\r\n                subResults.push(subResult);\r\n                subInput = subInput.substr(subResult.getLength());\r\n            }\r\n        } while (success && subResult.input != subInput);\r\n        // minimal occurance of a ref\r\n        var requiredOccurance = _.isNumber(this.occurrence) ? this.occurrence : this.occurrence == '+' ? 1 : 0;\r\n        // if the minimal occurance is not reached add the fail result to the list\r\n        if (subResults.length < requiredOccurance) {\r\n            subResults.push(subResult);\r\n        }\r\n        else if (end) {\r\n            // if there is at least one match, check if the last match is at the end\r\n            if (subResults.length > 0) {\r\n                var last = _.last(subResults);\r\n                subResult = ref.parse(last.input, true);\r\n                if (subResult.isSuccess()) {\r\n                    // if successful, replace the last subResult by the one with end\r\n                    subResults[subResults.length - 1] = subResult;\r\n                }\r\n                else {\r\n                    // if not successful, we keep the last successful result and we add a endOfInputExpected Result after it\r\n                    subResults.push(new Result_1.Result(null, ExpressionEndOfInput_1.ExpressionEndOfInput, last.input.substr(last.getLength())));\r\n                    // we parse back the last with the length of the successful Result (at the same place we put the endOfInputExpected) and put it in failAttempt\r\n                    subResult = ref.parse(last.input.substr(last.getLength()), true);\r\n                }\r\n            }\r\n            else if (input.length != 0) {\r\n                // if there is no result at all and we are not at the end, return a endOfInputExpected Result\r\n                var endOfInput = new Result_1.Result(null, ExpressionEndOfInput_1.ExpressionEndOfInput, input);\r\n                return new RefResult_1.RefResult([endOfInput], this, input, subResult);\r\n            }\r\n        }\r\n        return new RefResult_1.RefResult(subResults, this, input, subResult);\r\n    };\r\n    ExpressionRef.prototype.toString = function () {\r\n        return this.id;\r\n    };\r\n    return ExpressionRef;\r\n}());\r\nexports.ExpressionRef = ExpressionRef;\r\n\n\n/***/ }),\n\n/***/ 485:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Result_1 = __webpack_require__(49);\r\nvar _ = __webpack_require__(0);\r\nvar RefResult = /** @class */ (function (_super) {\r\n    __extends(RefResult, _super);\r\n    function RefResult(results, expression, input, lastResult) {\r\n        var _this = _super.call(this, results, expression, input) || this;\r\n        _this.expression = expression;\r\n        _this.input = input;\r\n        if (_.last(results) != lastResult) {\r\n            _this.failAttempt = lastResult;\r\n            if (_this.failAttempt != null) {\r\n                _this.failAttempt.parent = _this;\r\n            }\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Return all fail result.\r\n     */\r\n    RefResult.prototype.getExpect = function () {\r\n        var expect = _super.prototype.getExpect.call(this);\r\n        // add the failAttempt to the expect\r\n        if (this.failAttempt != null) {\r\n            return expect.concat(this.failAttempt.getExpect());\r\n        }\r\n        return expect;\r\n    };\r\n    /**\r\n     * Clean the result to have the most relevant result. If the result is successful just return a clone of it.\r\n     */\r\n    RefResult.prototype.clean = function (path) {\r\n        // if there is no failAttempt, we will use the default clean\r\n        if (this.failAttempt != null && (path != null || !this.isSuccess())) {\r\n            path = path || _.last(this.getBestExpect()).path(this);\r\n            var next = _.first(path);\r\n            // if the next is in the subResults, not the failAttempt, do the default clean;\r\n            if (next != null && next == this.failAttempt) {\r\n                var last = _.last(this.subResults);\r\n                // if the last is not successful, remove it because we want the failAttempt path\r\n                var subResults = _.map(last != null && last.isSuccess() ? this.subResults : _.initial(this.subResults), function (subResult) {\r\n                    return subResult.clean();\r\n                });\r\n                subResults.push(next.clean(_.rest(path)));\r\n                return new Result_1.Result(subResults, this.expression, this.input);\r\n            }\r\n        }\r\n        return _super.prototype.clean.call(this, path);\r\n    };\r\n    return RefResult;\r\n}(Result_1.Result));\r\nexports.RefResult = RefResult;\r\n\n\n/***/ }),\n\n/***/ 486:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar OptionResult_1 = __webpack_require__(487);\r\nvar ExpressionOptions = /** @class */ (function () {\r\n    function ExpressionOptions(parts, id) {\r\n        this.parts = parts;\r\n        this.id = id;\r\n    }\r\n    ExpressionOptions.prototype.parse = function (input, end) {\r\n        var failAttempt = [];\r\n        for (var i = 0; i < this.parts.length; i++) {\r\n            var subResult = this.parts[i].parse(input, end);\r\n            if (subResult.isSuccess()) {\r\n                return new OptionResult_1.OptionResult(subResult, this, input, failAttempt);\r\n            }\r\n            failAttempt.push(subResult);\r\n        }\r\n        return new OptionResult_1.OptionResult(null, this, input, failAttempt);\r\n    };\r\n    ExpressionOptions.prototype.toString = function () {\r\n        return this.id;\r\n    };\r\n    return ExpressionOptions;\r\n}());\r\nexports.ExpressionOptions = ExpressionOptions;\r\n\n\n/***/ }),\n\n/***/ 487:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Result_1 = __webpack_require__(49);\r\nvar _ = __webpack_require__(0);\r\nvar OptionResult = /** @class */ (function (_super) {\r\n    __extends(OptionResult, _super);\r\n    function OptionResult(result, expression, input, failAttempt) {\r\n        var _this = _super.call(this, result != null ? [result] : null, expression, input) || this;\r\n        _this.result = result;\r\n        _this.expression = expression;\r\n        _this.input = input;\r\n        _this.failAttempt = failAttempt;\r\n        _.forEach(_this.failAttempt, function (subResult) {\r\n            subResult.parent = _this;\r\n        });\r\n        return _this;\r\n    }\r\n    /**\r\n     * Return all fail result.\r\n     */\r\n    OptionResult.prototype.getExpect = function () {\r\n        var _this = this;\r\n        var expect = [];\r\n        if (this.result != null) {\r\n            expect = this.result.getExpect();\r\n        }\r\n        expect = _.reduce(this.failAttempt, function (expect, result) { return expect.concat(result.getExpect()); }, expect);\r\n        if (expect.length > 0 && _.all(expect, function (result) { return result.input == _this.input; })) {\r\n            return [this];\r\n        }\r\n        return expect;\r\n    };\r\n    /**\r\n     * Clean the result to have the most relevant result. If the result is successful just return a clone of it.\r\n     */\r\n    OptionResult.prototype.clean = function (path) {\r\n        if (path != null || !this.isSuccess()) {\r\n            // Result will be a ref. We skip it for cleaner tree.\r\n            path = _.rest(path || _.last(this.getBestExpect()).path(this));\r\n            // next can be Result or one of the failAttempt. In both case we have only one child\r\n            var next = _.first(path);\r\n            if (next == null) {\r\n                return new Result_1.Result(null, this.expression, this.input);\r\n            }\r\n            return new Result_1.Result([next.clean(_.rest(path))], this.expression, this.input);\r\n        }\r\n        // Result will be a ref. We skip it for cleaner tree.\r\n        return new Result_1.Result(_.map(this.result.subResults, function (subResult) { return subResult.clean(); }), this.expression, this.input);\r\n    };\r\n    return OptionResult;\r\n}(Result_1.Result));\r\nexports.OptionResult = OptionResult;\r\n\n\n/***/ }),\n\n/***/ 488:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Result_1 = __webpack_require__(49);\r\nvar Result_2 = __webpack_require__(49);\r\nvar ExpressionRegExp = /** @class */ (function () {\r\n    function ExpressionRegExp(value, id, grammar) {\r\n        this.value = value;\r\n        this.id = id;\r\n    }\r\n    ExpressionRegExp.prototype.parse = function (input, end) {\r\n        var groups = input.match(this.value);\r\n        // if the RegExp do not match at the start, ignore it\r\n        if (groups != null && groups.index != 0) {\r\n            groups = null;\r\n        }\r\n        var result = new Result_1.Result(groups != null ? groups[0] : null, this, input);\r\n        // if is successful and we require the end but the length of parsed is\r\n        // lower than the input length, return a EndOfInputExpected Result\r\n        if (result.isSuccess() && end && input.length > result.value.length) {\r\n            return new Result_2.EndOfInputResult(result);\r\n        }\r\n        return result;\r\n    };\r\n    ExpressionRegExp.prototype.toString = function () {\r\n        return this.id;\r\n    };\r\n    return ExpressionRegExp;\r\n}());\r\nexports.ExpressionRegExp = ExpressionRegExp;\r\n\n\n/***/ }),\n\n/***/ 489:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar ExpressionFunction = /** @class */ (function () {\r\n    function ExpressionFunction(func, id, grammar) {\r\n        this.func = func;\r\n        this.id = id;\r\n        this.grammar = grammar;\r\n    }\r\n    ExpressionFunction.prototype.parse = function (input, end) {\r\n        return this.func(input, end, this);\r\n    };\r\n    ExpressionFunction.prototype.toString = function () {\r\n        return this.id;\r\n    };\r\n    return ExpressionFunction;\r\n}());\r\nexports.ExpressionFunction = ExpressionFunction;\r\n\n\n/***/ }),\n\n/***/ 49:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar ExpressionEndOfInput_1 = __webpack_require__(214);\r\nvar ExpressionConstant_1 = __webpack_require__(215);\r\nvar _ = __webpack_require__(0);\r\nvar Result = /** @class */ (function () {\r\n    function Result(value, expression, input) {\r\n        var _this = this;\r\n        this.expression = expression;\r\n        this.input = input;\r\n        if (_.isString(value)) {\r\n            this.value = value;\r\n        }\r\n        else if (_.isArray(value)) {\r\n            this.subResults = value;\r\n            _.forEach(this.subResults, function (subResult) {\r\n                subResult.parent = _this;\r\n            });\r\n        }\r\n    }\r\n    Result.prototype.isSuccess = function () {\r\n        // if null is the value, this mean the expression could not parse this input\r\n        return this.value != null || (this.subResults != null && _.all(this.subResults, function (subResult) { return subResult.isSuccess(); }));\r\n    };\r\n    /**\r\n     * Return path to this result ([parent.parent, parent, this])\r\n     */\r\n    Result.prototype.path = function (until) {\r\n        var path = this.parent != null && this.parent != until ? this.parent.path(until) : [];\r\n        path.push(this);\r\n        return path;\r\n    };\r\n    /**\r\n     * Return the closest parent that match the condition (can be it-self). If match is a string, it will search for the result expresion id\r\n     */\r\n    Result.prototype.findParent = function (match) {\r\n        var parent = this;\r\n        var iterator = _.isString(match) ? function (result) { return match == result.expression.id; } : match;\r\n        while (parent != null && !iterator(parent)) {\r\n            parent = parent.parent;\r\n        }\r\n        return parent;\r\n    };\r\n    /**\r\n     * Return the first child that match the condition (can be it-self). If match is a string, it will search for the result expresion id\r\n     */\r\n    Result.prototype.find = function (match) {\r\n        var iterator = _.isString(match) ? function (result) { return match == result.expression.id; } : match;\r\n        if (iterator(this)) {\r\n            return this;\r\n        }\r\n        if (this.subResults) {\r\n            for (var i = 0; i < this.subResults.length; i++) {\r\n                var subResultFind = this.subResults[i].find(iterator);\r\n                if (subResultFind) {\r\n                    return subResultFind;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Return all children that match the condition (can be it-self). If match is a string, it will search for the result expresion id\r\n     */\r\n    Result.prototype.findAll = function (match) {\r\n        var results = [];\r\n        var iterator = _.isString(match) ? function (result) { return match == result.expression.id; } : match;\r\n        if (iterator(this)) {\r\n            results.push(this);\r\n        }\r\n        if (this.subResults) {\r\n            results = _.reduce(this.subResults, function (results, subResult) { return results.concat(subResult.findAll(iterator)); }, results);\r\n        }\r\n        return results;\r\n    };\r\n    /**\r\n     * Return the first child that match the condition (can be it-self). If match is a string, it will search for the result expresion id\r\n     */\r\n    Result.prototype.resultAt = function (index, match) {\r\n        if (index < 0 || index > this.getLength()) {\r\n            return [];\r\n        }\r\n        if (match != null) {\r\n            if (_.isString(match)) {\r\n                if (match == this.expression.id) {\r\n                    return [this];\r\n                }\r\n            }\r\n            else {\r\n                if (match(this)) {\r\n                    return [this];\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var value = this.value == null && this.subResults == null ? this.input : this.value;\r\n            if (value != null) {\r\n                return [this];\r\n            }\r\n        }\r\n        if (this.subResults != null) {\r\n            var results = [];\r\n            for (var i = 0; i < this.subResults.length; i++) {\r\n                var subResult = this.subResults[i];\r\n                results = results.concat(subResult.resultAt(index, match));\r\n                index -= subResult.getLength();\r\n                if (index < 0) {\r\n                    break;\r\n                }\r\n            }\r\n            return results;\r\n        }\r\n        return [];\r\n    };\r\n    /**\r\n     * Return all fail result.\r\n     */\r\n    Result.prototype.getExpect = function () {\r\n        if (this.value == null && this.subResults == null) {\r\n            return [this];\r\n        }\r\n        if (this.subResults != null) {\r\n            return _.reduce(this.subResults, function (expect, result) { return expect.concat(result.getExpect()); }, []);\r\n        }\r\n        return [];\r\n    };\r\n    /**\r\n     * Return the best fail result (The farthest result who got parsed). We also remove duplicate and always return the simplest result of a kind\r\n     */\r\n    Result.prototype.getBestExpect = function () {\r\n        var expects = this.getExpect();\r\n        var groups = _.groupBy(expects, function (expect) { return expect.input; });\r\n        var key = _.last(_.keys(groups).sort(function (a, b) {\r\n            return b.length - a.length;\r\n        }));\r\n        var bestResults = groups[key];\r\n        var groups = _.groupBy(bestResults, function (expect) { return expect.expression.id; });\r\n        return _.map(groups, function (bestResults) {\r\n            return _.chain(bestResults)\r\n                .map(function (result) {\r\n                return {\r\n                    path: result.path().length,\r\n                    result: result\r\n                };\r\n            })\r\n                .sortBy('path')\r\n                .pluck('result')\r\n                .first()\r\n                .value();\r\n        });\r\n    };\r\n    Result.prototype.getHumanReadableExpect = function () {\r\n        var expect = this.getBestExpect();\r\n        var input = expect.length > 0 ? _.last(expect).input : '';\r\n        return ('Expected ' +\r\n            _.map(expect, function (result) { return result.getHumanReadable(); }).join(' or ') +\r\n            ' but ' +\r\n            (input.length > 0 ? JSON.stringify(input[0]) : 'end of input') +\r\n            ' found.');\r\n    };\r\n    /**\r\n     * Return a string that represent what is before this result\r\n     */\r\n    Result.prototype.before = function () {\r\n        if (this.parent == null) {\r\n            return '';\r\n        }\r\n        var index = _.indexOf(this.parent.subResults, this);\r\n        return (this.parent.before() +\r\n            _.chain(this.parent.subResults)\r\n                .first(index)\r\n                .map(function (subResult) { return subResult.toString(); })\r\n                .join('')\r\n                .value());\r\n    };\r\n    /**\r\n     * Return a string that represent what is after this result\r\n     */\r\n    Result.prototype.after = function () {\r\n        if (this.parent == null) {\r\n            return '';\r\n        }\r\n        var index = _.indexOf(this.parent.subResults, this);\r\n        return (_.chain(this.parent.subResults)\r\n            .last(this.parent.subResults.length - index - 1)\r\n            .map(function (subResult) { return subResult.toString(); })\r\n            .join('')\r\n            .value() + this.parent.after());\r\n    };\r\n    /**\r\n     * Return the length of the result\r\n     */\r\n    Result.prototype.getLength = function () {\r\n        if (this.value != null) {\r\n            return this.value.length;\r\n        }\r\n        if (this.subResults != null) {\r\n            return _.reduce(this.subResults, function (length, subResult) { return length + subResult.getLength(); }, 0);\r\n        }\r\n        return this.input.length;\r\n    };\r\n    Result.prototype.toHtmlElement = function () {\r\n        var element = document.createElement('span');\r\n        var id = this.expression != null ? this.expression.id : null;\r\n        if (id != null) {\r\n            element.setAttribute('data-id', id);\r\n        }\r\n        element.setAttribute('data-success', this.isSuccess().toString());\r\n        if (this.value != null) {\r\n            element.appendChild(document.createTextNode(this.value));\r\n            element.setAttribute('data-value', this.value);\r\n        }\r\n        else if (this.subResults != null) {\r\n            _.each(this.subResults, function (subResult) {\r\n                element.appendChild(subResult.toHtmlElement());\r\n            });\r\n        }\r\n        else {\r\n            element.appendChild(document.createTextNode(this.input));\r\n            element.setAttribute('data-input', this.input);\r\n            element.className = 'magic-box-error' + (this.input.length > 0 ? '' : ' magic-box-error-empty');\r\n        }\r\n        element['result'] = this;\r\n        return element;\r\n    };\r\n    /**\r\n     * Clean the result to have the most relevant result. If the result is successful just return a clone of it.\r\n     */\r\n    Result.prototype.clean = function (path) {\r\n        if (path != null || !this.isSuccess()) {\r\n            path = path || _.last(this.getBestExpect()).path(this);\r\n            var next = _.first(path);\r\n            if (next != null) {\r\n                var nextIndex = _.indexOf(this.subResults, next);\r\n                var subResults = nextIndex == -1 ? [] : _.map(_.first(this.subResults, nextIndex), function (subResult) { return subResult.clean(); });\r\n                subResults.push(next.clean(_.rest(path)));\r\n                return new Result(subResults, this.expression, this.input);\r\n            }\r\n            else {\r\n                return new Result(null, this.expression, this.input);\r\n            }\r\n        }\r\n        if (this.value != null) {\r\n            return new Result(this.value, this.expression, this.input);\r\n        }\r\n        if (this.subResults != null) {\r\n            return new Result(_.map(this.subResults, function (subResult) { return subResult.clean(); }), this.expression, this.input);\r\n        }\r\n    };\r\n    Result.prototype.clone = function () {\r\n        if (this.value != null) {\r\n            return new Result(this.value, this.expression, this.input);\r\n        }\r\n        if (this.subResults != null) {\r\n            return new Result(_.map(this.subResults, function (subResult) { return subResult.clone(); }), this.expression, this.input);\r\n        }\r\n        return new Result(null, this.expression, this.input);\r\n    };\r\n    Result.prototype.toString = function () {\r\n        if (this.value != null) {\r\n            return this.value;\r\n        }\r\n        if (this.subResults != null) {\r\n            return _.map(this.subResults, function (subresult) { return subresult.toString(); }).join('');\r\n        }\r\n        return this.input;\r\n    };\r\n    Result.prototype.getHumanReadable = function () {\r\n        if (this.expression instanceof ExpressionConstant_1.ExpressionConstant) {\r\n            return JSON.stringify(this.expression.value);\r\n        }\r\n        return this.expression.id;\r\n    };\r\n    return Result;\r\n}());\r\nexports.Result = Result;\r\nvar EndOfInputResult = /** @class */ (function (_super) {\r\n    __extends(EndOfInputResult, _super);\r\n    function EndOfInputResult(result) {\r\n        var _this = _super.call(this, [result], ExpressionEndOfInput_1.ExpressionEndOfInput, result.input) || this;\r\n        var endOfInput = new Result(null, ExpressionEndOfInput_1.ExpressionEndOfInput, result.input.substr(result.getLength()));\r\n        endOfInput.parent = _this;\r\n        _this.subResults.push(endOfInput);\r\n        return _this;\r\n    }\r\n    return EndOfInputResult;\r\n}(Result));\r\nexports.EndOfInputResult = EndOfInputResult;\r\n\n\n/***/ }),\n\n/***/ 490:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Result_1 = __webpack_require__(49);\r\nvar ExpressionList = /** @class */ (function () {\r\n    function ExpressionList(parts, id) {\r\n        this.parts = parts;\r\n        this.id = id;\r\n        if (parts.length == 0) {\r\n            throw new Error(JSON.stringify(id) + ' should have at least 1 parts');\r\n        }\r\n    }\r\n    ExpressionList.prototype.parse = function (input, end) {\r\n        var subResults = [];\r\n        var subResult;\r\n        var subInput = input;\r\n        for (var i = 0; i < this.parts.length; i++) {\r\n            var part = this.parts[i];\r\n            subResult = part.parse(subInput, end && i == this.parts.length - 1);\r\n            subResults.push(subResult);\r\n            // if the subResult do not succeed, stop the parsing\r\n            if (!subResult.isSuccess()) {\r\n                break;\r\n            }\r\n            else {\r\n                subInput = subInput.substr(subResult.getLength());\r\n            }\r\n        }\r\n        return new Result_1.Result(subResults, this, input);\r\n    };\r\n    ExpressionList.prototype.toString = function () {\r\n        return this.id;\r\n    };\r\n    return ExpressionList;\r\n}());\r\nexports.ExpressionList = ExpressionList;\r\n\n\n/***/ }),\n\n/***/ 491:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Field_1 = __webpack_require__(216);\r\nexports.NestedQuery = {\r\n    basicExpressions: ['NestedQuery'],\r\n    grammars: {\r\n        NestedQuery: '[[NestedField][OptionalSpaces][Expressions]]',\r\n        NestedField: '[[Field]]',\r\n        FieldValue: ['NestedQuery']\r\n    },\r\n    include: [Field_1.Field]\r\n};\r\n\n\n/***/ }),\n\n/***/ 492:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Basic_1 = __webpack_require__(128);\r\nexports.Date = {\r\n    grammars: {\r\n        Date: '[DateYear]/[DateMonth]/[DateDay]',\r\n        DateYear: /([0-9]{4})/,\r\n        DateMonth: /(1[0-2]|0?[1-9])/,\r\n        DateDay: /([1-2][0-9]|3[0-1]|0?[1-9])/,\r\n        DateRange: '[Date][Spaces?]..[Spaces?][Date]',\r\n        DateRelative: ['DateRelativeNegative', 'DateRelativeTerm'],\r\n        DateRelativeTerm: /now|today|yesterday/,\r\n        DateRelativeNegative: '[DateRelativeTerm][DateRelativeNegativeRef]',\r\n        DateRelativeNegativeRef: /([\\-\\+][0-9]+(s|m|h|d|mo|y))/\r\n    },\r\n    include: [Basic_1.Basic]\r\n};\r\n\n\n/***/ }),\n\n/***/ 493:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Basic_1 = __webpack_require__(128);\r\nexports.QueryExtension = {\r\n    basicExpressions: ['QueryExtension'],\r\n    grammars: {\r\n        QueryExtension: '$[QueryExtensionName]([QueryExtensionArguments])',\r\n        QueryExtensionName: /\\w+/,\r\n        QueryExtensionArguments: '[QueryExtensionArgumentList*][QueryExtensionArgument]',\r\n        QueryExtensionArgumentList: '[QueryExtensionArgument][Spaces?],[Spaces?]',\r\n        QueryExtensionArgument: '[QueryExtensionArgumentName]:[Spaces?][QueryExtensionArgumentValue]',\r\n        QueryExtensionArgumentName: /\\w+/,\r\n        QueryExtensionArgumentValue: ['SingleQuoted', 'Expressions']\r\n    },\r\n    include: [Basic_1.Basic]\r\n};\r\n\n\n/***/ }),\n\n/***/ 494:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SubExpression = {\r\n    basicExpressions: ['SubExpression'],\r\n    grammars: {\r\n        SubExpression: '([Expressions])'\r\n    }\r\n};\r\n\n\n/***/ }),\n\n/***/ 495:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar _ = __webpack_require__(0);\r\nvar Core_1 = __webpack_require__(20);\r\nvar Strings_1 = __webpack_require__(6);\r\nvar Dom_1 = __webpack_require__(1);\r\nvar KeyboardUtils_1 = __webpack_require__(25);\r\nvar InputManager = /** @class */ (function () {\r\n    function InputManager(element, onchange, magicBox) {\r\n        this.onchange = onchange;\r\n        this.magicBox = magicBox;\r\n        this.hasFocus = false;\r\n        this.root = Core_1.Component.resolveRoot(element);\r\n        this.underlay = document.createElement('div');\r\n        this.underlay.className = 'magic-box-underlay';\r\n        this.highlightContainer = document.createElement('span');\r\n        this.highlightContainer.className = 'magic-box-highlight-container';\r\n        this.underlay.appendChild(this.highlightContainer);\r\n        this.ghostTextContainer = document.createElement('span');\r\n        this.ghostTextContainer.className = 'magic-box-ghost-text';\r\n        this.underlay.appendChild(this.ghostTextContainer);\r\n        this.input = Dom_1.$$(element).find('input');\r\n        if (!this.input) {\r\n            this.input = document.createElement('input');\r\n            element.appendChild(this.underlay);\r\n            element.appendChild(this.input);\r\n        }\r\n        else {\r\n            element.insertBefore(this.underlay, this.input);\r\n        }\r\n        this.setupHandler();\r\n        this.addAccessibilitiesProperties();\r\n    }\r\n    Object.defineProperty(InputManager.prototype, \"expanded\", {\r\n        set: function (isExpanded) {\r\n            this.input.setAttribute('aria-expanded', isExpanded.toString());\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(InputManager.prototype, \"activeDescendant\", {\r\n        set: function (element) {\r\n            if (element) {\r\n                this.input.setAttribute('aria-activedescendant', element.id);\r\n            }\r\n            else {\r\n                this.input.removeAttribute('aria-activedescendant');\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Update the input with the result value\r\n     */\r\n    InputManager.prototype.updateInput = function () {\r\n        if (this.input.value != this.result.input) {\r\n            this.input.value = this.result.input;\r\n            if (this.hasFocus) {\r\n                this.setCursor(this.getValue().length);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Update the highlight with the result value\r\n     */\r\n    InputManager.prototype.updateHighlight = function () {\r\n        Dom_1.$$(this.highlightContainer).empty();\r\n        this.highlightContainer.appendChild(this.result.toHtmlElement());\r\n    };\r\n    /**\r\n     * Update the ghostText with the wordCompletion\r\n     */\r\n    InputManager.prototype.updateWordCompletion = function () {\r\n        Dom_1.$$(this.ghostTextContainer).empty();\r\n        this.ghostTextContainer.innerHTML = '';\r\n        if (this.wordCompletion != null) {\r\n            this.ghostTextContainer.appendChild(document.createTextNode(this.wordCompletion.substr(this.result.input.length)));\r\n        }\r\n    };\r\n    /**\r\n     * Set the result and update visual if needed\r\n     */\r\n    InputManager.prototype.setResult = function (result, wordCompletion) {\r\n        this.result = result;\r\n        this.updateInput();\r\n        this.updateHighlight();\r\n        // reuse last wordCompletion for a better visual\r\n        if (_.isUndefined(wordCompletion) && this.wordCompletion != null && this.wordCompletion.indexOf(this.result.input) == 0) {\r\n            this.updateWordCompletion();\r\n        }\r\n        else {\r\n            this.setWordCompletion(wordCompletion);\r\n        }\r\n        this.updateScroll();\r\n    };\r\n    /**\r\n     * Set the word completion. will be ignore if the word completion do not start with the result input\r\n     */\r\n    InputManager.prototype.setWordCompletion = function (wordCompletion) {\r\n        if (wordCompletion != null && wordCompletion.toLowerCase().indexOf(this.result.input.toLowerCase()) != 0) {\r\n            wordCompletion = null;\r\n        }\r\n        this.wordCompletion = wordCompletion;\r\n        this.updateWordCompletion();\r\n        this.updateScroll();\r\n    };\r\n    /**\r\n     * Set cursor position\r\n     */\r\n    InputManager.prototype.setCursor = function (index) {\r\n        this.input.focus();\r\n        if (this.input.createTextRange) {\r\n            var range = this.input.createTextRange();\r\n            range.move('character', index);\r\n            range.select();\r\n        }\r\n        else if (this.input.selectionStart != null) {\r\n            this.input.focus();\r\n            this.input.setSelectionRange(index, index);\r\n        }\r\n    };\r\n    InputManager.prototype.getCursor = function () {\r\n        return this.input.selectionStart;\r\n    };\r\n    InputManager.prototype.updateScroll = function (defer) {\r\n        var _this = this;\r\n        if (defer === void 0) { defer = true; }\r\n        var callback = function () {\r\n            // this is the cheapest call we can do before update scroll\r\n            if (_this.underlay.clientWidth < _this.underlay.scrollWidth) {\r\n                _this.underlay.style.visibility = 'hidden';\r\n                _this.underlay.scrollLeft = _this.input.scrollLeft;\r\n                _this.underlay.scrollTop = _this.input.scrollTop;\r\n                _this.underlay.style.visibility = 'visible';\r\n            }\r\n            _this.updateScrollDefer = null;\r\n            // one day we will have to remove this\r\n            if (_this.hasFocus) {\r\n                _this.updateScroll();\r\n            }\r\n        };\r\n        // sometime we want it to be updated as soon as posible to have no flickering\r\n        if (!defer) {\r\n            callback();\r\n        }\r\n        else if (this.updateScrollDefer == null) {\r\n            this.updateScrollDefer = requestAnimationFrame(callback);\r\n        }\r\n    };\r\n    InputManager.prototype.setupHandler = function () {\r\n        var _this = this;\r\n        this.input.onblur = function () {\r\n            _this.hasFocus = false;\r\n            setTimeout(function () {\r\n                if (!_this.hasFocus) {\r\n                    _this.onblur && _this.onblur();\r\n                }\r\n            }, 300);\r\n            _this.updateScroll();\r\n        };\r\n        this.input.onfocus = function () {\r\n            if (!_this.hasFocus) {\r\n                _this.hasFocus = true;\r\n                _this.updateScroll();\r\n                _this.onfocus && _this.onfocus();\r\n            }\r\n        };\r\n        this.input.onkeydown = function (e) {\r\n            _this.keydown(e);\r\n        };\r\n        this.input.onkeyup = function (e) {\r\n            _this.keyup(e);\r\n        };\r\n        this.input.oncut = function () {\r\n            setTimeout(function () {\r\n                _this.onInputChange();\r\n            });\r\n        };\r\n        this.input.onpaste = function () {\r\n            setTimeout(function () {\r\n                _this.onInputChange();\r\n            });\r\n        };\r\n    };\r\n    InputManager.prototype.addAccessibilitiesProperties = function () {\r\n        this.input.setAttribute('autocomplete', 'off');\r\n        this.input.setAttribute('type', 'text');\r\n        this.input.setAttribute('role', 'combobox');\r\n        this.input.setAttribute('form', 'coveo-dummy-form');\r\n        this.input.setAttribute('aria-autocomplete', 'list');\r\n        this.input.setAttribute('title', Strings_1.l('InsertAQuery') + \". \" + Strings_1.l('PressEnterToSend'));\r\n    };\r\n    InputManager.prototype.focus = function () {\r\n        var _this = this;\r\n        // neet a timeout for IE8-9\r\n        setTimeout(function () {\r\n            _this.input.focus();\r\n            _this.setCursor(_this.getValue().length);\r\n        });\r\n    };\r\n    InputManager.prototype.blur = function () {\r\n        if (this.hasFocus) {\r\n            this.input.blur();\r\n        }\r\n    };\r\n    InputManager.prototype.keydown = function (e) {\r\n        var _this = this;\r\n        switch (e.keyCode || e.which) {\r\n            case KeyboardUtils_1.KEYBOARD.TAB:\r\n                // Take care of not \"preventing\" the default event behaviour : For accessibility reasons, it is much simpler\r\n                // to simply let the browser do it's standard action (which is to focus out of the input).\r\n                // Instead, handle \"tabPress\" immediately instead of \"keyup\".\r\n                // The focus will be on the next element in the page when the key is released, so keyup on the input will never be triggered.\r\n                this.tabPress();\r\n                this.magicBox.clearSuggestion();\r\n                break;\r\n            default:\r\n                e.stopPropagation();\r\n                if (this.onkeydown == null || this.onkeydown(e.keyCode || e.which)) {\r\n                    requestAnimationFrame(function () {\r\n                        _this.onInputChange();\r\n                    });\r\n                }\r\n                else {\r\n                    e.preventDefault();\r\n                }\r\n                break;\r\n        }\r\n    };\r\n    InputManager.prototype.keyup = function (e) {\r\n        switch (e.keyCode || e.which) {\r\n            case KeyboardUtils_1.KEYBOARD.LEFT_ARROW:\r\n            case KeyboardUtils_1.KEYBOARD.RIGHT_ARROW:\r\n                this.handleLeftRightArrow(e);\r\n                break;\r\n            default:\r\n                if (this.onkeydown == null || this.onkeyup(e.keyCode || e.which)) {\r\n                    this.onInputChange();\r\n                }\r\n                else {\r\n                    e.preventDefault();\r\n                }\r\n                break;\r\n        }\r\n    };\r\n    InputManager.prototype.handleLeftRightArrow = function (e) {\r\n        var querySuggestPreview = Dom_1.$$(this.root).find(\".\" + Core_1.Component.computeCssClassNameForType('QuerySuggestPreview'));\r\n        if (!querySuggestPreview) {\r\n            this.onchangecursor();\r\n        }\r\n        var inputChanged = this.onkeydown == null || this.onkeyup(e.keyCode || e.which);\r\n        inputChanged ? this.onInputChange() : e.preventDefault();\r\n    };\r\n    InputManager.prototype.tabPress = function () {\r\n        this.ontabpress && this.ontabpress();\r\n        this.onblur && this.onblur();\r\n    };\r\n    InputManager.prototype.onInputChange = function () {\r\n        if (this.result.input != this.input.value) {\r\n            this.onchange(this.input.value, false);\r\n        }\r\n    };\r\n    InputManager.prototype.getValue = function () {\r\n        return this.input.value;\r\n    };\r\n    InputManager.prototype.getWordCompletion = function () {\r\n        return this.wordCompletion;\r\n    };\r\n    return InputManager;\r\n}());\r\nexports.InputManager = InputManager;\r\n\n\n/***/ }),\n\n/***/ 496:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n            t[p] = s[p];\r\n    }\r\n    return t;\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar underscore_1 = __webpack_require__(0);\r\nvar ProcessingStatus;\r\n(function (ProcessingStatus) {\r\n    ProcessingStatus[ProcessingStatus[\"Finished\"] = 0] = \"Finished\";\r\n    ProcessingStatus[ProcessingStatus[\"TimedOut\"] = 1] = \"TimedOut\";\r\n    ProcessingStatus[ProcessingStatus[\"Overriden\"] = 2] = \"Overriden\";\r\n})(ProcessingStatus = exports.ProcessingStatus || (exports.ProcessingStatus = {}));\r\n/**\r\n * IE11 equivalent of Promise.race\r\n * Adapted from Promise.race(iterable) polyfill on https://www.promisejs.org/api/\r\n */\r\nfunction racePromises(promises) {\r\n    return new Promise(function (resolve, reject) { return promises.forEach(function (value) { return Promise.resolve(value).then(resolve, reject); }); });\r\n}\r\nvar QueryProcessor = /** @class */ (function () {\r\n    function QueryProcessor(options) {\r\n        if (options === void 0) { options = {}; }\r\n        this.options = __assign({ timeout: 500 }, options);\r\n    }\r\n    /**\r\n     * Overrides the previous queries and accumulates the result of promise arrays with a timeout.\r\n     */\r\n    QueryProcessor.prototype.processQueries = function (queries) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            var asyncQueries;\r\n            return __generator(this, function (_a) {\r\n                this.overrideIfProcessing();\r\n                this.processedResults = new Array(queries.length);\r\n                asyncQueries = queries.map(function (query) { return (query instanceof Promise ? query : Promise.resolve(query)); });\r\n                return [2 /*return*/, racePromises([\r\n                        this.accumulateResultsChronologically(asyncQueries).then(function () { return _this.buildProcessResults(ProcessingStatus.Finished); }),\r\n                        this.waitForOverride().then(function () { return _this.buildProcessResults(ProcessingStatus.Overriden); }),\r\n                        this.waitForTimeout().then(function () { return _this.buildProcessResults(ProcessingStatus.TimedOut); })\r\n                    ])];\r\n            });\r\n        });\r\n    };\r\n    QueryProcessor.prototype.overrideIfProcessing = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                if (this.override) {\r\n                    this.override();\r\n                }\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    Object.defineProperty(QueryProcessor.prototype, \"orderedResults\", {\r\n        get: function () {\r\n            return underscore_1.flatten(this.processedResults.filter(function (result) { return !!result; }), true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    QueryProcessor.prototype.buildProcessResults = function (status) {\r\n        return {\r\n            status: status,\r\n            results: status !== ProcessingStatus.Overriden ? this.orderedResults : []\r\n        };\r\n    };\r\n    QueryProcessor.prototype.accumulateResultsChronologically = function (queries) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var output;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        output = this.processedResults;\r\n                        return [4 /*yield*/, Promise.all(queries.map(function (query, i) { return query.then(function (items) { return (output[i] = items); }); }))];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    QueryProcessor.prototype.waitForOverride = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            _this.override = function () {\r\n                _this.override = null;\r\n                resolve();\r\n            };\r\n        });\r\n    };\r\n    QueryProcessor.prototype.waitForTimeout = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve) { return setTimeout(function () { return resolve(); }, _this.options.timeout); });\r\n    };\r\n    return QueryProcessor;\r\n}());\r\nexports.QueryProcessor = QueryProcessor;\r\n\n\n/***/ }),\n\n/***/ 499:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar NestedQuery_1 = __webpack_require__(491);\r\nvar QueryExtension_1 = __webpack_require__(493);\r\nvar Basic_1 = __webpack_require__(128);\r\nvar Field_1 = __webpack_require__(216);\r\nvar SubExpression_1 = __webpack_require__(494);\r\nexports.Complete = {\r\n    include: [NestedQuery_1.NestedQuery, QueryExtension_1.QueryExtension, SubExpression_1.SubExpression, Field_1.Field, Basic_1.Basic]\r\n};\r\n\n\n/***/ }),\n\n/***/ 500:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Grammar_1 = __webpack_require__(176);\r\nvar _ = __webpack_require__(0);\r\nfunction loadSubGrammar(expressions, basicExpressions, grammars, subGrammar) {\r\n    _.each(subGrammar.expressions, function (expression) {\r\n        if (!_.contains(expressions, expression)) {\r\n            expressions.push(expression);\r\n        }\r\n    });\r\n    _.each(subGrammar.basicExpressions, function (expression) {\r\n        if (!_.contains(basicExpressions, expression)) {\r\n            basicExpressions.push(expression);\r\n        }\r\n    });\r\n    _.each(subGrammar.grammars, function (expressionDef, id) {\r\n        if (!(id in grammars)) {\r\n            grammars[id] = expressionDef;\r\n        }\r\n        else {\r\n            if (_.isArray(grammars[id]) && _.isArray(expressionDef)) {\r\n                _.each(expressionDef, function (value) {\r\n                    grammars[id].push(value);\r\n                });\r\n            }\r\n            else {\r\n                _.each(expressionDef, function (value) {\r\n                    grammars[id].push(value);\r\n                });\r\n                throw new Error('Can not merge ' + id + '(' + JSON.stringify(expressionDef) + ' => ' + JSON.stringify(grammars[id]) + ')');\r\n            }\r\n        }\r\n    });\r\n}\r\nfunction Expressions() {\r\n    var subGrammars = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        subGrammars[_i] = arguments[_i];\r\n    }\r\n    var expressions = [];\r\n    var BasicExpression = [];\r\n    var grammars = {\r\n        Start: ['Expressions', 'Empty'],\r\n        Expressions: '[OptionalSpaces][Expression][ExpressionsList*][OptionalSpaces]',\r\n        ExpressionsList: '[Spaces][Expression]',\r\n        Expression: expressions,\r\n        BasicExpression: BasicExpression,\r\n        OptionalSpaces: / */,\r\n        Spaces: / +/,\r\n        Empty: /(?!.)/\r\n    };\r\n    for (var i = 0; i < subGrammars.length; i++) {\r\n        loadSubGrammar(expressions, BasicExpression, grammars, subGrammars[i]);\r\n        _.each(subGrammars[i].include, function (subGrammar) {\r\n            if (!_.contains(subGrammars, subGrammar)) {\r\n                subGrammars.push(subGrammar);\r\n            }\r\n        });\r\n    }\r\n    expressions.push('BasicExpression');\r\n    return {\r\n        start: 'Start',\r\n        expressions: grammars\r\n    };\r\n}\r\nexports.Expressions = Expressions;\r\nfunction ExpressionsGrammar() {\r\n    var subGrammars = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        subGrammars[_i] = arguments[_i];\r\n    }\r\n    var grammar = Expressions.apply(this, subGrammars);\r\n    return new Grammar_1.Grammar(grammar.start, grammar.expressions);\r\n}\r\nexports.ExpressionsGrammar = ExpressionsGrammar;\r\n\n\n/***/ }),\n\n/***/ 501:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Those are the string definitions of events for ResultPreviewsManager.\r\n *\r\n * Those events should be bound to the element returned by `resolveRoot`.\r\n */\r\nvar ResultPreviewsManagerEvents = /** @class */ (function () {\r\n    function ResultPreviewsManagerEvents() {\r\n    }\r\n    /**\r\n     * Executed when building a query to fetch result previews.\r\n     * This always receives {@link IBuildingResultPreviewsQueryEventArgs} as arguments.\r\n     */\r\n    ResultPreviewsManagerEvents.buildingResultPreviewsQuery = 'buildingResultPreviewsQuery';\r\n    /**\r\n     * Executed when a {@link Suggestion} is focused before {@link PopulateSearchResultPreviews} is called to fetch more options.\r\n     * This always receives {@link IUpdateResultPreviewsManagerOptionsEventArgs} as arguments.\r\n     */\r\n    ResultPreviewsManagerEvents.updateResultPreviewsManagerOptions = 'updateResultPreviewsManagerOptions';\r\n    /**\r\n     * Executed when a {@link Suggestion} is focused and waiting for search result previews.\r\n     * This always receives {@link IPopulateSearchResultPreviewsEventArgs} as arguments.\r\n     */\r\n    ResultPreviewsManagerEvents.populateSearchResultPreviews = 'populateSearchResultPreviews';\r\n    return ResultPreviewsManagerEvents;\r\n}());\r\nexports.ResultPreviewsManagerEvents = ResultPreviewsManagerEvents;\r\n\n\n/***/ }),\n\n/***/ 502:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n            t[p] = s[p];\r\n    }\r\n    return t;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar ComponentOptionsModel_1 = __webpack_require__(28);\r\nvar QueryboxOptionsProcessing = /** @class */ (function () {\r\n    function QueryboxOptionsProcessing(owner) {\r\n        this.owner = owner;\r\n    }\r\n    Object.defineProperty(QueryboxOptionsProcessing.prototype, \"options\", {\r\n        get: function () {\r\n            return this.owner.options;\r\n        },\r\n        set: function (options) {\r\n            this.owner.options = options;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    QueryboxOptionsProcessing.prototype.postProcess = function () {\r\n        this.options = __assign({}, this.options, this.owner.componentOptionsModel.get(ComponentOptionsModel_1.ComponentOptionsModel.attributesEnum.searchBox));\r\n        this.processQueryOnClearVersusEmptyQuery();\r\n        this.processQueryOnClearVersusSearchAsYouType();\r\n    };\r\n    QueryboxOptionsProcessing.prototype.processQueryOnClearVersusEmptyQuery = function () {\r\n        if (this.options.triggerQueryOnClear && this.owner.searchInterface.options.allowQueriesWithoutKeywords === false) {\r\n            this.owner.logger.warn('Forcing option triggerQueryOnClear to false, as it is not supported when the search interface is configured to not allow queries without keywords (data-allow-queries-without-keywords=\"false\")', this.owner);\r\n            this.options.triggerQueryOnClear = false;\r\n        }\r\n    };\r\n    QueryboxOptionsProcessing.prototype.processQueryOnClearVersusSearchAsYouType = function () {\r\n        if (this.owner.searchInterface.options.allowQueriesWithoutKeywords === true &&\r\n            this.options.triggerQueryOnClear === false &&\r\n            this.options.enableSearchAsYouType === true) {\r\n            this.owner.logger.warn('Forcing option triggerQueryOnClear to true, since search-as-you-type is enabled', this.owner);\r\n            this.options.triggerQueryOnClear = true;\r\n        }\r\n    };\r\n    return QueryboxOptionsProcessing;\r\n}());\r\nexports.QueryboxOptionsProcessing = QueryboxOptionsProcessing;\r\n\n\n/***/ }),\n\n/***/ 503:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar _ = __webpack_require__(0);\r\nvar MiscModules_1 = __webpack_require__(71);\r\nvar QueryboxQueryParameters = /** @class */ (function () {\r\n    function QueryboxQueryParameters(options) {\r\n        this.options = options;\r\n    }\r\n    QueryboxQueryParameters.queryIsBlocked = function () {\r\n        // This code runs on some assumption :\r\n        // Since all \"buildingQuery\" events would have to be run in the same call stack\r\n        // We can add a static flag to block 2 or more query box/omnibox from trying to modify the query inside the same event.\r\n        // If 2 query box are activated, we get duplicate terms in the query, or duplicate term correction with did you mean.\r\n        // This means that only one query box/searchbox would be able to modify the query in a single search page.\r\n        // This also means that if there is 2 search box enabled, the first one in the markup in the page would be able to do the job correctly as far as the query is concerned.\r\n        // The second one is inactive as far as the query is concerned.\r\n        // The flag gets reset in \"defer\" (setTimeout 0) so that it gets reset correctly when the query event has finished executing\r\n        if (!QueryboxQueryParameters.queryIsCurrentlyBlocked) {\r\n            QueryboxQueryParameters.queryIsCurrentlyBlocked = true;\r\n            MiscModules_1.Defer.defer(function () { return QueryboxQueryParameters.allowDuplicateQuery(); });\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    QueryboxQueryParameters.allowDuplicateQuery = function () {\r\n        QueryboxQueryParameters.queryIsCurrentlyBlocked = false;\r\n    };\r\n    QueryboxQueryParameters.prototype.addParameters = function (queryBuilder, lastQuery) {\r\n        if (!QueryboxQueryParameters.queryIsBlocked()) {\r\n            if (this.options.enableWildcards) {\r\n                queryBuilder.enableWildcards = true;\r\n            }\r\n            if (this.options.enableQuestionMarks) {\r\n                queryBuilder.enableQuestionMarks = true;\r\n            }\r\n            if (this.options.enableLowercaseOperators) {\r\n                queryBuilder.enableLowercaseOperators = true;\r\n            }\r\n            if (!_.isEmpty(lastQuery)) {\r\n                queryBuilder.enableQuerySyntax = this.options.enableQuerySyntax;\r\n                queryBuilder.expression.add(lastQuery);\r\n                if (this.options.enablePartialMatch) {\r\n                    queryBuilder.enablePartialMatch = this.options.enablePartialMatch;\r\n                    if (this.options.partialMatchKeywords) {\r\n                        queryBuilder.partialMatchKeywords = this.options.partialMatchKeywords;\r\n                    }\r\n                    if (this.options.partialMatchThreshold) {\r\n                        queryBuilder.partialMatchThreshold = this.options.partialMatchThreshold;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    QueryboxQueryParameters.queryIsCurrentlyBlocked = false;\r\n    return QueryboxQueryParameters;\r\n}());\r\nexports.QueryboxQueryParameters = QueryboxQueryParameters;\r\n\n\n/***/ }),\n\n/***/ 556:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar GlobalExports_1 = __webpack_require__(3);\r\nvar ExpressionConstant_1 = __webpack_require__(215);\r\nvar ExpressionEndOfInput_1 = __webpack_require__(214);\r\nvar ExpressionFunction_1 = __webpack_require__(489);\r\nvar ExpressionList_1 = __webpack_require__(490);\r\nvar ExpressionOptions_1 = __webpack_require__(486);\r\nvar ExpressionRef_1 = __webpack_require__(484);\r\nvar ExpressionRegExp_1 = __webpack_require__(488);\r\nvar Grammar_1 = __webpack_require__(176);\r\nvar Grammars_1 = __webpack_require__(557);\r\nvar InputManager_1 = __webpack_require__(495);\r\nvar MagicBox_1 = __webpack_require__(218);\r\nvar MagicBoxUtils_1 = __webpack_require__(219);\r\nvar OptionResult_1 = __webpack_require__(487);\r\nvar RefResult_1 = __webpack_require__(485);\r\nvar Result_1 = __webpack_require__(49);\r\nvar SuggestionsManager_1 = __webpack_require__(217);\r\nexports.GrammarsImportedLocally = Grammars_1.Grammars;\r\nfunction doMagicBoxExport() {\r\n    GlobalExports_1.exportGlobally({\r\n        MagicBox: {\r\n            EndOfInputResult: Result_1.EndOfInputResult,\r\n            ExpressionConstant: ExpressionConstant_1.ExpressionConstant,\r\n            ExpressionEndOfInput: ExpressionEndOfInput_1.ExpressionEndOfInput,\r\n            ExpressionFunction: ExpressionFunction_1.ExpressionFunction,\r\n            ExpressionList: ExpressionList_1.ExpressionList,\r\n            ExpressionOptions: ExpressionOptions_1.ExpressionOptions,\r\n            ExpressionRef: ExpressionRef_1.ExpressionRef,\r\n            ExpressionRegExp: ExpressionRegExp_1.ExpressionRegExp,\r\n            Grammar: Grammar_1.Grammar,\r\n            Grammars: Grammars_1.Grammars,\r\n            InputManager: InputManager_1.InputManager,\r\n            Instance: MagicBox_1.MagicBoxInstance,\r\n            OptionResult: OptionResult_1.OptionResult,\r\n            RefResult: RefResult_1.RefResult,\r\n            Result: Result_1.Result,\r\n            SuggestionsManager: SuggestionsManager_1.SuggestionsManager,\r\n            Utils: MagicBoxUtils_1.MagicBoxUtils,\r\n            create: MagicBox_1.createMagicBox,\r\n            requestAnimationFrame: MagicBox_1.requestAnimationFrame\r\n        }\r\n    });\r\n}\r\nexports.doMagicBoxExport = doMagicBoxExport;\r\n\n\n/***/ }),\n\n/***/ 557:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Basic_1 = __webpack_require__(128);\r\nvar Complete_1 = __webpack_require__(499);\r\nvar Date_1 = __webpack_require__(492);\r\nvar Expressions_1 = __webpack_require__(500);\r\nvar Field_1 = __webpack_require__(216);\r\nvar NestedQuery_1 = __webpack_require__(491);\r\nvar QueryExtension_1 = __webpack_require__(493);\r\nvar SubExpression_1 = __webpack_require__(494);\r\nexports.Grammars = {\r\n    Basic: Basic_1.Basic,\r\n    notInWord: Basic_1.notInWord,\r\n    notWordStart: Basic_1.notWordStart,\r\n    Complete: Complete_1.Complete,\r\n    Date: Date_1.Date,\r\n    Expressions: Expressions_1.Expressions,\r\n    ExpressionsGrammar: Expressions_1.ExpressionsGrammar,\r\n    Field: Field_1.Field,\r\n    NestedQuery: NestedQuery_1.NestedQuery,\r\n    QueryExtension: QueryExtension_1.QueryExtension,\r\n    SubExpression: SubExpression_1.SubExpression\r\n};\r\n\n\n/***/ }),\n\n/***/ 558:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Dom_1 = __webpack_require__(1);\r\nvar Strings_1 = __webpack_require__(6);\r\nvar underscore_1 = __webpack_require__(0);\r\nvar Component_1 = __webpack_require__(7);\r\nvar SuggestionsManager_1 = __webpack_require__(217);\r\nvar ResultPreviewsManagerEvents_1 = __webpack_require__(501);\r\nvar QueryProcessor_1 = __webpack_require__(496);\r\nvar Utils_1 = __webpack_require__(4);\r\nvar ResultPreviewsManager = /** @class */ (function () {\r\n    function ResultPreviewsManager(element, options) {\r\n        if (options === void 0) { options = {}; }\r\n        this.element = element;\r\n        this.options = underscore_1.defaults(options, {\r\n            previewHeaderText: Strings_1.l('QuerySuggestPreview'),\r\n            previewHeaderFieldText: Strings_1.l('QuerySuggestPreviewWithField'),\r\n            previewClass: 'coveo-preview-selectable',\r\n            selectedClass: 'magic-box-selected'\r\n        });\r\n        this.root = Component_1.Component.resolveRoot(element);\r\n        this.previewsProcessor = new QueryProcessor_1.QueryProcessor({ timeout: this.options.timeout });\r\n    }\r\n    Object.defineProperty(ResultPreviewsManager.prototype, \"previewsOwner\", {\r\n        get: function () {\r\n            return this.lastDisplayedSuggestion;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ResultPreviewsManager.prototype, \"hasPreviews\", {\r\n        get: function () {\r\n            return !!this.suggestionsPreviewContainer;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ResultPreviewsManager.prototype, \"focusedPreviewElement\", {\r\n        get: function () {\r\n            if (!this.hasPreviews) {\r\n                return null;\r\n            }\r\n            var focusedElement = this.suggestionsPreviewContainer.findClass(this.options.selectedClass)[0];\r\n            if (!focusedElement || !focusedElement.classList.contains(this.options.previewClass)) {\r\n                return null;\r\n            }\r\n            return focusedElement;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ResultPreviewsManager.prototype, \"previewElements\", {\r\n        get: function () {\r\n            if (!this.hasPreviews) {\r\n                return [];\r\n            }\r\n            return this.suggestionsPreviewContainer.findClass(this.options.previewClass);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ResultPreviewsManager.prototype, \"suggestionsListbox\", {\r\n        get: function () {\r\n            return Dom_1.$$(Dom_1.$$(this.element).findClass('coveo-magicbox-suggestions')[0]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ResultPreviewsManager.prototype, \"numberOfResultsPerRow\", {\r\n        get: function () {\r\n            var previewSelectables = this.suggestionsPreviewContainer.findClass(this.options.previewClass);\r\n            if (previewSelectables.length === 0) {\r\n                return 0;\r\n            }\r\n            var firstVerticalOffset = previewSelectables[0].offsetTop;\r\n            var firstIndexOnNextRow = underscore_1.findIndex(previewSelectables, function (previewSelectable) { return previewSelectable.offsetTop !== firstVerticalOffset; });\r\n            return firstIndexOnNextRow !== -1 ? firstIndexOnNextRow : previewSelectables.length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ResultPreviewsManager.prototype, \"previewContainerId\", {\r\n        get: function () {\r\n            return \"coveo-previews-for-\" + this.lastDisplayedSuggestion.dom.id;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ResultPreviewsManager.prototype.displaySearchResultPreviewsForSuggestion = function (suggestion) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var externalOptions, currentDelay, isQueryForSuggestionOngoing, arePreviewsForSuggestionCurrentlyDisplayed, _a, status, results;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        externalOptions = this.getExternalOptions();\r\n                        currentDelay = (this.lastDelay = Utils_1.Utils.resolveAfter(Utils_1.Utils.isNullOrUndefined(externalOptions.displayAfterDuration) ? 200 : externalOptions.displayAfterDuration));\r\n                        return [4 /*yield*/, currentDelay];\r\n                    case 1:\r\n                        _b.sent();\r\n                        if (currentDelay !== this.lastDelay) {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        isQueryForSuggestionOngoing = suggestion && this.lastQueriedSuggestion === suggestion;\r\n                        if (isQueryForSuggestionOngoing) {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        arePreviewsForSuggestionCurrentlyDisplayed = this.lastDisplayedSuggestion === suggestion;\r\n                        if (arePreviewsForSuggestionCurrentlyDisplayed) {\r\n                            this.previewsProcessor.overrideIfProcessing();\r\n                            this.lastQueriedSuggestion = null;\r\n                            return [2 /*return*/];\r\n                        }\r\n                        this.lastQueriedSuggestion = suggestion;\r\n                        if (!suggestion) {\r\n                            this.displaySuggestionPreviews(null, []);\r\n                            return [2 /*return*/];\r\n                        }\r\n                        return [4 /*yield*/, this.getSearchResultPreviewsQuery(suggestion)];\r\n                    case 2:\r\n                        _a = _b.sent(), status = _a.status, results = _a.results;\r\n                        if (status === QueryProcessor_1.ProcessingStatus.Overriden) {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        this.lastQueriedSuggestion = null;\r\n                        this.displaySuggestionPreviews(suggestion, results);\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ResultPreviewsManager.prototype.getElementInDirection = function (direction) {\r\n        var previewElements = this.previewElements;\r\n        var focusedIndex = previewElements.indexOf(this.focusedPreviewElement);\r\n        if (focusedIndex === -1) {\r\n            return null;\r\n        }\r\n        if (focusedIndex === 0 && direction === SuggestionsManager_1.Direction.Left) {\r\n            return null;\r\n        }\r\n        return previewElements[(focusedIndex + this.getIncrementInDirection(direction)) % previewElements.length];\r\n    };\r\n    ResultPreviewsManager.prototype.getIncrementInDirection = function (direction) {\r\n        switch (direction) {\r\n            case SuggestionsManager_1.Direction.Left:\r\n                return -1;\r\n            case SuggestionsManager_1.Direction.Right:\r\n                return 1;\r\n            case SuggestionsManager_1.Direction.Up:\r\n                return -this.numberOfResultsPerRow;\r\n            case SuggestionsManager_1.Direction.Down:\r\n                return this.numberOfResultsPerRow;\r\n        }\r\n    };\r\n    ResultPreviewsManager.prototype.setHasPreviews = function (shouldHavePreviews) {\r\n        if (this.hasPreviews === !!shouldHavePreviews) {\r\n            return;\r\n        }\r\n        if (shouldHavePreviews) {\r\n            this.initPreviewForSuggestions();\r\n        }\r\n        else {\r\n            this.revertPreviewForSuggestions();\r\n        }\r\n    };\r\n    ResultPreviewsManager.prototype.initPreviewForSuggestions = function () {\r\n        this.suggestionsPreviewContainer = Dom_1.$$('div', {\r\n            className: 'coveo-suggestion-container'\r\n        }, this.suggestionsListbox.el, this.buildPreviewContainer());\r\n        this.element.appendChild(this.suggestionsPreviewContainer.el);\r\n        this.suggestionsListbox.setAttribute('aria-controls', this.previewContainerId);\r\n    };\r\n    ResultPreviewsManager.prototype.revertPreviewForSuggestions = function () {\r\n        this.element.appendChild(this.suggestionsListbox.el);\r\n        this.suggestionsPreviewContainer.remove();\r\n        this.suggestionsPreviewContainer = null;\r\n    };\r\n    ResultPreviewsManager.prototype.buildPreviewContainer = function () {\r\n        return Dom_1.$$('div', {\r\n            className: 'coveo-preview-container',\r\n            id: this.previewContainerId\r\n        }, (this.resultPreviewsContainer = Dom_1.$$('div', {\r\n            className: 'coveo-preview-results',\r\n            role: 'listbox',\r\n            'aria-orientation': 'horizontal'\r\n        }))).el;\r\n    };\r\n    ResultPreviewsManager.prototype.getExternalOptions = function () {\r\n        var optionsEventArgs = {};\r\n        Dom_1.$$(this.root).trigger(ResultPreviewsManagerEvents_1.ResultPreviewsManagerEvents.updateResultPreviewsManagerOptions, optionsEventArgs);\r\n        return optionsEventArgs;\r\n    };\r\n    ResultPreviewsManager.prototype.getSearchResultPreviewsQuery = function (suggestion) {\r\n        var populateEventArgs = {\r\n            suggestion: suggestion,\r\n            previewsQueries: []\r\n        };\r\n        Dom_1.$$(this.root).trigger(ResultPreviewsManagerEvents_1.ResultPreviewsManagerEvents.populateSearchResultPreviews, populateEventArgs);\r\n        return this.previewsProcessor.processQueries(populateEventArgs.previewsQueries);\r\n    };\r\n    ResultPreviewsManager.prototype.appendSearchResultPreview = function (preview, position) {\r\n        this.resultPreviewsContainer.append(preview.element);\r\n        preview.element.id = \"coveo-result-preview-\" + position;\r\n        var elementDom = Dom_1.$$(preview.element);\r\n        elementDom.setAttribute('aria-selected', 'false');\r\n        elementDom.setAttribute('role', 'option');\r\n        elementDom.on('click', function () { return preview.onSelect(); });\r\n        elementDom.on('keyboardSelect', function () { return preview.onSelect(); });\r\n    };\r\n    ResultPreviewsManager.prototype.appendSearchResultPreviews = function (previews) {\r\n        var _this = this;\r\n        this.resultPreviewsContainer.empty();\r\n        previews.forEach(function (preview, i) { return _this.appendSearchResultPreview(preview, i); });\r\n    };\r\n    ResultPreviewsManager.prototype.displaySuggestionPreviews = function (suggestion, previews) {\r\n        this.lastDisplayedSuggestion = suggestion;\r\n        this.setHasPreviews(previews && previews.length > 0);\r\n        this.element.classList.toggle('magic-box-hasPreviews', this.hasPreviews);\r\n        if (!this.hasPreviews) {\r\n            return;\r\n        }\r\n        this.appendSearchResultPreviews(previews);\r\n    };\r\n    return ResultPreviewsManager;\r\n}());\r\nexports.ResultPreviewsManager = ResultPreviewsManager;\r\n\n\n/***/ }),\n\n/***/ 559:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Dom_1 = __webpack_require__(1);\r\nvar Strings_1 = __webpack_require__(6);\r\nvar AccessibleButton_1 = __webpack_require__(15);\r\nvar MagicBoxClear = /** @class */ (function () {\r\n    function MagicBoxClear(magicBox) {\r\n        this.element = Dom_1.$$('div', {\r\n            className: 'magic-box-clear'\r\n        });\r\n        var clearIcon = Dom_1.$$('div', {\r\n            className: 'magic-box-icon'\r\n        });\r\n        this.element.append(clearIcon.el);\r\n        this.element.insertAfter(Dom_1.$$(magicBox.element).find('input'));\r\n        new AccessibleButton_1.AccessibleButton()\r\n            .withElement(this.element)\r\n            .withLabel(Strings_1.l('Clear'))\r\n            .withSelectAction(function () { return magicBox.clear(); })\r\n            .build();\r\n        this.toggleTabindexAndAriaHidden(false);\r\n    }\r\n    MagicBoxClear.prototype.toggleTabindexAndAriaHidden = function (hasText) {\r\n        var tabindex = hasText ? '0' : '-1';\r\n        this.element.setAttribute('tabindex', tabindex);\r\n        this.element.setAttribute('aria-hidden', \"\" + !hasText);\r\n    };\r\n    return MagicBoxClear;\r\n}());\r\nexports.MagicBoxClear = MagicBoxClear;\r\n\n\n/***/ }),\n\n/***/ 560:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// Querybox.min__5f3280c404a1ee75a113.js","import { SubGrammar } from './Expressions';\r\nimport { Expression } from '../Expression/Expression';\r\nimport { Result } from '../Result/Result';\r\nimport { EndOfInputResult } from '../Result/Result';\r\n\r\nexport const notWordStart = ' ()[],$@\\'\"';\r\nexport const notInWord = ' ()[],:';\r\n\r\nexport const Basic: SubGrammar = {\r\n  basicExpressions: ['Word', 'DoubleQuoted'],\r\n  grammars: {\r\n    DoubleQuoted: '\"[NotDoubleQuote]\"',\r\n    NotDoubleQuote: /[^\"]*/,\r\n    SingleQuoted: \"'[NotSingleQuote]'\",\r\n    NotSingleQuote: /[^']*/,\r\n    Number: /-?(0|[1-9]\\d*)(\\.\\d+)?/,\r\n    Word: (input: string, end: boolean, expression: Expression) => {\r\n      const regex = new RegExp('[^' + notWordStart.replace(/(.)/g, '\\\\$1') + '][^' + notInWord.replace(/(.)/g, '\\\\$1') + ']*');\r\n      let groups = input.match(regex);\r\n      if (groups != null && groups.index != 0) {\r\n        groups = null;\r\n      }\r\n      const result = new Result(groups != null ? groups[0] : null, expression, input);\r\n      if (result.isSuccess() && end && input.length > result.value.length) {\r\n        return new EndOfInputResult(result);\r\n      }\r\n      return result;\r\n    }\r\n  }\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/magicbox/Grammars/Basic.ts","import 'styling/_Querybox';\r\nimport { IBuildingQueryEventArgs, QueryEvents } from '../../events/QueryEvents';\r\nimport { StandaloneSearchInterfaceEvents } from '../../events/StandaloneSearchInterfaceEvents';\r\nimport { exportGlobally } from '../../GlobalExports';\r\nimport { Grammar } from '../../magicbox/Grammar';\r\nimport { createMagicBox, MagicBoxInstance } from '../../magicbox/MagicBox';\r\nimport { Result } from '../../magicbox/Result/Result';\r\nimport { Assert } from '../../misc/Assert';\r\nimport { IAttributeChangedEventArg, MODEL_EVENTS } from '../../models/Model';\r\nimport { QueryStateModel, QUERY_STATE_ATTRIBUTES } from '../../models/QueryStateModel';\r\nimport { l } from '../../strings/Strings';\r\nimport { $$ } from '../../utils/Dom';\r\nimport { analyticsActionCauseList, IAnalyticsNoMeta } from '../Analytics/AnalyticsActionListMeta';\r\nimport { Component } from '../Base/Component';\r\nimport { IComponentBindings } from '../Base/ComponentBindings';\r\nimport { ComponentOptions } from '../Base/ComponentOptions';\r\nimport { Initialization } from '../Base/Initialization';\r\nimport { QueryboxOptionsProcessing } from './QueryboxOptionsProcessing';\r\nimport { QueryboxQueryParameters } from './QueryboxQueryParameters';\r\n\r\nexport interface IQueryboxOptions {\r\n  enableSearchAsYouType?: boolean;\r\n  searchAsYouTypeDelay?: number;\r\n  enableQuerySyntax?: boolean;\r\n  enableWildcards?: boolean;\r\n  enableQuestionMarks?: boolean;\r\n  enableLowercaseOperators?: boolean;\r\n  enablePartialMatch?: boolean;\r\n  partialMatchKeywords?: number;\r\n  partialMatchThreshold?: string;\r\n  placeholder?: string;\r\n  triggerQueryOnClear?: boolean;\r\n}\r\n\r\n/**\r\n * The `Querybox` component renders an input which the end user can interact with to enter and submit queries.\r\n *\r\n * When the end user submits a search request, the `Querybox` component triggers a query and logs the corresponding\r\n * usage analytics data.\r\n *\r\n * For technical reasons, it is necessary to instantiate this component on a `div` element rather than on an `input`\r\n * element.\r\n *\r\n * See also the [`Searchbox`]{@link Searchbox} component, which can automatically instantiate a `Querybox` along with an\r\n * optional [`SearchButton`]{@link SearchButton} component.\r\n */\r\nexport class Querybox extends Component {\r\n  static ID = 'Querybox';\r\n\r\n  static doExport = () => {\r\n    exportGlobally({\r\n      Querybox: Querybox,\r\n      QueryboxQueryParameters: QueryboxQueryParameters\r\n    });\r\n  };\r\n\r\n  /**\r\n   * The options for the Querybox.\r\n   * @componentOptions\r\n   */\r\n  public static options: IQueryboxOptions = {\r\n    /**\r\n     * Whether to enable the search-as-you-type feature.\r\n     *\r\n     * **Note:** Enabling this feature can consume lots of queries per month (QPM), especially if the [`searchAsYouTypeDelay`]{@link Querybox.options.searchAsYouTypeDelay} option is set to a low value.\r\n     *\r\n     * Default value is `false`.\r\n     */\r\n    enableSearchAsYouType: ComponentOptions.buildBooleanOption({ defaultValue: false, section: 'Advanced Options' }),\r\n\r\n    /**\r\n     * If the [`enableSearchAsYouType`]{@link Querybox.options.enableSearchAsYouType} option is `true`, specifies how\r\n     * long to wait (in milliseconds) between each key press before triggering a new query.\r\n     *\r\n     * Default value is `50`. Minimum value is `0`\r\n     */\r\n    searchAsYouTypeDelay: ComponentOptions.buildNumberOption({ defaultValue: 50, min: 0, section: 'Advanced Options' }),\r\n\r\n    /**\r\n     * Specifies whether to interpret special query syntax (e.g., `@objecttype=message`) when the end user types\r\n     * a query in the `Querybox` (see\r\n     * [Coveo Query Syntax Reference](https://www.coveo.com/go?dest=adminhelp70&lcid=9&context=10005)). Setting this\r\n     * option to `true` also causes the `Querybox` to highlight any query syntax.\r\n     *\r\n     * Regardless of the value of this option, the Coveo Cloud REST Search API always interprets expressions surrounded\r\n     * by double quotes (`\"`) as exact phrase match requests.\r\n     *\r\n     * See also [`enableLowercaseOperators`]{@link Querybox.options.enableLowercaseOperators}.\r\n     *\r\n     * **Notes:**\r\n     * > * End user preferences can override the value you specify for this option.\r\n     * >\r\n     * > If the end user selects a value other than **Automatic** for the **Enable query syntax** setting (see\r\n     * > the [`enableQuerySyntax`]{@link ResultsPreferences.options.enableQuerySyntax} option of the\r\n     * > [`ResultsPreferences`]{@link ResultsPreferences} component), the end user preference takes precedence over this\r\n     * > option.\r\n     * >\r\n     * > * On-premises versions of the Coveo Search API require this option to be set to `true` in order to interpret\r\n     * > expressions surrounded by double quotes (`\"`) as exact phrase match requests.\r\n     *\r\n     * Default value is `false`.\r\n     */\r\n    enableQuerySyntax: ComponentOptions.buildBooleanOption({ defaultValue: false, section: 'Advanced Options' }),\r\n\r\n    /**\r\n     * Specifies whether to expand basic expression keywords containing wildcards characters (`*`) to the possible\r\n     * matching keywords in order to broaden the query (see\r\n     * [Using Wildcards in Queries](https://docs.coveo.com/en/1580/)).\r\n     *\r\n     * See also [`enableQuestionMarks`]{@link Querybox.options.enableQuestionMarks}.\r\n     *\r\n     *  **Note:**\r\n     * > If you are using an on-premises version of the Coveo Search API, you need to set the\r\n     * > [`enableQuerySyntax`]{@link Querybox.options.enableQuerySyntax} option to `true` to be able to set\r\n     * > `enableWildcards` to `true`.\r\n     *\r\n     * Default value is `false`.\r\n     */\r\n    enableWildcards: ComponentOptions.buildBooleanOption({ defaultValue: false, section: 'Advanced Options' }),\r\n\r\n    /**\r\n     * If [`enableWildcards`]{@link Querybox.options.enableWildcards} is `true`, specifies whether to expand basic\r\n     * expression keywords containing question mark characters (`?`) to the possible matching keywords in order to\r\n     * broaden the query (see\r\n     * [Using Wildcards in Queries](https://docs.coveo.com/en/1580/)).\r\n     *\r\n     * **Note:**\r\n     * > If you are using an on-premises version of the Coveo Search API, you also need to set the\r\n     * > [`enableQuerySyntax`]{@link Querybox.options.enableQuerySyntax} option to `true` in order to be able to set\r\n     * > `enableQuestionMarks` to `true`.\r\n     *\r\n     * Default value is `false`.\r\n     */\r\n    enableQuestionMarks: ComponentOptions.buildBooleanOption({ defaultValue: false, depend: 'enableWildcards' }),\r\n\r\n    /**\r\n     * If the [`enableQuerySyntax`]{@link Querybox.options.enableQuerySyntax} option is `true`, specifies whether to\r\n     * interpret the `AND`, `NOT`, `OR`, and `NEAR` keywords in the `Querybox` as query operators in the query, even if\r\n     * the end user types those keywords in lowercase.\r\n     *\r\n     * This option applies to all query operators (see\r\n     * [Coveo Query Syntax Reference](https://www.coveo.com/go?dest=adminhelp70&lcid=9&context=10005)).\r\n     *\r\n     * **Example:**\r\n     * > If this option and the `enableQuerySyntax` option are both `true`, the Coveo Platform interprets the `near`\r\n     * > keyword in a query such as `service center near me` as the `NEAR` query operator (not as a query term).\r\n     *\r\n     * > Otherwise, if the `enableQuerySyntax` option is `true` and this option is `false`, the end user has to type the\r\n     * > `NEAR` keyword in uppercase for the Coveo Platform to interpret it as a query operator.\r\n     *\r\n     * Default value is `false`.\r\n     */\r\n    enableLowercaseOperators: ComponentOptions.buildBooleanOption({ defaultValue: false, depend: 'enableQuerySyntax' }),\r\n\r\n    /**\r\n     * Whether to convert a basic expression containing at least a certain number of keywords (see the\r\n     * [`partialMatchKeywords`]{@link Querybox.options.partialMatchKeywords} option) to *partial match expression*, so\r\n     * that items containing at least a certain number of those keywords (see the\r\n     * [`partialMatchThreshold`]{@link Querybox.options.partialMatchThreshold} option) will match the expression.\r\n     *\r\n     * **Notes:**\r\n     * - Only the basic expression of the query (see [`q`]{@link q}) can be converted to a partial match expression.\r\n     * - When the [`enableQuerySyntax`]{@link Querybox.options.enableQuerySyntax} option is set to `true`, this feature has no effect if the basic expression contains advanced query syntax (field expressions, operators, etc.).\r\n     *\r\n     * @notSupportedIn salesforcefree\r\n     */\r\n    enablePartialMatch: ComponentOptions.buildBooleanOption({ defaultValue: false }),\r\n\r\n    /**\r\n     * The minimum number of keywords that need to be present in the basic expression to convert it to a partial match expression.\r\n     *\r\n     * See also the [`partialMatchThreshold`]{@link Querybox.options.partialMatchThreshold} option.\r\n     *\r\n     * **Notes:**\r\n     *\r\n     * - Repeated keywords count as a single keyword.\r\n     * - Thesaurus expansions count towards the `partialMatchKeywords` count.\r\n     * - Stemming expansions **do not** count towards the `partialMatchKeywords` count.\r\n     *\r\n     * @notSupportedIn salesforcefree\r\n     */\r\n    partialMatchKeywords: ComponentOptions.buildNumberOption({ defaultValue: 5, min: 1, depend: 'enablePartialMatch' }),\r\n\r\n    /**\r\n     * An absolute or relative value indicating the minimum number of partial match expression keywords an item must contain to match the expression.\r\n     *\r\n     * See also the [`partialMatchKeywords`]{@link Querybox.options.partialMatchKeywords} option.\r\n     *\r\n     * **Notes:**\r\n     * - A keyword and its stemming expansions count as a single keyword when evaluating whether an item meets the `partialMatchThreshold`.\r\n     * - When a relative `partialMatchThreshold` does not yield a whole integer, the fractional part is truncated (e.g., `3.6` becomes `3`).\r\n     *\r\n     * @notSupportedIn salesforcefree\r\n     */\r\n    partialMatchThreshold: ComponentOptions.buildStringOption({ defaultValue: '50%', depend: 'enablePartialMatch' }),\r\n\r\n    /**\r\n     * Whether to trigger a query when clearing the `Querybox`.\r\n     *\r\n     * Default value is `false`.\r\n     */\r\n    triggerQueryOnClear: ComponentOptions.buildBooleanOption({ defaultValue: false })\r\n  };\r\n  MagicBoxImpl;\r\n\r\n  public magicBox: MagicBoxInstance;\r\n  private lastQuery: string;\r\n  private searchAsYouTypeTimeout: number;\r\n\r\n  /**\r\n   * Creates a new `Querybox component`. Creates a new `Coveo.Magicbox` instance and wraps the Magicbox methods\r\n   * (`onblur`, `onsubmit` etc.). Binds event on `buildingQuery` and before redirection (for standalone box).\r\n   * @param element The HTMLElement on which to instantiate the component. This cannot be an HTMLInputElement for\r\n   * technical reasons.\r\n   * @param options The options for the `Querybox` component.\r\n   * @param bindings The bindings that the component requires to function normally. If not set, these will be\r\n   * automatically resolved (with a slower execution time).\r\n   */\r\n  constructor(public element: HTMLElement, public options?: IQueryboxOptions, public bindings?: IComponentBindings) {\r\n    super(element, Querybox.ID, bindings);\r\n\r\n    if (element instanceof HTMLInputElement) {\r\n      this.logger.error('Querybox cannot be used on an HTMLInputElement');\r\n    }\r\n\r\n    this.options = ComponentOptions.initComponentOptions(element, Querybox, options);\r\n    new QueryboxOptionsProcessing(this).postProcess();\r\n\r\n    $$(this.element).toggleClass('coveo-query-syntax-disabled', this.options.enableQuerySyntax == false);\r\n    this.magicBox = createMagicBox(\r\n      element,\r\n      new Grammar('Query', {\r\n        Query: '[Term*][Spaces?]',\r\n        Term: '[Spaces?][Word]',\r\n        Spaces: / +/,\r\n        Word: /[^ ]+/\r\n      }),\r\n      {\r\n        inline: true\r\n      }\r\n    );\r\n\r\n    const input = $$(this.magicBox.element).find('input');\r\n    if (input) {\r\n      $$(input).setAttribute('aria-label', this.options.placeholder || l('Search'));\r\n    }\r\n\r\n    this.bind.onRootElement(QueryEvents.buildingQuery, (args: IBuildingQueryEventArgs) => this.handleBuildingQuery(args));\r\n    this.bind.onRootElement(StandaloneSearchInterfaceEvents.beforeRedirect, () => this.updateQueryState());\r\n    this.bind.onQueryState(MODEL_EVENTS.CHANGE_ONE, QUERY_STATE_ATTRIBUTES.Q, (args: IAttributeChangedEventArg) =>\r\n      this.handleQueryStateChanged(args)\r\n    );\r\n\r\n    if (this.options.enableSearchAsYouType) {\r\n      $$(this.element).addClass('coveo-search-as-you-type');\r\n      this.magicBox.onchange = () => {\r\n        this.searchAsYouType();\r\n      };\r\n    }\r\n\r\n    this.magicBox.onsubmit = () => {\r\n      this.submit();\r\n    };\r\n\r\n    this.magicBox.onblur = () => {\r\n      this.updateQueryState();\r\n    };\r\n\r\n    this.magicBox.onclear = () => {\r\n      this.updateQueryState();\r\n      if (this.options.triggerQueryOnClear) {\r\n        this.usageAnalytics.logSearchEvent<IAnalyticsNoMeta>(analyticsActionCauseList.searchboxClear, {});\r\n        this.triggerNewQuery(false);\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Adds the current content of the input to the query and triggers a query if the current content of the input has\r\n   * changed since last submit.\r\n   *\r\n   * Also logs the `serachboxSubmit` event in the usage analytics.\r\n   */\r\n  public submit(): void {\r\n    this.magicBox.clearSuggestion();\r\n    this.updateQueryState();\r\n    this.usageAnalytics.logSearchEvent<IAnalyticsNoMeta>(analyticsActionCauseList.searchboxSubmit, {});\r\n    this.triggerNewQuery(false);\r\n  }\r\n\r\n  /**\r\n   * Sets the content of the input.\r\n   *\r\n   * @param text The string to set in the input.\r\n   */\r\n  public setText(text: string): void {\r\n    this.magicBox.setText(text);\r\n    this.updateQueryState();\r\n  }\r\n\r\n  /**\r\n   * Clears the content of the input.\r\n   *\r\n   * See also the [`triggerQueryOnClear`]{@link Querybox.options.triggerQueryOnClear} option.\r\n   */\r\n  public clear(): void {\r\n    this.magicBox.clear();\r\n  }\r\n\r\n  /**\r\n   * Gets the content of the input.\r\n   *\r\n   * @returns {string} The content of the input.\r\n   */\r\n  public getText(): string {\r\n    return this.magicBox.getText();\r\n  }\r\n\r\n  /**\r\n   * Gets the result from the input.\r\n   *\r\n   * @returns {Result} The result.\r\n   */\r\n  public getResult() {\r\n    return this.magicBox.getResult();\r\n  }\r\n\r\n  /**\r\n   * Gets the displayed result from the input.\r\n   *\r\n   * @returns {Result} The displayed result.\r\n   */\r\n  public getDisplayedResult(): Result {\r\n    return this.magicBox.getDisplayedResult();\r\n  }\r\n\r\n  /**\r\n   * Gets the current cursor position in the input.\r\n   *\r\n   * @returns {number} The cursor position (index starts at 0).\r\n   */\r\n  public getCursor(): number {\r\n    return this.magicBox.getCursor();\r\n  }\r\n\r\n  /**\r\n   * Gets the result at cursor position.\r\n   *\r\n   * @param match {string | { (result): boolean }} The match condition.\r\n   *\r\n   * @returns {Result[]} The result.\r\n   */\r\n  public resultAtCursor(match?: string | { (result): boolean }) {\r\n    return this.magicBox.resultAtCursor(match);\r\n  }\r\n\r\n  private handleBuildingQuery(args: IBuildingQueryEventArgs): void {\r\n    Assert.exists(args);\r\n    Assert.exists(args.queryBuilder);\r\n\r\n    this.updateQueryState();\r\n    this.lastQuery = this.magicBox.getText();\r\n    new QueryboxQueryParameters(this.options).addParameters(args.queryBuilder, this.lastQuery);\r\n  }\r\n\r\n  private triggerNewQuery(searchAsYouType: boolean): void {\r\n    clearTimeout(this.searchAsYouTypeTimeout);\r\n    let text = this.magicBox.getText();\r\n    if (this.lastQuery != text && text != null) {\r\n      this.lastQuery = text;\r\n      this.queryController.executeQuery({\r\n        searchAsYouType: searchAsYouType,\r\n        logInActionsHistory: true\r\n      });\r\n    }\r\n  }\r\n\r\n  private updateQueryState(): void {\r\n    this.queryStateModel.set(QueryStateModel.attributesEnum.q, this.magicBox.getText());\r\n  }\r\n\r\n  private handleQueryStateChanged(args: IAttributeChangedEventArg): void {\r\n    Assert.exists(args);\r\n    let q = <string>args.value;\r\n    if (q != this.magicBox.getText()) {\r\n      this.magicBox.setText(q);\r\n    }\r\n  }\r\n\r\n  private searchAsYouType(): void {\r\n    clearTimeout(this.searchAsYouTypeTimeout);\r\n    this.searchAsYouTypeTimeout = window.setTimeout(() => {\r\n      this.usageAnalytics.logSearchAsYouType<IAnalyticsNoMeta>(analyticsActionCauseList.searchboxAsYouType, {});\r\n      this.triggerNewQuery(true);\r\n    }, this.options.searchAsYouTypeDelay);\r\n  }\r\n}\r\nInitialization.registerAutoCreateComponent(Querybox);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/Querybox/Querybox.ts","import { ExpressionRef } from './Expression/ExpressionRef';\r\nimport { Expression, ExpressionDef } from './Expression/Expression';\r\nimport { ExpressionOptions } from './Expression/ExpressionOptions';\r\nimport { ExpressionRegExp } from './Expression/ExpressionRegExp';\r\nimport _ = require('underscore');\r\nimport { ExpressionFunction, ExpressionFunctionArgument } from './Expression/ExpressionFunction';\r\nimport { ExpressionConstant } from './Expression/ExpressionConstant';\r\nimport { ExpressionList } from './Expression/ExpressionList';\r\nimport { Result } from './Result/Result';\r\n\r\nexport class Grammar {\r\n  public start: ExpressionRef;\r\n  public expressions: { [id: string]: Expression } = {};\r\n\r\n  constructor(start: string, expressions: { [id: string]: ExpressionDef } = {}) {\r\n    this.start = new ExpressionRef(start, null, 'start', this);\r\n    this.addExpressions(expressions);\r\n  }\r\n\r\n  public addExpressions(expressions: { [id: string]: ExpressionDef }) {\r\n    _.each(expressions, (basicExpression: ExpressionDef, id: string) => {\r\n      this.addExpression(id, basicExpression);\r\n    });\r\n  }\r\n\r\n  public addExpression(id: string, basicExpression: ExpressionDef) {\r\n    if (id in this.expressions) {\r\n      throw new Error('Grammar already contain the id:' + id);\r\n    }\r\n    this.expressions[id] = Grammar.buildExpression(basicExpression, id, this);\r\n  }\r\n\r\n  public getExpression(id: string) {\r\n    return this.expressions[id];\r\n  }\r\n\r\n  public parse(value: string): Result {\r\n    return this.start.parse(value, true);\r\n  }\r\n\r\n  public static buildExpression(value: ExpressionDef, id: string, grammar: Grammar): Expression {\r\n    const type = typeof value;\r\n    if (type == 'undefined') {\r\n      throw new Error('Invalid Expression: ' + value);\r\n    }\r\n    if (_.isString(value)) {\r\n      return this.buildStringExpression(<string>value, id, grammar);\r\n    }\r\n    if (_.isArray(value)) {\r\n      return new ExpressionOptions(_.map(<string[]>value, (v: string, i) => new ExpressionRef(v, null, id + '_' + i, grammar)), id);\r\n    }\r\n    if (_.isRegExp(value)) {\r\n      return new ExpressionRegExp(<RegExp>value, id, grammar);\r\n    }\r\n    if (_.isFunction(value)) {\r\n      return new ExpressionFunction(<ExpressionFunctionArgument>value, id, grammar);\r\n    }\r\n    throw new Error('Invalid Expression: ' + value);\r\n  }\r\n\r\n  public static buildStringExpression(value: string, id: string, grammar: Grammar): Expression {\r\n    const matchs = Grammar.stringMatch(value, Grammar.spliter);\r\n    const expressions = _.map(matchs, (match: string[], i: number): Expression => {\r\n      if (match[1]) {\r\n        // Ref\r\n        const ref = match[1];\r\n        const occurrence = match[3] ? Number(match[3]) : match[2] || null;\r\n        return new ExpressionRef(ref, occurrence, id + '_' + i, grammar);\r\n      } else {\r\n        // Constant\r\n        return new ExpressionConstant(match[4], id + '_' + i);\r\n      }\r\n    });\r\n    if (expressions.length == 1) {\r\n      const expression = expressions[0];\r\n      expression.id = id;\r\n      return expression;\r\n    } else {\r\n      return new ExpressionList(expressions, id);\r\n    }\r\n  }\r\n\r\n  public static stringMatch(str: string, re: RegExp) {\r\n    const groups: string[][] = [];\r\n    const cloneRegExp = new RegExp(re.source, 'g');\r\n    let group: RegExpExecArray = cloneRegExp.exec(str);\r\n\r\n    while (group !== null) {\r\n      groups.push(group);\r\n      group = cloneRegExp.exec(str);\r\n    }\r\n    return groups;\r\n  }\r\n\r\n  static spliter = /\\[(\\w+)(\\*|\\+|\\?|\\{([1-9][0-9]*)\\})?\\]|(.[^\\[]*)/;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/magicbox/Grammar.ts","import { Expression } from './Expression';\r\n\r\nexport const ExpressionEndOfInput: Expression = {\r\n  id: 'end of input',\r\n  parse: null\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/magicbox/Expression/ExpressionEndOfInput.ts","import { Expression } from './Expression';\r\nimport { Result } from '../Result/Result';\r\nimport { EndOfInputResult } from '../Result/Result';\r\n\r\nexport class ExpressionConstant implements Expression {\r\n  constructor(public value: string, public id: string) {}\r\n\r\n  public parse(input: string, end: boolean): Result {\r\n    // the value must be at the start of the input\r\n    var success = input.indexOf(this.value) == 0;\r\n    var result = new Result(success ? this.value : null, this, input);\r\n    // if is successful and we require the end but the length of parsed is\r\n    // lower than the input length, return a EndOfInputExpected Result\r\n    if (success && end && input.length > this.value.length) {\r\n      return new EndOfInputResult(result);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public toString() {\r\n    return this.value;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/magicbox/Expression/ExpressionConstant.ts","import { Basic } from './Basic';\r\nimport { SubGrammar } from './Expressions';\r\nimport { Date } from './Date';\r\nexport const Field: SubGrammar = {\r\n  basicExpressions: ['FieldSimpleQuery', 'FieldQuery', 'Field'],\r\n  grammars: {\r\n    FieldQuery: '[Field][OptionalSpaces][FieldQueryOperation]',\r\n    FieldQueryOperation: ['FieldQueryValue', 'FieldQueryNumeric'],\r\n    FieldQueryValue: '[FieldOperator][OptionalSpaces][FieldValue]',\r\n    FieldQueryNumeric: '[FieldOperatorNumeric][OptionalSpaces][FieldValueNumeric]',\r\n    FieldSimpleQuery: '[FieldName]:[OptionalSpaces][FieldValue]',\r\n    Field: '@[FieldName]',\r\n    FieldName: /[a-zA-Z][a-zA-Z0-9\\.\\_]*/,\r\n    FieldOperator: /==|=|<>/,\r\n    FieldOperatorNumeric: /<=|>=|<|>/,\r\n    FieldValue: ['DateRange', 'NumberRange', 'DateRelative', 'Date', 'Number', 'FieldValueList', 'FieldValueString'],\r\n    FieldValueNumeric: ['DateRelative', 'Date', 'Number'],\r\n    FieldValueString: ['DoubleQuoted', 'FieldValueNotQuoted'],\r\n    FieldValueList: '([FieldValueString][FieldValueStringList*])',\r\n    FieldValueStringList: '[FieldValueSeparator][FieldValueString]',\r\n    FieldValueSeparator: / *, */,\r\n    FieldValueNotQuoted: /[^ \\(\\)\\[\\],]+/,\r\n    NumberRange: '[Number][Spaces?]..[Spaces?][Number]'\r\n  },\r\n  include: [Date, Basic]\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/magicbox/Grammars/Field.ts","import { defaults, indexOf, find } from 'underscore';\r\nimport { IQuerySuggestSelection, OmniboxEvents } from '../events/OmniboxEvents';\r\nimport { Component } from '../ui/Base/Component';\r\nimport { $$, Dom } from '../utils/Dom';\r\nimport { InputManager } from './InputManager';\r\nimport { ResultPreviewsManager } from './ResultPreviewsManager';\r\nimport { QueryProcessor, ProcessingStatus } from './QueryProcessor';\r\nimport { QueryUtils } from '../utils/QueryUtils';\r\n\r\nexport interface Suggestion {\r\n  text?: string;\r\n  index?: number;\r\n  html?: string;\r\n  dom?: HTMLElement;\r\n  separator?: string;\r\n  advancedQuery?: string;\r\n  onSelect?: () => void;\r\n}\r\n\r\nexport interface SuggestionsManagerOptions {\r\n  suggestionClass?: string;\r\n  selectedClass?: string;\r\n  timeout?: number;\r\n  previewHeaderText?: string;\r\n}\r\n\r\nexport enum Direction {\r\n  Up = 'Up',\r\n  Down = 'Down',\r\n  Left = 'Left',\r\n  Right = 'Right'\r\n}\r\n\r\nexport class SuggestionsManager {\r\n  public suggestionsListbox: Dom;\r\n  private suggestionsProcessor: QueryProcessor<Suggestion>;\r\n  private currentSuggestions: Suggestion[];\r\n  private options: SuggestionsManagerOptions;\r\n  private keyboardFocusedElement: HTMLElement;\r\n  private resultPreviewsManager: ResultPreviewsManager;\r\n  private root: HTMLElement;\r\n  private suggestionListboxID = `coveo-magicbox-suggestions-${QueryUtils.createGuid()}`;\r\n  private suggestionListboxClassName = `coveo-magicbox-suggestions`;\r\n\r\n  public get hasSuggestions() {\r\n    return this.currentSuggestions && this.currentSuggestions.length > 0;\r\n  }\r\n\r\n  public get hasFocus() {\r\n    return $$(this.element).findClass(this.options.selectedClass).length > 0;\r\n  }\r\n\r\n  public get hasPreviews() {\r\n    return this.resultPreviewsManager.hasPreviews;\r\n  }\r\n\r\n  private get focusedSuggestion() {\r\n    return find(this.currentSuggestions, suggestion => suggestion.dom.classList.contains(this.options.selectedClass));\r\n  }\r\n\r\n  constructor(\r\n    private element: HTMLElement,\r\n    private magicBoxContainer: HTMLElement,\r\n    private inputManager: InputManager,\r\n    options?: SuggestionsManagerOptions\r\n  ) {\r\n    this.root = Component.resolveRoot(element);\r\n    this.options = defaults(options, <SuggestionsManagerOptions>{\r\n      suggestionClass: 'magic-box-suggestion',\r\n      selectedClass: 'magic-box-selected'\r\n    });\r\n    // Put in a sane default, so as to not reject every suggestions if not set on initialization\r\n    if (this.options.timeout == undefined) {\r\n      this.options.timeout = 500;\r\n    }\r\n\r\n    $$(this.element).on('mouseover', e => {\r\n      this.handleMouseOver(e);\r\n    });\r\n\r\n    $$(this.element).on('mouseout', e => {\r\n      this.handleMouseOut(e);\r\n    });\r\n\r\n    this.suggestionsProcessor = new QueryProcessor({ timeout: this.options.timeout });\r\n    this.resultPreviewsManager = new ResultPreviewsManager(element, {\r\n      selectedClass: this.options.selectedClass,\r\n      timeout: this.options.timeout\r\n    });\r\n    this.suggestionsListbox = this.buildSuggestionsContainer();\r\n    $$(this.element).append(this.suggestionsListbox.el);\r\n    this.addAccessibilityProperties();\r\n    this.appendEmptySuggestionOption();\r\n  }\r\n\r\n  public handleMouseOver(e) {\r\n    const target = $$(<HTMLElement>e.target);\r\n    const parents = target.parents(this.options.suggestionClass);\r\n    if (target.hasClass(this.options.suggestionClass)) {\r\n      this.processMouseSelection(target.el);\r\n    } else if (parents.length > 0 && this.element.contains(parents[0])) {\r\n      this.processMouseSelection(parents[0]);\r\n    }\r\n  }\r\n\r\n  public handleMouseOut(e) {\r\n    const target = $$(<HTMLElement>e.target);\r\n    const targetParents = target.parents(this.options.suggestionClass);\r\n\r\n    //e.relatedTarget is not available if moving off the browser window or is an empty object `{}` when moving out of namespace in LockerService.\r\n    if (e.relatedTarget && $$(e.relatedTarget).isValid()) {\r\n      const relatedTargetParents = $$(<HTMLElement>e.relatedTarget).parents(this.options.suggestionClass);\r\n      if (target.hasClass(this.options.selectedClass) && !$$(<HTMLElement>e.relatedTarget).hasClass(this.options.suggestionClass)) {\r\n        this.removeSelectedStatus(target.el);\r\n      } else if (relatedTargetParents.length == 0 && targetParents.length > 0) {\r\n        this.removeSelectedStatus(targetParents[0]);\r\n      }\r\n    } else {\r\n      if (target.hasClass(this.options.selectedClass)) {\r\n        this.removeSelectedStatus(target.el);\r\n      } else if (targetParents.length > 0) {\r\n        this.removeSelectedStatus(targetParents[0]);\r\n      }\r\n    }\r\n    $$(this.root).trigger(OmniboxEvents.querySuggestLoseFocus);\r\n  }\r\n\r\n  public async moveDown() {\r\n    await this.move(Direction.Down);\r\n  }\r\n\r\n  public async moveUp() {\r\n    await this.move(Direction.Up);\r\n  }\r\n\r\n  public async moveLeft() {\r\n    await this.move(Direction.Left);\r\n  }\r\n\r\n  public async moveRight() {\r\n    await this.move(Direction.Right);\r\n  }\r\n\r\n  public selectAndReturnKeyboardFocusedElement(): HTMLElement {\r\n    const selected = this.keyboardFocusedElement;\r\n    if (selected) {\r\n      $$(selected).trigger('keyboardSelect');\r\n      // By definition, once an element has been \"selected\" with the keyboard,\r\n      // it is not longer \"active\" since the event has been processed.\r\n      this.keyboardFocusedElement = null;\r\n      this.inputManager.blur();\r\n    }\r\n    return selected;\r\n  }\r\n\r\n  public clearKeyboardFocusedElement() {\r\n    this.keyboardFocusedElement = null;\r\n  }\r\n\r\n  public async receiveSuggestions(suggestions: (Promise<Suggestion[]> | Suggestion[])[]) {\r\n    const { results, status } = await this.suggestionsProcessor.processQueries(suggestions);\r\n    if (status === ProcessingStatus.Overriden) {\r\n      return [];\r\n    }\r\n    this.updateSuggestions(results);\r\n    return results;\r\n  }\r\n\r\n  public clearSuggestions() {\r\n    this.updateSuggestions([]);\r\n  }\r\n\r\n  public updateSuggestions(suggestions: Suggestion[]) {\r\n    this.suggestionsListbox.empty();\r\n    this.inputManager.activeDescendant = null;\r\n\r\n    this.currentSuggestions = suggestions;\r\n\r\n    $$(this.element).toggleClass('magic-box-hasSuggestion', this.hasSuggestions);\r\n    this.inputManager.expanded = this.hasSuggestions;\r\n\r\n    this.resultPreviewsManager.displaySearchResultPreviewsForSuggestion(null);\r\n\r\n    if (!this.hasSuggestions) {\r\n      this.appendEmptySuggestionOption();\r\n      $$(this.root).trigger(OmniboxEvents.querySuggestLoseFocus);\r\n      return;\r\n    }\r\n\r\n    suggestions\r\n      .sort((a, b) => (b.index || 0) - (a.index || 0))\r\n      .forEach(suggestion => {\r\n        const dom = suggestion.dom ? this.modifyDomFromExistingSuggestion(suggestion.dom) : this.createDomFromSuggestion(suggestion);\r\n\r\n        dom.setAttribute('id', `magic-box-suggestion-${indexOf(suggestions, suggestion)}`);\r\n        dom.setAttribute('role', 'option');\r\n        dom.setAttribute('aria-selected', 'false');\r\n        dom.setAttribute('aria-label', dom.text());\r\n\r\n        dom['suggestion'] = suggestion;\r\n        this.suggestionsListbox.append(dom.el);\r\n      });\r\n\r\n    $$(this.root).trigger(OmniboxEvents.querySuggestRendered);\r\n  }\r\n\r\n  public get selectedSuggestion(): Suggestion {\r\n    if (this.htmlElementIsSuggestion(this.keyboardFocusedElement)) {\r\n      return this.returnMoved(this.keyboardFocusedElement) as Suggestion;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  private async processKeyboardSelection(suggestion: HTMLElement) {\r\n    this.addSelectedStatus(suggestion);\r\n    this.keyboardFocusedElement = suggestion;\r\n    await this.updateSelectedSuggestion(this.focusedSuggestion);\r\n  }\r\n\r\n  private processKeyboardPreviewSelection(preview: HTMLElement) {\r\n    this.addSelectedStatus(preview);\r\n    this.keyboardFocusedElement = preview;\r\n  }\r\n\r\n  private processMouseSelection(suggestion: HTMLElement) {\r\n    this.addSelectedStatus(suggestion);\r\n    this.updateSelectedSuggestion(this.focusedSuggestion);\r\n    this.keyboardFocusedElement = null;\r\n  }\r\n\r\n  private buildSuggestionsContainer() {\r\n    return $$('div', {\r\n      className: this.suggestionListboxClassName,\r\n      id: this.suggestionListboxID,\r\n      role: 'listbox',\r\n      ariaLabel: 'Search Suggestions'\r\n    });\r\n  }\r\n\r\n  private createDomFromSuggestion(suggestion: Suggestion) {\r\n    const dom = $$('div', {\r\n      className: `magic-box-suggestion ${this.options.suggestionClass}`\r\n    });\r\n\r\n    suggestion.dom = dom.el;\r\n\r\n    dom.on('click', () => {\r\n      this.selectSuggestion(suggestion);\r\n    });\r\n\r\n    dom.on('keyboardSelect', () => {\r\n      this.selectSuggestion(suggestion);\r\n    });\r\n\r\n    if (suggestion.html) {\r\n      dom.el.innerHTML = suggestion.html;\r\n      return dom;\r\n    }\r\n\r\n    if (suggestion.text) {\r\n      dom.text(suggestion.text);\r\n\r\n      return dom;\r\n    }\r\n\r\n    if (suggestion.separator) {\r\n      dom.addClass('magic-box-suggestion-seperator');\r\n      const suggestionLabel = $$(\r\n        'div',\r\n        {\r\n          className: 'magic-box-suggestion-seperator-label'\r\n        },\r\n        suggestion.separator\r\n      );\r\n      dom.append(suggestionLabel.el);\r\n      return dom;\r\n    }\r\n\r\n    return dom;\r\n  }\r\n\r\n  private selectSuggestion(suggestion: Suggestion) {\r\n    suggestion.onSelect();\r\n    $$(this.root).trigger(OmniboxEvents.querySuggestSelection, <IQuerySuggestSelection>{ suggestion: suggestion.text });\r\n  }\r\n\r\n  private appendEmptySuggestionOption() {\r\n    // Accessibility tools reports that a listbox element must always have at least one child with an option\r\n    // Even if there is no suggestions to show.\r\n    this.suggestionsListbox.append($$('div', { role: 'option' }).el);\r\n  }\r\n\r\n  private modifyDomFromExistingSuggestion(dom: HTMLElement) {\r\n    // this need to be done if the selection is in cache and the dom is set in the suggestion\r\n    this.removeSelectedStatus(dom);\r\n    const found = dom.classList.contains(this.options.suggestionClass) ? dom : $$(dom).find('.' + this.options.suggestionClass);\r\n    this.removeSelectedStatus(found);\r\n    return $$(dom);\r\n  }\r\n\r\n  private async move(direction: Direction) {\r\n    if (this.resultPreviewsManager.focusedPreviewElement) {\r\n      await this.moveWithinPreview(direction);\r\n      return;\r\n    }\r\n    if (direction === Direction.Right || direction === Direction.Left) {\r\n      const firstPreview = this.resultPreviewsManager.previewElements[0];\r\n      if (firstPreview) {\r\n        this.processKeyboardPreviewSelection(firstPreview);\r\n        return;\r\n      }\r\n    }\r\n    await this.moveWithinSuggestion(direction);\r\n  }\r\n\r\n  private async moveWithinSuggestion(direction: Direction) {\r\n    const currentlySelected = $$(this.element).find(`.${this.options.selectedClass}`);\r\n    const selectables = $$(this.element).findAll(`.${this.options.suggestionClass}`);\r\n    const currentIndex = indexOf(selectables, currentlySelected);\r\n\r\n    let index = direction === Direction.Up ? currentIndex - 1 : currentIndex + 1;\r\n    index = (index + selectables.length) % selectables.length;\r\n\r\n    await this.selectQuerySuggest(selectables[index]);\r\n  }\r\n\r\n  private async selectQuerySuggest(suggestion: HTMLElement) {\r\n    if (suggestion) {\r\n      await this.processKeyboardSelection(suggestion);\r\n    } else {\r\n      this.keyboardFocusedElement = null;\r\n      this.inputManager.input.removeAttribute('aria-activedescendant');\r\n    }\r\n\r\n    return suggestion;\r\n  }\r\n\r\n  private async moveWithinPreview(direction: Direction) {\r\n    const newFocusedPreview = this.resultPreviewsManager.getElementInDirection(direction);\r\n    if (!newFocusedPreview) {\r\n      await this.selectQuerySuggest(this.resultPreviewsManager.previewsOwner.dom);\r\n      return;\r\n    }\r\n    this.processKeyboardPreviewSelection(newFocusedPreview);\r\n  }\r\n\r\n  private returnMoved(selected) {\r\n    if (selected) {\r\n      if (selected['suggestion']) {\r\n        return selected['suggestion'];\r\n      }\r\n      if (selected['no-text-suggestion']) {\r\n        return null;\r\n      }\r\n      if (selected instanceof HTMLElement) {\r\n        return {\r\n          text: $$(selected).text()\r\n        };\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  private addSelectedStatus(element: HTMLElement): void {\r\n    const selected = this.element.getElementsByClassName(this.options.selectedClass);\r\n    for (let i = 0; i < selected.length; i++) {\r\n      const elem = <HTMLElement>selected.item(i);\r\n      this.removeSelectedStatus(elem);\r\n    }\r\n    $$(element).addClass(this.options.selectedClass);\r\n    this.updateAreaSelectedIfDefined(element, 'true');\r\n  }\r\n\r\n  private async updateSelectedSuggestion(suggestion: Suggestion) {\r\n    $$(this.root).trigger(OmniboxEvents.querySuggestGetFocus, <IQuerySuggestSelection>{\r\n      suggestion: suggestion.text\r\n    });\r\n    await this.resultPreviewsManager.displaySearchResultPreviewsForSuggestion(suggestion);\r\n  }\r\n\r\n  private removeSelectedStatus(suggestion: HTMLElement): void {\r\n    $$(suggestion).removeClass(this.options.selectedClass);\r\n    this.updateAreaSelectedIfDefined(suggestion, 'false');\r\n  }\r\n\r\n  private updateAreaSelectedIfDefined(element: HTMLElement, value: string): void {\r\n    if ($$(element).getAttribute('aria-selected')) {\r\n      this.inputManager.activeDescendant = element;\r\n      $$(element).setAttribute('aria-selected', value);\r\n    }\r\n  }\r\n\r\n  private addAccessibilityProperties() {\r\n    this.addAccessibilityPropertiesForMagicBox();\r\n    this.addAccessibilityPropertiesForInput();\r\n  }\r\n\r\n  private addAccessibilityPropertiesForMagicBox() {\r\n    const magicBox = $$(this.magicBoxContainer);\r\n\r\n    magicBox.setAttribute('role', 'search');\r\n    magicBox.setAttribute('aria-haspopup', 'listbox');\r\n  }\r\n\r\n  private addAccessibilityPropertiesForInput() {\r\n    const input = $$(this.inputManager.input);\r\n\r\n    this.inputManager.activeDescendant = null;\r\n    this.inputManager.expanded = false;\r\n    input.setAttribute('aria-owns', this.suggestionListboxID);\r\n    input.setAttribute('aria-controls', this.suggestionListboxID);\r\n  }\r\n\r\n  private htmlElementIsSuggestion(selected: HTMLElement) {\r\n    const omniboxSelectables = $$(this.element).findAll(`.${this.options.suggestionClass}`);\r\n    return indexOf(omniboxSelectables, selected) > -1;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/magicbox/SuggestionsManager.ts","import { each, find, isUndefined } from 'underscore';\r\nimport { KEYBOARD } from '../Core';\r\nimport { $$ } from '../utils/Dom';\r\nimport { doMagicBoxExport } from './doMagicBoxExport';\r\nimport { Grammar } from './Grammar';\r\nimport { InputManager } from './InputManager';\r\nimport { MagicBoxClear } from './MagicBoxClear';\r\nimport { Result } from './Result/Result';\r\nimport { Suggestion, SuggestionsManager } from './SuggestionsManager';\r\n\r\nexport interface Options {\r\n  inline?: boolean;\r\n  selectableSuggestionClass?: string;\r\n  selectedSuggestionClass?: string;\r\n  suggestionTimeout?: number;\r\n}\r\n\r\nexport class MagicBoxInstance {\r\n  public onblur: () => void;\r\n  public onfocus: () => void;\r\n  public onchange: () => void;\r\n  public onSuggestions: (suggestions: Suggestion[]) => void;\r\n  public onsubmit: () => void;\r\n  public onselect: (suggestion: Suggestion) => void;\r\n  public onclear: () => void;\r\n  public onmove: () => void;\r\n  public ontabpress: () => void;\r\n\r\n  public getSuggestions: () => Array<Promise<Suggestion[]> | Suggestion[]>;\r\n\r\n  private inputManager: InputManager;\r\n  private suggestionsManager: SuggestionsManager;\r\n  private magicBoxClear: MagicBoxClear;\r\n\r\n  private lastSuggestions: Suggestion[] = [];\r\n\r\n  private result: Result;\r\n  private displayedResult: Result;\r\n\r\n  private get firstSuggestionWithText(): Suggestion {\r\n    return find(this.lastSuggestions, suggestion => suggestion.text);\r\n  }\r\n\r\n  private get firstSuggestionText() {\r\n    const firstSuggestionWithText = this.firstSuggestionWithText;\r\n    return firstSuggestionWithText ? firstSuggestionWithText.text : '';\r\n  }\r\n\r\n  constructor(public element: HTMLElement, public grammar: Grammar, public options: Options = {}) {\r\n    if (isUndefined(this.options.inline)) {\r\n      this.options.inline = false;\r\n    }\r\n    $$(element).addClass('magic-box');\r\n    if (this.options.inline) {\r\n      $$(element).addClass('magic-box-inline');\r\n    }\r\n\r\n    this.result = this.grammar.parse('');\r\n    this.displayedResult = this.result.clean();\r\n\r\n    let inputContainer = $$(element).find('.magic-box-input');\r\n    if (!inputContainer) {\r\n      inputContainer = document.createElement('div');\r\n      inputContainer.className = 'magic-box-input';\r\n      element.appendChild(inputContainer);\r\n    }\r\n\r\n    this.inputManager = new InputManager(\r\n      inputContainer,\r\n      (text, wordCompletion) => {\r\n        if (!wordCompletion) {\r\n          this.setText(text);\r\n          this.addSuggestions();\r\n          this.onchange && this.onchange();\r\n        } else {\r\n          this.setText(text);\r\n          this.onselect && this.onselect(this.firstSuggestionWithText);\r\n        }\r\n      },\r\n      this\r\n    );\r\n\r\n    this.inputManager.ontabpress = () => {\r\n      this.ontabpress && this.ontabpress();\r\n    };\r\n\r\n    const existingValue = this.inputManager.getValue();\r\n    if (existingValue) {\r\n      this.displayedResult.input = existingValue;\r\n    }\r\n\r\n    this.inputManager.setResult(this.displayedResult);\r\n\r\n    const suggestionsContainer = document.createElement('div');\r\n    suggestionsContainer.className = 'magic-box-suggestions';\r\n    this.element.appendChild(suggestionsContainer);\r\n\r\n    this.suggestionsManager = new SuggestionsManager(suggestionsContainer, this.element, this.inputManager, {\r\n      suggestionClass: this.options.selectableSuggestionClass,\r\n      selectedClass: this.options.selectedSuggestionClass,\r\n      timeout: this.options.suggestionTimeout\r\n    });\r\n\r\n    this.magicBoxClear = new MagicBoxClear(this);\r\n    this.setupHandler();\r\n  }\r\n\r\n  public getResult() {\r\n    return this.result;\r\n  }\r\n\r\n  public getDisplayedResult() {\r\n    return this.displayedResult;\r\n  }\r\n\r\n  public setText(text: string) {\r\n    $$(this.element).toggleClass('magic-box-notEmpty', text.length > 0);\r\n    this.magicBoxClear.toggleTabindexAndAriaHidden(text.length > 0);\r\n\r\n    this.result = this.grammar.parse(text);\r\n    this.displayedResult = this.result.clean();\r\n\r\n    this.inputManager.setResult(this.displayedResult);\r\n  }\r\n\r\n  public setCursor(index: number) {\r\n    this.inputManager.setCursor(index);\r\n  }\r\n\r\n  public getCursor() {\r\n    return this.inputManager.getCursor();\r\n  }\r\n\r\n  public resultAtCursor(match?: string | { (result: Result): boolean }): Result[] {\r\n    return this.displayedResult.resultAt(this.getCursor(), match);\r\n  }\r\n\r\n  private setupHandler() {\r\n    this.inputManager.onblur = () => {\r\n      $$(this.element).removeClass('magic-box-hasFocus');\r\n      this.onblur && this.onblur();\r\n      if (!this.options.inline) {\r\n        this.clearSuggestion();\r\n      }\r\n    };\r\n\r\n    this.inputManager.onfocus = () => {\r\n      $$(this.element).addClass('magic-box-hasFocus');\r\n      this.addSuggestions();\r\n      this.onfocus && this.onfocus();\r\n    };\r\n\r\n    this.inputManager.onkeydown = (key: number) => {\r\n      if (this.shouldMoveInSuggestions(key)) {\r\n        return false;\r\n      }\r\n      if (key === KEYBOARD.ENTER) {\r\n        const suggestion = this.suggestionsManager.selectAndReturnKeyboardFocusedElement();\r\n        if (suggestion == null) {\r\n          this.onsubmit && this.onsubmit();\r\n        }\r\n        return false;\r\n      } else if (key === KEYBOARD.ESCAPE) {\r\n        this.clearSuggestion();\r\n        this.blur();\r\n      } else {\r\n        this.suggestionsManager.clearKeyboardFocusedElement();\r\n      }\r\n      return true;\r\n    };\r\n\r\n    this.inputManager.onchangecursor = () => {\r\n      this.addSuggestions();\r\n    };\r\n\r\n    this.inputManager.onkeyup = (key: number) => {\r\n      this.onmove && this.onmove();\r\n      if (!this.shouldMoveInSuggestions(key)) {\r\n        return true;\r\n      }\r\n      switch (key) {\r\n        case KEYBOARD.UP_ARROW:\r\n          this.suggestionsManager.moveUp();\r\n          break;\r\n        case KEYBOARD.DOWN_ARROW:\r\n          this.suggestionsManager.moveDown();\r\n          break;\r\n        case KEYBOARD.LEFT_ARROW:\r\n          this.suggestionsManager.moveLeft();\r\n          break;\r\n        case KEYBOARD.RIGHT_ARROW:\r\n          this.suggestionsManager.moveRight();\r\n          break;\r\n      }\r\n      if (this.suggestionsManager.selectedSuggestion) {\r\n        this.focusOnSuggestion(this.suggestionsManager.selectedSuggestion);\r\n      }\r\n      this.onchange && this.onchange();\r\n      return false;\r\n    };\r\n  }\r\n\r\n  public async addSuggestions() {\r\n    const suggestions = await this.suggestionsManager.receiveSuggestions(this.getSuggestions != null ? this.getSuggestions() : []);\r\n    this.addSelectEventHandlers(suggestions);\r\n    this.inputManager.setWordCompletion(this.firstSuggestionText);\r\n    this.onSuggestions(suggestions);\r\n  }\r\n\r\n  private shouldMoveInSuggestions(key: KEYBOARD) {\r\n    switch (key) {\r\n      case KEYBOARD.UP_ARROW:\r\n      case KEYBOARD.DOWN_ARROW:\r\n        return true;\r\n      case KEYBOARD.LEFT_ARROW:\r\n      case KEYBOARD.RIGHT_ARROW:\r\n        if (this.suggestionsManager.hasFocus && this.suggestionsManager.hasPreviews) {\r\n          return true;\r\n        }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private addSelectEventHandlers(suggestions: Suggestion[]) {\r\n    each(suggestions, (suggestion: Suggestion) => {\r\n      if (suggestion.onSelect == null && suggestion.text != null) {\r\n        suggestion.onSelect = () => {\r\n          this.setText(suggestion.text);\r\n          this.onselect && this.onselect(suggestion);\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  public focus() {\r\n    $$(this.element).addClass('magic-box-hasFocus');\r\n    this.inputManager.focus();\r\n  }\r\n\r\n  public blur() {\r\n    this.inputManager.blur();\r\n  }\r\n\r\n  public async clearSuggestion() {\r\n    this.inputManager.setWordCompletion(null);\r\n    this.suggestionsManager.clearSuggestions();\r\n    this.onSuggestions([]);\r\n  }\r\n\r\n  private focusOnSuggestion(suggestion: Suggestion) {\r\n    if (suggestion == null || suggestion.text == null) {\r\n      this.inputManager.setResult(this.displayedResult, this.firstSuggestionText);\r\n    } else {\r\n      this.inputManager.setResult(this.grammar.parse(suggestion.text).clean(), suggestion.text);\r\n    }\r\n  }\r\n\r\n  public getText() {\r\n    return this.inputManager.getValue();\r\n  }\r\n\r\n  public getWordCompletion() {\r\n    return this.inputManager.getWordCompletion();\r\n  }\r\n\r\n  public clear() {\r\n    this.setText('');\r\n    this.clearSuggestion();\r\n    this.focus();\r\n    this.onclear && this.onclear();\r\n  }\r\n\r\n  public hasSuggestions() {\r\n    return this.suggestionsManager.hasSuggestions;\r\n  }\r\n}\r\n\r\nexport function createMagicBox(element: HTMLElement, grammar: Grammar, options?: Options) {\r\n  return new MagicBoxInstance(element, grammar, options);\r\n}\r\n\r\nexport function requestAnimationFrame(callback: () => void) {\r\n  if ('requestAnimationFrame' in window) {\r\n    return window.requestAnimationFrame(callback);\r\n  }\r\n  return setTimeout(callback);\r\n}\r\n\r\ndoMagicBoxExport();\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/magicbox/MagicBox.ts","import _ = require('underscore');\r\n\r\nexport class MagicBoxUtils {\r\n  static escapeRegExp(str) {\r\n    return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\r\n  }\r\n\r\n  static highlightText(\r\n    text: string,\r\n    highligth: string,\r\n    ignoreCase = false,\r\n    matchClass: string = 'magic-box-hightlight',\r\n    doNotMatchClass: string = ''\r\n  ) {\r\n    if (highligth.length == 0) {\r\n      return text;\r\n    }\r\n    const escaped = this.escapeRegExp(highligth);\r\n    const stringRegex = '(' + escaped + ')|(.*?(?=' + escaped + ')|.+)';\r\n    const regex = new RegExp(stringRegex, ignoreCase ? 'gi' : 'g');\r\n    return text.replace(regex, (text, match, notmatch) => this.escapeText(match != null ? matchClass : doNotMatchClass, text));\r\n  }\r\n\r\n  private static escapeText = (classname: string, text: string) => {\r\n    return `<span class=\"${classname}\">${_.escape(text)}</span>`;\r\n  };\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/magicbox/MagicBoxUtils.ts","import { Expression } from './Expression';\r\nimport { Result } from '../Result/Result';\r\nimport { Grammar } from '../Grammar';\r\nimport { RefResult } from '../Result/RefResult';\r\nimport { ExpressionEndOfInput } from './ExpressionEndOfInput';\r\nimport _ = require('underscore');\r\n\r\nexport class ExpressionRef implements Expression {\r\n  constructor(public ref: string, public occurrence: string | number, public id: string, public grammar: Grammar) {}\r\n\r\n  parse(input: string, end: boolean): Result {\r\n    var ref = this.grammar.getExpression(this.ref);\r\n    if (ref == null) {\r\n      throw new Error('Expression not found:' + this.ref);\r\n    }\r\n    if (this.occurrence == '?' || this.occurrence == null) {\r\n      return this.parseOnce(input, end, ref);\r\n    } else {\r\n      return this.parseMany(input, end, ref);\r\n    }\r\n  }\r\n\r\n  parseOnce(input: string, end: boolean, ref: Expression): Result {\r\n    var refResult = ref.parse(input, end);\r\n    var success = refResult.isSuccess();\r\n    if (!success && this.occurrence == '?') {\r\n      if (end) {\r\n        // if end was found\r\n        if (input.length == 0) {\r\n          return new RefResult([], this, input, refResult);\r\n        }\r\n        // if end was not found and all error expression are EndOfInput, reparse with end = false.\r\n        if (_.all(refResult.getBestExpect(), expect => expect.expression == ExpressionEndOfInput)) {\r\n          return new RefResult([new Result(null, ExpressionEndOfInput, input)], this, input, refResult);\r\n        }\r\n        return refResult;\r\n      }\r\n      // the ref is not required and it do not need to end the input\r\n      return new RefResult([], this, input, null);\r\n    }\r\n    return new RefResult([refResult], this, input, success ? null : refResult);\r\n  }\r\n\r\n  parseMany(input: string, end: boolean, ref: Expression) {\r\n    var subResults: Result[] = [];\r\n    var subResult: Result;\r\n    var subInput = input;\r\n    var success: boolean;\r\n\r\n    // try to parse until it do not match, do not manage the end yet\r\n    do {\r\n      subResult = ref.parse(subInput, false);\r\n      success = subResult.isSuccess();\r\n      if (success) {\r\n        subResults.push(subResult);\r\n        subInput = subInput.substr(subResult.getLength());\r\n      }\r\n    } while (success && subResult.input != subInput);\r\n\r\n    // minimal occurance of a ref\r\n    var requiredOccurance = _.isNumber(this.occurrence) ? <number>this.occurrence : this.occurrence == '+' ? 1 : 0;\r\n\r\n    // if the minimal occurance is not reached add the fail result to the list\r\n    if (subResults.length < requiredOccurance) {\r\n      subResults.push(subResult);\r\n    } else if (end) {\r\n      // if there is at least one match, check if the last match is at the end\r\n      if (subResults.length > 0) {\r\n        var last = _.last(subResults);\r\n        subResult = ref.parse(last.input, true);\r\n        if (subResult.isSuccess()) {\r\n          // if successful, replace the last subResult by the one with end\r\n          subResults[subResults.length - 1] = subResult;\r\n        } else {\r\n          // if not successful, we keep the last successful result and we add a endOfInputExpected Result after it\r\n          subResults.push(new Result(null, ExpressionEndOfInput, last.input.substr(last.getLength())));\r\n          // we parse back the last with the length of the successful Result (at the same place we put the endOfInputExpected) and put it in failAttempt\r\n          subResult = ref.parse(last.input.substr(last.getLength()), true);\r\n        }\r\n      } else if (input.length != 0) {\r\n        // if there is no result at all and we are not at the end, return a endOfInputExpected Result\r\n        var endOfInput = new Result(null, ExpressionEndOfInput, input);\r\n        return new RefResult([endOfInput], this, input, subResult);\r\n      }\r\n    }\r\n    return new RefResult(subResults, this, input, subResult);\r\n  }\r\n\r\n  public toString() {\r\n    return this.id;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/magicbox/Expression/ExpressionRef.ts","import { Result } from './Result';\r\nimport { Expression } from '../Expression/Expression';\r\nimport _ = require('underscore');\r\n\r\nexport class RefResult extends Result {\r\n  public failAttempt: Result;\r\n  constructor(results: Result[], public expression: Expression, public input: string, lastResult: Result) {\r\n    super(results, expression, input);\r\n    if (_.last(results) != lastResult) {\r\n      this.failAttempt = lastResult;\r\n      if (this.failAttempt != null) {\r\n        this.failAttempt.parent = this;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Return all fail result.\r\n   */\r\n  public getExpect(): Result[] {\r\n    var expect = super.getExpect();\r\n    // add the failAttempt to the expect\r\n    if (this.failAttempt != null) {\r\n      return expect.concat(this.failAttempt.getExpect());\r\n    }\r\n    return expect;\r\n  }\r\n\r\n  /**\r\n   * Clean the result to have the most relevant result. If the result is successful just return a clone of it.\r\n   */\r\n  public clean(path?: Result[]): Result {\r\n    // if there is no failAttempt, we will use the default clean\r\n    if (this.failAttempt != null && (path != null || !this.isSuccess())) {\r\n      path = path || _.last(this.getBestExpect()).path(this);\r\n      var next = _.first(path);\r\n      // if the next is in the subResults, not the failAttempt, do the default clean;\r\n      if (next != null && next == this.failAttempt) {\r\n        var last = _.last(this.subResults);\r\n        // if the last is not successful, remove it because we want the failAttempt path\r\n        var subResults: Result[] = _.map(last != null && last.isSuccess() ? this.subResults : _.initial(this.subResults), subResult =>\r\n          subResult.clean()\r\n        );\r\n        subResults.push(next.clean(_.rest(path)));\r\n        return new Result(subResults, this.expression, this.input);\r\n      }\r\n    }\r\n    return super.clean(path);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/magicbox/Result/RefResult.ts","import { Expression } from './Expression';\r\nimport { ExpressionRef } from './ExpressionRef';\r\nimport { Result } from '../Result/Result';\r\nimport { OptionResult } from '../Result/OptionResult';\r\n\r\nexport class ExpressionOptions implements Expression {\r\n  constructor(public parts: ExpressionRef[], public id: string) {}\r\n\r\n  parse(input: string, end: boolean): Result {\r\n    var failAttempt: Result[] = [];\r\n    for (var i = 0; i < this.parts.length; i++) {\r\n      var subResult = this.parts[i].parse(input, end);\r\n      if (subResult.isSuccess()) {\r\n        return new OptionResult(subResult, this, input, failAttempt);\r\n      }\r\n      failAttempt.push(subResult);\r\n    }\r\n    return new OptionResult(null, this, input, failAttempt);\r\n  }\r\n\r\n  public toString() {\r\n    return this.id;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/magicbox/Expression/ExpressionOptions.ts","import { Result } from './Result';\r\nimport _ = require('underscore');\r\nimport { Expression } from '../Expression/Expression';\r\n\r\nexport class OptionResult extends Result {\r\n  constructor(private result: Result, public expression: Expression, public input: string, public failAttempt: Result[]) {\r\n    super(result != null ? [result] : null, expression, input);\r\n    _.forEach(this.failAttempt, subResult => {\r\n      subResult.parent = this;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Return all fail result.\r\n   */\r\n  public getExpect(): Result[] {\r\n    var expect = [];\r\n    if (this.result != null) {\r\n      expect = this.result.getExpect();\r\n    }\r\n    expect = _.reduce(this.failAttempt, (expect: Result[], result: Result) => expect.concat(result.getExpect()), expect);\r\n    if (expect.length > 0 && _.all(expect, result => result.input == this.input)) {\r\n      return [this];\r\n    }\r\n    return expect;\r\n  }\r\n\r\n  /**\r\n   * Clean the result to have the most relevant result. If the result is successful just return a clone of it.\r\n   */\r\n  public clean(path?: Result[]): Result {\r\n    if (path != null || !this.isSuccess()) {\r\n      // Result will be a ref. We skip it for cleaner tree.\r\n      path = _.rest(path || _.last(this.getBestExpect()).path(this));\r\n      // next can be Result or one of the failAttempt. In both case we have only one child\r\n      var next = _.first(path);\r\n      if (next == null) {\r\n        return new Result(null, this.expression, this.input);\r\n      }\r\n      return new Result([next.clean(_.rest(path))], this.expression, this.input);\r\n    }\r\n    // Result will be a ref. We skip it for cleaner tree.\r\n    return new Result(_.map(this.result.subResults, subResult => subResult.clean()), this.expression, this.input);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/magicbox/Result/OptionResult.ts","import { Expression } from './Expression';\r\nimport { Grammar } from '../Grammar';\r\nimport { Result } from '../Result/Result';\r\nimport { EndOfInputResult } from '../Result/Result';\r\n\r\nexport class ExpressionRegExp implements Expression {\r\n  constructor(public value: RegExp, public id: string, grammar: Grammar) {}\r\n\r\n  parse(input: string, end: boolean): Result {\r\n    var groups = input.match(this.value);\r\n    // if the RegExp do not match at the start, ignore it\r\n    if (groups != null && groups.index != 0) {\r\n      groups = null;\r\n    }\r\n    var result = new Result(groups != null ? groups[0] : null, this, input);\r\n    // if is successful and we require the end but the length of parsed is\r\n    // lower than the input length, return a EndOfInputExpected Result\r\n    if (result.isSuccess() && end && input.length > result.value.length) {\r\n      return new EndOfInputResult(result);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public toString() {\r\n    return this.id;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/magicbox/Expression/ExpressionRegExp.ts","import { Expression } from './Expression';\r\nimport { Result } from '../Result/Result';\r\nimport { Grammar } from '../Grammar';\r\n\r\nexport interface ExpressionFunctionArgument {\r\n  (input: string, end: boolean, expression: Expression): Result;\r\n}\r\n\r\nexport class ExpressionFunction implements Expression {\r\n  constructor(public func: ExpressionFunctionArgument, public id: string, public grammar: Grammar) {}\r\n\r\n  public parse(input: string, end: boolean): Result {\r\n    return this.func(input, end, this);\r\n  }\r\n\r\n  public toString() {\r\n    return this.id;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/magicbox/Expression/ExpressionFunction.ts","import { Expression } from '../Expression/Expression';\r\nimport { ExpressionEndOfInput } from '../Expression/ExpressionEndOfInput';\r\nimport { ExpressionConstant } from '../Expression/ExpressionConstant';\r\nimport _ = require('underscore');\r\n\r\nexport class Result {\r\n  public value: string;\r\n  public subResults: Result[];\r\n  public parent: Result;\r\n\r\n  constructor(value: string | Result[], public expression: Expression, public input: string) {\r\n    if (_.isString(value)) {\r\n      this.value = <string>value;\r\n    } else if (_.isArray(value)) {\r\n      this.subResults = <Result[]>value;\r\n      _.forEach(this.subResults, (subResult: Result) => {\r\n        subResult.parent = this;\r\n      });\r\n    }\r\n  }\r\n\r\n  public isSuccess() {\r\n    // if null is the value, this mean the expression could not parse this input\r\n    return this.value != null || (this.subResults != null && _.all(this.subResults, subResult => subResult.isSuccess()));\r\n  }\r\n\r\n  /**\r\n   * Return path to this result ([parent.parent, parent, this])\r\n   */\r\n  public path(until?: Result): Result[] {\r\n    var path: Result[] = this.parent != null && this.parent != until ? this.parent.path(until) : [];\r\n    path.push(this);\r\n    return path;\r\n  }\r\n\r\n  /**\r\n   * Return the closest parent that match the condition (can be it-self). If match is a string, it will search for the result expresion id\r\n   */\r\n  public findParent(match: string | { (result: Result): boolean }): Result {\r\n    var parent = <Result>this;\r\n    var iterator = _.isString(match) ? (result: Result) => match == result.expression.id : <{ (result: Result): boolean }>match;\r\n    while (parent != null && !iterator(parent)) {\r\n      parent = parent.parent;\r\n    }\r\n    return parent;\r\n  }\r\n\r\n  /**\r\n   * Return the first child that match the condition (can be it-self). If match is a string, it will search for the result expresion id\r\n   */\r\n  public find(match: string | { (result: Result): boolean }): Result {\r\n    var iterator = _.isString(match) ? (result: Result) => match == result.expression.id : <{ (result: Result): boolean }>match;\r\n    if (iterator(this)) {\r\n      return this;\r\n    }\r\n    if (this.subResults) {\r\n      for (var i = 0; i < this.subResults.length; i++) {\r\n        var subResultFind = this.subResults[i].find(iterator);\r\n        if (subResultFind) {\r\n          return subResultFind;\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Return all children that match the condition (can be it-self). If match is a string, it will search for the result expresion id\r\n   */\r\n  public findAll(match: string | { (result: Result): boolean }): Result[] {\r\n    var results: Result[] = [];\r\n    var iterator = _.isString(match) ? (result: Result) => match == result.expression.id : <{ (result: Result): boolean }>match;\r\n    if (iterator(this)) {\r\n      results.push(this);\r\n    }\r\n    if (this.subResults) {\r\n      results = _.reduce(this.subResults, (results, subResult: Result) => results.concat(subResult.findAll(iterator)), results);\r\n    }\r\n    return results;\r\n  }\r\n\r\n  /**\r\n   * Return the first child that match the condition (can be it-self). If match is a string, it will search for the result expresion id\r\n   */\r\n  public resultAt(index: number, match?: string | { (result: Result): boolean }): Result[] {\r\n    if (index < 0 || index > this.getLength()) {\r\n      return [];\r\n    }\r\n    if (match != null) {\r\n      if (_.isString(match)) {\r\n        if (match == this.expression.id) {\r\n          return [this];\r\n        }\r\n      } else {\r\n        if ((<{ (result: Result): boolean }>match)(this)) {\r\n          return [this];\r\n        }\r\n      }\r\n    } else {\r\n      var value = this.value == null && this.subResults == null ? this.input : this.value;\r\n      if (value != null) {\r\n        return [this];\r\n      }\r\n    }\r\n\r\n    if (this.subResults != null) {\r\n      var results = [];\r\n      for (var i = 0; i < this.subResults.length; i++) {\r\n        var subResult = this.subResults[i];\r\n        results = results.concat(subResult.resultAt(index, match));\r\n        index -= subResult.getLength();\r\n        if (index < 0) {\r\n          break;\r\n        }\r\n      }\r\n      return results;\r\n    }\r\n\r\n    return [];\r\n  }\r\n\r\n  /**\r\n   * Return all fail result.\r\n   */\r\n  public getExpect(): Result[] {\r\n    if (this.value == null && this.subResults == null) {\r\n      return [this];\r\n    }\r\n    if (this.subResults != null) {\r\n      return _.reduce(this.subResults, (expect: Result[], result: Result) => expect.concat(result.getExpect()), []);\r\n    }\r\n    return [];\r\n  }\r\n\r\n  /**\r\n   * Return the best fail result (The farthest result who got parsed). We also remove duplicate and always return the simplest result of a kind\r\n   */\r\n  public getBestExpect(): Result[] {\r\n    var expects = this.getExpect();\r\n    var groups = _.groupBy(expects, expect => expect.input);\r\n    var key = _.last(\r\n      _.keys(groups).sort((a, b) => {\r\n        return b.length - a.length;\r\n      })\r\n    );\r\n    var bestResults = groups[key];\r\n    var groups = _.groupBy(bestResults, expect => expect.expression.id);\r\n    return _.map(groups, (bestResults: Result[]): Result => {\r\n      return _.chain(bestResults)\r\n        .map(result => {\r\n          return {\r\n            path: result.path().length,\r\n            result: result\r\n          };\r\n        })\r\n        .sortBy('path')\r\n        .pluck('result')\r\n        .first()\r\n        .value();\r\n    });\r\n  }\r\n\r\n  public getHumanReadableExpect() {\r\n    var expect = this.getBestExpect();\r\n    var input = expect.length > 0 ? _.last(expect).input : '';\r\n    return (\r\n      'Expected ' +\r\n      _.map(expect, (result: Result) => result.getHumanReadable()).join(' or ') +\r\n      ' but ' +\r\n      (input.length > 0 ? JSON.stringify(input[0]) : 'end of input') +\r\n      ' found.'\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Return a string that represent what is before this result\r\n   */\r\n  public before(): string {\r\n    if (this.parent == null) {\r\n      return '';\r\n    }\r\n    var index = _.indexOf(this.parent.subResults, this);\r\n    return (\r\n      this.parent.before() +\r\n      _.chain(this.parent.subResults)\r\n        .first(index)\r\n        .map(subResult => subResult.toString())\r\n        .join('')\r\n        .value()\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Return a string that represent what is after this result\r\n   */\r\n  public after(): string {\r\n    if (this.parent == null) {\r\n      return '';\r\n    }\r\n    var index = _.indexOf(this.parent.subResults, this);\r\n    return (\r\n      _.chain(this.parent.subResults)\r\n        .last(this.parent.subResults.length - index - 1)\r\n        .map(subResult => subResult.toString())\r\n        .join('')\r\n        .value() + this.parent.after()\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Return the length of the result\r\n   */\r\n  public getLength() {\r\n    if (this.value != null) {\r\n      return this.value.length;\r\n    }\r\n\r\n    if (this.subResults != null) {\r\n      return _.reduce(this.subResults, (length: number, subResult: Result) => length + subResult.getLength(), 0);\r\n    }\r\n\r\n    return this.input.length;\r\n  }\r\n\r\n  public toHtmlElement(): HTMLElement {\r\n    var element = document.createElement('span');\r\n    var id = this.expression != null ? this.expression.id : null;\r\n\r\n    if (id != null) {\r\n      element.setAttribute('data-id', id);\r\n    }\r\n\r\n    element.setAttribute('data-success', this.isSuccess().toString());\r\n\r\n    if (this.value != null) {\r\n      element.appendChild(document.createTextNode(this.value));\r\n      element.setAttribute('data-value', this.value);\r\n    } else if (this.subResults != null) {\r\n      _.each(this.subResults, (subResult: Result) => {\r\n        element.appendChild(subResult.toHtmlElement());\r\n      });\r\n    } else {\r\n      element.appendChild(document.createTextNode(this.input));\r\n      element.setAttribute('data-input', this.input);\r\n      element.className = 'magic-box-error' + (this.input.length > 0 ? '' : ' magic-box-error-empty');\r\n    }\r\n\r\n    element['result'] = this;\r\n\r\n    return element;\r\n  }\r\n\r\n  /**\r\n   * Clean the result to have the most relevant result. If the result is successful just return a clone of it.\r\n   */\r\n  public clean(path?: Result[]): Result {\r\n    if (path != null || !this.isSuccess()) {\r\n      path = path || _.last(this.getBestExpect()).path(this);\r\n      var next = _.first(path);\r\n      if (next != null) {\r\n        var nextIndex = _.indexOf(this.subResults, next);\r\n        var subResults: Result[] = nextIndex == -1 ? [] : _.map(_.first(this.subResults, nextIndex), subResult => subResult.clean());\r\n        subResults.push(next.clean(_.rest(path)));\r\n        return new Result(subResults, this.expression, this.input);\r\n      } else {\r\n        return new Result(null, this.expression, this.input);\r\n      }\r\n    }\r\n    if (this.value != null) {\r\n      return new Result(this.value, this.expression, this.input);\r\n    }\r\n    if (this.subResults != null) {\r\n      return new Result(_.map(this.subResults, subResult => subResult.clean()), this.expression, this.input);\r\n    }\r\n  }\r\n\r\n  public clone(): Result {\r\n    if (this.value != null) {\r\n      return new Result(this.value, this.expression, this.input);\r\n    }\r\n    if (this.subResults != null) {\r\n      return new Result(_.map(this.subResults, subResult => subResult.clone()), this.expression, this.input);\r\n    }\r\n    return new Result(null, this.expression, this.input);\r\n  }\r\n\r\n  public toString() {\r\n    if (this.value != null) {\r\n      return this.value;\r\n    }\r\n    if (this.subResults != null) {\r\n      return _.map(this.subResults, subresult => subresult.toString()).join('');\r\n    }\r\n    return this.input;\r\n  }\r\n\r\n  public getHumanReadable() {\r\n    if (this.expression instanceof ExpressionConstant) {\r\n      return JSON.stringify((<ExpressionConstant>this.expression).value);\r\n    }\r\n    return this.expression.id;\r\n  }\r\n}\r\n\r\nexport class EndOfInputResult extends Result {\r\n  constructor(result: Result) {\r\n    super([result], ExpressionEndOfInput, result.input);\r\n    var endOfInput = new Result(null, ExpressionEndOfInput, result.input.substr(result.getLength()));\r\n    endOfInput.parent = this;\r\n    this.subResults.push(endOfInput);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/magicbox/Result/Result.ts","import { Result } from '../Result/Result';\r\nimport { Expression } from './Expression';\r\n\r\nexport class ExpressionList implements Expression {\r\n  constructor(private parts: Expression[], public id: string) {\r\n    if (parts.length == 0) {\r\n      throw new Error(JSON.stringify(id) + ' should have at least 1 parts');\r\n    }\r\n  }\r\n\r\n  parse(input: string, end: boolean): Result {\r\n    var subResults: Result[] = [];\r\n    var subResult: Result;\r\n    var subInput = input;\r\n\r\n    for (var i = 0; i < this.parts.length; i++) {\r\n      var part = this.parts[i];\r\n      subResult = part.parse(subInput, end && i == this.parts.length - 1);\r\n      subResults.push(subResult);\r\n      // if the subResult do not succeed, stop the parsing\r\n      if (!subResult.isSuccess()) {\r\n        break;\r\n      } else {\r\n        subInput = subInput.substr(subResult.getLength());\r\n      }\r\n    }\r\n    return new Result(subResults, this, input);\r\n  }\r\n\r\n  public toString() {\r\n    return this.id;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/magicbox/Expression/ExpressionList.ts","import { SubGrammar } from './Expressions';\r\nimport { Field } from './Field';\r\n\r\nexport var NestedQuery: SubGrammar = {\r\n  basicExpressions: ['NestedQuery'],\r\n  grammars: {\r\n    NestedQuery: '[[NestedField][OptionalSpaces][Expressions]]',\r\n    NestedField: '[[Field]]',\r\n    FieldValue: ['NestedQuery']\r\n  },\r\n  include: [Field]\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/magicbox/Grammars/NestedQuery.ts","import { SubGrammar } from './Expressions';\r\nimport { Basic } from './Basic';\r\n\r\nexport const Date: SubGrammar = {\r\n  grammars: {\r\n    Date: '[DateYear]/[DateMonth]/[DateDay]',\r\n    DateYear: /([0-9]{4})/,\r\n    DateMonth: /(1[0-2]|0?[1-9])/,\r\n    DateDay: /([1-2][0-9]|3[0-1]|0?[1-9])/,\r\n    DateRange: '[Date][Spaces?]..[Spaces?][Date]',\r\n    DateRelative: ['DateRelativeNegative', 'DateRelativeTerm'],\r\n    DateRelativeTerm: /now|today|yesterday/,\r\n    DateRelativeNegative: '[DateRelativeTerm][DateRelativeNegativeRef]',\r\n    DateRelativeNegativeRef: /([\\-\\+][0-9]+(s|m|h|d|mo|y))/\r\n  },\r\n  include: [Basic]\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/magicbox/Grammars/Date.ts","import { Basic } from './Basic';\r\nimport { SubGrammar } from './Expressions';\r\nexport const QueryExtension: SubGrammar = {\r\n  basicExpressions: ['QueryExtension'],\r\n  grammars: {\r\n    QueryExtension: '$[QueryExtensionName]([QueryExtensionArguments])',\r\n    QueryExtensionName: /\\w+/,\r\n    QueryExtensionArguments: '[QueryExtensionArgumentList*][QueryExtensionArgument]',\r\n    QueryExtensionArgumentList: '[QueryExtensionArgument][Spaces?],[Spaces?]',\r\n    QueryExtensionArgument: '[QueryExtensionArgumentName]:[Spaces?][QueryExtensionArgumentValue]',\r\n    QueryExtensionArgumentName: /\\w+/,\r\n    QueryExtensionArgumentValue: ['SingleQuoted', 'Expressions']\r\n  },\r\n  include: [Basic]\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/magicbox/Grammars/QueryExtension.ts","import { SubGrammar } from './Expressions';\r\n\r\nexport const SubExpression: SubGrammar = {\r\n  basicExpressions: ['SubExpression'],\r\n  grammars: {\r\n    SubExpression: '([Expressions])'\r\n  }\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/magicbox/Grammars/SubExpression.ts","import * as _ from 'underscore';\r\nimport { Component } from '../Core';\r\nimport { l } from '../strings/Strings';\r\nimport { $$ } from '../utils/Dom';\r\nimport { KEYBOARD } from '../utils/KeyboardUtils';\r\nimport { MagicBoxInstance } from './MagicBox';\r\nimport { Result } from './Result/Result';\r\n\r\nexport class InputManager {\r\n  public input: HTMLInputElement;\r\n  private underlay: HTMLElement;\r\n  private highlightContainer: HTMLElement;\r\n  private ghostTextContainer: HTMLElement;\r\n  private root: HTMLElement;\r\n\r\n  private result: Result;\r\n  private wordCompletion: string;\r\n\r\n  private hasFocus: boolean = false;\r\n\r\n  /**\r\n   * Binding event\r\n   */\r\n  public onblur: () => void;\r\n  public onfocus: () => void;\r\n  public onkeyup: (key: number) => boolean;\r\n  public onkeydown: (key: number) => boolean;\r\n  public onchangecursor: () => void;\r\n  public ontabpress: () => void;\r\n\r\n  public set expanded(isExpanded: boolean) {\r\n    this.input.setAttribute('aria-expanded', isExpanded.toString());\r\n  }\r\n\r\n  public set activeDescendant(element: HTMLElement) {\r\n    if (element) {\r\n      this.input.setAttribute('aria-activedescendant', element.id);\r\n    } else {\r\n      this.input.removeAttribute('aria-activedescendant');\r\n    }\r\n  }\r\n\r\n  constructor(element: HTMLElement, private onchange: (text: string, wordCompletion: boolean) => void, private magicBox: MagicBoxInstance) {\r\n    this.root = Component.resolveRoot(element);\r\n    this.underlay = document.createElement('div');\r\n    this.underlay.className = 'magic-box-underlay';\r\n\r\n    this.highlightContainer = document.createElement('span');\r\n    this.highlightContainer.className = 'magic-box-highlight-container';\r\n    this.underlay.appendChild(this.highlightContainer);\r\n\r\n    this.ghostTextContainer = document.createElement('span');\r\n    this.ghostTextContainer.className = 'magic-box-ghost-text';\r\n    this.underlay.appendChild(this.ghostTextContainer);\r\n\r\n    this.input = $$(element).find('input') as HTMLInputElement;\r\n    if (!this.input) {\r\n      this.input = document.createElement('input');\r\n      element.appendChild(this.underlay);\r\n      element.appendChild(this.input);\r\n    } else {\r\n      element.insertBefore(this.underlay, this.input);\r\n    }\r\n\r\n    this.setupHandler();\r\n    this.addAccessibilitiesProperties();\r\n  }\r\n\r\n  /**\r\n   * Update the input with the result value\r\n   */\r\n  private updateInput() {\r\n    if (this.input.value != this.result.input) {\r\n      this.input.value = this.result.input;\r\n      if (this.hasFocus) {\r\n        this.setCursor(this.getValue().length);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update the highlight with the result value\r\n   */\r\n  private updateHighlight() {\r\n    $$(this.highlightContainer).empty();\r\n    this.highlightContainer.appendChild(this.result.toHtmlElement());\r\n  }\r\n\r\n  /**\r\n   * Update the ghostText with the wordCompletion\r\n   */\r\n  private updateWordCompletion() {\r\n    $$(this.ghostTextContainer).empty();\r\n    this.ghostTextContainer.innerHTML = '';\r\n    if (this.wordCompletion != null) {\r\n      this.ghostTextContainer.appendChild(document.createTextNode(this.wordCompletion.substr(this.result.input.length)));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the result and update visual if needed\r\n   */\r\n  public setResult(result: Result, wordCompletion?: string) {\r\n    this.result = result;\r\n\r\n    this.updateInput();\r\n\r\n    this.updateHighlight();\r\n\r\n    // reuse last wordCompletion for a better visual\r\n    if (_.isUndefined(wordCompletion) && this.wordCompletion != null && this.wordCompletion.indexOf(this.result.input) == 0) {\r\n      this.updateWordCompletion();\r\n    } else {\r\n      this.setWordCompletion(wordCompletion);\r\n    }\r\n\r\n    this.updateScroll();\r\n  }\r\n\r\n  /**\r\n   * Set the word completion. will be ignore if the word completion do not start with the result input\r\n   */\r\n  public setWordCompletion(wordCompletion: string) {\r\n    if (wordCompletion != null && wordCompletion.toLowerCase().indexOf(this.result.input.toLowerCase()) != 0) {\r\n      wordCompletion = null;\r\n    }\r\n    this.wordCompletion = wordCompletion;\r\n    this.updateWordCompletion();\r\n    this.updateScroll();\r\n  }\r\n\r\n  /**\r\n   * Set cursor position\r\n   */\r\n  public setCursor(index: number) {\r\n    this.input.focus();\r\n    if ((<any>this.input).createTextRange) {\r\n      var range = (<any>this.input).createTextRange();\r\n      range.move('character', index);\r\n      range.select();\r\n    } else if (this.input.selectionStart != null) {\r\n      this.input.focus();\r\n      this.input.setSelectionRange(index, index);\r\n    }\r\n  }\r\n\r\n  public getCursor() {\r\n    return this.input.selectionStart;\r\n  }\r\n\r\n  /**\r\n   * Update the scroll of the underlay this allowed the highlight to match the text\r\n   */\r\n\r\n  private updateScrollDefer: number;\r\n  private updateScroll(defer = true) {\r\n    var callback = () => {\r\n      // this is the cheapest call we can do before update scroll\r\n      if (this.underlay.clientWidth < this.underlay.scrollWidth) {\r\n        this.underlay.style.visibility = 'hidden';\r\n        this.underlay.scrollLeft = this.input.scrollLeft;\r\n        this.underlay.scrollTop = this.input.scrollTop;\r\n        this.underlay.style.visibility = 'visible';\r\n      }\r\n      this.updateScrollDefer = null;\r\n      // one day we will have to remove this\r\n      if (this.hasFocus) {\r\n        this.updateScroll();\r\n      }\r\n    };\r\n    // sometime we want it to be updated as soon as posible to have no flickering\r\n    if (!defer) {\r\n      callback();\r\n    } else if (this.updateScrollDefer == null) {\r\n      this.updateScrollDefer = requestAnimationFrame(callback);\r\n    }\r\n  }\r\n\r\n  private setupHandler() {\r\n    this.input.onblur = () => {\r\n      this.hasFocus = false;\r\n      setTimeout(() => {\r\n        if (!this.hasFocus) {\r\n          this.onblur && this.onblur();\r\n        }\r\n      }, 300);\r\n      this.updateScroll();\r\n    };\r\n    this.input.onfocus = () => {\r\n      if (!this.hasFocus) {\r\n        this.hasFocus = true;\r\n        this.updateScroll();\r\n        this.onfocus && this.onfocus();\r\n      }\r\n    };\r\n    this.input.onkeydown = e => {\r\n      this.keydown(e);\r\n    };\r\n    this.input.onkeyup = e => {\r\n      this.keyup(e);\r\n    };\r\n    this.input.oncut = () => {\r\n      setTimeout(() => {\r\n        this.onInputChange();\r\n      });\r\n    };\r\n    this.input.onpaste = () => {\r\n      setTimeout(() => {\r\n        this.onInputChange();\r\n      });\r\n    };\r\n  }\r\n\r\n  private addAccessibilitiesProperties() {\r\n    this.input.setAttribute('autocomplete', 'off');\r\n    this.input.setAttribute('type', 'text');\r\n    this.input.setAttribute('role', 'combobox');\r\n    this.input.setAttribute('form', 'coveo-dummy-form');\r\n    this.input.setAttribute('aria-autocomplete', 'list');\r\n    this.input.setAttribute('title', `${l('InsertAQuery')}. ${l('PressEnterToSend')}`);\r\n  }\r\n\r\n  public focus() {\r\n    // neet a timeout for IE8-9\r\n    setTimeout(() => {\r\n      this.input.focus();\r\n      this.setCursor(this.getValue().length);\r\n    });\r\n  }\r\n\r\n  public blur() {\r\n    if (this.hasFocus) {\r\n      this.input.blur();\r\n    }\r\n  }\r\n\r\n  private keydown(e: KeyboardEvent) {\r\n    switch (e.keyCode || e.which) {\r\n      case KEYBOARD.TAB:\r\n        // Take care of not \"preventing\" the default event behaviour : For accessibility reasons, it is much simpler\r\n        // to simply let the browser do it's standard action (which is to focus out of the input).\r\n        // Instead, handle \"tabPress\" immediately instead of \"keyup\".\r\n        // The focus will be on the next element in the page when the key is released, so keyup on the input will never be triggered.\r\n        this.tabPress();\r\n        this.magicBox.clearSuggestion();\r\n        break;\r\n      default:\r\n        e.stopPropagation();\r\n        if (this.onkeydown == null || this.onkeydown(e.keyCode || e.which)) {\r\n          requestAnimationFrame(() => {\r\n            this.onInputChange();\r\n          });\r\n        } else {\r\n          e.preventDefault();\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  private keyup(e: KeyboardEvent) {\r\n    switch (e.keyCode || e.which) {\r\n      case KEYBOARD.LEFT_ARROW:\r\n      case KEYBOARD.RIGHT_ARROW:\r\n        this.handleLeftRightArrow(e);\r\n        break;\r\n      default:\r\n        if (this.onkeydown == null || this.onkeyup(e.keyCode || e.which)) {\r\n          this.onInputChange();\r\n        } else {\r\n          e.preventDefault();\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  private handleLeftRightArrow(e: KeyboardEvent) {\r\n    const querySuggestPreview = $$(this.root).find(`.${Component.computeCssClassNameForType('QuerySuggestPreview')}`);\r\n    if (!querySuggestPreview) {\r\n      this.onchangecursor();\r\n    }\r\n\r\n    const inputChanged = this.onkeydown == null || this.onkeyup(e.keyCode || e.which);\r\n    inputChanged ? this.onInputChange() : e.preventDefault();\r\n  }\r\n\r\n  private tabPress() {\r\n    this.ontabpress && this.ontabpress();\r\n    this.onblur && this.onblur();\r\n  }\r\n\r\n  private onInputChange() {\r\n    if (this.result.input != this.input.value) {\r\n      this.onchange(this.input.value, false);\r\n    }\r\n  }\r\n\r\n  public getValue() {\r\n    return this.input.value;\r\n  }\r\n\r\n  public getWordCompletion() {\r\n    return this.wordCompletion;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/magicbox/InputManager.ts","import { flatten } from 'underscore';\r\n\r\nexport interface IQueryProcessorOptions {\r\n  timeout: number;\r\n}\r\n\r\nexport enum ProcessingStatus {\r\n  Finished,\r\n  TimedOut,\r\n  Overriden\r\n}\r\n\r\nexport interface IQueryProcessResult<T> {\r\n  status: ProcessingStatus;\r\n  results: T[];\r\n}\r\n\r\n/**\r\n * IE11 equivalent of Promise.race\r\n * Adapted from Promise.race(iterable) polyfill on https://www.promisejs.org/api/\r\n */\r\nfunction racePromises<T>(promises: Thenable<T>[]): Promise<T> {\r\n  return new Promise<T>((resolve, reject) => promises.forEach(value => Promise.resolve(value).then(resolve, reject)));\r\n}\r\n\r\nexport class QueryProcessor<T> {\r\n  private override: () => void;\r\n  private options: IQueryProcessorOptions;\r\n  private processedResults: T[][];\r\n\r\n  constructor(options: Partial<IQueryProcessorOptions> = {}) {\r\n    this.options = { timeout: 500, ...options };\r\n  }\r\n\r\n  /**\r\n   * Overrides the previous queries and accumulates the result of promise arrays with a timeout.\r\n   */\r\n  public async processQueries(queries: (T[] | Promise<T[]>)[]): Promise<IQueryProcessResult<T>> {\r\n    this.overrideIfProcessing();\r\n    this.processedResults = new Array(queries.length);\r\n    const asyncQueries = queries.map(query => (query instanceof Promise ? query : Promise.resolve(query)));\r\n\r\n    return racePromises([\r\n      this.accumulateResultsChronologically(asyncQueries).then(() => this.buildProcessResults(ProcessingStatus.Finished)),\r\n      this.waitForOverride().then(() => this.buildProcessResults(ProcessingStatus.Overriden)),\r\n      this.waitForTimeout().then(() => this.buildProcessResults(ProcessingStatus.TimedOut))\r\n    ]);\r\n  }\r\n\r\n  public async overrideIfProcessing() {\r\n    if (this.override) {\r\n      this.override();\r\n    }\r\n  }\r\n\r\n  private get orderedResults(): T[] {\r\n    return flatten(this.processedResults.filter(result => !!result), true);\r\n  }\r\n\r\n  private buildProcessResults(status: ProcessingStatus): IQueryProcessResult<T> {\r\n    return {\r\n      status,\r\n      results: status !== ProcessingStatus.Overriden ? this.orderedResults : []\r\n    };\r\n  }\r\n\r\n  private async accumulateResultsChronologically(queries: Promise<T[]>[]) {\r\n    const output = this.processedResults;\r\n    await Promise.all(queries.map((query, i) => query.then(items => (output[i] = items))));\r\n  }\r\n\r\n  private waitForOverride() {\r\n    return new Promise<void>(resolve => {\r\n      this.override = () => {\r\n        this.override = null;\r\n        resolve();\r\n      };\r\n    });\r\n  }\r\n\r\n  private waitForTimeout() {\r\n    return new Promise<void>(resolve => setTimeout(() => resolve(), this.options.timeout));\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/magicbox/QueryProcessor.ts","import { SubGrammar } from './Expressions';\r\nimport { NestedQuery } from './NestedQuery';\r\nimport { QueryExtension } from './QueryExtension';\r\nimport { Basic } from './Basic';\r\nimport { Field } from './Field';\r\nimport { SubExpression } from './SubExpression';\r\n\r\nexport const Complete: SubGrammar = {\r\n  include: [NestedQuery, QueryExtension, SubExpression, Field, Basic]\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/magicbox/Grammars/Complete.ts","import { Grammar } from '../Grammar';\r\nimport { ExpressionDef } from '../Expression/Expression';\r\nimport * as _ from 'underscore';\r\n\r\nexport interface SubGrammar {\r\n  grammars?: { [id: string]: ExpressionDef };\r\n  expressions?: string[];\r\n  basicExpressions?: string[];\r\n  include?: SubGrammar[];\r\n}\r\n\r\nfunction loadSubGrammar(\r\n  expressions: string[],\r\n  basicExpressions: string[],\r\n  grammars: { [id: string]: ExpressionDef },\r\n  subGrammar: SubGrammar\r\n) {\r\n  _.each(subGrammar.expressions, expression => {\r\n    if (!_.contains(expressions, expression)) {\r\n      expressions.push(expression);\r\n    }\r\n  });\r\n  _.each(subGrammar.basicExpressions, expression => {\r\n    if (!_.contains(basicExpressions, expression)) {\r\n      basicExpressions.push(expression);\r\n    }\r\n  });\r\n  _.each(subGrammar.grammars, (expressionDef: ExpressionDef, id: string) => {\r\n    if (!(id in grammars)) {\r\n      grammars[id] = expressionDef;\r\n    } else {\r\n      if (_.isArray(grammars[id]) && _.isArray(expressionDef)) {\r\n        _.each(<string[]>expressionDef, (value: string) => {\r\n          (<string[]>grammars[id]).push(value);\r\n        });\r\n      } else {\r\n        _.each(<string[]>expressionDef, (value: string) => {\r\n          (<string[]>grammars[id]).push(value);\r\n        });\r\n        throw new Error('Can not merge ' + id + '(' + JSON.stringify(expressionDef) + ' => ' + JSON.stringify(grammars[id]) + ')');\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nexport function Expressions(...subGrammars: SubGrammar[]): { start: string; expressions: { [id: string]: ExpressionDef } } {\r\n  var expressions: string[] = [];\r\n  var BasicExpression: string[] = [];\r\n  var grammars: { [id: string]: ExpressionDef } = {\r\n    Start: ['Expressions', 'Empty'],\r\n    Expressions: '[OptionalSpaces][Expression][ExpressionsList*][OptionalSpaces]',\r\n    ExpressionsList: '[Spaces][Expression]',\r\n    Expression: expressions,\r\n    BasicExpression: BasicExpression,\r\n    OptionalSpaces: / */,\r\n    Spaces: / +/,\r\n    Empty: /(?!.)/\r\n  };\r\n  for (var i = 0; i < subGrammars.length; i++) {\r\n    loadSubGrammar(expressions, BasicExpression, grammars, subGrammars[i]);\r\n    _.each(subGrammars[i].include, subGrammar => {\r\n      if (!_.contains(subGrammars, subGrammar)) {\r\n        subGrammars.push(subGrammar);\r\n      }\r\n    });\r\n  }\r\n  expressions.push('BasicExpression');\r\n  return {\r\n    start: 'Start',\r\n    expressions: grammars\r\n  };\r\n}\r\n\r\nexport function ExpressionsGrammar(...subGrammars: SubGrammar[]) {\r\n  var grammar = Expressions.apply(this, subGrammars);\r\n  return new Grammar(grammar.start, grammar.expressions);\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/magicbox/Grammars/Expressions.ts","import { ISearchResultPreview } from '../magicbox/ResultPreviewsManager';\r\nimport { Suggestion } from '../magicbox/SuggestionsManager';\r\nimport { IQuery } from '../rest/Query';\r\n\r\nexport interface IBuildingResultPreviewsQueryEventArgs {\r\n  /**\r\n   * The query to be sent to Search API.\r\n   */\r\n  query: IQuery;\r\n}\r\n\r\n/**\r\n * Executed when a {@link Suggestion} is focused before {@link PopulateSearchResultPreviews} is called to fetch more options.\r\n */\r\nexport interface IUpdateResultPreviewsManagerOptionsEventArgs {\r\n  /**\r\n   * How many milliseconds should a {@link Suggestion} be focused for before {@link PopulateSearchResultPreviews} is called.\r\n   *\r\n   * If this is not defined, it will default to 200ms.\r\n   */\r\n  displayAfterDuration?: number;\r\n}\r\n\r\n/**\r\n * Executed when a {@link Suggestion} is focused and waiting for search result previews.\r\n */\r\nexport interface IPopulateSearchResultPreviewsEventArgs {\r\n  /**\r\n   * The suggestion to look up search result previews for.\r\n   */\r\n  suggestion: Suggestion;\r\n  /**\r\n   * The result previews query. This must be set synchronously before the event resolves.\r\n   * Setting this to a non-empty array will display the given search result previews.\r\n   */\r\n  previewsQueries: (ISearchResultPreview[] | Promise<ISearchResultPreview[]>)[];\r\n}\r\n\r\n/**\r\n * Those are the string definitions of events for ResultPreviewsManager.\r\n *\r\n * Those events should be bound to the element returned by `resolveRoot`.\r\n */\r\nexport class ResultPreviewsManagerEvents {\r\n  /**\r\n   * Executed when building a query to fetch result previews.\r\n   * This always receives {@link IBuildingResultPreviewsQueryEventArgs} as arguments.\r\n   */\r\n  public static buildingResultPreviewsQuery = 'buildingResultPreviewsQuery';\r\n  /**\r\n   * Executed when a {@link Suggestion} is focused before {@link PopulateSearchResultPreviews} is called to fetch more options.\r\n   * This always receives {@link IUpdateResultPreviewsManagerOptionsEventArgs} as arguments.\r\n   */\r\n  public static updateResultPreviewsManagerOptions = 'updateResultPreviewsManagerOptions';\r\n  /**\r\n   * Executed when a {@link Suggestion} is focused and waiting for search result previews.\r\n   * This always receives {@link IPopulateSearchResultPreviewsEventArgs} as arguments.\r\n   */\r\n  public static populateSearchResultPreviews = 'populateSearchResultPreviews';\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/events/ResultPreviewsManagerEvents.ts","import { Omnibox, IOmniboxOptions } from '../Omnibox/Omnibox';\r\nimport { Querybox, IQueryboxOptions } from './Querybox';\r\nimport { ComponentOptionsModel } from '../../models/ComponentOptionsModel';\r\n\r\nexport class QueryboxOptionsProcessing {\r\n  constructor(public owner: Omnibox | Querybox) {}\r\n\r\n  private get options() {\r\n    return this.owner.options;\r\n  }\r\n\r\n  private set options(options: IOmniboxOptions | IQueryboxOptions) {\r\n    this.owner.options = options;\r\n  }\r\n\r\n  public postProcess() {\r\n    this.options = { ...this.options, ...this.owner.componentOptionsModel.get(ComponentOptionsModel.attributesEnum.searchBox) };\r\n    this.processQueryOnClearVersusEmptyQuery();\r\n    this.processQueryOnClearVersusSearchAsYouType();\r\n  }\r\n\r\n  private processQueryOnClearVersusEmptyQuery() {\r\n    if (this.options.triggerQueryOnClear && this.owner.searchInterface.options.allowQueriesWithoutKeywords === false) {\r\n      this.owner.logger.warn(\r\n        'Forcing option triggerQueryOnClear to false, as it is not supported when the search interface is configured to not allow queries without keywords (data-allow-queries-without-keywords=\"false\")',\r\n        this.owner\r\n      );\r\n      this.options.triggerQueryOnClear = false;\r\n    }\r\n  }\r\n\r\n  private processQueryOnClearVersusSearchAsYouType() {\r\n    if (\r\n      this.owner.searchInterface.options.allowQueriesWithoutKeywords === true &&\r\n      this.options.triggerQueryOnClear === false &&\r\n      this.options.enableSearchAsYouType === true\r\n    ) {\r\n      this.owner.logger.warn('Forcing option triggerQueryOnClear to true, since search-as-you-type is enabled', this.owner);\r\n      this.options.triggerQueryOnClear = true;\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/Querybox/QueryboxOptionsProcessing.ts","import { IQueryboxOptions } from './Querybox';\r\nimport { QueryBuilder } from '../Base/QueryBuilder';\r\nimport * as _ from 'underscore';\r\nimport { Defer } from '../../MiscModules';\r\n\r\nexport class QueryboxQueryParameters {\r\n  private static queryIsCurrentlyBlocked = false;\r\n\r\n  constructor(private options: IQueryboxOptions) {}\r\n\r\n  private static queryIsBlocked() {\r\n    // This code runs on some assumption :\r\n    // Since all \"buildingQuery\" events would have to be run in the same call stack\r\n    // We can add a static flag to block 2 or more query box/omnibox from trying to modify the query inside the same event.\r\n    // If 2 query box are activated, we get duplicate terms in the query, or duplicate term correction with did you mean.\r\n    // This means that only one query box/searchbox would be able to modify the query in a single search page.\r\n    // This also means that if there is 2 search box enabled, the first one in the markup in the page would be able to do the job correctly as far as the query is concerned.\r\n    // The second one is inactive as far as the query is concerned.\r\n\r\n    // The flag gets reset in \"defer\" (setTimeout 0) so that it gets reset correctly when the query event has finished executing\r\n    if (!QueryboxQueryParameters.queryIsCurrentlyBlocked) {\r\n      QueryboxQueryParameters.queryIsCurrentlyBlocked = true;\r\n      Defer.defer(() => QueryboxQueryParameters.allowDuplicateQuery());\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  public static allowDuplicateQuery() {\r\n    QueryboxQueryParameters.queryIsCurrentlyBlocked = false;\r\n  }\r\n\r\n  public addParameters(queryBuilder: QueryBuilder, lastQuery: string) {\r\n    if (!QueryboxQueryParameters.queryIsBlocked()) {\r\n      if (this.options.enableWildcards) {\r\n        queryBuilder.enableWildcards = true;\r\n      }\r\n\r\n      if (this.options.enableQuestionMarks) {\r\n        queryBuilder.enableQuestionMarks = true;\r\n      }\r\n\r\n      if (this.options.enableLowercaseOperators) {\r\n        queryBuilder.enableLowercaseOperators = true;\r\n      }\r\n\r\n      if (!_.isEmpty(lastQuery)) {\r\n        queryBuilder.enableQuerySyntax = this.options.enableQuerySyntax;\r\n        queryBuilder.expression.add(lastQuery);\r\n        if (this.options.enablePartialMatch) {\r\n          queryBuilder.enablePartialMatch = this.options.enablePartialMatch;\r\n          if (this.options.partialMatchKeywords) {\r\n            queryBuilder.partialMatchKeywords = this.options.partialMatchKeywords;\r\n          }\r\n          if (this.options.partialMatchThreshold) {\r\n            queryBuilder.partialMatchThreshold = this.options.partialMatchThreshold;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/Querybox/QueryboxQueryParameters.ts","import { exportGlobally } from '../GlobalExports';\r\nimport { Expression } from './Expression/Expression';\r\nimport { ExpressionConstant } from './Expression/ExpressionConstant';\r\nimport { ExpressionEndOfInput } from './Expression/ExpressionEndOfInput';\r\nimport { ExpressionFunction, ExpressionFunctionArgument } from './Expression/ExpressionFunction';\r\nimport { ExpressionList } from './Expression/ExpressionList';\r\nimport { ExpressionOptions } from './Expression/ExpressionOptions';\r\nimport { ExpressionRef } from './Expression/ExpressionRef';\r\nimport { ExpressionRegExp } from './Expression/ExpressionRegExp';\r\nimport { Grammar } from './Grammar';\r\nimport { SubGrammar } from './Grammars/Expressions';\r\nimport { Grammars } from './Grammars/Grammars';\r\nimport { InputManager } from './InputManager';\r\nimport { createMagicBox, MagicBoxInstance, requestAnimationFrame } from './MagicBox';\r\nimport { MagicBoxUtils as Utils } from './MagicBoxUtils';\r\nimport { OptionResult } from './Result/OptionResult';\r\nimport { RefResult } from './Result/RefResult';\r\nimport { EndOfInputResult, Result } from './Result/Result';\r\nimport { Suggestion, SuggestionsManager } from './SuggestionsManager';\r\nexport type ExpressionImportedLocally = Expression;\r\nexport type SuggestionImportedLocally = Suggestion;\r\nexport type SubGrammarLocally = SubGrammar;\r\nexport type ExpressionFunctionArgumentLocally = ExpressionFunctionArgument;\r\nexport const GrammarsImportedLocally = Grammars;\r\n\r\nexport function doMagicBoxExport() {\r\n  exportGlobally({\r\n    MagicBox: {\r\n      EndOfInputResult,\r\n      ExpressionConstant,\r\n      ExpressionEndOfInput,\r\n      ExpressionFunction,\r\n      ExpressionList,\r\n      ExpressionOptions,\r\n      ExpressionRef,\r\n      ExpressionRegExp,\r\n      Grammar,\r\n      Grammars,\r\n      InputManager,\r\n      Instance: MagicBoxInstance,\r\n      OptionResult,\r\n      RefResult,\r\n      Result,\r\n      SuggestionsManager,\r\n      Utils,\r\n      create: createMagicBox,\r\n      requestAnimationFrame\r\n    }\r\n  });\r\n}\r\n\r\nexport declare namespace MagicBox {\r\n  export const EndOfInputResult: EndOfInputResult;\r\n  export const ExpressionConstant: ExpressionConstant;\r\n  export const ExpressionFunction: ExpressionFunction;\r\n  export const ExpressionList: ExpressionList;\r\n  export const ExpressionOptions: ExpressionOptions;\r\n  export const ExpressionRef: ExpressionRef;\r\n  export const ExpressionRegExp: ExpressionRegExp;\r\n  export const Grammar: Grammar;\r\n  export const InputManager: InputManager;\r\n  export const Instance: MagicBoxInstance;\r\n  export const OptionResult: OptionResult;\r\n  export const RefResult: RefResult;\r\n  export const Result: Result;\r\n  export const SuggestionsManager: SuggestionsManager;\r\n  export const Utils: Utils;\r\n  export const ExpressionEndOfInput;\r\n  export type Instance = MagicBoxInstance;\r\n  export type Suggestion = SuggestionImportedLocally;\r\n\r\n  export namespace Grammars {\r\n    export const Basic: typeof GrammarsImportedLocally.Basic;\r\n    export const notInWord: typeof GrammarsImportedLocally.notInWord;\r\n    export const notWordStart: typeof GrammarsImportedLocally.notWordStart;\r\n    export const Complete: typeof GrammarsImportedLocally.Complete;\r\n    export const Date: typeof GrammarsImportedLocally.Date;\r\n    export const Expressions: typeof GrammarsImportedLocally.Expressions;\r\n    export const ExpressionsGrammar: typeof GrammarsImportedLocally.ExpressionsGrammar;\r\n    export const Field: typeof GrammarsImportedLocally.Field;\r\n    export const NestedQuery: typeof GrammarsImportedLocally.NestedQuery;\r\n    export const QueryExtension: typeof GrammarsImportedLocally.QueryExtension;\r\n    export const SubExpression: typeof GrammarsImportedLocally.SubExpression;\r\n  }\r\n\r\n  export const createMagicBox;\r\n  export const create;\r\n  export const requestAnimationFrame;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/magicbox/doMagicBoxExport.ts","import { Basic, notInWord, notWordStart } from './Basic';\r\nimport { Complete } from './Complete';\r\nimport { Date } from './Date';\r\nimport { Expressions, ExpressionsGrammar, SubGrammar } from './Expressions';\r\nimport { ExpressionFunctionArgument } from '../Expression/ExpressionFunction';\r\nimport { Field } from './Field';\r\nimport { NestedQuery } from './NestedQuery';\r\nimport { QueryExtension } from './QueryExtension';\r\nimport { SubExpression } from './SubExpression';\r\nexport type SubGrammarImported = SubGrammar;\r\nexport type ExpressionFunctionArgumentImported = ExpressionFunctionArgument;\r\n\r\nexport const Grammars = {\r\n  Basic,\r\n  notInWord,\r\n  notWordStart,\r\n  Complete,\r\n  Date,\r\n  Expressions,\r\n  ExpressionsGrammar,\r\n  Field,\r\n  NestedQuery,\r\n  QueryExtension,\r\n  SubExpression\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/magicbox/Grammars/Grammars.ts","import { $$, Dom } from '../utils/Dom';\r\nimport { l } from '../strings/Strings';\r\nimport { defaults, findIndex } from 'underscore';\r\nimport { Component } from '../ui/Base/Component';\r\nimport { Direction, Suggestion } from './SuggestionsManager';\r\nimport {\r\n  ResultPreviewsManagerEvents,\r\n  IPopulateSearchResultPreviewsEventArgs,\r\n  IUpdateResultPreviewsManagerOptionsEventArgs\r\n} from '../events/ResultPreviewsManagerEvents';\r\nimport { QueryProcessor, ProcessingStatus } from './QueryProcessor';\r\nimport { Utils } from '../utils/Utils';\r\n\r\nexport interface ISearchResultPreview {\r\n  element: HTMLElement;\r\n  onSelect: () => void;\r\n}\r\n\r\nexport interface IResultPreviewsManagerOptions {\r\n  previewClass: string;\r\n  selectedClass: string;\r\n  previewHeaderText: string;\r\n  previewHeaderFieldText: string;\r\n  timeout: number;\r\n}\r\n\r\nexport class ResultPreviewsManager {\r\n  private options: IResultPreviewsManagerOptions;\r\n  private suggestionsPreviewContainer: Dom;\r\n  private resultPreviewsContainer: Dom;\r\n  private lastQueriedSuggestion: Suggestion;\r\n  private lastDisplayedSuggestion: Suggestion;\r\n  private previewsProcessor: QueryProcessor<ISearchResultPreview>;\r\n  private lastDelay: Promise<void>;\r\n  private root: HTMLElement;\r\n\r\n  public get previewsOwner() {\r\n    return this.lastDisplayedSuggestion;\r\n  }\r\n\r\n  public get hasPreviews() {\r\n    return !!this.suggestionsPreviewContainer;\r\n  }\r\n\r\n  public get focusedPreviewElement() {\r\n    if (!this.hasPreviews) {\r\n      return null;\r\n    }\r\n    const focusedElement = this.suggestionsPreviewContainer.findClass(this.options.selectedClass)[0];\r\n    if (!focusedElement || !focusedElement.classList.contains(this.options.previewClass)) {\r\n      return null;\r\n    }\r\n    return focusedElement;\r\n  }\r\n\r\n  public get previewElements() {\r\n    if (!this.hasPreviews) {\r\n      return [];\r\n    }\r\n    return this.suggestionsPreviewContainer.findClass(this.options.previewClass);\r\n  }\r\n\r\n  private get suggestionsListbox() {\r\n    return $$($$(this.element).findClass('coveo-magicbox-suggestions')[0]);\r\n  }\r\n\r\n  private get numberOfResultsPerRow() {\r\n    const previewSelectables = this.suggestionsPreviewContainer.findClass(this.options.previewClass);\r\n    if (previewSelectables.length === 0) {\r\n      return 0;\r\n    }\r\n    const firstVerticalOffset = previewSelectables[0].offsetTop;\r\n    const firstIndexOnNextRow = findIndex(previewSelectables, previewSelectable => previewSelectable.offsetTop !== firstVerticalOffset);\r\n    return firstIndexOnNextRow !== -1 ? firstIndexOnNextRow : previewSelectables.length;\r\n  }\r\n\r\n  private get previewContainerId() {\r\n    return `coveo-previews-for-${this.lastDisplayedSuggestion.dom.id}`;\r\n  }\r\n\r\n  constructor(private element: HTMLElement, options: Partial<IResultPreviewsManagerOptions> = {}) {\r\n    this.options = defaults(options, <IResultPreviewsManagerOptions>{\r\n      previewHeaderText: l('QuerySuggestPreview'),\r\n      previewHeaderFieldText: l('QuerySuggestPreviewWithField'),\r\n      previewClass: 'coveo-preview-selectable',\r\n      selectedClass: 'magic-box-selected'\r\n    });\r\n    this.root = Component.resolveRoot(element);\r\n    this.previewsProcessor = new QueryProcessor({ timeout: this.options.timeout });\r\n  }\r\n\r\n  public async displaySearchResultPreviewsForSuggestion(suggestion: Suggestion) {\r\n    const externalOptions = this.getExternalOptions();\r\n    const currentDelay = (this.lastDelay = Utils.resolveAfter(\r\n      Utils.isNullOrUndefined(externalOptions.displayAfterDuration) ? 200 : externalOptions.displayAfterDuration\r\n    ));\r\n    await currentDelay;\r\n    if (currentDelay !== this.lastDelay) {\r\n      return;\r\n    }\r\n    const isQueryForSuggestionOngoing = suggestion && this.lastQueriedSuggestion === suggestion;\r\n    if (isQueryForSuggestionOngoing) {\r\n      return;\r\n    }\r\n    const arePreviewsForSuggestionCurrentlyDisplayed = this.lastDisplayedSuggestion === suggestion;\r\n    if (arePreviewsForSuggestionCurrentlyDisplayed) {\r\n      this.previewsProcessor.overrideIfProcessing();\r\n      this.lastQueriedSuggestion = null;\r\n      return;\r\n    }\r\n    this.lastQueriedSuggestion = suggestion;\r\n    if (!suggestion) {\r\n      this.displaySuggestionPreviews(null, []);\r\n      return;\r\n    }\r\n    const { status, results } = await this.getSearchResultPreviewsQuery(suggestion);\r\n    if (status === ProcessingStatus.Overriden) {\r\n      return;\r\n    }\r\n    this.lastQueriedSuggestion = null;\r\n    this.displaySuggestionPreviews(suggestion, results);\r\n  }\r\n\r\n  public getElementInDirection(direction: Direction) {\r\n    const previewElements = this.previewElements;\r\n    const focusedIndex = previewElements.indexOf(this.focusedPreviewElement);\r\n\r\n    if (focusedIndex === -1) {\r\n      return null;\r\n    }\r\n\r\n    if (focusedIndex === 0 && direction === Direction.Left) {\r\n      return null;\r\n    }\r\n\r\n    return previewElements[(focusedIndex + this.getIncrementInDirection(direction)) % previewElements.length];\r\n  }\r\n\r\n  private getIncrementInDirection(direction: Direction) {\r\n    switch (direction) {\r\n      case Direction.Left:\r\n        return -1;\r\n      case Direction.Right:\r\n        return 1;\r\n      case Direction.Up:\r\n        return -this.numberOfResultsPerRow;\r\n      case Direction.Down:\r\n        return this.numberOfResultsPerRow;\r\n    }\r\n  }\r\n\r\n  private setHasPreviews(shouldHavePreviews: boolean) {\r\n    if (this.hasPreviews === !!shouldHavePreviews) {\r\n      return;\r\n    }\r\n    if (shouldHavePreviews) {\r\n      this.initPreviewForSuggestions();\r\n    } else {\r\n      this.revertPreviewForSuggestions();\r\n    }\r\n  }\r\n\r\n  private initPreviewForSuggestions() {\r\n    this.suggestionsPreviewContainer = $$(\r\n      'div',\r\n      {\r\n        className: 'coveo-suggestion-container'\r\n      },\r\n      this.suggestionsListbox.el,\r\n      this.buildPreviewContainer()\r\n    );\r\n    this.element.appendChild(this.suggestionsPreviewContainer.el);\r\n    this.suggestionsListbox.setAttribute('aria-controls', this.previewContainerId);\r\n  }\r\n\r\n  private revertPreviewForSuggestions() {\r\n    this.element.appendChild(this.suggestionsListbox.el);\r\n    this.suggestionsPreviewContainer.remove();\r\n    this.suggestionsPreviewContainer = null;\r\n  }\r\n\r\n  private buildPreviewContainer() {\r\n    return $$(\r\n      'div',\r\n      {\r\n        className: 'coveo-preview-container',\r\n        id: this.previewContainerId\r\n      },\r\n      (this.resultPreviewsContainer = $$('div', {\r\n        className: 'coveo-preview-results',\r\n        role: 'listbox',\r\n        'aria-orientation': 'horizontal'\r\n      }))\r\n    ).el;\r\n  }\r\n\r\n  private getExternalOptions() {\r\n    const optionsEventArgs: IUpdateResultPreviewsManagerOptionsEventArgs = {};\r\n    $$(this.root).trigger(ResultPreviewsManagerEvents.updateResultPreviewsManagerOptions, optionsEventArgs);\r\n    return optionsEventArgs;\r\n  }\r\n\r\n  private getSearchResultPreviewsQuery(suggestion: Suggestion) {\r\n    const populateEventArgs: IPopulateSearchResultPreviewsEventArgs = {\r\n      suggestion,\r\n      previewsQueries: []\r\n    };\r\n    $$(this.root).trigger(ResultPreviewsManagerEvents.populateSearchResultPreviews, populateEventArgs);\r\n    return this.previewsProcessor.processQueries(populateEventArgs.previewsQueries);\r\n  }\r\n\r\n  private appendSearchResultPreview(preview: ISearchResultPreview, position: number) {\r\n    this.resultPreviewsContainer.append(preview.element);\r\n    preview.element.id = `coveo-result-preview-${position}`;\r\n    const elementDom = $$(preview.element);\r\n    elementDom.setAttribute('aria-selected', 'false');\r\n    elementDom.setAttribute('role', 'option');\r\n    elementDom.on('click', () => preview.onSelect());\r\n    elementDom.on('keyboardSelect', () => preview.onSelect());\r\n  }\r\n\r\n  private appendSearchResultPreviews(previews: ISearchResultPreview[]) {\r\n    this.resultPreviewsContainer.empty();\r\n    previews.forEach((preview, i) => this.appendSearchResultPreview(preview, i));\r\n  }\r\n\r\n  private displaySuggestionPreviews(suggestion: Suggestion, previews: ISearchResultPreview[]) {\r\n    this.lastDisplayedSuggestion = suggestion;\r\n    this.setHasPreviews(previews && previews.length > 0);\r\n    this.element.classList.toggle('magic-box-hasPreviews', this.hasPreviews);\r\n    if (!this.hasPreviews) {\r\n      return;\r\n    }\r\n    this.appendSearchResultPreviews(previews);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/magicbox/ResultPreviewsManager.ts","import { $$, Dom } from '../utils/Dom';\r\nimport { MagicBoxInstance } from './MagicBox';\r\nimport { l } from '../strings/Strings';\r\nimport { AccessibleButton } from '../utils/AccessibleButton';\r\n\r\nexport class MagicBoxClear {\r\n  public element: Dom;\r\n\r\n  constructor(magicBox: MagicBoxInstance) {\r\n    this.element = $$('div', {\r\n      className: 'magic-box-clear'\r\n    });\r\n    const clearIcon = $$('div', {\r\n      className: 'magic-box-icon'\r\n    });\r\n    this.element.append(clearIcon.el);\r\n\r\n    this.element.insertAfter($$(magicBox.element).find('input'));\r\n\r\n    new AccessibleButton()\r\n      .withElement(this.element)\r\n      .withLabel(l('Clear'))\r\n      .withSelectAction(() => magicBox.clear())\r\n      .build();\r\n\r\n    this.toggleTabindexAndAriaHidden(false);\r\n  }\r\n\r\n  public toggleTabindexAndAriaHidden(hasText: boolean) {\r\n    const tabindex = hasText ? '0' : '-1';\r\n    this.element.setAttribute('tabindex', tabindex);\r\n    this.element.setAttribute('aria-hidden', `${!hasText}`);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/magicbox/MagicBoxClear.ts"],"sourceRoot":""}