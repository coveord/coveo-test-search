{"version":3,"sources":["HiddenQuery.min__5f3280c404a1ee75a113.js","./src/ui/HiddenQuery/HiddenQuery.ts"],"names":["webpackJsonpCoveo__temporary","255","module","exports","__webpack_require__","__extends","this","extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__","constructor","prototype","create","defineProperty","value","element","options","bindings","HiddenQuery","ID","ComponentOptions","initComponentOptions","bind","onRootElement","QueryEvents","buildingQuery","args","handleBuildingQuery","BreadcrumbEvents","populateBreadcrumb","handlePopulateBreadcrumb","clearBreadcrumb","setStateEmpty","_this","clear","hiddenDescriptionRemoved","getDescription","usageAnalytics","logSearchEvent","analyticsActionCauseList","contextRemove","contextName","queryController","executeQuery","queryStateModel","set","QUERY_STATE_ATTRIBUTES","HD","HQ","data","Assert","exists","hiddenQuery","get","Utils","isNonEmptyString","queryBuilder","advancedExpression","add","description","_","isEmpty","elem","document","createElement","$$","addClass","title","text","appendChild","className","escape","el","SVGIcons","icons","mainClear","on","breadcrumbs","push","QueryStateModel","attributesEnum","hd","hq","length","maximumDescriptionLength","slice","doExport","exportGlobally","buildNumberOption","min","defaultValue","buildLocalizedStringOption","localizedString","l","Component","Initialization","registerAutoCreateComponent","615"],"mappings":"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","file":"HiddenQuery.min__5f3280c404a1ee75a113.js","sourcesContent":["webpackJsonpCoveo__temporary([69],{\n\n/***/ 255:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Component_1 = __webpack_require__(7);\r\nvar ComponentOptions_1 = __webpack_require__(8);\r\nvar Strings_1 = __webpack_require__(6);\r\nvar QueryEvents_1 = __webpack_require__(11);\r\nvar BreadcrumbEvents_1 = __webpack_require__(34);\r\nvar AnalyticsActionListMeta_1 = __webpack_require__(10);\r\nvar QueryStateModel_1 = __webpack_require__(13);\r\nvar Dom_1 = __webpack_require__(1);\r\nvar Utils_1 = __webpack_require__(4);\r\nvar Initialization_1 = __webpack_require__(2);\r\nvar Assert_1 = __webpack_require__(5);\r\nvar _ = __webpack_require__(0);\r\nvar GlobalExports_1 = __webpack_require__(3);\r\n__webpack_require__(615);\r\nvar SVGIcons_1 = __webpack_require__(12);\r\n/**\r\n * The HiddenQuery component handles a \"hidden\" query parameter (`hq`) and its description (`hd`).\r\n *\r\n * Concretely, this means that if a HiddenQuery component is present in your page and you load your search interface\r\n * with `hq=foo&hd=bar` in the URL hash, the component adds `foo` as an expression to the query (`hq` is the hidden\r\n * query) and renders `bar` in the {@link Breadcrumb} (`hd` is the hidden query description).\r\n */\r\nvar HiddenQuery = /** @class */ (function (_super) {\r\n    __extends(HiddenQuery, _super);\r\n    /**\r\n     * Creates a new HiddenQuery component, which binds multiple events ({@link QueryEvents.buildingQuery},\r\n     * {@link BreadcrumbEvents.populateBreadcrumb} and {@link BreadcrumbEvents.clearBreadcrumb}).\r\n     * @param element The HTMLElement on which to instantiate the component.\r\n     * @param options The options for the HiddenQuery component.\r\n     * @param bindings The bindings that the component requires to function normally. If not set, these will be\r\n     * automatically resolved (with a slower execution time).\r\n     */\r\n    function HiddenQuery(element, options, bindings) {\r\n        var _this = _super.call(this, element, HiddenQuery.ID, bindings) || this;\r\n        _this.element = element;\r\n        _this.options = options;\r\n        _this.options = ComponentOptions_1.ComponentOptions.initComponentOptions(element, HiddenQuery, options);\r\n        _this.bind.onRootElement(QueryEvents_1.QueryEvents.buildingQuery, function (args) { return _this.handleBuildingQuery(args); });\r\n        _this.bind.onRootElement(BreadcrumbEvents_1.BreadcrumbEvents.populateBreadcrumb, function (args) {\r\n            return _this.handlePopulateBreadcrumb(args);\r\n        });\r\n        _this.bind.onRootElement(BreadcrumbEvents_1.BreadcrumbEvents.clearBreadcrumb, function () { return _this.setStateEmpty(); });\r\n        return _this;\r\n    }\r\n    /**\r\n     * Clears any `hd` or `hq` set in the {@link QueryStateModel}.\r\n     * Also logs the `contextRemove` event in the usage analytics and triggers a new query.\r\n     */\r\n    HiddenQuery.prototype.clear = function () {\r\n        this.setStateEmpty();\r\n        var hiddenDescriptionRemoved = this.getDescription();\r\n        this.usageAnalytics.logSearchEvent(AnalyticsActionListMeta_1.analyticsActionCauseList.contextRemove, {\r\n            contextName: hiddenDescriptionRemoved\r\n        });\r\n        this.queryController.executeQuery();\r\n    };\r\n    HiddenQuery.prototype.setStateEmpty = function () {\r\n        this.queryStateModel.set(QueryStateModel_1.QUERY_STATE_ATTRIBUTES.HD, '');\r\n        this.queryStateModel.set(QueryStateModel_1.QUERY_STATE_ATTRIBUTES.HQ, '');\r\n    };\r\n    HiddenQuery.prototype.handleBuildingQuery = function (data) {\r\n        Assert_1.Assert.exists(data);\r\n        var hiddenQuery = this.queryStateModel.get(QueryStateModel_1.QUERY_STATE_ATTRIBUTES.HQ);\r\n        if (Utils_1.Utils.isNonEmptyString(hiddenQuery)) {\r\n            data.queryBuilder.advancedExpression.add(hiddenQuery);\r\n        }\r\n    };\r\n    HiddenQuery.prototype.handlePopulateBreadcrumb = function (args) {\r\n        var _this = this;\r\n        var description = this.getDescription();\r\n        if (!_.isEmpty(description) && !_.isEmpty(this.queryStateModel.get(QueryStateModel_1.QUERY_STATE_ATTRIBUTES.HQ))) {\r\n            var elem = document.createElement('div');\r\n            Dom_1.$$(elem).addClass('coveo-hidden-query-breadcrumb');\r\n            var title = document.createElement('span');\r\n            Dom_1.$$(title).addClass('coveo-hidden-query-breadcrumb-title');\r\n            Dom_1.$$(title).text(this.options.title);\r\n            elem.appendChild(title);\r\n            var value = Dom_1.$$('span', { className: 'coveo-hidden-query-breadcrumb-value' }, _.escape(description)).el;\r\n            elem.appendChild(value);\r\n            var clear = Dom_1.$$('span', { className: 'coveo-hidden-query-breadcrumb-clear' }, SVGIcons_1.SVGIcons.icons.mainClear);\r\n            value.appendChild(clear.el);\r\n            Dom_1.$$(value).on('click', function () { return _this.clear(); });\r\n            args.breadcrumbs.push({\r\n                element: elem\r\n            });\r\n        }\r\n    };\r\n    HiddenQuery.prototype.getDescription = function () {\r\n        var description = this.queryStateModel.get(QueryStateModel_1.QueryStateModel.attributesEnum.hd);\r\n        if (_.isEmpty(description)) {\r\n            description = this.queryStateModel.get(QueryStateModel_1.QueryStateModel.attributesEnum.hq);\r\n        }\r\n        if (!_.isEmpty(description)) {\r\n            if (description.length > this.options.maximumDescriptionLength) {\r\n                description = description.slice(0, this.options.maximumDescriptionLength) + ' ...';\r\n            }\r\n        }\r\n        return description;\r\n    };\r\n    HiddenQuery.ID = 'HiddenQuery';\r\n    HiddenQuery.doExport = function () {\r\n        GlobalExports_1.exportGlobally({\r\n            HiddenQuery: HiddenQuery\r\n        });\r\n    };\r\n    /**\r\n     * Possible options for the `HiddenQuery` component\r\n     * @componentOptions\r\n     */\r\n    HiddenQuery.options = {\r\n        /**\r\n         * Specifies the maximum number of characters from the hidden query description (`hd`) to display in the\r\n         * {@link Breadcrumb}.\r\n         *\r\n         * Beyond this length, the HiddenQuery component slices the rest of the description and replaces it by `...`.\r\n         *\r\n         * Default value is `100`. Minimum value is `0`.\r\n         */\r\n        maximumDescriptionLength: ComponentOptions_1.ComponentOptions.buildNumberOption({ min: 0, defaultValue: 100 }),\r\n        /**\r\n         * Specifies the title that should appear in the {@link Breadcrumb} when the HiddenQuery populates it.\r\n         *\r\n         * Default value is the localized string f\r\n         * or `\"Additional filters:\"`\r\n         */\r\n        title: ComponentOptions_1.ComponentOptions.buildLocalizedStringOption({\r\n            localizedString: function () { return Strings_1.l('AdditionalFilters') + ':'; }\r\n        })\r\n    };\r\n    return HiddenQuery;\r\n}(Component_1.Component));\r\nexports.HiddenQuery = HiddenQuery;\r\nInitialization_1.Initialization.registerAutoCreateComponent(HiddenQuery);\r\n\n\n/***/ }),\n\n/***/ 615:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// HiddenQuery.min__5f3280c404a1ee75a113.js","import { Component } from '../Base/Component';\r\nimport { ComponentOptions } from '../Base/ComponentOptions';\r\nimport { IComponentBindings } from '../Base/ComponentBindings';\r\nimport { l } from '../../strings/Strings';\r\nimport { QueryEvents, IBuildingQueryEventArgs } from '../../events/QueryEvents';\r\nimport { BreadcrumbEvents, IPopulateBreadcrumbEventArgs } from '../../events/BreadcrumbEvents';\r\nimport { analyticsActionCauseList, IAnalyticsContextRemoveMeta } from '../Analytics/AnalyticsActionListMeta';\r\nimport { QUERY_STATE_ATTRIBUTES, QueryStateModel } from '../../models/QueryStateModel';\r\nimport { $$ } from '../../utils/Dom';\r\nimport { Utils } from '../../utils/Utils';\r\nimport { Initialization } from '../Base/Initialization';\r\nimport { Assert } from '../../misc/Assert';\r\nimport * as _ from 'underscore';\r\nimport { exportGlobally } from '../../GlobalExports';\r\nimport 'styling/_HiddenQuery';\r\nimport { SVGIcons } from '../../utils/SVGIcons';\r\n\r\nexport interface IHiddenQueryOptions {\r\n  maximumDescriptionLength: number;\r\n  title: string;\r\n}\r\n\r\n/**\r\n * The HiddenQuery component handles a \"hidden\" query parameter (`hq`) and its description (`hd`).\r\n *\r\n * Concretely, this means that if a HiddenQuery component is present in your page and you load your search interface\r\n * with `hq=foo&hd=bar` in the URL hash, the component adds `foo` as an expression to the query (`hq` is the hidden\r\n * query) and renders `bar` in the {@link Breadcrumb} (`hd` is the hidden query description).\r\n */\r\nexport class HiddenQuery extends Component {\r\n  static ID = 'HiddenQuery';\r\n\r\n  static doExport = () => {\r\n    exportGlobally({\r\n      HiddenQuery: HiddenQuery\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Possible options for the `HiddenQuery` component\r\n   * @componentOptions\r\n   */\r\n  static options: IHiddenQueryOptions = {\r\n    /**\r\n     * Specifies the maximum number of characters from the hidden query description (`hd`) to display in the\r\n     * {@link Breadcrumb}.\r\n     *\r\n     * Beyond this length, the HiddenQuery component slices the rest of the description and replaces it by `...`.\r\n     *\r\n     * Default value is `100`. Minimum value is `0`.\r\n     */\r\n    maximumDescriptionLength: ComponentOptions.buildNumberOption({ min: 0, defaultValue: 100 }),\r\n\r\n    /**\r\n     * Specifies the title that should appear in the {@link Breadcrumb} when the HiddenQuery populates it.\r\n     *\r\n     * Default value is the localized string f\r\n     * or `\"Additional filters:\"`\r\n     */\r\n    title: ComponentOptions.buildLocalizedStringOption({\r\n      localizedString: () => l('AdditionalFilters') + ':'\r\n    })\r\n  };\r\n\r\n  /**\r\n   * Creates a new HiddenQuery component, which binds multiple events ({@link QueryEvents.buildingQuery},\r\n   * {@link BreadcrumbEvents.populateBreadcrumb} and {@link BreadcrumbEvents.clearBreadcrumb}).\r\n   * @param element The HTMLElement on which to instantiate the component.\r\n   * @param options The options for the HiddenQuery component.\r\n   * @param bindings The bindings that the component requires to function normally. If not set, these will be\r\n   * automatically resolved (with a slower execution time).\r\n   */\r\n  constructor(public element: HTMLElement, public options?: IHiddenQueryOptions, bindings?: IComponentBindings) {\r\n    super(element, HiddenQuery.ID, bindings);\r\n    this.options = ComponentOptions.initComponentOptions(element, HiddenQuery, options);\r\n\r\n    this.bind.onRootElement(QueryEvents.buildingQuery, (args: IBuildingQueryEventArgs) => this.handleBuildingQuery(args));\r\n    this.bind.onRootElement(BreadcrumbEvents.populateBreadcrumb, (args: IPopulateBreadcrumbEventArgs) =>\r\n      this.handlePopulateBreadcrumb(args)\r\n    );\r\n    this.bind.onRootElement(BreadcrumbEvents.clearBreadcrumb, () => this.setStateEmpty());\r\n  }\r\n\r\n  /**\r\n   * Clears any `hd` or `hq` set in the {@link QueryStateModel}.\r\n   * Also logs the `contextRemove` event in the usage analytics and triggers a new query.\r\n   */\r\n  public clear() {\r\n    this.setStateEmpty();\r\n    const hiddenDescriptionRemoved = this.getDescription();\r\n    this.usageAnalytics.logSearchEvent<IAnalyticsContextRemoveMeta>(analyticsActionCauseList.contextRemove, {\r\n      contextName: hiddenDescriptionRemoved\r\n    });\r\n    this.queryController.executeQuery();\r\n  }\r\n\r\n  private setStateEmpty() {\r\n    this.queryStateModel.set(QUERY_STATE_ATTRIBUTES.HD, '');\r\n    this.queryStateModel.set(QUERY_STATE_ATTRIBUTES.HQ, '');\r\n  }\r\n\r\n  private handleBuildingQuery(data: IBuildingQueryEventArgs) {\r\n    Assert.exists(data);\r\n    const hiddenQuery = this.queryStateModel.get(QUERY_STATE_ATTRIBUTES.HQ);\r\n    if (Utils.isNonEmptyString(hiddenQuery)) {\r\n      data.queryBuilder.advancedExpression.add(hiddenQuery);\r\n    }\r\n  }\r\n\r\n  private handlePopulateBreadcrumb(args: IPopulateBreadcrumbEventArgs) {\r\n    const description = this.getDescription();\r\n    if (!_.isEmpty(description) && !_.isEmpty(this.queryStateModel.get(QUERY_STATE_ATTRIBUTES.HQ))) {\r\n      const elem = document.createElement('div');\r\n      $$(elem).addClass('coveo-hidden-query-breadcrumb');\r\n\r\n      const title = document.createElement('span');\r\n      $$(title).addClass('coveo-hidden-query-breadcrumb-title');\r\n      $$(title).text(this.options.title);\r\n      elem.appendChild(title);\r\n\r\n      const value = $$('span', { className: 'coveo-hidden-query-breadcrumb-value' }, _.escape(description)).el;\r\n      elem.appendChild(value);\r\n\r\n      const clear = $$('span', { className: 'coveo-hidden-query-breadcrumb-clear' }, SVGIcons.icons.mainClear);\r\n      value.appendChild(clear.el);\r\n\r\n      $$(value).on('click', () => this.clear());\r\n\r\n      args.breadcrumbs.push({\r\n        element: elem\r\n      });\r\n    }\r\n  }\r\n\r\n  private getDescription() {\r\n    let description = this.queryStateModel.get(QueryStateModel.attributesEnum.hd);\r\n    if (_.isEmpty(description)) {\r\n      description = this.queryStateModel.get(QueryStateModel.attributesEnum.hq);\r\n    }\r\n    if (!_.isEmpty(description)) {\r\n      if (description.length > this.options.maximumDescriptionLength) {\r\n        description = description.slice(0, this.options.maximumDescriptionLength) + ' ...';\r\n      }\r\n    }\r\n    return description;\r\n  }\r\n}\r\nInitialization.registerAutoCreateComponent(HiddenQuery);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/HiddenQuery/HiddenQuery.ts"],"sourceRoot":""}