{"version":3,"sources":["PrintableUri.min__5f3280c404a1ee75a113.js","./src/ui/PrintableUri/PrintableUri.ts","./src/ui/ResultLink/ResultLink.ts"],"names":["webpackJsonpCoveo__temporary","263","module","exports","__webpack_require__","__extends","this","extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","defineProperty","value","element","options","bindings","result","PrintableUri","ID","links","ComponentOptions","initComponentOptions","_","extend","componentOptionsModel","get","ComponentOptionsModel","attributesEnum","resultLink","renderUri","addAccessibilityAttributes","_this","openLink","logAnalytics","last","openLinkInNewWindow","openLinkAsConfigured","parentsXml","Utils","getFieldValue","renderParents","parents","parseXmlParents","firstIndexToRender","maxNumOfParts","DeviceUtils","isMobileDevice","titleTemplate","link","ResultLink","buildElementForResultLink","printableUri","push","appendChild","makeLinkAccessible","renderShortenedUri","buildSeparator","$$","className","role","el","buildHtmlToken","name","uri","modifiedName","charAt","toUpperCase","slice","resultPart","clickUri","title","titleHighlights","getModifiedHighlightsForModifiedResultTitle","elements","parseXml","getElementsByTagName","item","renderOptions","empty","lastIndex","beforeLastIndex","maxMiddleParts","lastMiddlePartIndex","Math","min","partsBetweenMiddlePartsAndLastPart","optionallyRenderFirstEllipsis","renderMiddleParts","renderLastEllipsis","max","renderLastPart","nextRenderOptions","appendEllipsis","appendSeparator","lastIndexToRender","appendToken","buildEllipsis","firstChild","focus","part","getAttribute","stringAndHoles","indexOf","StringAndHoles","shortenUri","width","shortenPath","shortenedUri","HighlightUtils","highlightString","printableUriHighlights","holes","action","button","AccessibleButton","withElement","withLabel","l","withSelectAction","build","newTitle","getRestHighlightsForAllTerms","termsToHighlight","phrasesToHighlight","DefaultStreamHighlightOptions","setAttribute","doExport","exportGlobally","Component","Initialization","registerAutoCreateComponent","532","633","92","os","logOpenDocument","debounce","queryController","saveLastQuery","documentURL","undefined","escapedClickUri","usageAnalytics","logClickEvent","analyticsActionCauseList","documentOpen","documentTitle","author","root","Defer","flush","initialOptions","resultLinkOptions","resolveResult","openQuickview","raw","Assert","exists","quickviewShouldBeOpened","once","on","window","setTimeout","clearTimeout","bindEventToOpen","test","innerHTML","getDisplayedTitle","getDisplayedTitleAsText","location","href","getResultUri","open","openLinkInOutlook","hasOutlookField","toExecuteOnOpen","bindOnClickIfNotUndefined","bindOpenQuickviewIfNotUndefined","setHrefIfNotAlready","openLinkThatIsNotAnAnchor","StringUtils","buildStringTemplateFromResult","StreamHighlightUtils","highlightStreamText","container","setHtml","text","escape","enumerable","configurable","onClick","e","resultElement","trigger","ResultListEvents","preventDefault","elementIsAnAnchor","alwaysOpenInNewWindow","openInOutlook","isNonEmptyString","filterProtocol","isAbsolute","isRelative","hrefTemplate","field","setField","tagName","OSUtils","OS_NAME","MACOSX","WINDOWS","isUriThatMustBeOpenedInQuickview","toLowerCase","QueryUtils","hasHTMLVersion","buildFieldOption","buildBooleanOption","defaultValue","buildStringOption","buildCustomOption"],"mappings":"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","file":"PrintableUri.min__5f3280c404a1ee75a113.js","sourcesContent":["webpackJsonpCoveo__temporary([35,63],{\n\n/***/ 263:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n            t[p] = s[p];\r\n    }\r\n    return t;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar ComponentOptions_1 = __webpack_require__(8);\r\nvar HighlightUtils_1 = __webpack_require__(68);\r\nvar Initialization_1 = __webpack_require__(2);\r\nvar Utils_1 = __webpack_require__(4);\r\nvar Dom_1 = __webpack_require__(1);\r\nvar GlobalExports_1 = __webpack_require__(3);\r\n__webpack_require__(633);\r\nvar ResultLink_1 = __webpack_require__(92);\r\nvar StreamHighlightUtils_1 = __webpack_require__(114);\r\nvar _ = __webpack_require__(0);\r\nvar ComponentOptionsModel_1 = __webpack_require__(28);\r\nvar Component_1 = __webpack_require__(7);\r\nvar AccessibleButton_1 = __webpack_require__(15);\r\nvar DeviceUtils_1 = __webpack_require__(24);\r\nvar Strings_1 = __webpack_require__(6);\r\n/**\r\n * The `PrintableUri` component inherits from the [ `ResultLink` ]{@link ResultLink} component and supports all of its options.\r\n *\r\n * This component displays the URI, or path, to access a result.\r\n *\r\n * This component is a result template component (see [Result Templates](https://docs.coveo.com/en/413/)).\r\n */\r\nvar PrintableUri = /** @class */ (function (_super) {\r\n    __extends(PrintableUri, _super);\r\n    /**\r\n     * Creates a new PrintableUri.\r\n     * @param element The HTMLElement on which to instantiate the component.\r\n     * @param options The options for the PrintableUri component.\r\n     * @param bindings The bindings that the component requires to function normally. If not set, these will be\r\n     * automatically resolved (with a slower execution time).\r\n     * @param result The result to associate the component with.\r\n     */\r\n    function PrintableUri(element, options, bindings, result) {\r\n        var _this = _super.call(this, element, PrintableUri.ID, bindings) || this;\r\n        _this.element = element;\r\n        _this.options = options;\r\n        _this.bindings = bindings;\r\n        _this.result = result;\r\n        _this.links = [];\r\n        _this.options = ComponentOptions_1.ComponentOptions.initComponentOptions(element, PrintableUri, options);\r\n        _this.options = _.extend({}, _this.options, _this.componentOptionsModel.get(ComponentOptionsModel_1.ComponentOptionsModel.attributesEnum.resultLink));\r\n        _this.renderUri(_this.result);\r\n        _this.addAccessibilityAttributes();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Opens the result in the same window, no matter how the actual component is configured for the end user.\r\n     * @param logAnalytics Specifies whether the method should log an analytics event.\r\n     */\r\n    PrintableUri.prototype.openLink = function (logAnalytics) {\r\n        if (logAnalytics === void 0) { logAnalytics = true; }\r\n        _.last(this.links).openLink(logAnalytics);\r\n    };\r\n    /**\r\n     * Opens the result in a new window, no matter how the actual component is configured for the end user.\r\n     * @param logAnalytics Specifies whether the method should log an analytics event.\r\n     */\r\n    PrintableUri.prototype.openLinkInNewWindow = function (logAnalytics) {\r\n        if (logAnalytics === void 0) { logAnalytics = true; }\r\n        _.last(this.links).openLinkInNewWindow(logAnalytics);\r\n    };\r\n    /**\r\n     * Opens the link in the same manner the end user would.\r\n     *\r\n     * This essentially simulates a click on the result link.\r\n     *\r\n     * @param logAnalytics Specifies whether the method should log an analytics event.\r\n     */\r\n    PrintableUri.prototype.openLinkAsConfigured = function (logAnalytics) {\r\n        if (logAnalytics === void 0) { logAnalytics = true; }\r\n        _.last(this.links).openLinkAsConfigured(logAnalytics);\r\n    };\r\n    PrintableUri.prototype.renderUri = function (result) {\r\n        var parentsXml = Utils_1.Utils.getFieldValue(result, 'parents');\r\n        if (parentsXml) {\r\n            this.renderParents({\r\n                parents: this.parseXmlParents(parentsXml),\r\n                firstIndexToRender: 0,\r\n                maxNumOfParts: DeviceUtils_1.DeviceUtils.isMobileDevice() ? 3 : 5\r\n            });\r\n        }\r\n        else if (this.options.titleTemplate) {\r\n            var link = new ResultLink_1.ResultLink(this.buildElementForResultLink(result.printableUri), this.options, this.bindings, this.result);\r\n            this.links.push(link);\r\n            this.element.appendChild(this.makeLinkAccessible(link.element));\r\n        }\r\n        else {\r\n            this.renderShortenedUri();\r\n        }\r\n    };\r\n    PrintableUri.prototype.buildSeparator = function () {\r\n        var separator = Dom_1.$$('span', { className: 'coveo-printable-uri-separator', role: 'separator' }, ' > ');\r\n        return separator.el;\r\n    };\r\n    PrintableUri.prototype.buildHtmlToken = function (name, uri) {\r\n        var modifiedName = name.charAt(0).toUpperCase() + name.slice(1);\r\n        var resultPart = _.extend({}, this.result, {\r\n            clickUri: uri,\r\n            title: modifiedName,\r\n            titleHighlights: this.getModifiedHighlightsForModifiedResultTitle(modifiedName)\r\n        });\r\n        var link = new ResultLink_1.ResultLink(this.buildElementForResultLink(modifiedName), this.options, this.bindings, resultPart);\r\n        this.links.push(link);\r\n        return link.element;\r\n    };\r\n    PrintableUri.prototype.parseXmlParents = function (parentsXml) {\r\n        var elements = Utils_1.Utils.parseXml(parentsXml).getElementsByTagName('parent');\r\n        var parents = [];\r\n        for (var i = 0; i < elements.length; i++) {\r\n            parents.push(elements.item(i));\r\n        }\r\n        return parents;\r\n    };\r\n    PrintableUri.prototype.renderParents = function (renderOptions) {\r\n        Dom_1.$$(this.element).empty();\r\n        var lastIndex = renderOptions.parents.length - 1;\r\n        var beforeLastIndex = lastIndex - 1;\r\n        var maxMiddleParts = renderOptions.maxNumOfParts - 1;\r\n        var lastMiddlePartIndex = Math.min(beforeLastIndex, renderOptions.firstIndexToRender + maxMiddleParts - 1);\r\n        var partsBetweenMiddlePartsAndLastPart = beforeLastIndex - lastMiddlePartIndex;\r\n        this.optionallyRenderFirstEllipsis(renderOptions);\r\n        this.renderMiddleParts(renderOptions, lastMiddlePartIndex);\r\n        if (partsBetweenMiddlePartsAndLastPart > 0) {\r\n            this.renderLastEllipsis(__assign({}, renderOptions, { firstIndexToRender: Math.min(Math.max(lastMiddlePartIndex + 1, 0), renderOptions.parents.length - renderOptions.maxNumOfParts) }));\r\n        }\r\n        this.renderLastPart(renderOptions);\r\n    };\r\n    PrintableUri.prototype.optionallyRenderFirstEllipsis = function (nextRenderOptions) {\r\n        if (nextRenderOptions.firstIndexToRender > 0) {\r\n            this.appendEllipsis(__assign({}, nextRenderOptions, { firstIndexToRender: Math.max(0, nextRenderOptions.firstIndexToRender - nextRenderOptions.maxNumOfParts + 1) }));\r\n            this.appendSeparator();\r\n        }\r\n    };\r\n    PrintableUri.prototype.renderMiddleParts = function (renderOptions, lastIndexToRender) {\r\n        for (var i = renderOptions.firstIndexToRender; i <= lastIndexToRender; i++) {\r\n            if (i > renderOptions.firstIndexToRender) {\r\n                this.appendSeparator();\r\n            }\r\n            this.appendToken(renderOptions.parents[i]);\r\n        }\r\n    };\r\n    PrintableUri.prototype.renderLastEllipsis = function (nextRenderOptions) {\r\n        this.appendSeparator();\r\n        this.appendEllipsis(nextRenderOptions);\r\n    };\r\n    PrintableUri.prototype.renderLastPart = function (renderOptions) {\r\n        this.appendSeparator();\r\n        this.appendToken(renderOptions.parents[renderOptions.parents.length - 1]);\r\n    };\r\n    PrintableUri.prototype.appendSeparator = function () {\r\n        this.element.appendChild(this.buildSeparator());\r\n    };\r\n    PrintableUri.prototype.appendEllipsis = function (nextRenderOptions) {\r\n        var _this = this;\r\n        this.element.appendChild(this.buildEllipsis(function () {\r\n            _this.renderParents(nextRenderOptions);\r\n            _this.element.firstChild.firstChild.focus();\r\n        }));\r\n    };\r\n    PrintableUri.prototype.appendToken = function (part) {\r\n        this.element.appendChild(this.makeLinkAccessible(this.buildHtmlToken(part.getAttribute('name'), part.getAttribute('uri'))));\r\n    };\r\n    PrintableUri.prototype.renderShortenedUri = function () {\r\n        var stringAndHoles;\r\n        if (this.result.printableUri.indexOf('\\\\') == -1) {\r\n            stringAndHoles = HighlightUtils_1.StringAndHoles.shortenUri(this.result.printableUri, Dom_1.$$(this.element).width());\r\n        }\r\n        else {\r\n            stringAndHoles = HighlightUtils_1.StringAndHoles.shortenPath(this.result.printableUri, Dom_1.$$(this.element).width());\r\n        }\r\n        var shortenedUri = HighlightUtils_1.HighlightUtils.highlightString(stringAndHoles.value, this.result.printableUriHighlights, stringAndHoles.holes, 'coveo-highlight');\r\n        var resultPart = _.extend({}, this.result, {\r\n            title: shortenedUri,\r\n            titleHighlights: this.getModifiedHighlightsForModifiedResultTitle(shortenedUri)\r\n        });\r\n        var link = new ResultLink_1.ResultLink(this.buildElementForResultLink(this.result.printableUri), this.options, this.bindings, resultPart);\r\n        this.links.push(link);\r\n        this.element.appendChild(this.makeLinkAccessible(link.element));\r\n    };\r\n    PrintableUri.prototype.makeLinkAccessible = function (link) {\r\n        return Dom_1.$$('span', {\r\n            className: 'coveo-printable-uri-part',\r\n            role: 'listitem'\r\n        }, link).el;\r\n    };\r\n    PrintableUri.prototype.buildEllipsis = function (action) {\r\n        var button = Dom_1.$$('button', {}, '...');\r\n        var element = Dom_1.$$('span', {\r\n            className: 'coveo-printable-uri-ellipsis',\r\n            role: 'listitem'\r\n        }, button).el;\r\n        new AccessibleButton_1.AccessibleButton()\r\n            .withElement(button)\r\n            .withLabel(Strings_1.l('CollapsedUriParts'))\r\n            .withSelectAction(action)\r\n            .build();\r\n        return element;\r\n    };\r\n    PrintableUri.prototype.buildElementForResultLink = function (title) {\r\n        return Dom_1.$$('a', {\r\n            className: 'CoveoResultLink',\r\n            title: title\r\n        }).el;\r\n    };\r\n    PrintableUri.prototype.getModifiedHighlightsForModifiedResultTitle = function (newTitle) {\r\n        return StreamHighlightUtils_1.getRestHighlightsForAllTerms(newTitle, this.result.termsToHighlight, this.result.phrasesToHighlight, new StreamHighlightUtils_1.DefaultStreamHighlightOptions());\r\n    };\r\n    PrintableUri.prototype.addAccessibilityAttributes = function () {\r\n        this.element.setAttribute('role', 'list');\r\n    };\r\n    PrintableUri.ID = 'PrintableUri';\r\n    PrintableUri.options = {};\r\n    PrintableUri.doExport = function () {\r\n        GlobalExports_1.exportGlobally({\r\n            PrintableUri: PrintableUri\r\n        });\r\n    };\r\n    return PrintableUri;\r\n}(Component_1.Component));\r\nexports.PrintableUri = PrintableUri;\r\nPrintableUri.options = _.extend({}, PrintableUri.options, ResultLink_1.ResultLink.options);\r\nInitialization_1.Initialization.registerAutoCreateComponent(PrintableUri);\r\n\n\n/***/ }),\n\n/***/ 532:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 633:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 92:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Component_1 = __webpack_require__(7);\r\nvar ComponentOptions_1 = __webpack_require__(8);\r\nvar ComponentOptionsModel_1 = __webpack_require__(28);\r\nvar AnalyticsActionListMeta_1 = __webpack_require__(10);\r\nvar ResultListEvents_1 = __webpack_require__(29);\r\nvar HighlightUtils_1 = __webpack_require__(68);\r\nvar DeviceUtils_1 = __webpack_require__(24);\r\nvar OSUtils_1 = __webpack_require__(181);\r\nvar Initialization_1 = __webpack_require__(2);\r\nvar QueryUtils_1 = __webpack_require__(21);\r\nvar Assert_1 = __webpack_require__(5);\r\nvar Utils_1 = __webpack_require__(4);\r\nvar Defer_1 = __webpack_require__(31);\r\nvar Dom_1 = __webpack_require__(1);\r\nvar StreamHighlightUtils_1 = __webpack_require__(114);\r\nvar StringUtils_1 = __webpack_require__(22);\r\nvar underscore_1 = __webpack_require__(0);\r\nvar GlobalExports_1 = __webpack_require__(3);\r\n__webpack_require__(532);\r\nvar AccessibleButton_1 = __webpack_require__(15);\r\n/**\r\n * The `ResultLink` component automatically transform a search result title into a clickable link pointing to the\r\n * original item.\r\n *\r\n * This component is a result template component (see [Result Templates](https://docs.coveo.com/en/413/)).\r\n */\r\nvar ResultLink = /** @class */ (function (_super) {\r\n    __extends(ResultLink, _super);\r\n    /**\r\n     * Creates a new `ResultLink` component.\r\n     * @param element The HTMLElement on which to instantiate the component.\r\n     * @param options The options for the `ResultLink` component.\r\n     * @param bindings The bindings that the component requires to function normally. If not set, these will be\r\n     * automatically resolved (with a slower execution time).\r\n     * @param result The result to associate the component with.\r\n     * @param os\r\n     */\r\n    function ResultLink(element, options, bindings, result, os) {\r\n        var _this = _super.call(this, element, ResultLink.ID, bindings) || this;\r\n        _this.element = element;\r\n        _this.options = options;\r\n        _this.bindings = bindings;\r\n        _this.result = result;\r\n        _this.os = os;\r\n        _this.logOpenDocument = underscore_1.debounce(function () {\r\n            _this.queryController.saveLastQuery();\r\n            var documentURL = Dom_1.$$(_this.element).getAttribute('href');\r\n            if (documentURL == undefined || documentURL == '') {\r\n                documentURL = _this.escapedClickUri;\r\n            }\r\n            _this.usageAnalytics.logClickEvent(AnalyticsActionListMeta_1.analyticsActionCauseList.documentOpen, {\r\n                documentURL: documentURL,\r\n                documentTitle: _this.result.title,\r\n                author: Utils_1.Utils.getFieldValue(_this.result, 'author')\r\n            }, _this.result, _this.root);\r\n            Defer_1.Defer.flush();\r\n        }, 1500, true);\r\n        var initialOptions = ComponentOptions_1.ComponentOptions.initComponentOptions(element, ResultLink, options);\r\n        var resultLinkOptions = _this.componentOptionsModel.get(ComponentOptionsModel_1.ComponentOptionsModel.attributesEnum.resultLink);\r\n        _this.options = underscore_1.extend({}, initialOptions, resultLinkOptions);\r\n        _this.result = result || _this.resolveResult();\r\n        if (_this.options.openQuickview == null) {\r\n            _this.options.openQuickview = result.raw['connectortype'] == 'ExchangeCrawler' && DeviceUtils_1.DeviceUtils.isMobileDevice();\r\n        }\r\n        _this.element.setAttribute('tabindex', '0');\r\n        Assert_1.Assert.exists(_this.componentOptionsModel);\r\n        Assert_1.Assert.exists(_this.result);\r\n        if (!_this.quickviewShouldBeOpened()) {\r\n            // Bind on multiple \"click\" or \"mouse\" events.\r\n            // Create a function that will be executed only once, so as not to log multiple events\r\n            // Once a result link has been opened, and that we log at least one analytics event,\r\n            // it should not matter if the end user open the same link multiple times with different methods.\r\n            // It's still only one \"click\" event as far as UA is concerned.\r\n            // Also need to handle \"longpress\" on mobile (the contextual menu), which we assume to be 1 s long.\r\n            var executeOnlyOnce_1 = underscore_1.once(function () { return _this.logOpenDocument(); });\r\n            Dom_1.$$(element).on(['contextmenu', 'click', 'mousedown', 'mouseup'], executeOnlyOnce_1);\r\n            var longPressTimer_1;\r\n            Dom_1.$$(element).on('touchstart', function () {\r\n                longPressTimer_1 = window.setTimeout(executeOnlyOnce_1, 1000);\r\n            });\r\n            Dom_1.$$(element).on('touchend', function () {\r\n                if (longPressTimer_1) {\r\n                    clearTimeout(longPressTimer_1);\r\n                }\r\n            });\r\n        }\r\n        _this.renderUri(element, result);\r\n        _this.bindEventToOpen();\r\n        return _this;\r\n    }\r\n    ResultLink.prototype.renderUri = function (element, result) {\r\n        if (/^\\s*$/.test(this.element.innerHTML)) {\r\n            var title = this.getDisplayedTitle();\r\n            this.element.innerHTML = title;\r\n            if (!this.element.title) {\r\n                this.element.title = this.getDisplayedTitleAsText();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Opens the result in the same window, no matter how the actual component is configured for the end user.\r\n     * @param logAnalytics Specifies whether the method should log an analytics event.\r\n     */\r\n    ResultLink.prototype.openLink = function (logAnalytics) {\r\n        if (logAnalytics === void 0) { logAnalytics = true; }\r\n        if (logAnalytics) {\r\n            this.logOpenDocument();\r\n        }\r\n        window.location.href = this.getResultUri();\r\n    };\r\n    /**\r\n     * Opens the result in a new window, no matter how the actual component is configured for the end user.\r\n     * @param logAnalytics Specifies whether the method should log an analytics event.\r\n     */\r\n    ResultLink.prototype.openLinkInNewWindow = function (logAnalytics) {\r\n        if (logAnalytics === void 0) { logAnalytics = true; }\r\n        if (logAnalytics) {\r\n            this.logOpenDocument();\r\n        }\r\n        window.open(this.getResultUri(), '_blank');\r\n    };\r\n    /**\r\n     * Tries to open the result in Microsoft Outlook if the result has an `outlookformacuri` or `outlookuri` field.\r\n     *\r\n     * Normally, this implies the result should be a link to an email.\r\n     *\r\n     * If the needed fields are not present, this method does nothing.\r\n     * @param logAnalytics Specifies whether the method should log an analytics event.\r\n     */\r\n    ResultLink.prototype.openLinkInOutlook = function (logAnalytics) {\r\n        if (logAnalytics === void 0) { logAnalytics = true; }\r\n        if (this.hasOutlookField()) {\r\n            if (logAnalytics) {\r\n                this.logOpenDocument();\r\n            }\r\n            this.openLink();\r\n        }\r\n    };\r\n    /**\r\n     * Opens the link in the same manner the end user would.\r\n     *\r\n     * This essentially simulates a click on the result link.\r\n     *\r\n     * @param logAnalytics Specifies whether the method should log an analytics event.\r\n     */\r\n    ResultLink.prototype.openLinkAsConfigured = function (logAnalytics) {\r\n        if (logAnalytics === void 0) { logAnalytics = true; }\r\n        if (this.toExecuteOnOpen) {\r\n            if (logAnalytics) {\r\n                this.logOpenDocument();\r\n            }\r\n            this.toExecuteOnOpen();\r\n        }\r\n    };\r\n    ResultLink.prototype.bindEventToOpen = function () {\r\n        return (this.bindOnClickIfNotUndefined() ||\r\n            this.bindOpenQuickviewIfNotUndefined() ||\r\n            this.setHrefIfNotAlready() ||\r\n            this.openLinkThatIsNotAnAnchor());\r\n    };\r\n    ResultLink.prototype.getDisplayedTitle = function () {\r\n        if (!this.options.titleTemplate) {\r\n            return this.result.title\r\n                ? HighlightUtils_1.HighlightUtils.highlightString(this.result.title, this.result.titleHighlights, null, 'coveo-highlight')\r\n                : this.escapedClickUri;\r\n        }\r\n        else {\r\n            var newTitle = StringUtils_1.StringUtils.buildStringTemplateFromResult(this.options.titleTemplate, this.result);\r\n            return newTitle\r\n                ? StreamHighlightUtils_1.StreamHighlightUtils.highlightStreamText(newTitle, this.result.termsToHighlight, this.result.phrasesToHighlight)\r\n                : this.escapedClickUri;\r\n        }\r\n    };\r\n    ResultLink.prototype.getDisplayedTitleAsText = function () {\r\n        var container = Dom_1.$$('div');\r\n        container.setHtml(this.getDisplayedTitle());\r\n        return container.text();\r\n    };\r\n    Object.defineProperty(ResultLink.prototype, \"escapedClickUri\", {\r\n        get: function () {\r\n            return underscore_1.escape(this.result.clickUri);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ResultLink.prototype.bindOnClickIfNotUndefined = function () {\r\n        var _this = this;\r\n        if (this.options.onClick != undefined) {\r\n            this.toExecuteOnOpen = function (e) {\r\n                _this.options.onClick.call(_this, e, _this.result);\r\n            };\r\n            new AccessibleButton_1.AccessibleButton()\r\n                .withElement(this.element)\r\n                .withLabel(this.result.title)\r\n                .withSelectAction(function (e) { return _this.toExecuteOnOpen(e); })\r\n                .build();\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    ResultLink.prototype.bindOpenQuickviewIfNotUndefined = function () {\r\n        var _this = this;\r\n        if (this.quickviewShouldBeOpened()) {\r\n            this.toExecuteOnOpen = function () {\r\n                Dom_1.$$(_this.bindings.resultElement).trigger(ResultListEvents_1.ResultListEvents.openQuickview);\r\n            };\r\n            Dom_1.$$(this.element).on('click', function (e) {\r\n                e.preventDefault();\r\n                _this.toExecuteOnOpen();\r\n            });\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    ResultLink.prototype.openLinkThatIsNotAnAnchor = function () {\r\n        var _this = this;\r\n        if (!this.elementIsAnAnchor()) {\r\n            this.toExecuteOnOpen = function () {\r\n                if (_this.options.alwaysOpenInNewWindow) {\r\n                    if (_this.options.openInOutlook) {\r\n                        _this.openLinkInOutlook();\r\n                    }\r\n                    else {\r\n                        _this.openLinkInNewWindow();\r\n                    }\r\n                }\r\n                else {\r\n                    _this.openLink();\r\n                }\r\n            };\r\n            Dom_1.$$(this.element).on('click', function () {\r\n                _this.toExecuteOnOpen();\r\n            });\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    ResultLink.prototype.setHrefIfNotAlready = function () {\r\n        // Do not erase any value put in href by the template, etc. Allows\r\n        // using custom click urls while still keeping analytics recording\r\n        // and other behavior brought by the component.\r\n        if (this.elementIsAnAnchor() && !Utils_1.Utils.isNonEmptyString(Dom_1.$$(this.element).getAttribute('href'))) {\r\n            Dom_1.$$(this.element).setAttribute('href', this.getResultUri());\r\n            if (this.options.alwaysOpenInNewWindow && !(this.options.openInOutlook && this.hasOutlookField())) {\r\n                Dom_1.$$(this.element).setAttribute('target', '_blank');\r\n            }\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    ResultLink.prototype.filterProtocol = function (uri) {\r\n        var isAbsolute = /^(https?|ftp|file|mailto|tel):/i.test(uri);\r\n        var isRelative = /^\\//.test(uri);\r\n        return isAbsolute || isRelative ? uri : '';\r\n    };\r\n    ResultLink.prototype.getResultUri = function () {\r\n        if (this.options.hrefTemplate) {\r\n            var uri = StringUtils_1.StringUtils.buildStringTemplateFromResult(this.options.hrefTemplate, this.result);\r\n            return this.filterProtocol(uri);\r\n        }\r\n        if (this.options.field == undefined && this.options.openInOutlook) {\r\n            this.setField();\r\n        }\r\n        if (this.options.field != undefined) {\r\n            return this.filterProtocol(Utils_1.Utils.getFieldValue(this.result, this.options.field));\r\n        }\r\n        return this.filterProtocol(this.result.clickUri);\r\n    };\r\n    ResultLink.prototype.elementIsAnAnchor = function () {\r\n        return this.element.tagName == 'A';\r\n    };\r\n    ResultLink.prototype.setField = function () {\r\n        var os = Utils_1.Utils.exists(this.os) ? this.os : OSUtils_1.OSUtils.get();\r\n        if (os == OSUtils_1.OS_NAME.MACOSX && this.hasOutlookField()) {\r\n            this.options.field = '@outlookformacuri';\r\n        }\r\n        else if (os == OSUtils_1.OS_NAME.WINDOWS && this.hasOutlookField()) {\r\n            this.options.field = '@outlookuri';\r\n        }\r\n    };\r\n    ResultLink.prototype.hasOutlookField = function () {\r\n        var os = Utils_1.Utils.exists(this.os) ? this.os : OSUtils_1.OSUtils.get();\r\n        if (os == OSUtils_1.OS_NAME.MACOSX && this.result.raw['outlookformacuri'] != undefined) {\r\n            return true;\r\n        }\r\n        else if (os == OSUtils_1.OS_NAME.WINDOWS && this.result.raw['outlookuri'] != undefined) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    ResultLink.prototype.isUriThatMustBeOpenedInQuickview = function () {\r\n        return this.escapedClickUri.toLowerCase().indexOf('ldap://') == 0;\r\n    };\r\n    ResultLink.prototype.quickviewShouldBeOpened = function () {\r\n        return (this.options.openQuickview || this.isUriThatMustBeOpenedInQuickview()) && QueryUtils_1.QueryUtils.hasHTMLVersion(this.result);\r\n    };\r\n    ResultLink.ID = 'ResultLink';\r\n    ResultLink.doExport = function () {\r\n        GlobalExports_1.exportGlobally({\r\n            ResultLink: ResultLink\r\n        });\r\n    };\r\n    /**\r\n     * The options for the ResultLink\r\n     * @componentOptions\r\n     */\r\n    ResultLink.options = {\r\n        /**\r\n         * Specifies the field to use to output the component `href` attribute value.\r\n         *\r\n         * **Tip:**\r\n         * > Instead of specifying a value for the `field` option, you can directly add an `href` attribute to the\r\n         * > `ResultLink` HTML element. Then, you can use a custom script to generate the `href` value.\r\n         *\r\n         * **Examples:**\r\n         * - With the following markup, the `ResultLink` outputs its `href` value using the `@uri` field (rather than the\r\n         * default field):\r\n         *\r\n         * ```html\r\n         * <a class=\"CoveoResultLink\" data-field=\"@uri\"></a>\r\n         * ```\r\n         *\r\n         * - In the following result template, the custom `getMyKBUri()` function provides the `href` value:\r\n         *\r\n         * ```html\r\n         * <script id=\"KnowledgeArticle\" type=\"text/underscore\" class=\"result-template\">\r\n         *   <div class='CoveoIcon>'></div>\r\n         *   <a class=\"CoveoResultLink\" href=\"<%= getMyKBUri(raw) %>\"></a>\r\n         *   <div class=\"CoveoExcerpt\"></div>\r\n         * </script>\r\n         * ```\r\n         *\r\n         * See also [`hrefTemplate`]{@link ResultLink.options.hrefTemplate}, which can override this option.\r\n         *\r\n         * By default, the component uses the `@clickUri` field of the item to output the value of its `href` attribute.\r\n         */\r\n        field: ComponentOptions_1.ComponentOptions.buildFieldOption(),\r\n        /**\r\n         * Specifies whether the component should try to open its link in Microsoft Outlook.\r\n         *\r\n         * Setting this option to `true` is normally useful for `ResultLink` instances related to Microsoft Exchange emails.\r\n         *\r\n         * If this option is `true`, clicking the `ResultLink` calls the\r\n         * [`openLinkInOutlook`]{@link ResultLink.openLinkInOutlook} method instead of the\r\n         * [`openLink`]{@link ResultLink.openLink} method.\r\n         *\r\n         * Default value is `false`.\r\n         */\r\n        openInOutlook: ComponentOptions_1.ComponentOptions.buildBooleanOption({ defaultValue: false }),\r\n        /**\r\n         * Specifies whether the component should open its link in the [`Quickview`]{@link Quickview} component rather than\r\n         * loading through the original URL.\r\n         *\r\n         * Default value is `false`.\r\n         */\r\n        openQuickview: ComponentOptions_1.ComponentOptions.buildBooleanOption({ defaultValue: false }),\r\n        /**\r\n         * Specifies whether the component should open its link in a new window instead of opening it in the current\r\n         * context.\r\n         *\r\n         * If this option is `true`, clicking the `ResultLink` calls the\r\n         * [`openLinkInNewWindow`]{@link ResultLink.openLinkInNewWindow} method instead of the\r\n         * [`openLink`]{@link ResultLink.openLink} method.\r\n         *\r\n         * **Note:**\r\n         * > If a search page contains a [`ResultPreferences`]{@link ResultsPreferences} component whose\r\n         * > [`enableOpenInNewWindow`]{@link ResultsPreferences.options.enableOpenInNewWindow} option is `true`, and the end\r\n         * > user checks the <b>Always open results in new window</b> box, `ResultLink` components in this page will always\r\n         * > open their links in a new window when the end user clicks them, no matter what the value of their\r\n         * > `alwaysOpenInNewWindow` option is.\r\n         *\r\n         * Default value is `false`.\r\n         */\r\n        alwaysOpenInNewWindow: ComponentOptions_1.ComponentOptions.buildBooleanOption({ defaultValue: false }),\r\n        /**\r\n         * Specifies a template literal from which to generate the `ResultLink` `href` attribute value (see\r\n         * [Template literals](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Template_literals)).\r\n         *\r\n         * This option overrides the [`field`]{@link ResultLink.options.field} option value.\r\n         *\r\n         * The template literal can reference any number of fields from the parent result. It can also reference global\r\n         * scope properties.\r\n         *\r\n         * **Examples:**\r\n         *\r\n         * - The following markup generates an `href` value such as `http://uri.com?id=itemTitle`:\r\n         *\r\n         * ```html\r\n         * <a class='CoveoResultLink' data-href-template='${clickUri}?id=${raw.title}'></a>\r\n         * ```\r\n         *\r\n         * - The following markup generates an `href` value such as `localhost/fooBar`:\r\n         *\r\n         * ```html\r\n         * <a class='CoveoResultLink' data-href-template='${window.location.hostname}/{Foo.Bar}'></a>\r\n         * ```\r\n         *\r\n         * Default value is `undefined`.\r\n         */\r\n        hrefTemplate: ComponentOptions_1.ComponentOptions.buildStringOption(),\r\n        /**\r\n         * Specifies a template literal from which to generate the `ResultLink` display title (see\r\n         * [Template literals](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Template_literals)).\r\n         *\r\n         * This option overrides the default `ResultLink` display title behavior.\r\n         *\r\n         * The template literal can reference any number of fields from the parent result. However, if the template literal\r\n         * references a key whose value is undefined in the parent result fields, the `ResultLink` title displays the\r\n         * name of this key instead.\r\n         *\r\n         * This option is ignored if the `ResultLink` innerHTML contains any value.\r\n         *\r\n         * **Examples:**\r\n         *\r\n         * - The following markup generates a `ResultLink` display title such as `Case number: 123456` if both the\r\n         * `raw.objecttype` and `raw.objectnumber` keys are defined in the parent result fields:\r\n         *\r\n         * ```html\r\n         * <a class=\"CoveoResultLink\" data-title-template=\"${raw.objecttype} number: ${raw.objectnumber}\"></a>\r\n         * ```\r\n         *\r\n         * - The following markup generates `${myField}` as a `ResultLink` display title if the `myField` key is undefined\r\n         * in the parent result fields:\r\n         *\r\n         * ```html\r\n         * <a class=\"CoveoResultLink\" data-title-template=\"${myField}\"></a>\r\n         * ```\r\n         *\r\n         * - The following markup generates `Foobar` as a `ResultLink` display title, because the `ResultLink` innterHTML is\r\n         * not empty:\r\n         *\r\n         * ```html\r\n         * <a class=\"CoveoResultLink\" data-title-template=\"${will} ${be} ${ignored}\">Foobar</a>\r\n         * ```\r\n         *\r\n         * Default value is `undefined`.\r\n         *\r\n         * @availablesince [January 2017 Release (v1.1865.9)](https://docs.coveo.com/en/396/#january-2017-release-v118659)\r\n         */\r\n        titleTemplate: ComponentOptions_1.ComponentOptions.buildStringOption(),\r\n        /**\r\n         * Specifies an event handler function to execute when the user clicks the `ResultLink` component.\r\n         *\r\n         * The handler function takes a JavaScript [`Event`](https://developer.mozilla.org/en/docs/Web/API/Event) object and\r\n         * an [`IQueryResult`]{@link IQueryResult} as its parameters.\r\n         *\r\n         * Overriding the default behavior of the `onClick` event can allow you to execute specific code instead.\r\n         *\r\n         * **Note:**\r\n         * > You cannot set this option directly in the component markup as an HTML attribute. You must either set it in the\r\n         * > [`init`]{@link init} call of your search interface (see\r\n         * > [Passing Component Options in the init Call](https://docs.coveo.com/en/346/#passing-component-options-in-the-init-call)),\r\n         * > or before the `init` call, using the `options` top-level function (see\r\n         * > [Passing Component Options Before the init Call](https://docs.coveo.com/en/346/#passing-component-options-before-the-init-call)).\r\n         *\r\n         * **Example:**\r\n         * ```javascript\r\n         * // You can set the option in the 'init' call:\r\n         * Coveo.init(document.querySelector(\"#search\"), {\r\n         *   ResultLink : {\r\n         *     onClick : function(e, result) {\r\n         *       e.preventDefault();\r\n         *       // Custom code to execute with the item URI and title.\r\n         *       openUriInASpecialTab(result.clickUri, result.title);\r\n         *     }\r\n         *   }\r\n         * });\r\n         *\r\n         * // Or before the 'init' call, using the 'options' top-level function:\r\n         * // Coveo.options(document.querySelector('#search'), {\r\n         * //   ResultLink : {\r\n         * //     onClick : function(e, result) {\r\n         * //       e.preventDefault();\r\n         * //       // Custom code to execute with the item URI and title.\r\n         * //       openUriInASpecialTab(result.clickUri, result.title);\r\n         * //     }\r\n         * //   }\r\n         * // });\r\n         * ```\r\n         */\r\n        onClick: ComponentOptions_1.ComponentOptions.buildCustomOption(function () {\r\n            return null;\r\n        })\r\n    };\r\n    return ResultLink;\r\n}(Component_1.Component));\r\nexports.ResultLink = ResultLink;\r\nInitialization_1.Initialization.registerAutoCreateComponent(ResultLink);\r\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// PrintableUri.min__5f3280c404a1ee75a113.js","import { ComponentOptions } from '../Base/ComponentOptions';\r\nimport { IQueryResult } from '../../rest/QueryResult';\r\nimport { HighlightUtils, StringAndHoles } from '../../utils/HighlightUtils';\r\nimport { Initialization } from '../Base/Initialization';\r\nimport { Utils } from '../../utils/Utils';\r\nimport { $$ } from '../../utils/Dom';\r\nimport { exportGlobally } from '../../GlobalExports';\r\nimport 'styling/_PrintableUri';\r\nimport { ResultLink } from '../ResultLink/ResultLink';\r\nimport { IResultLinkOptions } from '../ResultLink/ResultLinkOptions';\r\nimport { IResultsComponentBindings } from '../Base/ResultsComponentBindings';\r\nimport { getRestHighlightsForAllTerms, DefaultStreamHighlightOptions } from '../../utils/StreamHighlightUtils';\r\nimport * as _ from 'underscore';\r\nimport { ComponentOptionsModel } from '../../models/ComponentOptionsModel';\r\nimport { Component } from '../Base/Component';\r\nimport { IHighlight } from '../../rest/Highlight';\r\nimport { AccessibleButton } from '../../utils/AccessibleButton';\r\nimport { DeviceUtils } from '../../utils/DeviceUtils';\r\nimport { l } from '../../strings/Strings';\r\n\r\nexport interface IPrintableUriOptions extends IResultLinkOptions {}\r\n\r\ninterface IPrintableUriRenderOptions {\r\n  parents: Element[];\r\n  firstIndexToRender: number;\r\n  maxNumOfParts: number;\r\n}\r\n\r\n/**\r\n * The `PrintableUri` component inherits from the [ `ResultLink` ]{@link ResultLink} component and supports all of its options.\r\n *\r\n * This component displays the URI, or path, to access a result.\r\n *\r\n * This component is a result template component (see [Result Templates](https://docs.coveo.com/en/413/)).\r\n */\r\nexport class PrintableUri extends Component {\r\n  static ID = 'PrintableUri';\r\n  static options: IPrintableUriOptions = {};\r\n  static doExport = () => {\r\n    exportGlobally({\r\n      PrintableUri: PrintableUri\r\n    });\r\n  };\r\n\r\n  private links: ResultLink[] = [];\r\n\r\n  /**\r\n   * Creates a new PrintableUri.\r\n   * @param element The HTMLElement on which to instantiate the component.\r\n   * @param options The options for the PrintableUri component.\r\n   * @param bindings The bindings that the component requires to function normally. If not set, these will be\r\n   * automatically resolved (with a slower execution time).\r\n   * @param result The result to associate the component with.\r\n   */\r\n  constructor(\r\n    public element: HTMLElement,\r\n    public options: IPrintableUriOptions,\r\n    public bindings?: IResultsComponentBindings,\r\n    public result?: IQueryResult\r\n  ) {\r\n    super(element, PrintableUri.ID, bindings);\r\n    this.options = ComponentOptions.initComponentOptions(element, PrintableUri, options);\r\n    this.options = _.extend({}, this.options, this.componentOptionsModel.get(ComponentOptionsModel.attributesEnum.resultLink));\r\n    this.renderUri(this.result);\r\n    this.addAccessibilityAttributes();\r\n  }\r\n\r\n  /**\r\n   * Opens the result in the same window, no matter how the actual component is configured for the end user.\r\n   * @param logAnalytics Specifies whether the method should log an analytics event.\r\n   */\r\n  public openLink(logAnalytics = true) {\r\n    _.last(this.links).openLink(logAnalytics);\r\n  }\r\n\r\n  /**\r\n   * Opens the result in a new window, no matter how the actual component is configured for the end user.\r\n   * @param logAnalytics Specifies whether the method should log an analytics event.\r\n   */\r\n  public openLinkInNewWindow(logAnalytics = true) {\r\n    _.last(this.links).openLinkInNewWindow(logAnalytics);\r\n  }\r\n\r\n  /**\r\n   * Opens the link in the same manner the end user would.\r\n   *\r\n   * This essentially simulates a click on the result link.\r\n   *\r\n   * @param logAnalytics Specifies whether the method should log an analytics event.\r\n   */\r\n  public openLinkAsConfigured(logAnalytics = true) {\r\n    _.last(this.links).openLinkAsConfigured(logAnalytics);\r\n  }\r\n\r\n  private renderUri(result: IQueryResult) {\r\n    const parentsXml = Utils.getFieldValue(result, 'parents');\r\n    if (parentsXml) {\r\n      this.renderParents({\r\n        parents: this.parseXmlParents(parentsXml),\r\n        firstIndexToRender: 0,\r\n        maxNumOfParts: DeviceUtils.isMobileDevice() ? 3 : 5\r\n      });\r\n    } else if (this.options.titleTemplate) {\r\n      const link = new ResultLink(this.buildElementForResultLink(result.printableUri), this.options, this.bindings, this.result);\r\n      this.links.push(link);\r\n      this.element.appendChild(this.makeLinkAccessible(link.element));\r\n    } else {\r\n      this.renderShortenedUri();\r\n    }\r\n  }\r\n\r\n  private buildSeparator(): HTMLElement {\r\n    const separator = $$('span', { className: 'coveo-printable-uri-separator', role: 'separator' }, ' > ');\r\n    return separator.el;\r\n  }\r\n\r\n  private buildHtmlToken(name: string, uri: string): HTMLElement {\r\n    let modifiedName = name.charAt(0).toUpperCase() + name.slice(1);\r\n    const resultPart: IQueryResult = _.extend({}, this.result, {\r\n      clickUri: uri,\r\n      title: modifiedName,\r\n      titleHighlights: this.getModifiedHighlightsForModifiedResultTitle(modifiedName)\r\n    });\r\n    const link = new ResultLink(this.buildElementForResultLink(modifiedName), this.options, this.bindings, resultPart);\r\n    this.links.push(link);\r\n    return link.element;\r\n  }\r\n\r\n  private parseXmlParents(parentsXml: string): Element[] {\r\n    const elements = Utils.parseXml(parentsXml).getElementsByTagName('parent');\r\n    const parents: Element[] = [];\r\n    for (let i = 0; i < elements.length; i++) {\r\n      parents.push(elements.item(i));\r\n    }\r\n    return parents;\r\n  }\r\n\r\n  private renderParents(renderOptions: IPrintableUriRenderOptions) {\r\n    $$(this.element).empty();\r\n    const lastIndex = renderOptions.parents.length - 1;\r\n    const beforeLastIndex = lastIndex - 1;\r\n    const maxMiddleParts = renderOptions.maxNumOfParts - 1;\r\n    const lastMiddlePartIndex = Math.min(beforeLastIndex, renderOptions.firstIndexToRender + maxMiddleParts - 1);\r\n    const partsBetweenMiddlePartsAndLastPart = beforeLastIndex - lastMiddlePartIndex;\r\n\r\n    this.optionallyRenderFirstEllipsis(renderOptions);\r\n    this.renderMiddleParts(renderOptions, lastMiddlePartIndex);\r\n    if (partsBetweenMiddlePartsAndLastPart > 0) {\r\n      this.renderLastEllipsis({\r\n        ...renderOptions,\r\n        firstIndexToRender: Math.min(Math.max(lastMiddlePartIndex + 1, 0), renderOptions.parents.length - renderOptions.maxNumOfParts)\r\n      });\r\n    }\r\n    this.renderLastPart(renderOptions);\r\n  }\r\n\r\n  private optionallyRenderFirstEllipsis(nextRenderOptions: IPrintableUriRenderOptions) {\r\n    if (nextRenderOptions.firstIndexToRender > 0) {\r\n      this.appendEllipsis({\r\n        ...nextRenderOptions,\r\n        firstIndexToRender: Math.max(0, nextRenderOptions.firstIndexToRender - nextRenderOptions.maxNumOfParts + 1)\r\n      });\r\n      this.appendSeparator();\r\n    }\r\n  }\r\n\r\n  private renderMiddleParts(renderOptions: IPrintableUriRenderOptions, lastIndexToRender: number) {\r\n    for (let i = renderOptions.firstIndexToRender; i <= lastIndexToRender; i++) {\r\n      if (i > renderOptions.firstIndexToRender) {\r\n        this.appendSeparator();\r\n      }\r\n      this.appendToken(renderOptions.parents[i]);\r\n    }\r\n  }\r\n\r\n  private renderLastEllipsis(nextRenderOptions: IPrintableUriRenderOptions) {\r\n    this.appendSeparator();\r\n    this.appendEllipsis(nextRenderOptions);\r\n  }\r\n\r\n  private renderLastPart(renderOptions: IPrintableUriRenderOptions) {\r\n    this.appendSeparator();\r\n    this.appendToken(renderOptions.parents[renderOptions.parents.length - 1]);\r\n  }\r\n\r\n  private appendSeparator() {\r\n    this.element.appendChild(this.buildSeparator());\r\n  }\r\n\r\n  private appendEllipsis(nextRenderOptions: IPrintableUriRenderOptions) {\r\n    this.element.appendChild(\r\n      this.buildEllipsis(() => {\r\n        this.renderParents(nextRenderOptions);\r\n        (this.element.firstChild.firstChild as HTMLElement).focus();\r\n      })\r\n    );\r\n  }\r\n\r\n  private appendToken(part: Element) {\r\n    this.element.appendChild(this.makeLinkAccessible(this.buildHtmlToken(part.getAttribute('name'), part.getAttribute('uri'))));\r\n  }\r\n\r\n  private renderShortenedUri() {\r\n    let stringAndHoles: StringAndHoles;\r\n    if (this.result.printableUri.indexOf('\\\\') == -1) {\r\n      stringAndHoles = StringAndHoles.shortenUri(this.result.printableUri, $$(this.element).width());\r\n    } else {\r\n      stringAndHoles = StringAndHoles.shortenPath(this.result.printableUri, $$(this.element).width());\r\n    }\r\n    const shortenedUri = HighlightUtils.highlightString(\r\n      stringAndHoles.value,\r\n      this.result.printableUriHighlights,\r\n      stringAndHoles.holes,\r\n      'coveo-highlight'\r\n    );\r\n    const resultPart: IQueryResult = _.extend({}, this.result, {\r\n      title: shortenedUri,\r\n      titleHighlights: this.getModifiedHighlightsForModifiedResultTitle(shortenedUri)\r\n    });\r\n    const link = new ResultLink(this.buildElementForResultLink(this.result.printableUri), this.options, this.bindings, resultPart);\r\n    this.links.push(link);\r\n    this.element.appendChild(this.makeLinkAccessible(link.element));\r\n  }\r\n\r\n  private makeLinkAccessible(link: HTMLElement) {\r\n    return $$(\r\n      'span',\r\n      {\r\n        className: 'coveo-printable-uri-part',\r\n        role: 'listitem'\r\n      },\r\n      link\r\n    ).el;\r\n  }\r\n\r\n  private buildEllipsis(action: (e: Event) => void) {\r\n    const button = $$('button', {}, '...');\r\n    const element = $$(\r\n      'span',\r\n      {\r\n        className: 'coveo-printable-uri-ellipsis',\r\n        role: 'listitem'\r\n      },\r\n      button\r\n    ).el;\r\n    new AccessibleButton()\r\n      .withElement(button)\r\n      .withLabel(l('CollapsedUriParts'))\r\n      .withSelectAction(action)\r\n      .build();\r\n    return element;\r\n  }\r\n\r\n  private buildElementForResultLink(title: string): HTMLElement {\r\n    return $$('a', {\r\n      className: 'CoveoResultLink',\r\n      title\r\n    }).el;\r\n  }\r\n\r\n  private getModifiedHighlightsForModifiedResultTitle(newTitle: string): IHighlight[] {\r\n    return getRestHighlightsForAllTerms(\r\n      newTitle,\r\n      this.result.termsToHighlight,\r\n      this.result.phrasesToHighlight,\r\n      new DefaultStreamHighlightOptions()\r\n    );\r\n  }\r\n\r\n  private addAccessibilityAttributes() {\r\n    this.element.setAttribute('role', 'list');\r\n  }\r\n}\r\n\r\nPrintableUri.options = _.extend({}, PrintableUri.options, ResultLink.options);\r\nInitialization.registerAutoCreateComponent(PrintableUri);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/PrintableUri/PrintableUri.ts","import { Component } from '../Base/Component';\r\nimport { ComponentOptions } from '../Base/ComponentOptions';\r\nimport { ComponentOptionsModel } from '../../models/ComponentOptionsModel';\r\nimport { IResultsComponentBindings } from '../Base/ResultsComponentBindings';\r\nimport { analyticsActionCauseList } from '../Analytics/AnalyticsActionListMeta';\r\nimport { IResultLinkOptions } from './ResultLinkOptions';\r\nimport { ResultListEvents } from '../../events/ResultListEvents';\r\nimport { HighlightUtils } from '../../utils/HighlightUtils';\r\nimport { IQueryResult } from '../../rest/QueryResult';\r\nimport { DeviceUtils } from '../../utils/DeviceUtils';\r\nimport { OS_NAME, OSUtils } from '../../utils/OSUtils';\r\nimport { Initialization } from '../Base/Initialization';\r\nimport { QueryUtils } from '../../utils/QueryUtils';\r\nimport { Assert } from '../../misc/Assert';\r\nimport { Utils } from '../../utils/Utils';\r\nimport { Defer } from '../../misc/Defer';\r\nimport { $$ } from '../../utils/Dom';\r\nimport { StreamHighlightUtils } from '../../utils/StreamHighlightUtils';\r\nimport { StringUtils } from '../../utils/StringUtils';\r\nimport { once, debounce, extend, escape } from 'underscore';\r\nimport { exportGlobally } from '../../GlobalExports';\r\n\r\nimport 'styling/_ResultLink';\r\nimport { AccessibleButton } from '../../utils/AccessibleButton';\r\n\r\n/**\r\n * The `ResultLink` component automatically transform a search result title into a clickable link pointing to the\r\n * original item.\r\n *\r\n * This component is a result template component (see [Result Templates](https://docs.coveo.com/en/413/)).\r\n */\r\nexport class ResultLink extends Component {\r\n  static ID = 'ResultLink';\r\n\r\n  static doExport = () => {\r\n    exportGlobally({\r\n      ResultLink: ResultLink\r\n    });\r\n  };\r\n\r\n  /**\r\n   * The options for the ResultLink\r\n   * @componentOptions\r\n   */\r\n  static options: IResultLinkOptions = {\r\n    /**\r\n     * Specifies the field to use to output the component `href` attribute value.\r\n     *\r\n     * **Tip:**\r\n     * > Instead of specifying a value for the `field` option, you can directly add an `href` attribute to the\r\n     * > `ResultLink` HTML element. Then, you can use a custom script to generate the `href` value.\r\n     *\r\n     * **Examples:**\r\n     * - With the following markup, the `ResultLink` outputs its `href` value using the `@uri` field (rather than the\r\n     * default field):\r\n     *\r\n     * ```html\r\n     * <a class=\"CoveoResultLink\" data-field=\"@uri\"></a>\r\n     * ```\r\n     *\r\n     * - In the following result template, the custom `getMyKBUri()` function provides the `href` value:\r\n     *\r\n     * ```html\r\n     * <script id=\"KnowledgeArticle\" type=\"text/underscore\" class=\"result-template\">\r\n     *   <div class='CoveoIcon>'></div>\r\n     *   <a class=\"CoveoResultLink\" href=\"<%= getMyKBUri(raw) %>\"></a>\r\n     *   <div class=\"CoveoExcerpt\"></div>\r\n     * </script>\r\n     * ```\r\n     *\r\n     * See also [`hrefTemplate`]{@link ResultLink.options.hrefTemplate}, which can override this option.\r\n     *\r\n     * By default, the component uses the `@clickUri` field of the item to output the value of its `href` attribute.\r\n     */\r\n    field: ComponentOptions.buildFieldOption(),\r\n\r\n    /**\r\n     * Specifies whether the component should try to open its link in Microsoft Outlook.\r\n     *\r\n     * Setting this option to `true` is normally useful for `ResultLink` instances related to Microsoft Exchange emails.\r\n     *\r\n     * If this option is `true`, clicking the `ResultLink` calls the\r\n     * [`openLinkInOutlook`]{@link ResultLink.openLinkInOutlook} method instead of the\r\n     * [`openLink`]{@link ResultLink.openLink} method.\r\n     *\r\n     * Default value is `false`.\r\n     */\r\n    openInOutlook: ComponentOptions.buildBooleanOption({ defaultValue: false }),\r\n\r\n    /**\r\n     * Specifies whether the component should open its link in the [`Quickview`]{@link Quickview} component rather than\r\n     * loading through the original URL.\r\n     *\r\n     * Default value is `false`.\r\n     */\r\n    openQuickview: ComponentOptions.buildBooleanOption({ defaultValue: false }),\r\n\r\n    /**\r\n     * Specifies whether the component should open its link in a new window instead of opening it in the current\r\n     * context.\r\n     *\r\n     * If this option is `true`, clicking the `ResultLink` calls the\r\n     * [`openLinkInNewWindow`]{@link ResultLink.openLinkInNewWindow} method instead of the\r\n     * [`openLink`]{@link ResultLink.openLink} method.\r\n     *\r\n     * **Note:**\r\n     * > If a search page contains a [`ResultPreferences`]{@link ResultsPreferences} component whose\r\n     * > [`enableOpenInNewWindow`]{@link ResultsPreferences.options.enableOpenInNewWindow} option is `true`, and the end\r\n     * > user checks the <b>Always open results in new window</b> box, `ResultLink` components in this page will always\r\n     * > open their links in a new window when the end user clicks them, no matter what the value of their\r\n     * > `alwaysOpenInNewWindow` option is.\r\n     *\r\n     * Default value is `false`.\r\n     */\r\n    alwaysOpenInNewWindow: ComponentOptions.buildBooleanOption({ defaultValue: false }),\r\n\r\n    /**\r\n     * Specifies a template literal from which to generate the `ResultLink` `href` attribute value (see\r\n     * [Template literals](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Template_literals)).\r\n     *\r\n     * This option overrides the [`field`]{@link ResultLink.options.field} option value.\r\n     *\r\n     * The template literal can reference any number of fields from the parent result. It can also reference global\r\n     * scope properties.\r\n     *\r\n     * **Examples:**\r\n     *\r\n     * - The following markup generates an `href` value such as `http://uri.com?id=itemTitle`:\r\n     *\r\n     * ```html\r\n     * <a class='CoveoResultLink' data-href-template='${clickUri}?id=${raw.title}'></a>\r\n     * ```\r\n     *\r\n     * - The following markup generates an `href` value such as `localhost/fooBar`:\r\n     *\r\n     * ```html\r\n     * <a class='CoveoResultLink' data-href-template='${window.location.hostname}/{Foo.Bar}'></a>\r\n     * ```\r\n     *\r\n     * Default value is `undefined`.\r\n     */\r\n    hrefTemplate: ComponentOptions.buildStringOption(),\r\n\r\n    /**\r\n     * Specifies a template literal from which to generate the `ResultLink` display title (see\r\n     * [Template literals](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Template_literals)).\r\n     *\r\n     * This option overrides the default `ResultLink` display title behavior.\r\n     *\r\n     * The template literal can reference any number of fields from the parent result. However, if the template literal\r\n     * references a key whose value is undefined in the parent result fields, the `ResultLink` title displays the\r\n     * name of this key instead.\r\n     *\r\n     * This option is ignored if the `ResultLink` innerHTML contains any value.\r\n     *\r\n     * **Examples:**\r\n     *\r\n     * - The following markup generates a `ResultLink` display title such as `Case number: 123456` if both the\r\n     * `raw.objecttype` and `raw.objectnumber` keys are defined in the parent result fields:\r\n     *\r\n     * ```html\r\n     * <a class=\"CoveoResultLink\" data-title-template=\"${raw.objecttype} number: ${raw.objectnumber}\"></a>\r\n     * ```\r\n     *\r\n     * - The following markup generates `${myField}` as a `ResultLink` display title if the `myField` key is undefined\r\n     * in the parent result fields:\r\n     *\r\n     * ```html\r\n     * <a class=\"CoveoResultLink\" data-title-template=\"${myField}\"></a>\r\n     * ```\r\n     *\r\n     * - The following markup generates `Foobar` as a `ResultLink` display title, because the `ResultLink` innterHTML is\r\n     * not empty:\r\n     *\r\n     * ```html\r\n     * <a class=\"CoveoResultLink\" data-title-template=\"${will} ${be} ${ignored}\">Foobar</a>\r\n     * ```\r\n     *\r\n     * Default value is `undefined`.\r\n     *\r\n     * @availablesince [January 2017 Release (v1.1865.9)](https://docs.coveo.com/en/396/#january-2017-release-v118659)\r\n     */\r\n    titleTemplate: ComponentOptions.buildStringOption(),\r\n\r\n    /**\r\n     * Specifies an event handler function to execute when the user clicks the `ResultLink` component.\r\n     *\r\n     * The handler function takes a JavaScript [`Event`](https://developer.mozilla.org/en/docs/Web/API/Event) object and\r\n     * an [`IQueryResult`]{@link IQueryResult} as its parameters.\r\n     *\r\n     * Overriding the default behavior of the `onClick` event can allow you to execute specific code instead.\r\n     *\r\n     * **Note:**\r\n     * > You cannot set this option directly in the component markup as an HTML attribute. You must either set it in the\r\n     * > [`init`]{@link init} call of your search interface (see\r\n     * > [Passing Component Options in the init Call](https://docs.coveo.com/en/346/#passing-component-options-in-the-init-call)),\r\n     * > or before the `init` call, using the `options` top-level function (see\r\n     * > [Passing Component Options Before the init Call](https://docs.coveo.com/en/346/#passing-component-options-before-the-init-call)).\r\n     *\r\n     * **Example:**\r\n     * ```javascript\r\n     * // You can set the option in the 'init' call:\r\n     * Coveo.init(document.querySelector(\"#search\"), {\r\n     *   ResultLink : {\r\n     *     onClick : function(e, result) {\r\n     *       e.preventDefault();\r\n     *       // Custom code to execute with the item URI and title.\r\n     *       openUriInASpecialTab(result.clickUri, result.title);\r\n     *     }\r\n     *   }\r\n     * });\r\n     *\r\n     * // Or before the 'init' call, using the 'options' top-level function:\r\n     * // Coveo.options(document.querySelector('#search'), {\r\n     * //   ResultLink : {\r\n     * //     onClick : function(e, result) {\r\n     * //       e.preventDefault();\r\n     * //       // Custom code to execute with the item URI and title.\r\n     * //       openUriInASpecialTab(result.clickUri, result.title);\r\n     * //     }\r\n     * //   }\r\n     * // });\r\n     * ```\r\n     */\r\n    onClick: ComponentOptions.buildCustomOption<(e: Event, result: IQueryResult) => any>(() => {\r\n      return null;\r\n    })\r\n  };\r\n\r\n  private toExecuteOnOpen: (e?: Event) => void;\r\n\r\n  /**\r\n   * Creates a new `ResultLink` component.\r\n   * @param element The HTMLElement on which to instantiate the component.\r\n   * @param options The options for the `ResultLink` component.\r\n   * @param bindings The bindings that the component requires to function normally. If not set, these will be\r\n   * automatically resolved (with a slower execution time).\r\n   * @param result The result to associate the component with.\r\n   * @param os\r\n   */\r\n  constructor(\r\n    public element: HTMLElement,\r\n    public options: IResultLinkOptions,\r\n    public bindings?: IResultsComponentBindings,\r\n    public result?: IQueryResult,\r\n    public os?: OS_NAME\r\n  ) {\r\n    super(element, ResultLink.ID, bindings);\r\n\r\n    const initialOptions = ComponentOptions.initComponentOptions(element, ResultLink, options);\r\n    const resultLinkOptions = this.componentOptionsModel.get(ComponentOptionsModel.attributesEnum.resultLink);\r\n    this.options = extend({}, initialOptions, resultLinkOptions);\r\n\r\n    this.result = result || this.resolveResult();\r\n\r\n    if (this.options.openQuickview == null) {\r\n      this.options.openQuickview = result.raw['connectortype'] == 'ExchangeCrawler' && DeviceUtils.isMobileDevice();\r\n    }\r\n    this.element.setAttribute('tabindex', '0');\r\n\r\n    Assert.exists(this.componentOptionsModel);\r\n    Assert.exists(this.result);\r\n\r\n    if (!this.quickviewShouldBeOpened()) {\r\n      // Bind on multiple \"click\" or \"mouse\" events.\r\n      // Create a function that will be executed only once, so as not to log multiple events\r\n      // Once a result link has been opened, and that we log at least one analytics event,\r\n      // it should not matter if the end user open the same link multiple times with different methods.\r\n      // It's still only one \"click\" event as far as UA is concerned.\r\n      // Also need to handle \"longpress\" on mobile (the contextual menu), which we assume to be 1 s long.\r\n\r\n      const executeOnlyOnce = once(() => this.logOpenDocument());\r\n\r\n      $$(element).on(['contextmenu', 'click', 'mousedown', 'mouseup'], executeOnlyOnce);\r\n      let longPressTimer: number;\r\n      $$(element).on('touchstart', () => {\r\n        longPressTimer = window.setTimeout(executeOnlyOnce, 1000);\r\n      });\r\n      $$(element).on('touchend', () => {\r\n        if (longPressTimer) {\r\n          clearTimeout(longPressTimer);\r\n        }\r\n      });\r\n    }\r\n    this.renderUri(element, result);\r\n    this.bindEventToOpen();\r\n  }\r\n  public renderUri(element: HTMLElement, result?: IQueryResult) {\r\n    if (/^\\s*$/.test(this.element.innerHTML)) {\r\n      const title = this.getDisplayedTitle();\r\n      this.element.innerHTML = title;\r\n      if (!this.element.title) {\r\n        this.element.title = this.getDisplayedTitleAsText();\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Opens the result in the same window, no matter how the actual component is configured for the end user.\r\n   * @param logAnalytics Specifies whether the method should log an analytics event.\r\n   */\r\n  public openLink(logAnalytics = true) {\r\n    if (logAnalytics) {\r\n      this.logOpenDocument();\r\n    }\r\n    window.location.href = this.getResultUri();\r\n  }\r\n\r\n  /**\r\n   * Opens the result in a new window, no matter how the actual component is configured for the end user.\r\n   * @param logAnalytics Specifies whether the method should log an analytics event.\r\n   */\r\n  public openLinkInNewWindow(logAnalytics = true) {\r\n    if (logAnalytics) {\r\n      this.logOpenDocument();\r\n    }\r\n    window.open(this.getResultUri(), '_blank');\r\n  }\r\n\r\n  /**\r\n   * Tries to open the result in Microsoft Outlook if the result has an `outlookformacuri` or `outlookuri` field.\r\n   *\r\n   * Normally, this implies the result should be a link to an email.\r\n   *\r\n   * If the needed fields are not present, this method does nothing.\r\n   * @param logAnalytics Specifies whether the method should log an analytics event.\r\n   */\r\n  public openLinkInOutlook(logAnalytics = true) {\r\n    if (this.hasOutlookField()) {\r\n      if (logAnalytics) {\r\n        this.logOpenDocument();\r\n      }\r\n      this.openLink();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Opens the link in the same manner the end user would.\r\n   *\r\n   * This essentially simulates a click on the result link.\r\n   *\r\n   * @param logAnalytics Specifies whether the method should log an analytics event.\r\n   */\r\n  public openLinkAsConfigured(logAnalytics = true) {\r\n    if (this.toExecuteOnOpen) {\r\n      if (logAnalytics) {\r\n        this.logOpenDocument();\r\n      }\r\n      this.toExecuteOnOpen();\r\n    }\r\n  }\r\n\r\n  protected bindEventToOpen(): boolean {\r\n    return (\r\n      this.bindOnClickIfNotUndefined() ||\r\n      this.bindOpenQuickviewIfNotUndefined() ||\r\n      this.setHrefIfNotAlready() ||\r\n      this.openLinkThatIsNotAnAnchor()\r\n    );\r\n  }\r\n\r\n  private getDisplayedTitle() {\r\n    if (!this.options.titleTemplate) {\r\n      return this.result.title\r\n        ? HighlightUtils.highlightString(this.result.title, this.result.titleHighlights, null, 'coveo-highlight')\r\n        : this.escapedClickUri;\r\n    } else {\r\n      let newTitle = StringUtils.buildStringTemplateFromResult(this.options.titleTemplate, this.result);\r\n      return newTitle\r\n        ? StreamHighlightUtils.highlightStreamText(newTitle, this.result.termsToHighlight, this.result.phrasesToHighlight)\r\n        : this.escapedClickUri;\r\n    }\r\n  }\r\n\r\n  private getDisplayedTitleAsText() {\r\n    const container = $$('div');\r\n    container.setHtml(this.getDisplayedTitle());\r\n    return container.text();\r\n  }\r\n\r\n  private get escapedClickUri() {\r\n    return escape(this.result.clickUri);\r\n  }\r\n\r\n  private bindOnClickIfNotUndefined() {\r\n    if (this.options.onClick != undefined) {\r\n      this.toExecuteOnOpen = (e: MouseEvent) => {\r\n        this.options.onClick.call(this, e, this.result);\r\n      };\r\n\r\n      new AccessibleButton()\r\n        .withElement(this.element)\r\n        .withLabel(this.result.title)\r\n        .withSelectAction((e: Event) => this.toExecuteOnOpen(e))\r\n        .build();\r\n\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  private bindOpenQuickviewIfNotUndefined() {\r\n    if (this.quickviewShouldBeOpened()) {\r\n      this.toExecuteOnOpen = () => {\r\n        $$(this.bindings.resultElement).trigger(ResultListEvents.openQuickview);\r\n      };\r\n\r\n      $$(this.element).on('click', (e: Event) => {\r\n        e.preventDefault();\r\n        this.toExecuteOnOpen();\r\n      });\r\n\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  private openLinkThatIsNotAnAnchor() {\r\n    if (!this.elementIsAnAnchor()) {\r\n      this.toExecuteOnOpen = () => {\r\n        if (this.options.alwaysOpenInNewWindow) {\r\n          if (this.options.openInOutlook) {\r\n            this.openLinkInOutlook();\r\n          } else {\r\n            this.openLinkInNewWindow();\r\n          }\r\n        } else {\r\n          this.openLink();\r\n        }\r\n      };\r\n\r\n      $$(this.element).on('click', () => {\r\n        this.toExecuteOnOpen();\r\n      });\r\n\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private setHrefIfNotAlready() {\r\n    // Do not erase any value put in href by the template, etc. Allows\r\n    // using custom click urls while still keeping analytics recording\r\n    // and other behavior brought by the component.\r\n    if (this.elementIsAnAnchor() && !Utils.isNonEmptyString($$(this.element).getAttribute('href'))) {\r\n      $$(this.element).setAttribute('href', this.getResultUri());\r\n      if (this.options.alwaysOpenInNewWindow && !(this.options.openInOutlook && this.hasOutlookField())) {\r\n        $$(this.element).setAttribute('target', '_blank');\r\n      }\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  private logOpenDocument = debounce(\r\n    () => {\r\n      this.queryController.saveLastQuery();\r\n      let documentURL = $$(this.element).getAttribute('href');\r\n      if (documentURL == undefined || documentURL == '') {\r\n        documentURL = this.escapedClickUri;\r\n      }\r\n      this.usageAnalytics.logClickEvent(\r\n        analyticsActionCauseList.documentOpen,\r\n        {\r\n          documentURL: documentURL,\r\n          documentTitle: this.result.title,\r\n          author: Utils.getFieldValue(this.result, 'author')\r\n        },\r\n        this.result,\r\n        this.root\r\n      );\r\n      Defer.flush();\r\n    },\r\n    1500,\r\n    true\r\n  );\r\n\r\n  private filterProtocol(uri: string) {\r\n    const isAbsolute = /^(https?|ftp|file|mailto|tel):/i.test(uri);\r\n    const isRelative = /^\\//.test(uri);\r\n\r\n    return isAbsolute || isRelative ? uri : '';\r\n  }\r\n\r\n  private getResultUri(): string {\r\n    if (this.options.hrefTemplate) {\r\n      const uri = StringUtils.buildStringTemplateFromResult(this.options.hrefTemplate, this.result);\r\n      return this.filterProtocol(uri);\r\n    }\r\n\r\n    if (this.options.field == undefined && this.options.openInOutlook) {\r\n      this.setField();\r\n    }\r\n\r\n    if (this.options.field != undefined) {\r\n      return this.filterProtocol(Utils.getFieldValue(this.result, <string>this.options.field));\r\n    }\r\n\r\n    return this.filterProtocol(this.result.clickUri);\r\n  }\r\n\r\n  private elementIsAnAnchor() {\r\n    return this.element.tagName == 'A';\r\n  }\r\n\r\n  private setField() {\r\n    let os = Utils.exists(this.os) ? this.os : OSUtils.get();\r\n    if (os == OS_NAME.MACOSX && this.hasOutlookField()) {\r\n      this.options.field = '@outlookformacuri';\r\n    } else if (os == OS_NAME.WINDOWS && this.hasOutlookField()) {\r\n      this.options.field = '@outlookuri';\r\n    }\r\n  }\r\n\r\n  private hasOutlookField() {\r\n    let os = Utils.exists(this.os) ? this.os : OSUtils.get();\r\n    if (os == OS_NAME.MACOSX && this.result.raw['outlookformacuri'] != undefined) {\r\n      return true;\r\n    } else if (os == OS_NAME.WINDOWS && this.result.raw['outlookuri'] != undefined) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private isUriThatMustBeOpenedInQuickview(): boolean {\r\n    return this.escapedClickUri.toLowerCase().indexOf('ldap://') == 0;\r\n  }\r\n\r\n  private quickviewShouldBeOpened() {\r\n    return (this.options.openQuickview || this.isUriThatMustBeOpenedInQuickview()) && QueryUtils.hasHTMLVersion(this.result);\r\n  }\r\n}\r\n\r\nInitialization.registerAutoCreateComponent(ResultLink);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/ResultLink/ResultLink.ts"],"sourceRoot":""}