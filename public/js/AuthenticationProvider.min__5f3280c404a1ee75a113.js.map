{"version":3,"sources":["AuthenticationProvider.min__5f3280c404a1ee75a113.js","./src/ui/AuthenticationProvider/AuthenticationProvider.ts"],"names":["webpackJsonpCoveo__temporary","236","module","exports","__webpack_require__","__extends","this","extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__","constructor","prototype","create","defineProperty","value","element","options","bindings","_window","AuthenticationProvider","ID","ComponentOptions","initComponentOptions","Assert","exists","name","handlers","window","redirectCount","bind","onRootElement","QueryEvents","buildingCallOptions","handleBuildingCallOptions","queryError","handleQueryError","InitializationEvents","nuke","handleNuke","SettingsEvents","settingsPopulateMenu","args","menuData","push","text","l","caption","className","onOpen","authenticateWithProvider","svgIcon","SVGIcons","icons","dropdownAuthenticate","svgIconClassName","_this","authentication","missingAuthError","error","isMissingAuthentication","provider","logger","useIFrame","authenticateWithIFrame","redirectToAuthenticationProvider","info","location","href","getAuthenticationProviderUriForRedirect","modalbox","iframe","$$","src","getAuthenticationProviderUriForIFrame","el","showIFrame","createPopupForVisibleIFrame","createPopupForWaitMessage","handler","createHandler","one","detach","close","queryController","executeQuery","_","each","off","popup","DomUtils","getBasicLoadingAnimation","hide","document","body","appendChild","ModalBox","open","title","sizeMod","searchInterface","modalContainer","addClass","getEndpoint","getAuthenticationProviderUri","undefined","doExport","exportGlobally","buildStringOption","postProcessing","buildBooleanOption","defaultValue","alias","depend","Component","Initialization","registerAutoCreateComponent","595"],"mappings":"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","file":"AuthenticationProvider.min__5f3280c404a1ee75a113.js","sourcesContent":["webpackJsonpCoveo__temporary([76],{\n\n/***/ 236:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Component_1 = __webpack_require__(7);\r\nvar ComponentOptions_1 = __webpack_require__(8);\r\nvar Assert_1 = __webpack_require__(5);\r\nvar QueryEvents_1 = __webpack_require__(11);\r\nvar InitializationEvents_1 = __webpack_require__(17);\r\nvar SettingsEvents_1 = __webpack_require__(53);\r\nvar DomUtils_1 = __webpack_require__(91);\r\nvar Dom_1 = __webpack_require__(1);\r\nvar Initialization_1 = __webpack_require__(2);\r\nvar Strings_1 = __webpack_require__(6);\r\nvar ExternalModulesShim_1 = __webpack_require__(26);\r\nvar _ = __webpack_require__(0);\r\nvar GlobalExports_1 = __webpack_require__(3);\r\n__webpack_require__(595);\r\nvar SVGIcons_1 = __webpack_require__(12);\r\n/**\r\n * The `AuthenticationProvider` component makes it possible to execute queries with an identity that the end user\r\n * can obtain using an authentication provider configured on the Coveo REST Search API\r\n * (see [Claims Authentication](https://docs.coveo.com/en/113/)).\r\n *\r\n * When necessary, this component handles redirecting the browser to the address that starts the authentication process.\r\n *\r\n * You can use the `data-tab` attribute to enable the `AuthenticationProvider` component only for the tabs of your\r\n * search interface that require authentication (see the [`Tab`]{@link Tab} component).\r\n */\r\nvar AuthenticationProvider = /** @class */ (function (_super) {\r\n    __extends(AuthenticationProvider, _super);\r\n    /**\r\n     * Creates a new `AuthenticationProvider` component.\r\n     * @param element The HTMLElement on which to instantiate the component.\r\n     * @param options The options for the `AuthenticationProvider` component.\r\n     * @param bindings The bindings that the component requires to function normally. If not set, these will be\r\n     * automatically resolved (with a slower execution time).\r\n     */\r\n    function AuthenticationProvider(element, options, bindings, _window) {\r\n        if (options === void 0) { options = {}; }\r\n        var _this = _super.call(this, element, AuthenticationProvider.ID, bindings) || this;\r\n        _this.element = element;\r\n        _this.options = options;\r\n        _this._window = _window;\r\n        _this.options = ComponentOptions_1.ComponentOptions.initComponentOptions(element, AuthenticationProvider, options);\r\n        Assert_1.Assert.exists(_this.options.name);\r\n        _this.handlers = [];\r\n        _this._window = _this._window || window;\r\n        _this.redirectCount = 0;\r\n        _this.bind.onRootElement(QueryEvents_1.QueryEvents.buildingCallOptions, _this.handleBuildingCallOptions);\r\n        _this.bind.onRootElement(QueryEvents_1.QueryEvents.queryError, _this.handleQueryError);\r\n        _this.bind.onRootElement(InitializationEvents_1.InitializationEvents.nuke, _this.handleNuke);\r\n        _this.bind.onRootElement(SettingsEvents_1.SettingsEvents.settingsPopulateMenu, function (args) {\r\n            args.menuData.push({\r\n                text: Strings_1.l('Reauthenticate', _this.options.caption),\r\n                className: 'coveo-authentication-provider',\r\n                onOpen: function () { return _this.authenticateWithProvider(); },\r\n                svgIcon: SVGIcons_1.SVGIcons.icons.dropdownAuthenticate,\r\n                svgIconClassName: 'coveo-authentication-provider-svg'\r\n            });\r\n        });\r\n        return _this;\r\n    }\r\n    AuthenticationProvider.prototype.handleBuildingCallOptions = function (args) {\r\n        args.options.authentication.push(this.options.name);\r\n    };\r\n    AuthenticationProvider.prototype.handleQueryError = function (args) {\r\n        var missingAuthError = args.error;\r\n        if (missingAuthError.isMissingAuthentication &&\r\n            missingAuthError.provider === this.options.name &&\r\n            this.redirectCount < 2 &&\r\n            this.redirectCount !== -1) {\r\n            ++this.redirectCount;\r\n            this.authenticateWithProvider();\r\n        }\r\n        else {\r\n            this.logger.error('The AuthenticationProvider is in a redirect loop. This may be due to a back-end configuration problem.');\r\n            this.redirectCount = -1;\r\n        }\r\n    };\r\n    AuthenticationProvider.prototype.authenticateWithProvider = function () {\r\n        this.options.useIFrame ? this.authenticateWithIFrame() : this.redirectToAuthenticationProvider();\r\n    };\r\n    AuthenticationProvider.prototype.redirectToAuthenticationProvider = function () {\r\n        this.logger.info(\"Redirecting to authentication provider \" + this.options.name);\r\n        this._window.location.href = this.getAuthenticationProviderUriForRedirect();\r\n    };\r\n    AuthenticationProvider.prototype.authenticateWithIFrame = function () {\r\n        this.logger.info(\"Using iframe to retrieve authentication for provider \" + this.options.name);\r\n        var iframe = Dom_1.$$('iframe', {\r\n            src: this.getAuthenticationProviderUriForIFrame()\r\n        }).el;\r\n        var modalbox;\r\n        modalbox = this.options.showIFrame ? this.createPopupForVisibleIFrame(iframe) : this.createPopupForWaitMessage(iframe);\r\n        var handler = this.createHandler(modalbox, iframe);\r\n        Dom_1.$$(this._window).one('message', handler);\r\n        this.handlers.push(handler);\r\n    };\r\n    AuthenticationProvider.prototype.createHandler = function (modalbox, iframe) {\r\n        var _this = this;\r\n        return function () {\r\n            Dom_1.$$(iframe).detach();\r\n            _this.logger.info(\"Got authentication for provider \" + _this.options.name + \"; retrying query.\");\r\n            modalbox.close();\r\n            _this.queryController.executeQuery();\r\n        };\r\n    };\r\n    AuthenticationProvider.prototype.handleNuke = function () {\r\n        var _this = this;\r\n        _.each(this.handlers, function (handler) { return Dom_1.$$(_this._window).off('message', handler); });\r\n    };\r\n    AuthenticationProvider.prototype.createPopupForWaitMessage = function (iframe) {\r\n        var popup = Dom_1.$$('div', {\r\n            className: 'coveo-waiting-for-authentication-popup'\r\n        }, DomUtils_1.DomUtils.getBasicLoadingAnimation()).el;\r\n        Dom_1.$$(iframe).hide();\r\n        document.body.appendChild(iframe);\r\n        ExternalModulesShim_1.ModalBox.open(popup, {\r\n            title: Strings_1.l('Authenticating', this.options.caption),\r\n            sizeMod: 'small',\r\n            body: this.searchInterface.options.modalContainer\r\n        });\r\n        return ExternalModulesShim_1.ModalBox;\r\n    };\r\n    AuthenticationProvider.prototype.createPopupForVisibleIFrame = function (iframe) {\r\n        Dom_1.$$(iframe).addClass('coveo-authentication-iframe');\r\n        var popup = Dom_1.$$('div', {}, iframe).el;\r\n        ExternalModulesShim_1.ModalBox.open(popup, {\r\n            title: Strings_1.l('Authenticating', this.options.caption),\r\n            className: 'coveo-authentication-popup',\r\n            sizeMod: 'big',\r\n            body: this.searchInterface.options.modalContainer\r\n        });\r\n        return ExternalModulesShim_1.ModalBox;\r\n    };\r\n    AuthenticationProvider.prototype.getAuthenticationProviderUriForRedirect = function () {\r\n        return this.queryController.getEndpoint().getAuthenticationProviderUri(this.options.name, this._window.location.href, undefined);\r\n    };\r\n    AuthenticationProvider.prototype.getAuthenticationProviderUriForIFrame = function () {\r\n        return this.queryController.getEndpoint().getAuthenticationProviderUri(this.options.name, undefined, 'success');\r\n    };\r\n    AuthenticationProvider.ID = 'AuthenticationProvider';\r\n    AuthenticationProvider.doExport = function () {\r\n        GlobalExports_1.exportGlobally({\r\n            AuthenticationProvider: AuthenticationProvider\r\n        });\r\n    };\r\n    /**\r\n     * The options for the component.\r\n     * @componentOptions\r\n     */\r\n    AuthenticationProvider.options = {\r\n        /**\r\n         * Specifies the name of the authentication provider.\r\n         *\r\n         * See [SAML Authentication](https://docs.coveo.com/en/91/).\r\n         */\r\n        name: ComponentOptions_1.ComponentOptions.buildStringOption(),\r\n        /**\r\n         * Specifies the display name of the authentication provider. This is the name that you want to appear in the user\r\n         * interface when the end user is logging in.\r\n         *\r\n         * Default value is the [`name`]{@link AuthenticationProvider.options.name} option value.\r\n         */\r\n        caption: ComponentOptions_1.ComponentOptions.buildStringOption({ postProcessing: function (value, options) { return value || options.name; } }),\r\n        /**\r\n         * Specifies whether to use an `<iframe>` to host the chain of redirection that make up the authentication\r\n         * process.\r\n         *\r\n         * Using an `<iframe>` prevents leaving the search page as part of the authentication process. However, some login\r\n         * providers refuse to load in an `<iframe>`.\r\n         *\r\n         * Default value is `false`.\r\n         */\r\n        useIFrame: ComponentOptions_1.ComponentOptions.buildBooleanOption({\r\n            defaultValue: false,\r\n            alias: ['useIframe']\r\n        }),\r\n        /**\r\n         * If the [`useIFrame`]{@link AuthenticationProvider.options.useIFrame} option is `true`, specifies whether to make\r\n         * the authentication `<iframe>` visible to the user (inside a popup).\r\n         *\r\n         * When the underlying authentication provider requires no user interaction (for example, when a user authenticates\r\n         * using Windows authentication along with SharePoint claims), setting this option to `false` reduces the visual\r\n         * impact of the authentication process.\r\n         *\r\n         * Default value is `true`.\r\n         */\r\n        showIFrame: ComponentOptions_1.ComponentOptions.buildBooleanOption({\r\n            defaultValue: true,\r\n            alias: ['showIframe'],\r\n            depend: 'useIFrame'\r\n        })\r\n    };\r\n    return AuthenticationProvider;\r\n}(Component_1.Component));\r\nexports.AuthenticationProvider = AuthenticationProvider;\r\nInitialization_1.Initialization.registerAutoCreateComponent(AuthenticationProvider);\r\n\n\n/***/ }),\n\n/***/ 595:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// AuthenticationProvider.min__5f3280c404a1ee75a113.js","import { Component } from '../Base/Component';\r\nimport { ComponentOptions } from '../Base/ComponentOptions';\r\nimport { Assert } from '../../misc/Assert';\r\nimport { QueryEvents, IBuildingCallOptionsEventArgs, IQueryErrorEventArgs } from '../../events/QueryEvents';\r\nimport { IComponentBindings } from '../Base/ComponentBindings';\r\nimport { InitializationEvents } from '../../events/InitializationEvents';\r\nimport { SettingsEvents } from '../../events/SettingsEvents';\r\nimport { ISettingsPopulateMenuArgs } from '../Settings/Settings';\r\nimport { DomUtils } from '../../utils/DomUtils';\r\nimport { $$ } from '../../utils/Dom';\r\nimport { Initialization } from '../Base/Initialization';\r\nimport { l } from '../../strings/Strings';\r\nimport { ModalBox } from '../../ExternalModulesShim';\r\nimport { MissingAuthenticationError } from '../../rest/MissingAuthenticationError';\r\nimport * as _ from 'underscore';\r\nimport { exportGlobally } from '../../GlobalExports';\r\nimport 'styling/_AuthenticationProvider';\r\nimport { SVGIcons } from '../../utils/SVGIcons';\r\n\r\nexport interface IAuthenticationProviderOptions {\r\n  name?: string;\r\n  caption?: string;\r\n  useIFrame?: boolean;\r\n  showIFrame?: boolean;\r\n}\r\n\r\n/**\r\n * The `AuthenticationProvider` component makes it possible to execute queries with an identity that the end user\r\n * can obtain using an authentication provider configured on the Coveo REST Search API\r\n * (see [Claims Authentication](https://docs.coveo.com/en/113/)).\r\n *\r\n * When necessary, this component handles redirecting the browser to the address that starts the authentication process.\r\n *\r\n * You can use the `data-tab` attribute to enable the `AuthenticationProvider` component only for the tabs of your\r\n * search interface that require authentication (see the [`Tab`]{@link Tab} component).\r\n */\r\nexport class AuthenticationProvider extends Component {\r\n  static ID = 'AuthenticationProvider';\r\n\r\n  static doExport = () => {\r\n    exportGlobally({\r\n      AuthenticationProvider: AuthenticationProvider\r\n    });\r\n  };\r\n\r\n  /**\r\n   * The options for the component.\r\n   * @componentOptions\r\n   */\r\n  static options: IAuthenticationProviderOptions = {\r\n    /**\r\n     * Specifies the name of the authentication provider.\r\n     *\r\n     * See [SAML Authentication](https://docs.coveo.com/en/91/).\r\n     */\r\n    name: ComponentOptions.buildStringOption(),\r\n\r\n    /**\r\n     * Specifies the display name of the authentication provider. This is the name that you want to appear in the user\r\n     * interface when the end user is logging in.\r\n     *\r\n     * Default value is the [`name`]{@link AuthenticationProvider.options.name} option value.\r\n     */\r\n    caption: ComponentOptions.buildStringOption({ postProcessing: (value, options) => value || options.name }),\r\n\r\n    /**\r\n     * Specifies whether to use an `<iframe>` to host the chain of redirection that make up the authentication\r\n     * process.\r\n     *\r\n     * Using an `<iframe>` prevents leaving the search page as part of the authentication process. However, some login\r\n     * providers refuse to load in an `<iframe>`.\r\n     *\r\n     * Default value is `false`.\r\n     */\r\n    useIFrame: ComponentOptions.buildBooleanOption({\r\n      defaultValue: false,\r\n      alias: ['useIframe']\r\n    }),\r\n\r\n    /**\r\n     * If the [`useIFrame`]{@link AuthenticationProvider.options.useIFrame} option is `true`, specifies whether to make\r\n     * the authentication `<iframe>` visible to the user (inside a popup).\r\n     *\r\n     * When the underlying authentication provider requires no user interaction (for example, when a user authenticates\r\n     * using Windows authentication along with SharePoint claims), setting this option to `false` reduces the visual\r\n     * impact of the authentication process.\r\n     *\r\n     * Default value is `true`.\r\n     */\r\n    showIFrame: ComponentOptions.buildBooleanOption({\r\n      defaultValue: true,\r\n      alias: ['showIframe'],\r\n      depend: 'useIFrame'\r\n    })\r\n  };\r\n\r\n  private handlers: ((...args: any[]) => void)[];\r\n  private redirectCount: number;\r\n\r\n  /**\r\n   * Creates a new `AuthenticationProvider` component.\r\n   * @param element The HTMLElement on which to instantiate the component.\r\n   * @param options The options for the `AuthenticationProvider` component.\r\n   * @param bindings The bindings that the component requires to function normally. If not set, these will be\r\n   * automatically resolved (with a slower execution time).\r\n   */\r\n  constructor(\r\n    public element: HTMLElement,\r\n    public options: IAuthenticationProviderOptions = {},\r\n    bindings?: IComponentBindings,\r\n    public _window?: Window\r\n  ) {\r\n    super(element, AuthenticationProvider.ID, bindings);\r\n\r\n    this.options = ComponentOptions.initComponentOptions(element, AuthenticationProvider, options);\r\n\r\n    Assert.exists(this.options.name);\r\n\r\n    this.handlers = [];\r\n\r\n    this._window = this._window || window;\r\n    this.redirectCount = 0;\r\n\r\n    this.bind.onRootElement(QueryEvents.buildingCallOptions, this.handleBuildingCallOptions);\r\n    this.bind.onRootElement(QueryEvents.queryError, this.handleQueryError);\r\n    this.bind.onRootElement(InitializationEvents.nuke, this.handleNuke);\r\n\r\n    this.bind.onRootElement(SettingsEvents.settingsPopulateMenu, (args: ISettingsPopulateMenuArgs) => {\r\n      args.menuData.push({\r\n        text: l('Reauthenticate', this.options.caption),\r\n        className: 'coveo-authentication-provider',\r\n        onOpen: () => this.authenticateWithProvider(),\r\n        svgIcon: SVGIcons.icons.dropdownAuthenticate,\r\n        svgIconClassName: 'coveo-authentication-provider-svg'\r\n      });\r\n    });\r\n  }\r\n\r\n  private handleBuildingCallOptions(args: IBuildingCallOptionsEventArgs) {\r\n    args.options.authentication.push(this.options.name);\r\n  }\r\n\r\n  private handleQueryError(args: IQueryErrorEventArgs) {\r\n    let missingAuthError = <MissingAuthenticationError>args.error;\r\n\r\n    if (\r\n      missingAuthError.isMissingAuthentication &&\r\n      missingAuthError.provider === this.options.name &&\r\n      this.redirectCount < 2 &&\r\n      this.redirectCount !== -1\r\n    ) {\r\n      ++this.redirectCount;\r\n      this.authenticateWithProvider();\r\n    } else {\r\n      this.logger.error('The AuthenticationProvider is in a redirect loop. This may be due to a back-end configuration problem.');\r\n      this.redirectCount = -1;\r\n    }\r\n  }\r\n\r\n  private authenticateWithProvider() {\r\n    this.options.useIFrame ? this.authenticateWithIFrame() : this.redirectToAuthenticationProvider();\r\n  }\r\n\r\n  private redirectToAuthenticationProvider() {\r\n    this.logger.info(`Redirecting to authentication provider ${this.options.name}`);\r\n    this._window.location.href = this.getAuthenticationProviderUriForRedirect();\r\n  }\r\n\r\n  private authenticateWithIFrame() {\r\n    this.logger.info(`Using iframe to retrieve authentication for provider ${this.options.name}`);\r\n\r\n    let iframe = $$('iframe', {\r\n      src: this.getAuthenticationProviderUriForIFrame()\r\n    }).el;\r\n\r\n    let modalbox: Coveo.ModalBox.ModalBox;\r\n    modalbox = this.options.showIFrame ? this.createPopupForVisibleIFrame(iframe) : this.createPopupForWaitMessage(iframe);\r\n\r\n    let handler = this.createHandler(modalbox, iframe);\r\n    $$(<any>this._window).one('message', handler);\r\n    this.handlers.push(handler);\r\n  }\r\n\r\n  private createHandler(modalbox: Coveo.ModalBox.ModalBox, iframe: HTMLElement): () => void {\r\n    return () => {\r\n      $$(iframe).detach();\r\n      this.logger.info(`Got authentication for provider ${this.options.name}; retrying query.`);\r\n      modalbox.close();\r\n      this.queryController.executeQuery();\r\n    };\r\n  }\r\n\r\n  private handleNuke() {\r\n    _.each(this.handlers, handler => $$(<any>this._window).off('message', handler));\r\n  }\r\n\r\n  private createPopupForWaitMessage(iframe: HTMLElement): Coveo.ModalBox.ModalBox {\r\n    let popup = $$(\r\n      'div',\r\n      {\r\n        className: 'coveo-waiting-for-authentication-popup'\r\n      },\r\n      DomUtils.getBasicLoadingAnimation()\r\n    ).el;\r\n\r\n    $$(iframe).hide();\r\n    document.body.appendChild(iframe);\r\n\r\n    ModalBox.open(popup, {\r\n      title: l('Authenticating', this.options.caption),\r\n      sizeMod: 'small',\r\n      body: this.searchInterface.options.modalContainer\r\n    });\r\n    return ModalBox;\r\n  }\r\n\r\n  private createPopupForVisibleIFrame(iframe: HTMLElement): Coveo.ModalBox.ModalBox {\r\n    $$(iframe).addClass('coveo-authentication-iframe');\r\n    let popup = $$('div', {}, iframe).el;\r\n\r\n    ModalBox.open(popup, {\r\n      title: l('Authenticating', this.options.caption),\r\n      className: 'coveo-authentication-popup',\r\n      sizeMod: 'big',\r\n      body: this.searchInterface.options.modalContainer\r\n    });\r\n    return ModalBox;\r\n  }\r\n\r\n  private getAuthenticationProviderUriForRedirect(): string {\r\n    return this.queryController.getEndpoint().getAuthenticationProviderUri(this.options.name, this._window.location.href, undefined);\r\n  }\r\n\r\n  private getAuthenticationProviderUriForIFrame(): string {\r\n    return this.queryController.getEndpoint().getAuthenticationProviderUri(this.options.name, undefined, 'success');\r\n  }\r\n}\r\n\r\nInitialization.registerAutoCreateComponent(AuthenticationProvider);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/AuthenticationProvider/AuthenticationProvider.ts"],"sourceRoot":""}