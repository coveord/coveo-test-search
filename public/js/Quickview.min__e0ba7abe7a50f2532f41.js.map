{"version":3,"sources":["Quickview.min__e0ba7abe7a50f2532f41.js","./node_modules/popper.js/dist/esm/popper.js","./src/events/QuickviewEvents.ts","./src/ui/Quickview/QuickviewDocument.ts","./src/ui/Quickview/Quickview.ts","./src/ui/Quickview/DefaultQuickviewTemplate.ts","./src/ui/Quickview/QuickviewDocumentIframe.ts","./src/ui/Quickview/QuickviewDocumentHeader.ts","./src/ui/Quickview/QuickviewDocumentWords.ts","./src/ui/Quickview/QuickviewDocumentWord.ts","./src/ui/Quickview/QuickviewDocumentWordColor.ts","./src/ui/Quickview/QuickviewDocumentWordButton.ts","./src/ui/Quickview/QuickviewDocumentPreviewBar.ts"],"names":["webpackJsonpCoveo__temporary","173","module","__webpack_exports__","__webpack_require__","microtaskDebounce","fn","called","window","Promise","resolve","then","taskDebounce","scheduled","setTimeout","timeoutDuration","isFunction","functionToCheck","getType","toString","call","getStyleComputedProperty","element","property","nodeType","css","getComputedStyle","getParentNode","nodeName","parentNode","host","getScrollParent","document","body","ownerDocument","_getStyleComputedProp","overflow","overflowX","test","overflowY","isIE","version","isIE11","isIE10","getOffsetParent","documentElement","noOffsetParent","offsetParent","nextElementSibling","indexOf","isOffsetContainer","firstElementChild","getRoot","node","findCommonOffsetParent","element1","element2","order","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","start","end","range","createRange","setStart","setEnd","commonAncestorContainer","contains","element1root","getScroll","side","arguments","length","undefined","upperSide","html","scrollingElement","includeScroll","rect","subtract","scrollTop","scrollLeft","modifier","top","bottom","left","right","getBordersSize","styles","axis","sideA","sideB","parseFloat","getSize","computedStyle","Math","max","getWindowSizes","height","width","getClientRect","offsets","_extends","getBoundingClientRect","e","result","sizes","clientWidth","clientHeight","horizScrollbar","offsetWidth","vertScrollbar","offsetHeight","getOffsetRectRelativeToArbitraryNode","children","parent","fixedPosition","isHTML","childrenRect","parentRect","scrollParent","borderTopWidth","borderLeftWidth","marginTop","marginLeft","getViewportOffsetRectRelativeToArtbitraryNode","excludeScroll","relativeOffset","innerWidth","innerHeight","isFixed","getFixedPositionOffsetParent","parentElement","el","getBoundaries","popper","reference","padding","boundariesElement","boundaries","boundariesNode","_getWindowSizes","getArea","_ref","computeAutoPlacement","placement","refRect","rects","sortedAreas","Object","keys","map","key","area","sort","a","b","filteredAreas","filter","_ref2","computedPlacement","variation","split","getReferenceOffsets","state","getOuterSizes","x","marginBottom","y","marginRight","getOppositePlacement","hash","replace","matched","getPopperOffsets","referenceOffsets","popperRect","popperOffsets","isHoriz","mainSide","secondarySide","measurement","secondaryMeasurement","find","arr","check","Array","prototype","findIndex","prop","value","cur","match","obj","runModifiers","modifiers","data","ends","slice","forEach","console","warn","enabled","update","this","isDestroyed","instance","arrowStyles","attributes","flipped","options","positionFixed","flip","originalPlacement","position","isCreated","onUpdate","onCreate","isModifierEnabled","modifierName","some","name","getSupportedPropertyName","prefixes","upperProp","charAt","toUpperCase","i","prefix","toCheck","style","destroy","removeAttribute","willChange","disableEventListeners","removeOnDestroy","removeChild","getWindow","defaultView","attachToScrollParents","event","callback","scrollParents","isBody","target","addEventListener","passive","push","setupEventListeners","updateBound","scrollElement","eventsEnabled","enableEventListeners","scheduleUpdate","removeEventListeners","removeEventListener","cancelAnimationFrame","isNumeric","n","isNaN","isFinite","setStyles","unit","setAttributes","setAttribute","applyStyle","arrowElement","applyStyleOnLoad","modifierOptions","computeStyle","legacyGpuAccelerationOption","gpuAcceleration","offsetParentRect","floor","round","prefixedProperty","invertTop","invertLeft","arrow","isModifierRequired","requestingName","requestedName","requesting","isRequired","_requesting","requested","_data$offsets$arrow","querySelector","_data$offsets","isVertical","len","sideCapitalized","toLowerCase","altSide","opSide","arrowElementSize","center","popperMarginSide","popperBorderSide","sideValue","min","defineProperty","getOppositeVariation","clockwise","counter","index","validPlacements","concat","reverse","placementOpposite","flipOrder","behavior","BEHAVIORS","FLIP","CLOCKWISE","COUNTERCLOCKWISE","step","refOffsets","overlapsRef","overflowsLeft","overflowsRight","overflowsTop","overflowsBottom","overflowsBoundaries","flippedVariation","flipVariations","keepTogether","toValue","str","parseOffset","offset","basePlacement","useHeight","fragments","frag","trim","divider","search","splitRegex","ops","op","mergeWithPrevious","reduce","index2","preventOverflow","transformProp","popperStyles","transform","priority","primary","escapeWithReference","secondary","shift","shiftvariation","shiftOffsets","hide","bound","inner","subtractLength","isBrowser","longerTimeoutBrowsers","navigator","userAgent","supportsMicroTasks","debounce","MSInputMethodContext","documentMode","classCallCheck","Constructor","TypeError","createClass","defineProperties","props","descriptor","enumerable","configurable","writable","protoProps","staticProps","assign","source","hasOwnProperty","placements","onLoad","Defaults","Popper","_this","requestAnimationFrame","bind","jquery","Utils","global","PopperUtils","226","exports","quickviewLoaded","openQuickview","QuickviewEvents","232","__extends","extendStatics","setPrototypeOf","__proto__","d","p","__","constructor","create","__assign","t","s","__awaiter","thisArg","_arguments","P","generator","reject","fulfilled","next","rejected","done","apply","__generator","verb","v","f","_","label","pop","trys","g","sent","throw","return","Symbol","iterator","HIGHLIGHT_PREFIX","bindings","QuickviewDocument","ID","ComponentOptions","initComponentOptions","resolveResult","Assert","exists","createDom","container","$$","className","appendChild","header","QuickviewDocumentHeader","iframe","QuickviewDocumentIframe","append","open","beforeLoad","termsToHighlight","termsWereModified","documentHTML","documentWords","previewBar_1","afterLoad","error_1","_a","ensureDom","Date","getTime","initialTermsToHighlight","triggerOpenQuickViewEvent","wereTermsToHighlightModified","handleTermsToHighlight","query","queryController","getEndpoint","getDocumentHtml","uniqueId","queryObject","requestedOutputSize","maximumDocumentSize","render","title","QuickviewDocumentWords","QuickviewDocumentPreviewBar","each","words","word","button","QuickviewDocumentWordButton","addWord","triggerQuickviewLoaded","renderError","get","args","root","trigger","getLastQuery","duration","term","substring","q","arrayEqual","buildNumberOption","defaultValue","Component","Initialization","registerAutoCreateComponent","267","ModalBox","Quickview","contentTemplate","DefaultQuickviewTemplate","innerHTML","buildContent","bindClick","resultElement","on","ResultListEvents","stopPropagation","modalbox","AccessibleModal","searchInterface","modalContainer","icon","buildIcon","caption","buildCaption","content","buildTooltipIfNotInCardLayout","SVGIcons","icons","quickview","SVGDom","addClassToSVGInContainer","toLocaleString","resultsAreInCardLayout","buildPopper","queryStateModel","QueryStateModel","attributesEnum","layout","popperReference","tooltipPlacement","isOpen","resultCurrentlyBeingRendered","activeElement","HTMLElement","prepareOpenQuickviewObject","createModalBox","bindQuickviewEvents","animateAndOpen","logUsageAnalyticsEvent","set","getHashId","close","queryUid","StringUtils","hashCode","usageAnalytics","logClickEvent","analyticsActionCauseList","documentQuickview","author","getFieldValue","documentURL","clickUri","documentTitle","hasHtmlVersion","alwaysShow","clickAction","AccessibleButton","withElement","withSelectAction","withLabel","l","withOwner","build","display","openerObject","anim","loadingAnimation","remove","quickviewDocument","computeCssClassName","dispatchNamedMethodCallOrComponentCreation","computedModalBoxContent","addClass","builtContent","openResult","showDate","validation","closeQuickview","origin","prepareQuickviewContent","domContent","initOptions","initParameters","containsQuickviewDocumentAndCustomAnimation","instantiateTemplateToDom","getBindings","automaticallyCreateComponentsInside","initResult","enableLoadingAnimation","prepend","templateInstantiated","e_1","instantiateToElement","logger","doExport","exportGlobally","buildBooleanOption","buildStringOption","TemplateComponentOptions","buildTemplateOption","selectorAttr","idAttr","buildOption","ComponentOptionsType","NONE","loadingAnimationSelector","getAttribute","detach","id","loadingAnimationTemplate","loadResultTemplateFromId","checkCondition","DomUtils","getBasicLoadingAnimation","buildCustomOption","641","642","instantiateToString","queryResult","Template","643","buildIFrame","iframeElement","contentWindow","isNewQuickviewDocument","meta","head","htmlDocument","quickviewIsClosedByEndUser","onload","addClientSideTweaksToIFrameStyling","writeToIFrame","error","errorMessage","status","errorDocument","implementation","createHTMLDocument","fontFamily","text","contentDocument","sandbox","src","iframewrapper","allowDocumentLinkToEscapeSandbox","write","getElementsByTagName","outerHTML","findAll","link","type","cssText","DeviceUtils","isIos","margin","createTextNode","644","buildHeader","wordButton","645","scanDocument","quickviewWord","QuickviewDocumentWord","doCompleteInitialScanForKeywordInDocument","alreadyScannedKeyword","indexIdentifier","addElement","occurrence","646","count","elements","currentNavigationPosition","Logger","navigateForward","highlightNavigation","putElementIntoView","navigateBackward","navigateTo","parsed","parseKeywordIdentifier","keywordIdentifier","keywordOccurrencesInDocument","indexTermPart","keywordTermPart","getText","color","QuickviewDocumentWordColor","backgroundColor","isTaggedWord","currentElement","otherElements","without","htmlColor","invert","scrollIntoView","innerTextOfHTMLElement","getHighlightedInnerText","resolveOriginalTerm","highlight","originalTerm","originalTermMatch","equalsCaseInsensitive","expansionMatch","expansion","first","parts","substr","parseInt","647","rgbExtracted","r","saturate","hsv","ColorUtils","rgbToHsv","rgb","hsvToRgb","648","previewBar","wordHtml","buildName","renderArrow","borderColor","navigate","backward","pdf","closest","direction","arrowIcon","649","wordIndicators","Map","renderPreviewBar","currentWord","indicators","border","defaultStyleColor","indicator","renderWordPositionIndicator","has","handleOverlappingIndicators","docHeight","Doc","elementPosition","previewUnit","allIndicators","otherIndicatorAtSamePositionInDocument","chain","otherIndicator"],"mappings":"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","file":"Quickview.min__e0ba7abe7a50f2532f41.js","sourcesContent":["webpackJsonpCoveo__temporary([18],{\n\n/***/ 173:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* WEBPACK VAR INJECTION */(function(global) {/**!\n * @fileOverview Kickass library to create and place poppers near their reference elements.\n * @version 1.14.3\n * @license\n * Copyright (c) 2016 Federico Zivolo and contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined';\n\nvar longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\nvar timeoutDuration = 0;\nfor (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n  if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n    timeoutDuration = 1;\n    break;\n  }\n}\n\nfunction microtaskDebounce(fn) {\n  var called = false;\n  return function () {\n    if (called) {\n      return;\n    }\n    called = true;\n    window.Promise.resolve().then(function () {\n      called = false;\n      fn();\n    });\n  };\n}\n\nfunction taskDebounce(fn) {\n  var scheduled = false;\n  return function () {\n    if (!scheduled) {\n      scheduled = true;\n      setTimeout(function () {\n        scheduled = false;\n        fn();\n      }, timeoutDuration);\n    }\n  };\n}\n\nvar supportsMicroTasks = isBrowser && window.Promise;\n\n/**\n* Create a debounced version of a method, that's asynchronously deferred\n* but called in the minimum time possible.\n*\n* @method\n* @memberof Popper.Utils\n* @argument {Function} fn\n* @returns {Function}\n*/\nvar debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;\n\n/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {Any} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\nfunction isFunction(functionToCheck) {\n  var getType = {};\n  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\n}\n\n/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Eement} element\n * @argument {String} property\n */\nfunction getStyleComputedProperty(element, property) {\n  if (element.nodeType !== 1) {\n    return [];\n  }\n  // NOTE: 1 DOM access here\n  var css = getComputedStyle(element, null);\n  return property ? css[property] : css;\n}\n\n/**\n * Returns the parentNode or the host of the element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} parent\n */\nfunction getParentNode(element) {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n  return element.parentNode || element.host;\n}\n\n/**\n * Returns the scrolling parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} scroll parent\n */\nfunction getScrollParent(element) {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (!element) {\n    return document.body;\n  }\n\n  switch (element.nodeName) {\n    case 'HTML':\n    case 'BODY':\n      return element.ownerDocument.body;\n    case '#document':\n      return element.body;\n  }\n\n  // Firefox want us to check `-x` and `-y` variations as well\n\n  var _getStyleComputedProp = getStyleComputedProperty(element),\n      overflow = _getStyleComputedProp.overflow,\n      overflowX = _getStyleComputedProp.overflowX,\n      overflowY = _getStyleComputedProp.overflowY;\n\n  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n\nvar isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);\nvar isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);\n\n/**\n * Determines if the browser is Internet Explorer\n * @method\n * @memberof Popper.Utils\n * @param {Number} version to check\n * @returns {Boolean} isIE\n */\nfunction isIE(version) {\n  if (version === 11) {\n    return isIE11;\n  }\n  if (version === 10) {\n    return isIE10;\n  }\n  return isIE11 || isIE10;\n}\n\n/**\n * Returns the offset parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} offset parent\n */\nfunction getOffsetParent(element) {\n  if (!element) {\n    return document.documentElement;\n  }\n\n  var noOffsetParent = isIE(10) ? document.body : null;\n\n  // NOTE: 1 DOM access here\n  var offsetParent = element.offsetParent;\n  // Skip hidden elements which don't have an offsetParent\n  while (offsetParent === noOffsetParent && element.nextElementSibling) {\n    offsetParent = (element = element.nextElementSibling).offsetParent;\n  }\n\n  var nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    return element ? element.ownerDocument.documentElement : document.documentElement;\n  }\n\n  // .offsetParent will return the closest TD or TABLE in case\n  // no offsetParent is present, I hate this job...\n  if (['TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {\n    return getOffsetParent(offsetParent);\n  }\n\n  return offsetParent;\n}\n\nfunction isOffsetContainer(element) {\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY') {\n    return false;\n  }\n  return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;\n}\n\n/**\n * Finds the root node (document, shadowDOM root) of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} node\n * @returns {Element} root node\n */\nfunction getRoot(node) {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n\n/**\n * Finds the offset parent common to the two provided nodes\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element1\n * @argument {Element} element2\n * @returns {Element} common offset parent\n */\nfunction findCommonOffsetParent(element1, element2) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return document.documentElement;\n  }\n\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\n  var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;\n  var start = order ? element1 : element2;\n  var end = order ? element2 : element1;\n\n  // Get common ancestor container\n  var range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  var commonAncestorContainer = range.commonAncestorContainer;\n\n  // Both nodes are inside #document\n\n  if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    return getOffsetParent(commonAncestorContainer);\n  }\n\n  // one of the nodes is inside shadowDOM, find which one\n  var element1root = getRoot(element1);\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n\n/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {String} side `top` or `left`\n * @returns {number} amount of scrolled pixels\n */\nfunction getScroll(element) {\n  var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';\n\n  var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    var html = element.ownerDocument.documentElement;\n    var scrollingElement = element.ownerDocument.scrollingElement || html;\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n\n/*\n * Sum or subtract the element scroll values (left and top) from a given rect object\n * @method\n * @memberof Popper.Utils\n * @param {Object} rect - Rect object you want to change\n * @param {HTMLElement} element - The element from the function reads the scroll values\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n * @return {Object} rect - The modifier rect object\n */\nfunction includeScroll(rect, element) {\n  var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  var scrollTop = getScroll(element, 'top');\n  var scrollLeft = getScroll(element, 'left');\n  var modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n  return rect;\n}\n\n/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param {CSSStyleDeclaration} styles\n * Result of `getStyleComputedProperty` on the given element\n * @param {String} axis - `x` or `y`\n * @return {number} borders - The borders size of the given axis\n */\n\nfunction getBordersSize(styles, axis) {\n  var sideA = axis === 'x' ? 'Left' : 'Top';\n  var sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n\n  return parseFloat(styles['border' + sideA + 'Width'], 10) + parseFloat(styles['border' + sideB + 'Width'], 10);\n}\n\nfunction getSize(axis, body, html, computedStyle) {\n  return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE(10) ? html['offset' + axis] + computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')] + computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')] : 0);\n}\n\nfunction getWindowSizes() {\n  var body = document.body;\n  var html = document.documentElement;\n  var computedStyle = isIE(10) && getComputedStyle(html);\n\n  return {\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle)\n  };\n}\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\nvar defineProperty = function (obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n * @method\n * @memberof Popper.Utils\n * @argument {Object} offsets\n * @returns {Object} ClientRect like output\n */\nfunction getClientRect(offsets) {\n  return _extends({}, offsets, {\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height\n  });\n}\n\n/**\n * Get bounding client rect of given element\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element\n * @return {Object} client rect\n */\nfunction getBoundingClientRect(element) {\n  var rect = {};\n\n  // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n  try {\n    if (isIE(10)) {\n      rect = element.getBoundingClientRect();\n      var scrollTop = getScroll(element, 'top');\n      var scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    } else {\n      rect = element.getBoundingClientRect();\n    }\n  } catch (e) {}\n\n  var result = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top\n  };\n\n  // subtract scrollbar size from sizes\n  var sizes = element.nodeName === 'HTML' ? getWindowSizes() : {};\n  var width = sizes.width || element.clientWidth || result.right - result.left;\n  var height = sizes.height || element.clientHeight || result.bottom - result.top;\n\n  var horizScrollbar = element.offsetWidth - width;\n  var vertScrollbar = element.offsetHeight - height;\n\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n  if (horizScrollbar || vertScrollbar) {\n    var styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return getClientRect(result);\n}\n\nfunction getOffsetRectRelativeToArbitraryNode(children, parent) {\n  var fixedPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  var isIE10 = isIE(10);\n  var isHTML = parent.nodeName === 'HTML';\n  var childrenRect = getBoundingClientRect(children);\n  var parentRect = getBoundingClientRect(parent);\n  var scrollParent = getScrollParent(children);\n\n  var styles = getStyleComputedProperty(parent);\n  var borderTopWidth = parseFloat(styles.borderTopWidth, 10);\n  var borderLeftWidth = parseFloat(styles.borderLeftWidth, 10);\n\n  // In cases where the parent is fixed, we must ignore negative scroll in offset calc\n  if (fixedPosition && parent.nodeName === 'HTML') {\n    parentRect.top = Math.max(parentRect.top, 0);\n    parentRect.left = Math.max(parentRect.left, 0);\n  }\n  var offsets = getClientRect({\n    top: childrenRect.top - parentRect.top - borderTopWidth,\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\n    width: childrenRect.width,\n    height: childrenRect.height\n  });\n  offsets.marginTop = 0;\n  offsets.marginLeft = 0;\n\n  // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n  if (!isIE10 && isHTML) {\n    var marginTop = parseFloat(styles.marginTop, 10);\n    var marginLeft = parseFloat(styles.marginLeft, 10);\n\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft;\n\n    // Attach marginTop and marginLeft because in some circumstances we may need them\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  if (isIE10 && !fixedPosition ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {\n    offsets = includeScroll(offsets, parent);\n  }\n\n  return offsets;\n}\n\nfunction getViewportOffsetRectRelativeToArtbitraryNode(element) {\n  var excludeScroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var html = element.ownerDocument.documentElement;\n  var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  var width = Math.max(html.clientWidth, window.innerWidth || 0);\n  var height = Math.max(html.clientHeight, window.innerHeight || 0);\n\n  var scrollTop = !excludeScroll ? getScroll(html) : 0;\n  var scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\n\n  var offset = {\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n    width: width,\n    height: height\n  };\n\n  return getClientRect(offset);\n}\n\n/**\n * Check if the given element is fixed or is inside a fixed parent\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {Element} customContainer\n * @returns {Boolean} answer to \"isFixed?\"\n */\nfunction isFixed(element) {\n  var nodeName = element.nodeName;\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n  return isFixed(getParentNode(element));\n}\n\n/**\n * Finds the first parent of an element that has a transformed property defined\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} first transformed parent or documentElement\n */\n\nfunction getFixedPositionOffsetParent(element) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element || !element.parentElement || isIE()) {\n    return document.documentElement;\n  }\n  var el = element.parentElement;\n  while (el && getStyleComputedProperty(el, 'transform') === 'none') {\n    el = el.parentElement;\n  }\n  return el || document.documentElement;\n}\n\n/**\n * Computed the boundaries limits and return them\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} popper\n * @param {HTMLElement} reference\n * @param {number} padding\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\n * @param {Boolean} fixedPosition - Is in fixed position mode\n * @returns {Object} Coordinates of the boundaries\n */\nfunction getBoundaries(popper, reference, padding, boundariesElement) {\n  var fixedPosition = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n  // NOTE: 1 DOM access here\n\n  var boundaries = { top: 0, left: 0 };\n  var offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\n\n  // Handle viewport case\n  if (boundariesElement === 'viewport') {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\n  } else {\n    // Handle other cases based on DOM element used as boundaries\n    var boundariesNode = void 0;\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(reference));\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = popper.ownerDocument.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = popper.ownerDocument.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition);\n\n    // In case of HTML, we need a different computation\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      var _getWindowSizes = getWindowSizes(),\n          height = _getWindowSizes.height,\n          width = _getWindowSizes.width;\n\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = height + offsets.top;\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = width + offsets.left;\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  }\n\n  // Add paddings\n  boundaries.left += padding;\n  boundaries.top += padding;\n  boundaries.right -= padding;\n  boundaries.bottom -= padding;\n\n  return boundaries;\n}\n\nfunction getArea(_ref) {\n  var width = _ref.width,\n      height = _ref.height;\n\n  return width * height;\n}\n\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n * @method\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {\n  var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  var boundaries = getBoundaries(popper, reference, padding, boundariesElement);\n\n  var rects = {\n    top: {\n      width: boundaries.width,\n      height: refRect.top - boundaries.top\n    },\n    right: {\n      width: boundaries.right - refRect.right,\n      height: boundaries.height\n    },\n    bottom: {\n      width: boundaries.width,\n      height: boundaries.bottom - refRect.bottom\n    },\n    left: {\n      width: refRect.left - boundaries.left,\n      height: boundaries.height\n    }\n  };\n\n  var sortedAreas = Object.keys(rects).map(function (key) {\n    return _extends({\n      key: key\n    }, rects[key], {\n      area: getArea(rects[key])\n    });\n  }).sort(function (a, b) {\n    return b.area - a.area;\n  });\n\n  var filteredAreas = sortedAreas.filter(function (_ref2) {\n    var width = _ref2.width,\n        height = _ref2.height;\n    return width >= popper.clientWidth && height >= popper.clientHeight;\n  });\n\n  var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;\n\n  var variation = placement.split('-')[1];\n\n  return computedPlacement + (variation ? '-' + variation : '');\n}\n\n/**\n * Get offsets to the reference element\n * @method\n * @memberof Popper.Utils\n * @param {Object} state\n * @param {Element} popper - the popper element\n * @param {Element} reference - the reference element (the popper will be relative to this)\n * @param {Element} fixedPosition - is in fixed position mode\n * @returns {Object} An object containing the offsets which will be applied to the popper\n */\nfunction getReferenceOffsets(state, popper, reference) {\n  var fixedPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n  var commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);\n}\n\n/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Object} object containing width and height properties\n */\nfunction getOuterSizes(element) {\n  var styles = getComputedStyle(element);\n  var x = parseFloat(styles.marginTop) + parseFloat(styles.marginBottom);\n  var y = parseFloat(styles.marginLeft) + parseFloat(styles.marginRight);\n  var result = {\n    width: element.offsetWidth + y,\n    height: element.offsetHeight + x\n  };\n  return result;\n}\n\n/**\n * Get the opposite placement of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement\n * @returns {String} flipped placement\n */\nfunction getOppositePlacement(placement) {\n  var hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n  return placement.replace(/left|right|bottom|top/g, function (matched) {\n    return hash[matched];\n  });\n}\n\n/**\n * Get offsets to the popper\n * @method\n * @memberof Popper.Utils\n * @param {Object} position - CSS position the Popper will get applied\n * @param {HTMLElement} popper - the popper element\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n * @param {String} placement - one of the valid placement options\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n */\nfunction getPopperOffsets(popper, referenceOffsets, placement) {\n  placement = placement.split('-')[0];\n\n  // Get popper node sizes\n  var popperRect = getOuterSizes(popper);\n\n  // Add position, width and height to our offsets object\n  var popperOffsets = {\n    width: popperRect.width,\n    height: popperRect.height\n  };\n\n  // depending by the popper placement we have to compute its offsets slightly differently\n  var isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  var mainSide = isHoriz ? 'top' : 'left';\n  var secondarySide = isHoriz ? 'left' : 'top';\n  var measurement = isHoriz ? 'height' : 'width';\n  var secondaryMeasurement = !isHoriz ? 'height' : 'width';\n\n  popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;\n  if (placement === secondarySide) {\n    popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n  } else {\n    popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];\n  }\n\n  return popperOffsets;\n}\n\n/**\n * Mimics the `find` method of Array\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nfunction find(arr, check) {\n  // use native find if supported\n  if (Array.prototype.find) {\n    return arr.find(check);\n  }\n\n  // use `filter` to obtain the same behavior of `find`\n  return arr.filter(check)[0];\n}\n\n/**\n * Return the index of the matching object\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nfunction findIndex(arr, prop, value) {\n  // use native findIndex if supported\n  if (Array.prototype.findIndex) {\n    return arr.findIndex(function (cur) {\n      return cur[prop] === value;\n    });\n  }\n\n  // use `find` + `indexOf` if `findIndex` isn't supported\n  var match = find(arr, function (obj) {\n    return obj[prop] === value;\n  });\n  return arr.indexOf(match);\n}\n\n/**\n * Loop trough the list of modifiers and run them in order,\n * each of them will then edit the data object.\n * @method\n * @memberof Popper.Utils\n * @param {dataObject} data\n * @param {Array} modifiers\n * @param {String} ends - Optional modifier name used as stopper\n * @returns {dataObject}\n */\nfunction runModifiers(modifiers, data, ends) {\n  var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n\n  modifiersToRun.forEach(function (modifier) {\n    if (modifier['function']) {\n      // eslint-disable-line dot-notation\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n    }\n    var fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\n    if (modifier.enabled && isFunction(fn)) {\n      // Add properties to offsets to make them a complete clientRect object\n      // we do this before each modifier to make sure the previous one doesn't\n      // mess with these values\n      data.offsets.popper = getClientRect(data.offsets.popper);\n      data.offsets.reference = getClientRect(data.offsets.reference);\n\n      data = fn(data, modifier);\n    }\n  });\n\n  return data;\n}\n\n/**\n * Updates the position of the popper, computing the new offsets and applying\n * the new style.<br />\n * Prefer `scheduleUpdate` over `update` because of performance reasons.\n * @method\n * @memberof Popper\n */\nfunction update() {\n  // if popper is destroyed, don't perform any further update\n  if (this.state.isDestroyed) {\n    return;\n  }\n\n  var data = {\n    instance: this,\n    styles: {},\n    arrowStyles: {},\n    attributes: {},\n    flipped: false,\n    offsets: {}\n  };\n\n  // compute reference element offsets\n  data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference, this.options.positionFixed);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding);\n\n  // store the computed placement inside `originalPlacement`\n  data.originalPlacement = data.placement;\n\n  data.positionFixed = this.options.positionFixed;\n\n  // compute the popper offsets\n  data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);\n\n  data.offsets.popper.position = this.options.positionFixed ? 'fixed' : 'absolute';\n\n  // run the modifiers\n  data = runModifiers(this.modifiers, data);\n\n  // the first `update` will call `onCreate` callback\n  // the other ones will call `onUpdate` callback\n  if (!this.state.isCreated) {\n    this.state.isCreated = true;\n    this.options.onCreate(data);\n  } else {\n    this.options.onUpdate(data);\n  }\n}\n\n/**\n * Helper used to know if the given modifier is enabled.\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean}\n */\nfunction isModifierEnabled(modifiers, modifierName) {\n  return modifiers.some(function (_ref) {\n    var name = _ref.name,\n        enabled = _ref.enabled;\n    return enabled && name === modifierName;\n  });\n}\n\n/**\n * Get the prefixed supported property name\n * @method\n * @memberof Popper.Utils\n * @argument {String} property (camelCase)\n * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\n */\nfunction getSupportedPropertyName(property) {\n  var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n  var upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (var i = 0; i < prefixes.length; i++) {\n    var prefix = prefixes[i];\n    var toCheck = prefix ? '' + prefix + upperProp : property;\n    if (typeof document.body.style[toCheck] !== 'undefined') {\n      return toCheck;\n    }\n  }\n  return null;\n}\n\n/**\n * Destroy the popper\n * @method\n * @memberof Popper\n */\nfunction destroy() {\n  this.state.isDestroyed = true;\n\n  // touch DOM only if `applyStyle` modifier is enabled\n  if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n    this.popper.removeAttribute('x-placement');\n    this.popper.style.position = '';\n    this.popper.style.top = '';\n    this.popper.style.left = '';\n    this.popper.style.right = '';\n    this.popper.style.bottom = '';\n    this.popper.style.willChange = '';\n    this.popper.style[getSupportedPropertyName('transform')] = '';\n  }\n\n  this.disableEventListeners();\n\n  // remove the popper if user explicity asked for the deletion on destroy\n  // do not use `remove` because IE11 doesn't support it\n  if (this.options.removeOnDestroy) {\n    this.popper.parentNode.removeChild(this.popper);\n  }\n  return this;\n}\n\n/**\n * Get the window associated with the element\n * @argument {Element} element\n * @returns {Window}\n */\nfunction getWindow(element) {\n  var ownerDocument = element.ownerDocument;\n  return ownerDocument ? ownerDocument.defaultView : window;\n}\n\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\n  var isBody = scrollParent.nodeName === 'BODY';\n  var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\n  target.addEventListener(event, callback, { passive: true });\n\n  if (!isBody) {\n    attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);\n  }\n  scrollParents.push(target);\n}\n\n/**\n * Setup needed event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nfunction setupEventListeners(reference, options, state, updateBound) {\n  // Resize event listener on window\n  state.updateBound = updateBound;\n  getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });\n\n  // Scroll event listener on scroll parents\n  var scrollElement = getScrollParent(reference);\n  attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);\n  state.scrollElement = scrollElement;\n  state.eventsEnabled = true;\n\n  return state;\n}\n\n/**\n * It will add resize/scroll events and start recalculating\n * position of the popper element when they are triggered.\n * @method\n * @memberof Popper\n */\nfunction enableEventListeners() {\n  if (!this.state.eventsEnabled) {\n    this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);\n  }\n}\n\n/**\n * Remove event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nfunction removeEventListeners(reference, state) {\n  // Remove resize event listener on window\n  getWindow(reference).removeEventListener('resize', state.updateBound);\n\n  // Remove scroll event listener on scroll parents\n  state.scrollParents.forEach(function (target) {\n    target.removeEventListener('scroll', state.updateBound);\n  });\n\n  // Reset state\n  state.updateBound = null;\n  state.scrollParents = [];\n  state.scrollElement = null;\n  state.eventsEnabled = false;\n  return state;\n}\n\n/**\n * It will remove resize/scroll events and won't recalculate popper position\n * when they are triggered. It also won't trigger onUpdate callback anymore,\n * unless you call `update` method manually.\n * @method\n * @memberof Popper\n */\nfunction disableEventListeners() {\n  if (this.state.eventsEnabled) {\n    cancelAnimationFrame(this.scheduleUpdate);\n    this.state = removeEventListeners(this.reference, this.state);\n  }\n}\n\n/**\n * Tells if a given input is a number\n * @method\n * @memberof Popper.Utils\n * @param {*} input to check\n * @return {Boolean}\n */\nfunction isNumeric(n) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n\n/**\n * Set the style to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the style to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nfunction setStyles(element, styles) {\n  Object.keys(styles).forEach(function (prop) {\n    var unit = '';\n    // add unit if the value is numeric and is one of the following\n    if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {\n      unit = 'px';\n    }\n    element.style[prop] = styles[prop] + unit;\n  });\n}\n\n/**\n * Set the attributes to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the attributes to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nfunction setAttributes(element, attributes) {\n  Object.keys(attributes).forEach(function (prop) {\n    var value = attributes[prop];\n    if (value !== false) {\n      element.setAttribute(prop, attributes[prop]);\n    } else {\n      element.removeAttribute(prop);\n    }\n  });\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The same data object\n */\nfunction applyStyle(data) {\n  // any property present in `data.styles` will be applied to the popper,\n  // in this way we can make the 3rd party modifiers add custom styles to it\n  // Be aware, modifiers could override the properties defined in the previous\n  // lines of this modifier!\n  setStyles(data.instance.popper, data.styles);\n\n  // any property present in `data.attributes` will be applied to the popper,\n  // they will be set as HTML attributes of the element\n  setAttributes(data.instance.popper, data.attributes);\n\n  // if arrowElement is defined and arrowStyles has some properties\n  if (data.arrowElement && Object.keys(data.arrowStyles).length) {\n    setStyles(data.arrowElement, data.arrowStyles);\n  }\n\n  return data;\n}\n\n/**\n * Set the x-placement attribute before everything else because it could be used\n * to add margins to the popper margins needs to be calculated to get the\n * correct popper offsets.\n * @method\n * @memberof Popper.modifiers\n * @param {HTMLElement} reference - The reference element used to position the popper\n * @param {HTMLElement} popper - The HTML element used as popper\n * @param {Object} options - Popper.js options\n */\nfunction applyStyleOnLoad(reference, popper, options, modifierOptions, state) {\n  // compute reference element offsets\n  var referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);\n\n  popper.setAttribute('x-placement', placement);\n\n  // Apply `position` to popper before anything else because\n  // without the position applied we can't guarantee correct computations\n  setStyles(popper, { position: options.positionFixed ? 'fixed' : 'absolute' });\n\n  return options;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction computeStyle(data, options) {\n  var x = options.x,\n      y = options.y;\n  var popper = data.offsets.popper;\n\n  // Remove this legacy support in Popper.js v2\n\n  var legacyGpuAccelerationOption = find(data.instance.modifiers, function (modifier) {\n    return modifier.name === 'applyStyle';\n  }).gpuAcceleration;\n  if (legacyGpuAccelerationOption !== undefined) {\n    console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');\n  }\n  var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;\n\n  var offsetParent = getOffsetParent(data.instance.popper);\n  var offsetParentRect = getBoundingClientRect(offsetParent);\n\n  // Styles\n  var styles = {\n    position: popper.position\n  };\n\n  // Avoid blurry text by using full pixel integers.\n  // For pixel-perfect positioning, top/bottom prefers rounded\n  // values, while left/right prefers floored values.\n  var offsets = {\n    left: Math.floor(popper.left),\n    top: Math.round(popper.top),\n    bottom: Math.round(popper.bottom),\n    right: Math.floor(popper.right)\n  };\n\n  var sideA = x === 'bottom' ? 'top' : 'bottom';\n  var sideB = y === 'right' ? 'left' : 'right';\n\n  // if gpuAcceleration is set to `true` and transform is supported,\n  //  we use `translate3d` to apply the position to the popper we\n  // automatically use the supported prefixed version if needed\n  var prefixedProperty = getSupportedPropertyName('transform');\n\n  // now, let's make a step back and look at this code closely (wtf?)\n  // If the content of the popper grows once it's been positioned, it\n  // may happen that the popper gets misplaced because of the new content\n  // overflowing its reference element\n  // To avoid this problem, we provide two options (x and y), which allow\n  // the consumer to define the offset origin.\n  // If we position a popper on top of a reference element, we can set\n  // `x` to `top` to make the popper grow towards its top instead of\n  // its bottom.\n  var left = void 0,\n      top = void 0;\n  if (sideA === 'bottom') {\n    top = -offsetParentRect.height + offsets.bottom;\n  } else {\n    top = offsets.top;\n  }\n  if (sideB === 'right') {\n    left = -offsetParentRect.width + offsets.right;\n  } else {\n    left = offsets.left;\n  }\n  if (gpuAcceleration && prefixedProperty) {\n    styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';\n    styles[sideA] = 0;\n    styles[sideB] = 0;\n    styles.willChange = 'transform';\n  } else {\n    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\n    var invertTop = sideA === 'bottom' ? -1 : 1;\n    var invertLeft = sideB === 'right' ? -1 : 1;\n    styles[sideA] = top * invertTop;\n    styles[sideB] = left * invertLeft;\n    styles.willChange = sideA + ', ' + sideB;\n  }\n\n  // Attributes\n  var attributes = {\n    'x-placement': data.placement\n  };\n\n  // Update `data` attributes, styles and arrowStyles\n  data.attributes = _extends({}, attributes, data.attributes);\n  data.styles = _extends({}, styles, data.styles);\n  data.arrowStyles = _extends({}, data.offsets.arrow, data.arrowStyles);\n\n  return data;\n}\n\n/**\n * Helper used to know if the given modifier depends from another one.<br />\n * It checks if the needed modifier is listed and enabled.\n * @method\n * @memberof Popper.Utils\n * @param {Array} modifiers - list of modifiers\n * @param {String} requestingName - name of requesting modifier\n * @param {String} requestedName - name of requested modifier\n * @returns {Boolean}\n */\nfunction isModifierRequired(modifiers, requestingName, requestedName) {\n  var requesting = find(modifiers, function (_ref) {\n    var name = _ref.name;\n    return name === requestingName;\n  });\n\n  var isRequired = !!requesting && modifiers.some(function (modifier) {\n    return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;\n  });\n\n  if (!isRequired) {\n    var _requesting = '`' + requestingName + '`';\n    var requested = '`' + requestedName + '`';\n    console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');\n  }\n  return isRequired;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction arrow(data, options) {\n  var _data$offsets$arrow;\n\n  // arrow depends on keepTogether in order to work\n  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n    return data;\n  }\n\n  var arrowElement = options.element;\n\n  // if arrowElement is a string, suppose it's a CSS selector\n  if (typeof arrowElement === 'string') {\n    arrowElement = data.instance.popper.querySelector(arrowElement);\n\n    // if arrowElement is not found, don't run the modifier\n    if (!arrowElement) {\n      return data;\n    }\n  } else {\n    // if the arrowElement isn't a query selector we must check that the\n    // provided DOM node is child of its popper node\n    if (!data.instance.popper.contains(arrowElement)) {\n      console.warn('WARNING: `arrow.element` must be child of its popper element!');\n      return data;\n    }\n  }\n\n  var placement = data.placement.split('-')[0];\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var isVertical = ['left', 'right'].indexOf(placement) !== -1;\n\n  var len = isVertical ? 'height' : 'width';\n  var sideCapitalized = isVertical ? 'Top' : 'Left';\n  var side = sideCapitalized.toLowerCase();\n  var altSide = isVertical ? 'left' : 'top';\n  var opSide = isVertical ? 'bottom' : 'right';\n  var arrowElementSize = getOuterSizes(arrowElement)[len];\n\n  //\n  // extends keepTogether behavior making sure the popper and its\n  // reference have enough pixels in conjuction\n  //\n\n  // top/left side\n  if (reference[opSide] - arrowElementSize < popper[side]) {\n    data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);\n  }\n  // bottom/right side\n  if (reference[side] + arrowElementSize > popper[opSide]) {\n    data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];\n  }\n  data.offsets.popper = getClientRect(data.offsets.popper);\n\n  // compute center of the popper\n  var center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\n\n  // Compute the sideValue using the updated popper offsets\n  // take popper margin in account because we don't have this info available\n  var css = getStyleComputedProperty(data.instance.popper);\n  var popperMarginSide = parseFloat(css['margin' + sideCapitalized], 10);\n  var popperBorderSide = parseFloat(css['border' + sideCapitalized + 'Width'], 10);\n  var sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;\n\n  // prevent arrowElement from being placed not contiguously to its popper\n  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n\n  data.arrowElement = arrowElement;\n  data.offsets.arrow = (_data$offsets$arrow = {}, defineProperty(_data$offsets$arrow, side, Math.round(sideValue)), defineProperty(_data$offsets$arrow, altSide, ''), _data$offsets$arrow);\n\n  return data;\n}\n\n/**\n * Get the opposite placement variation of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement variation\n * @returns {String} flipped placement variation\n */\nfunction getOppositeVariation(variation) {\n  if (variation === 'end') {\n    return 'start';\n  } else if (variation === 'start') {\n    return 'end';\n  }\n  return variation;\n}\n\n/**\n * List of accepted placements to use as values of the `placement` option.<br />\n * Valid placements are:\n * - `auto`\n * - `top`\n * - `right`\n * - `bottom`\n * - `left`\n *\n * Each placement can have a variation from this list:\n * - `-start`\n * - `-end`\n *\n * Variations are interpreted easily if you think of them as the left to right\n * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\n * is right.<br />\n * Vertically (`left` and `right`), `start` is top and `end` is bottom.\n *\n * Some valid examples are:\n * - `top-end` (on top of reference, right aligned)\n * - `right-start` (on right of reference, top aligned)\n * - `bottom` (on bottom, centered)\n * - `auto-right` (on the side with more space available, alignment depends by placement)\n *\n * @static\n * @type {Array}\n * @enum {String}\n * @readonly\n * @method placements\n * @memberof Popper\n */\nvar placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'];\n\n// Get rid of `auto` `auto-start` and `auto-end`\nvar validPlacements = placements.slice(3);\n\n/**\n * Given an initial placement, returns all the subsequent placements\n * clockwise (or counter-clockwise).\n *\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement - A valid placement (it accepts variations)\n * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\n * @returns {Array} placements including their variations\n */\nfunction clockwise(placement) {\n  var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var index = validPlacements.indexOf(placement);\n  var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));\n  return counter ? arr.reverse() : arr;\n}\n\nvar BEHAVIORS = {\n  FLIP: 'flip',\n  CLOCKWISE: 'clockwise',\n  COUNTERCLOCKWISE: 'counterclockwise'\n};\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction flip(data, options) {\n  // if `inner` modifier is enabled, we can't use the `flip` modifier\n  if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n    return data;\n  }\n\n  if (data.flipped && data.placement === data.originalPlacement) {\n    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n    return data;\n  }\n\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement, data.positionFixed);\n\n  var placement = data.placement.split('-')[0];\n  var placementOpposite = getOppositePlacement(placement);\n  var variation = data.placement.split('-')[1] || '';\n\n  var flipOrder = [];\n\n  switch (options.behavior) {\n    case BEHAVIORS.FLIP:\n      flipOrder = [placement, placementOpposite];\n      break;\n    case BEHAVIORS.CLOCKWISE:\n      flipOrder = clockwise(placement);\n      break;\n    case BEHAVIORS.COUNTERCLOCKWISE:\n      flipOrder = clockwise(placement, true);\n      break;\n    default:\n      flipOrder = options.behavior;\n  }\n\n  flipOrder.forEach(function (step, index) {\n    if (placement !== step || flipOrder.length === index + 1) {\n      return data;\n    }\n\n    placement = data.placement.split('-')[0];\n    placementOpposite = getOppositePlacement(placement);\n\n    var popperOffsets = data.offsets.popper;\n    var refOffsets = data.offsets.reference;\n\n    // using floor because the reference offsets may contain decimals we are not going to consider here\n    var floor = Math.floor;\n    var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);\n\n    var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n    var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n    var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n    var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);\n\n    var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom;\n\n    // flip the variation if required\n    var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n    var flippedVariation = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom);\n\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\n      // this boolean to detect any flip loop\n      data.flipped = true;\n\n      if (overlapsRef || overflowsBoundaries) {\n        placement = flipOrder[index + 1];\n      }\n\n      if (flippedVariation) {\n        variation = getOppositeVariation(variation);\n      }\n\n      data.placement = placement + (variation ? '-' + variation : '');\n\n      // this object contains `position`, we want to preserve it along with\n      // any additional property we may add in the future\n      data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));\n\n      data = runModifiers(data.instance.modifiers, data, 'flip');\n    }\n  });\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction keepTogether(data) {\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var placement = data.placement.split('-')[0];\n  var floor = Math.floor;\n  var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n  var side = isVertical ? 'right' : 'bottom';\n  var opSide = isVertical ? 'left' : 'top';\n  var measurement = isVertical ? 'width' : 'height';\n\n  if (popper[side] < floor(reference[opSide])) {\n    data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];\n  }\n  if (popper[opSide] > floor(reference[side])) {\n    data.offsets.popper[opSide] = floor(reference[side]);\n  }\n\n  return data;\n}\n\n/**\n * Converts a string containing value + unit into a px value number\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} str - Value + unit string\n * @argument {String} measurement - `height` or `width`\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @returns {Number|String}\n * Value in pixels, or original string if no values were extracted\n */\nfunction toValue(str, measurement, popperOffsets, referenceOffsets) {\n  // separate value from unit\n  var split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\n  var value = +split[1];\n  var unit = split[2];\n\n  // If it's not a number it's an operator, I guess\n  if (!value) {\n    return str;\n  }\n\n  if (unit.indexOf('%') === 0) {\n    var element = void 0;\n    switch (unit) {\n      case '%p':\n        element = popperOffsets;\n        break;\n      case '%':\n      case '%r':\n      default:\n        element = referenceOffsets;\n    }\n\n    var rect = getClientRect(element);\n    return rect[measurement] / 100 * value;\n  } else if (unit === 'vh' || unit === 'vw') {\n    // if is a vh or vw, we calculate the size based on the viewport\n    var size = void 0;\n    if (unit === 'vh') {\n      size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n    } else {\n      size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n    }\n    return size / 100 * value;\n  } else {\n    // if is an explicit pixel unit, we get rid of the unit and keep the value\n    // if is an implicit unit, it's px, and we return just the value\n    return value;\n  }\n}\n\n/**\n * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} offset\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @argument {String} basePlacement\n * @returns {Array} a two cells array with x and y offsets in numbers\n */\nfunction parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {\n  var offsets = [0, 0];\n\n  // Use height if placement is left or right and index is 0 otherwise use width\n  // in this way the first offset will use an axis and the second one\n  // will use the other one\n  var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;\n\n  // Split the offset string to obtain a list of values and operands\n  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\n  var fragments = offset.split(/(\\+|\\-)/).map(function (frag) {\n    return frag.trim();\n  });\n\n  // Detect if the offset string contains a pair of values or a single one\n  // they could be separated by comma or space\n  var divider = fragments.indexOf(find(fragments, function (frag) {\n    return frag.search(/,|\\s/) !== -1;\n  }));\n\n  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\n    console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');\n  }\n\n  // If divider is found, we divide the list of values and operands to divide\n  // them by ofset X and Y.\n  var splitRegex = /\\s*,\\s*|\\s+/;\n  var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments];\n\n  // Convert the values with units to absolute pixels to allow our computations\n  ops = ops.map(function (op, index) {\n    // Most of the units rely on the orientation of the popper\n    var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';\n    var mergeWithPrevious = false;\n    return op\n    // This aggregates any `+` or `-` sign that aren't considered operators\n    // e.g.: 10 + +5 => [10, +, +5]\n    .reduce(function (a, b) {\n      if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\n        a[a.length - 1] = b;\n        mergeWithPrevious = true;\n        return a;\n      } else if (mergeWithPrevious) {\n        a[a.length - 1] += b;\n        mergeWithPrevious = false;\n        return a;\n      } else {\n        return a.concat(b);\n      }\n    }, [])\n    // Here we convert the string values into number values (in px)\n    .map(function (str) {\n      return toValue(str, measurement, popperOffsets, referenceOffsets);\n    });\n  });\n\n  // Loop trough the offsets arrays and execute the operations\n  ops.forEach(function (op, index) {\n    op.forEach(function (frag, index2) {\n      if (isNumeric(frag)) {\n        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\n      }\n    });\n  });\n  return offsets;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @argument {Number|String} options.offset=0\n * The offset value as described in the modifier description\n * @returns {Object} The data object, properly modified\n */\nfunction offset(data, _ref) {\n  var offset = _ref.offset;\n  var placement = data.placement,\n      _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var basePlacement = placement.split('-')[0];\n\n  var offsets = void 0;\n  if (isNumeric(+offset)) {\n    offsets = [+offset, 0];\n  } else {\n    offsets = parseOffset(offset, popper, reference, basePlacement);\n  }\n\n  if (basePlacement === 'left') {\n    popper.top += offsets[0];\n    popper.left -= offsets[1];\n  } else if (basePlacement === 'right') {\n    popper.top += offsets[0];\n    popper.left += offsets[1];\n  } else if (basePlacement === 'top') {\n    popper.left += offsets[0];\n    popper.top -= offsets[1];\n  } else if (basePlacement === 'bottom') {\n    popper.left += offsets[0];\n    popper.top += offsets[1];\n  }\n\n  data.popper = popper;\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction preventOverflow(data, options) {\n  var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper);\n\n  // If offsetParent is the reference element, we really want to\n  // go one step up and use the next offsetParent as reference to\n  // avoid to make this modifier completely useless and look like broken\n  if (data.instance.reference === boundariesElement) {\n    boundariesElement = getOffsetParent(boundariesElement);\n  }\n\n  // NOTE: DOM access here\n  // resets the popper's position so that the document size can be calculated excluding\n  // the size of the popper element itself\n  var transformProp = getSupportedPropertyName('transform');\n  var popperStyles = data.instance.popper.style; // assignment to help minification\n  var top = popperStyles.top,\n      left = popperStyles.left,\n      transform = popperStyles[transformProp];\n\n  popperStyles.top = '';\n  popperStyles.left = '';\n  popperStyles[transformProp] = '';\n\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement, data.positionFixed);\n\n  // NOTE: DOM access here\n  // restores the original style properties after the offsets have been computed\n  popperStyles.top = top;\n  popperStyles.left = left;\n  popperStyles[transformProp] = transform;\n\n  options.boundaries = boundaries;\n\n  var order = options.priority;\n  var popper = data.offsets.popper;\n\n  var check = {\n    primary: function primary(placement) {\n      var value = popper[placement];\n      if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {\n        value = Math.max(popper[placement], boundaries[placement]);\n      }\n      return defineProperty({}, placement, value);\n    },\n    secondary: function secondary(placement) {\n      var mainSide = placement === 'right' ? 'left' : 'top';\n      var value = popper[mainSide];\n      if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {\n        value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));\n      }\n      return defineProperty({}, mainSide, value);\n    }\n  };\n\n  order.forEach(function (placement) {\n    var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\n    popper = _extends({}, popper, check[side](placement));\n  });\n\n  data.offsets.popper = popper;\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction shift(data) {\n  var placement = data.placement;\n  var basePlacement = placement.split('-')[0];\n  var shiftvariation = placement.split('-')[1];\n\n  // if shift shiftvariation is specified, run the modifier\n  if (shiftvariation) {\n    var _data$offsets = data.offsets,\n        reference = _data$offsets.reference,\n        popper = _data$offsets.popper;\n\n    var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n    var side = isVertical ? 'left' : 'top';\n    var measurement = isVertical ? 'width' : 'height';\n\n    var shiftOffsets = {\n      start: defineProperty({}, side, reference[side]),\n      end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])\n    };\n\n    data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);\n  }\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction hide(data) {\n  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n    return data;\n  }\n\n  var refRect = data.offsets.reference;\n  var bound = find(data.instance.modifiers, function (modifier) {\n    return modifier.name === 'preventOverflow';\n  }).boundaries;\n\n  if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === true) {\n      return data;\n    }\n\n    data.hide = true;\n    data.attributes['x-out-of-boundaries'] = '';\n  } else {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === false) {\n      return data;\n    }\n\n    data.hide = false;\n    data.attributes['x-out-of-boundaries'] = false;\n  }\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction inner(data) {\n  var placement = data.placement;\n  var basePlacement = placement.split('-')[0];\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n\n  var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n\n  popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n\n  data.placement = getOppositePlacement(placement);\n  data.offsets.popper = getClientRect(popper);\n\n  return data;\n}\n\n/**\n * Modifier function, each modifier can have a function of this type assigned\n * to its `fn` property.<br />\n * These functions will be called on each update, this means that you must\n * make sure they are performant enough to avoid performance bottlenecks.\n *\n * @function ModifierFn\n * @argument {dataObject} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {dataObject} The data object, properly modified\n */\n\n/**\n * Modifiers are plugins used to alter the behavior of your poppers.<br />\n * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\n * needed by the library.\n *\n * Usually you don't want to override the `order`, `fn` and `onLoad` props.\n * All the other properties are configurations that could be tweaked.\n * @namespace modifiers\n */\nvar modifiers = {\n  /**\n   * Modifier used to shift the popper on the start or end of its reference\n   * element.<br />\n   * It will read the variation of the `placement` property.<br />\n   * It can be one either `-end` or `-start`.\n   * @memberof modifiers\n   * @inner\n   */\n  shift: {\n    /** @prop {number} order=100 - Index used to define the order of execution */\n    order: 100,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: shift\n  },\n\n  /**\n   * The `offset` modifier can shift your popper on both its axis.\n   *\n   * It accepts the following units:\n   * - `px` or unitless, interpreted as pixels\n   * - `%` or `%r`, percentage relative to the length of the reference element\n   * - `%p`, percentage relative to the length of the popper element\n   * - `vw`, CSS viewport width unit\n   * - `vh`, CSS viewport height unit\n   *\n   * For length is intended the main axis relative to the placement of the popper.<br />\n   * This means that if the placement is `top` or `bottom`, the length will be the\n   * `width`. In case of `left` or `right`, it will be the height.\n   *\n   * You can provide a single value (as `Number` or `String`), or a pair of values\n   * as `String` divided by a comma or one (or more) white spaces.<br />\n   * The latter is a deprecated method because it leads to confusion and will be\n   * removed in v2.<br />\n   * Additionally, it accepts additions and subtractions between different units.\n   * Note that multiplications and divisions aren't supported.\n   *\n   * Valid examples are:\n   * ```\n   * 10\n   * '10%'\n   * '10, 10'\n   * '10%, 10'\n   * '10 + 10%'\n   * '10 - 5vh + 3%'\n   * '-10px + 5vh, 5px - 6%'\n   * ```\n   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\n   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\n   * > More on this [reading this issue](https://github.com/FezVrasta/popper.js/issues/373)\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  offset: {\n    /** @prop {number} order=200 - Index used to define the order of execution */\n    order: 200,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: offset,\n    /** @prop {Number|String} offset=0\n     * The offset value as described in the modifier description\n     */\n    offset: 0\n  },\n\n  /**\n   * Modifier used to prevent the popper from being positioned outside the boundary.\n   *\n   * An scenario exists where the reference itself is not within the boundaries.<br />\n   * We can say it has \"escaped the boundaries\" — or just \"escaped\".<br />\n   * In this case we need to decide whether the popper should either:\n   *\n   * - detach from the reference and remain \"trapped\" in the boundaries, or\n   * - if it should ignore the boundary and \"escape with its reference\"\n   *\n   * When `escapeWithReference` is set to`true` and reference is completely\n   * outside its boundaries, the popper will overflow (or completely leave)\n   * the boundaries in order to remain attached to the edge of the reference.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  preventOverflow: {\n    /** @prop {number} order=300 - Index used to define the order of execution */\n    order: 300,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: preventOverflow,\n    /**\n     * @prop {Array} [priority=['left','right','top','bottom']]\n     * Popper will try to prevent overflow following these priorities by default,\n     * then, it could overflow on the left and on top of the `boundariesElement`\n     */\n    priority: ['left', 'right', 'top', 'bottom'],\n    /**\n     * @prop {number} padding=5\n     * Amount of pixel used to define a minimum distance between the boundaries\n     * and the popper this makes sure the popper has always a little padding\n     * between the edges of its container\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='scrollParent'\n     * Boundaries used by the modifier, can be `scrollParent`, `window`,\n     * `viewport` or any DOM element.\n     */\n    boundariesElement: 'scrollParent'\n  },\n\n  /**\n   * Modifier used to make sure the reference and its popper stay near eachothers\n   * without leaving any gap between the two. Expecially useful when the arrow is\n   * enabled and you want to assure it to point to its reference element.\n   * It cares only about the first axis, you can still have poppers with margin\n   * between the popper and its reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  keepTogether: {\n    /** @prop {number} order=400 - Index used to define the order of execution */\n    order: 400,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: keepTogether\n  },\n\n  /**\n   * This modifier is used to move the `arrowElement` of the popper to make\n   * sure it is positioned between the reference element and its popper element.\n   * It will read the outer size of the `arrowElement` node to detect how many\n   * pixels of conjuction are needed.\n   *\n   * It has no effect if no `arrowElement` is provided.\n   * @memberof modifiers\n   * @inner\n   */\n  arrow: {\n    /** @prop {number} order=500 - Index used to define the order of execution */\n    order: 500,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: arrow,\n    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\n    element: '[x-arrow]'\n  },\n\n  /**\n   * Modifier used to flip the popper's placement when it starts to overlap its\n   * reference element.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   *\n   * **NOTE:** this modifier will interrupt the current update cycle and will\n   * restart it if it detects the need to flip the placement.\n   * @memberof modifiers\n   * @inner\n   */\n  flip: {\n    /** @prop {number} order=600 - Index used to define the order of execution */\n    order: 600,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: flip,\n    /**\n     * @prop {String|Array} behavior='flip'\n     * The behavior used to change the popper's placement. It can be one of\n     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\n     * placements (with optional variations).\n     */\n    behavior: 'flip',\n    /**\n     * @prop {number} padding=5\n     * The popper will flip if it hits the edges of the `boundariesElement`\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='viewport'\n     * The element which will define the boundaries of the popper position,\n     * the popper will never be placed outside of the defined boundaries\n     * (except if keepTogether is enabled)\n     */\n    boundariesElement: 'viewport'\n  },\n\n  /**\n   * Modifier used to make the popper flow toward the inner of the reference element.\n   * By default, when this modifier is disabled, the popper will be placed outside\n   * the reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  inner: {\n    /** @prop {number} order=700 - Index used to define the order of execution */\n    order: 700,\n    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\n    enabled: false,\n    /** @prop {ModifierFn} */\n    fn: inner\n  },\n\n  /**\n   * Modifier used to hide the popper when its reference element is outside of the\n   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\n   * be used to hide with a CSS selector the popper when its reference is\n   * out of boundaries.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   * @memberof modifiers\n   * @inner\n   */\n  hide: {\n    /** @prop {number} order=800 - Index used to define the order of execution */\n    order: 800,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: hide\n  },\n\n  /**\n   * Computes the style that will be applied to the popper element to gets\n   * properly positioned.\n   *\n   * Note that this modifier will not touch the DOM, it just prepares the styles\n   * so that `applyStyle` modifier can apply it. This separation is useful\n   * in case you need to replace `applyStyle` with a custom implementation.\n   *\n   * This modifier has `850` as `order` value to maintain backward compatibility\n   * with previous versions of Popper.js. Expect the modifiers ordering method\n   * to change in future major versions of the library.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  computeStyle: {\n    /** @prop {number} order=850 - Index used to define the order of execution */\n    order: 850,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: computeStyle,\n    /**\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3d transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties.\n     */\n    gpuAcceleration: true,\n    /**\n     * @prop {string} [x='bottom']\n     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\n     * Change this if your popper should grow in a direction different from `bottom`\n     */\n    x: 'bottom',\n    /**\n     * @prop {string} [x='left']\n     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\n     * Change this if your popper should grow in a direction different from `right`\n     */\n    y: 'right'\n  },\n\n  /**\n   * Applies the computed styles to the popper element.\n   *\n   * All the DOM manipulations are limited to this modifier. This is useful in case\n   * you want to integrate Popper.js inside a framework or view library and you\n   * want to delegate all the DOM manipulations to it.\n   *\n   * Note that if you disable this modifier, you must make sure the popper element\n   * has its position set to `absolute` before Popper.js can do its work!\n   *\n   * Just disable this modifier and define you own to achieve the desired effect.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  applyStyle: {\n    /** @prop {number} order=900 - Index used to define the order of execution */\n    order: 900,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: applyStyle,\n    /** @prop {Function} */\n    onLoad: applyStyleOnLoad,\n    /**\n     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3d transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties.\n     */\n    gpuAcceleration: undefined\n  }\n};\n\n/**\n * The `dataObject` is an object containing all the informations used by Popper.js\n * this object get passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\n * @name dataObject\n * @property {Object} data.instance The Popper.js instance\n * @property {String} data.placement Placement applied to popper\n * @property {String} data.originalPlacement Placement originally defined on init\n * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\n * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper.\n * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\n * @property {Object} data.styles Any CSS property defined here will be applied to the popper, it expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow, it expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.boundaries Offsets of the popper boundaries\n * @property {Object} data.offsets The measurements of popper, reference and arrow elements.\n * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\n */\n\n/**\n * Default options provided to Popper.js constructor.<br />\n * These can be overriden using the `options` argument of Popper.js.<br />\n * To override an option, simply pass as 3rd argument an object with the same\n * structure of this object, example:\n * ```\n * new Popper(ref, pop, {\n *   modifiers: {\n *     preventOverflow: { enabled: false }\n *   }\n * })\n * ```\n * @type {Object}\n * @static\n * @memberof Popper\n */\nvar Defaults = {\n  /**\n   * Popper's placement\n   * @prop {Popper.placements} placement='bottom'\n   */\n  placement: 'bottom',\n\n  /**\n   * Set this to true if you want popper to position it self in 'fixed' mode\n   * @prop {Boolean} positionFixed=false\n   */\n  positionFixed: false,\n\n  /**\n   * Whether events (resize, scroll) are initially enabled\n   * @prop {Boolean} eventsEnabled=true\n   */\n  eventsEnabled: true,\n\n  /**\n   * Set to true if you want to automatically remove the popper when\n   * you call the `destroy` method.\n   * @prop {Boolean} removeOnDestroy=false\n   */\n  removeOnDestroy: false,\n\n  /**\n   * Callback called when the popper is created.<br />\n   * By default, is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onCreate}\n   */\n  onCreate: function onCreate() {},\n\n  /**\n   * Callback called when the popper is updated, this callback is not called\n   * on the initialization/creation of the popper, but only on subsequent\n   * updates.<br />\n   * By default, is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onUpdate}\n   */\n  onUpdate: function onUpdate() {},\n\n  /**\n   * List of modifiers used to modify the offsets before they are applied to the popper.\n   * They provide most of the functionalities of Popper.js\n   * @prop {modifiers}\n   */\n  modifiers: modifiers\n};\n\n/**\n * @callback onCreate\n * @param {dataObject} data\n */\n\n/**\n * @callback onUpdate\n * @param {dataObject} data\n */\n\n// Utils\n// Methods\nvar Popper = function () {\n  /**\n   * Create a new Popper.js instance\n   * @class Popper\n   * @param {HTMLElement|referenceObject} reference - The reference element used to position the popper\n   * @param {HTMLElement} popper - The HTML element used as popper.\n   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\n   * @return {Object} instance - The generated Popper.js instance\n   */\n  function Popper(reference, popper) {\n    var _this = this;\n\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    classCallCheck(this, Popper);\n\n    this.scheduleUpdate = function () {\n      return requestAnimationFrame(_this.update);\n    };\n\n    // make update() debounced, so that it only runs at most once-per-tick\n    this.update = debounce(this.update.bind(this));\n\n    // with {} we create a new object with the options inside it\n    this.options = _extends({}, Popper.Defaults, options);\n\n    // init state\n    this.state = {\n      isDestroyed: false,\n      isCreated: false,\n      scrollParents: []\n    };\n\n    // get reference and popper elements (allow jQuery wrappers)\n    this.reference = reference && reference.jquery ? reference[0] : reference;\n    this.popper = popper && popper.jquery ? popper[0] : popper;\n\n    // Deep merge modifiers options\n    this.options.modifiers = {};\n    Object.keys(_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {\n      _this.options.modifiers[name] = _extends({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});\n    });\n\n    // Refactoring modifiers' list (Object => Array)\n    this.modifiers = Object.keys(this.options.modifiers).map(function (name) {\n      return _extends({\n        name: name\n      }, _this.options.modifiers[name]);\n    })\n    // sort the modifiers by order\n    .sort(function (a, b) {\n      return a.order - b.order;\n    });\n\n    // modifiers have the ability to execute arbitrary code when Popper.js get inited\n    // such code is executed in the same order of its modifier\n    // they could add new properties to their options configuration\n    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n    this.modifiers.forEach(function (modifierOptions) {\n      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n        modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);\n      }\n    });\n\n    // fire the first update to position the popper in the right place\n    this.update();\n\n    var eventsEnabled = this.options.eventsEnabled;\n    if (eventsEnabled) {\n      // setup event listeners, they will take care of update the position in specific situations\n      this.enableEventListeners();\n    }\n\n    this.state.eventsEnabled = eventsEnabled;\n  }\n\n  // We can't use class properties because they don't get listed in the\n  // class prototype and break stuff like Sinon stubs\n\n\n  createClass(Popper, [{\n    key: 'update',\n    value: function update$$1() {\n      return update.call(this);\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy$$1() {\n      return destroy.call(this);\n    }\n  }, {\n    key: 'enableEventListeners',\n    value: function enableEventListeners$$1() {\n      return enableEventListeners.call(this);\n    }\n  }, {\n    key: 'disableEventListeners',\n    value: function disableEventListeners$$1() {\n      return disableEventListeners.call(this);\n    }\n\n    /**\n     * Schedule an update, it will run on the next UI update available\n     * @method scheduleUpdate\n     * @memberof Popper\n     */\n\n\n    /**\n     * Collection of utilities useful when writing custom modifiers.\n     * Starting from version 1.7, this method is available only if you\n     * include `popper-utils.js` before `popper.js`.\n     *\n     * **DEPRECATION**: This way to access PopperUtils is deprecated\n     * and will be removed in v2! Use the PopperUtils module directly instead.\n     * Due to the high instability of the methods contained in Utils, we can't\n     * guarantee them to follow semver. Use them at your own risk!\n     * @static\n     * @private\n     * @type {Object}\n     * @deprecated since version 1.8\n     * @member Utils\n     * @memberof Popper\n     */\n\n  }]);\n  return Popper;\n}();\n\n/**\n * The `referenceObject` is an object that provides an interface compatible with Popper.js\n * and lets you use it as replacement of a real DOM node.<br />\n * You can use this method to position a popper relatively to a set of coordinates\n * in case you don't have a DOM node to use as reference.\n *\n * ```\n * new Popper(referenceObject, popperNode);\n * ```\n *\n * NB: This feature isn't supported in Internet Explorer 10\n * @name referenceObject\n * @property {Function} data.getBoundingClientRect\n * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\n * @property {number} data.clientWidth\n * An ES6 getter that will return the width of the virtual reference element.\n * @property {number} data.clientHeight\n * An ES6 getter that will return the height of the virtual reference element.\n */\n\n\nPopper.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\nPopper.placements = placements;\nPopper.Defaults = Defaults;\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Popper);\n//# sourceMappingURL=popper.js.map\n\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(86)))\n\n/***/ }),\n\n/***/ 226:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * The `QuickviewEvents` static class contains the string definitions of all events that strongly relate to the\n * [`Quickview`]{@link Quickview} component.\n */\nvar QuickviewEvents = /** @class */ (function () {\n    function QuickviewEvents() {\n    }\n    /**\n     * Triggered by the [`QuickviewDocument`]{@link QuickviewDocument} component when the content to display in the\n     * quickview modal window has just finished downloading.\n     *\n     * The [`Quickview`]{@link Quickview} component listens to this event to know when to remove its loading animation.\n     *\n     * All `quickviewLoaded` event handlers receive a [`QuickviewLoadedEventArgs`]{@link IQuickviewLoadedEventArgs} object\n     * as an argument.\n     *\n     * @type {string} The string value is `quickviewLoaded`.\n     */\n    QuickviewEvents.quickviewLoaded = 'quickviewLoaded';\n    /**\n     * Triggered by the [`QuickviewDocument`]{@link QuickviewDocument} component when the end user has just clicked the\n     * **Quickview** button/link to open the quickview modal window.\n     *\n     * This event allows external code to modify the terms to highlight before the content of the quickview modal window\n     * is rendered.\n     *\n     * All `openQuickview` event handlers receive an\n     * [`OpenQuickviewEventArgs`]{@link ResultListEvents.IOpenQuickviewEventArgs} object as an argument.\n     *\n     * @type {string} The string value is `openQuickview`.\n     */\n    QuickviewEvents.openQuickview = 'openQuickview';\n    return QuickviewEvents;\n}());\nexports.QuickviewEvents = QuickviewEvents;\n\n\n/***/ }),\n\n/***/ 232:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar QuickviewEvents_1 = __webpack_require__(226);\nvar Assert_1 = __webpack_require__(5);\nvar Dom_1 = __webpack_require__(1);\nvar Utils_1 = __webpack_require__(4);\nvar Component_1 = __webpack_require__(7);\nvar ComponentOptions_1 = __webpack_require__(8);\nvar Initialization_1 = __webpack_require__(2);\nvar QuickviewDocumentIframe_1 = __webpack_require__(643);\nvar QuickviewDocumentHeader_1 = __webpack_require__(644);\nvar QuickviewDocumentWords_1 = __webpack_require__(645);\nvar underscore_1 = __webpack_require__(0);\nvar QuickviewDocumentWordButton_1 = __webpack_require__(648);\nvar QuickviewDocumentPreviewBar_1 = __webpack_require__(649);\nexports.HIGHLIGHT_PREFIX = 'CoveoHighlight';\n/**\n * The `QuickviewDocument` component normally exists within a [`Quickview`]{@link Quickview} component. The sole purpose\n * of this component is to add an `<iframe>` which loads the correct HTML version of the current item.\n *\n * The default [`contentTemplate`]{@link Quickview.options.contentTemplate} of the\n * `Quickview` component includes the `QuickviewDocument` component.\n *\n * This component is a result template component (see [Result Templates](https://docs.coveo.com/en/413/)).\n */\nvar QuickviewDocument = /** @class */ (function (_super) {\n    __extends(QuickviewDocument, _super);\n    /**\n     * Creates a new `QuickviewDocument` component.\n     * @param element The HTMLElement on which to instantiate the component.\n     * @param options The options for the `QuickviewDocument` component.\n     * @param bindings The bindings that the component requires to function normally. If not set, these will be\n     * automatically resolved (with a slower execution time).\n     * @param result The current result.\n     */\n    function QuickviewDocument(element, options, bindings, result) {\n        var _this = _super.call(this, element, QuickviewDocument.ID, bindings) || this;\n        _this.element = element;\n        _this.options = options;\n        _this.result = result;\n        _this.options = ComponentOptions_1.ComponentOptions.initComponentOptions(element, QuickviewDocument, options);\n        _this.result = result || _this.resolveResult();\n        Assert_1.Assert.exists(_this.result);\n        return _this;\n    }\n    QuickviewDocument.prototype.createDom = function () {\n        var container = Dom_1.$$('div', {\n            className: 'coveo-quickview-document'\n        });\n        this.element.appendChild(container.el);\n        this.header = new QuickviewDocumentHeader_1.QuickviewDocumentHeader();\n        this.iframe = new QuickviewDocumentIframe_1.QuickviewDocumentIframe();\n        container.append(this.header.el);\n        container.append(this.iframe.el);\n    };\n    QuickviewDocument.prototype.open = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var beforeLoad, termsToHighlight, termsWereModified, documentHTML, documentWords, previewBar_1, afterLoad, error_1, afterLoad;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.ensureDom();\n                        beforeLoad = new Date().getTime();\n                        termsToHighlight = this.initialTermsToHighlight;\n                        this.triggerOpenQuickViewEvent({ termsToHighlight: termsToHighlight });\n                        termsWereModified = this.wereTermsToHighlightModified(termsToHighlight);\n                        if (termsWereModified) {\n                            this.handleTermsToHighlight(termsToHighlight, this.query);\n                        }\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 4, , 6]);\n                        return [4 /*yield*/, this.queryController.getEndpoint().getDocumentHtml(this.result.uniqueId, {\n                                queryObject: this.query,\n                                requestedOutputSize: this.options.maximumDocumentSize\n                            })];\n                    case 2:\n                        documentHTML = _a.sent();\n                        return [4 /*yield*/, this.iframe.render(documentHTML, this.result.title)];\n                    case 3:\n                        _a.sent();\n                        documentWords = new QuickviewDocumentWords_1.QuickviewDocumentWords(this.iframe, this.result);\n                        previewBar_1 = new QuickviewDocumentPreviewBar_1.QuickviewDocumentPreviewBar(this.iframe, documentWords);\n                        underscore_1.each(documentWords.words, function (word) {\n                            var button = new QuickviewDocumentWordButton_1.QuickviewDocumentWordButton(word, previewBar_1, _this.iframe);\n                            _this.header.addWord(button);\n                        });\n                        afterLoad = new Date().getTime();\n                        this.triggerQuickviewLoaded(afterLoad - beforeLoad);\n                        return [3 /*break*/, 6];\n                    case 4:\n                        error_1 = _a.sent();\n                        return [4 /*yield*/, this.iframe.renderError(error_1)];\n                    case 5:\n                        _a.sent();\n                        afterLoad = new Date().getTime();\n                        this.triggerQuickviewLoaded(afterLoad - beforeLoad);\n                        return [3 /*break*/, 6];\n                    case 6: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Object.defineProperty(QuickviewDocument.prototype, \"initialTermsToHighlight\", {\n        get: function () {\n            return underscore_1.keys(this.result.termsToHighlight);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    QuickviewDocument.prototype.triggerOpenQuickViewEvent = function (args) {\n        Dom_1.$$(this.root).trigger(QuickviewEvents_1.QuickviewEvents.openQuickview, args);\n    };\n    Object.defineProperty(QuickviewDocument.prototype, \"query\", {\n        get: function () {\n            return __assign({}, this.queryController.getLastQuery());\n        },\n        enumerable: true,\n        configurable: true\n    });\n    QuickviewDocument.prototype.triggerQuickviewLoaded = function (duration) {\n        Dom_1.$$(this.element).trigger(QuickviewEvents_1.QuickviewEvents.quickviewLoaded, {\n            duration: duration\n        });\n    };\n    QuickviewDocument.prototype.handleTermsToHighlight = function (termsToHighlight, queryObject) {\n        var _this = this;\n        for (var term in this.result.termsToHighlight) {\n            delete this.result.termsToHighlight[term];\n        }\n        var query = '';\n        underscore_1.each(termsToHighlight, function (term) {\n            query += term + ' ';\n            _this.result.termsToHighlight[term] = [term];\n        });\n        query = query.substring(0, query.length - 1);\n        queryObject.q = query;\n    };\n    QuickviewDocument.prototype.wereTermsToHighlightModified = function (termsToHighlight) {\n        return !Utils_1.Utils.arrayEqual(termsToHighlight, this.initialTermsToHighlight);\n    };\n    QuickviewDocument.ID = 'QuickviewDocument';\n    /**\n     * The options for the component\n     * @componentOptions\n     */\n    QuickviewDocument.options = {\n        /**\n         * Specifies the maximum preview size that the index should return.\n         *\n         * Default value is `0`, and the index returns the entire preview. Minimum value is `0`.\n         */\n        maximumDocumentSize: ComponentOptions_1.ComponentOptions.buildNumberOption({ defaultValue: 0, min: 0 })\n    };\n    return QuickviewDocument;\n}(Component_1.Component));\nexports.QuickviewDocument = QuickviewDocument;\nInitialization_1.Initialization.registerAutoCreateComponent(QuickviewDocument);\n\n\n/***/ }),\n\n/***/ 267:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar popper_js_1 = __webpack_require__(173);\n__webpack_require__(641);\nvar QuickviewEvents_1 = __webpack_require__(226);\nvar ResultListEvents_1 = __webpack_require__(30);\nvar ExternalModulesShim_1 = __webpack_require__(25);\nvar GlobalExports_1 = __webpack_require__(3);\nvar QueryStateModel_1 = __webpack_require__(13);\nvar Strings_1 = __webpack_require__(6);\nvar AccessibleButton_1 = __webpack_require__(16);\nvar Dom_1 = __webpack_require__(1);\nvar DomUtils_1 = __webpack_require__(94);\nvar StringUtils_1 = __webpack_require__(22);\nvar SVGDom_1 = __webpack_require__(15);\nvar SVGIcons_1 = __webpack_require__(12);\nvar Utils_1 = __webpack_require__(4);\nvar AnalyticsActionListMeta_1 = __webpack_require__(10);\nvar Component_1 = __webpack_require__(7);\nvar ComponentOptions_1 = __webpack_require__(8);\nvar IComponentOptions_1 = __webpack_require__(50);\nvar Initialization_1 = __webpack_require__(2);\nvar TemplateComponentOptions_1 = __webpack_require__(62);\nvar DefaultQuickviewTemplate_1 = __webpack_require__(642);\nvar QuickviewDocument_1 = __webpack_require__(232);\nvar AccessibleModal_1 = __webpack_require__(124);\n/**\n * The `Quickview` component renders a button/link which the end user can click to open a modal box containing certain\n * information about a result. Most of the time, this component references a\n * [`QuickviewDocument`]{@link QuickviewDocument} in its [`contentTemplate`]{@link Quickview.options.contentTemplate}.\n *\n * **Notes:**\n * > - `Quickview` is not meant to replace a [ResultLink]{@link ResultLink} to access an item; it has certain limitations (e.g., custom styles and embedded\n * images/links may not work as expected in a `Quickview`).\n * > - You can change the appearance of the `Quickview` link/button by adding elements in the inner HTML of its `div`.\n * > - You can change the content of the `Quickview` modal box link by specifying a template `id` or CSS selector (see\n * > the [`contentTemplate`]{@link Quickview.options.contentTemplate} option).\n * > - When using Coveo for Salesforce 3.16, in an environment compliant with LockerService, ensure you use `CoveoSalesforceQuickview` (see [Changing the Default Quick View in Coveo for Salesforce](https://docs.coveo.com/en/1234/)).\n *\n * **Example:**\n * ```html\n * [ ... ]\n *\n * <script class='result-template' type='text/underscore' id='myContentTemplateId'>\n *   <div>\n *     <span>This content will be displayed when then end user opens the quickview modal box. It could also include other Coveo component, and use core helpers.</span>\n *     <table class=\"CoveoFieldTable\">\n *       <tr data-field=\"@liboardshorttitle\" data-caption=\"Board\" />\n *       <tr data-field=\"@licategoryshorttitle\" data-caption=\"Category\" />\n *       <tr data-field=\"@sysauthor\" data-caption=\"Author\" />\n *     </table>\n *   </div>\n * </script>\n *\n * [ ... ]\n *\n * <div class='CoveoResultList'>\n *   <script class='result-template' type='text/underscore' id='myResultTemplateId'>\n *\n *   [ ... ]\n *\n *     <!-- The `myContentTemplateId` template applies when displaying content in the quickview modal box. -->\n *       <div class='CoveoQuickview' data-template-id='myContentTemplateId'>\n *         <!-- This changes the appearance of the Quickview button itself in the results -->\n *         <span>Click here for a quickview</span>\n *       </div>\n *   </script>\n *\n *   [ ... ]\n *\n * <!-- Note that simply including `<div class='CoveoQuickview'></div>` in the markup will be enough most of the time, since the component includes a default template and a default button appearance. -->\n * ```\n *\n * This component is a result template component (see [Result Templates](https://docs.coveo.com/en/413/)).\n */\nvar Quickview = /** @class */ (function (_super) {\n    __extends(Quickview, _super);\n    /**\n     * Creates a new `Quickview` component.\n     * @param element The HTMLElement on which to instantiate the component.\n     * @param options The options for the `Quickview` component.\n     * @param bindings The bindings that the component requires to function normally. If not set, these will be\n     * automatically resolved (with a slower execution time).\n     * @param result The result to associate the component with.\n     * @param ModalBox The quickview modal box.\n     */\n    function Quickview(element, options, bindings, result, ModalBox) {\n        if (ModalBox === void 0) { ModalBox = ExternalModulesShim_1.ModalBox; }\n        var _this = _super.call(this, element, Quickview.ID, bindings) || this;\n        _this.element = element;\n        _this.options = options;\n        _this.bindings = bindings;\n        _this.result = result;\n        _this.options = ComponentOptions_1.ComponentOptions.initComponentOptions(element, Quickview, options);\n        if (_this.options.contentTemplate == null) {\n            _this.options.contentTemplate = new DefaultQuickviewTemplate_1.DefaultQuickviewTemplate();\n        }\n        // If there is no content inside the Quickview div,\n        // we need to add something that will show up in the result template itself\n        if (/^\\s*$/.test(_this.element.innerHTML)) {\n            _this.buildContent();\n        }\n        _this.bindClick(result);\n        if (_this.bindings.resultElement) {\n            _this.bind.on(_this.bindings.resultElement, ResultListEvents_1.ResultListEvents.openQuickview, function (event) {\n                event && event.stopPropagation();\n                _this.open();\n            });\n        }\n        _this.modalbox = new AccessibleModal_1.AccessibleModal('coveo-quick-view', _this.searchInterface.options.modalContainer, ModalBox);\n        return _this;\n    }\n    Quickview.prototype.buildContent = function () {\n        var icon = this.buildIcon();\n        var caption = this.buildCaption();\n        var content = Dom_1.$$('div');\n        content.append(icon);\n        content.append(caption);\n        Dom_1.$$(this.element).append(content.el);\n        this.buildTooltipIfNotInCardLayout(icon, caption);\n    };\n    Quickview.prototype.buildIcon = function () {\n        var icon = Dom_1.$$('div', { className: 'coveo-icon-for-quickview' }, SVGIcons_1.SVGIcons.icons.quickview).el;\n        SVGDom_1.SVGDom.addClassToSVGInContainer(icon, 'coveo-icon-for-quickview-svg');\n        return icon;\n    };\n    Quickview.prototype.buildCaption = function () {\n        return Dom_1.$$('div', { className: 'coveo-caption-for-icon' }, 'Quickview'.toLocaleString()).el;\n    };\n    Quickview.prototype.buildTooltipIfNotInCardLayout = function (icon, caption) {\n        if (this.resultsAreInCardLayout) {\n            return;\n        }\n        var arrow = Dom_1.$$('div').el;\n        caption.appendChild(arrow);\n        this.buildPopper(icon, caption, arrow);\n    };\n    Object.defineProperty(Quickview.prototype, \"resultsAreInCardLayout\", {\n        get: function () {\n            return this.queryStateModel.get(QueryStateModel_1.QueryStateModel.attributesEnum.layout) === 'card';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Quickview.prototype.buildPopper = function (icon, caption, arrow) {\n        var popperReference = new popper_js_1.default(icon, caption, {\n            placement: this.options.tooltipPlacement,\n            modifiers: {\n                preventOverflow: {\n                    boundariesElement: Dom_1.$$(this.root).el,\n                    padding: 0\n                },\n                arrow: {\n                    element: arrow\n                },\n                // X,Y offset of the tooltip relative to the icon\n                offset: {\n                    offset: '0,8'\n                }\n            },\n            eventsEnabled: false\n        });\n        Dom_1.$$(this.element).on('mouseover', function () {\n            popperReference.update();\n        });\n    };\n    /**\n     * Opens the `Quickview` modal box.\n     */\n    Quickview.prototype.open = function () {\n        var _this = this;\n        if (!this.modalbox.isOpen) {\n            // To prevent the keyboard from opening on mobile if the search bar has focus\n            Quickview.resultCurrentlyBeingRendered = this.result;\n            // activeElement does not exist in LockerService\n            if (document.activeElement && document.activeElement instanceof HTMLElement) {\n                Dom_1.$$(document.activeElement).trigger('blur');\n            }\n            var openerObject_1 = this.prepareOpenQuickviewObject();\n            return this.createModalBox(openerObject_1).then(function () {\n                _this.bindQuickviewEvents(openerObject_1);\n                _this.animateAndOpen();\n                _this.logUsageAnalyticsEvent();\n                _this.queryStateModel.set(QueryStateModel_1.QueryStateModel.attributesEnum.quickview, _this.getHashId());\n                Quickview.resultCurrentlyBeingRendered = null;\n            });\n        }\n    };\n    /**\n     * Closes the `Quickview` modal box.\n     */\n    Quickview.prototype.close = function () {\n        if (this.modalbox.isOpen) {\n            this.modalbox.close();\n        }\n    };\n    Quickview.prototype.getHashId = function () {\n        return this.result.queryUid + '.' + this.result.index + '.' + StringUtils_1.StringUtils.hashCode(this.result.uniqueId);\n    };\n    Quickview.prototype.logUsageAnalyticsEvent = function () {\n        this.usageAnalytics.logClickEvent(AnalyticsActionListMeta_1.analyticsActionCauseList.documentQuickview, {\n            author: Utils_1.Utils.getFieldValue(this.result, 'author'),\n            documentURL: this.result.clickUri,\n            documentTitle: this.result.title\n        }, this.result, this.element);\n    };\n    Quickview.prototype.bindClick = function (result) {\n        var _this = this;\n        if (typeof result.hasHtmlVersion == 'undefined' || result.hasHtmlVersion || this.options.alwaysShow) {\n            var clickAction = function () { return _this.open(); };\n            new AccessibleButton_1.AccessibleButton().withElement(this.element).withSelectAction(clickAction).withLabel(Strings_1.l('Quickview')).withOwner(this.bind).build();\n        }\n        else {\n            this.element.style.display = 'none';\n        }\n    };\n    Quickview.prototype.bindQuickviewEvents = function (openerObject) {\n        var _this = this;\n        Dom_1.$$(this.modalbox.content).on(QuickviewEvents_1.QuickviewEvents.quickviewLoaded, function () { return __awaiter(_this, void 0, void 0, function () {\n            var anim;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, openerObject.loadingAnimation];\n                    case 1:\n                        anim = _a.sent();\n                        Dom_1.$$(anim).remove();\n                        return [2 /*return*/];\n                }\n            });\n        }); });\n    };\n    Quickview.prototype.animateAndOpen = function () {\n        var quickviewDocument = Dom_1.$$(this.modalbox.element).find('.' + Component_1.Component.computeCssClassName(QuickviewDocument_1.QuickviewDocument));\n        if (quickviewDocument) {\n            Initialization_1.Initialization.dispatchNamedMethodCallOrComponentCreation('open', quickviewDocument, null);\n        }\n    };\n    Quickview.prototype.createModalBox = function (openerObject) {\n        var _this = this;\n        var computedModalBoxContent = Dom_1.$$('div');\n        computedModalBoxContent.addClass('coveo-computed-modal-box-content');\n        return openerObject.content.then(function (builtContent) {\n            computedModalBoxContent.append(builtContent.el);\n            _this.modalbox.openResult({\n                result: _this.result,\n                options: {\n                    showDate: _this.options.showDate,\n                    title: _this.options.title\n                },\n                bindings: _this.bindings,\n                content: computedModalBoxContent.el,\n                validation: function () {\n                    _this.closeQuickview();\n                    return true;\n                },\n                origin: _this.element\n            });\n            return computedModalBoxContent;\n        });\n    };\n    Quickview.prototype.prepareOpenQuickviewObject = function () {\n        var loadingAnimation = this.options.loadingAnimation;\n        return {\n            loadingAnimation: loadingAnimation,\n            content: this.prepareQuickviewContent(loadingAnimation)\n        };\n    };\n    Quickview.prototype.prepareQuickviewContent = function (loadingAnimation) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var domContent, initOptions, initParameters, containsQuickviewDocumentAndCustomAnimation;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.instantiateTemplateToDom()];\n                    case 1:\n                        domContent = _a.sent();\n                        initOptions = this.searchInterface.options;\n                        initParameters = {\n                            options: initOptions,\n                            bindings: this.getBindings(),\n                            result: this.result\n                        };\n                        return [4 /*yield*/, Initialization_1.Initialization.automaticallyCreateComponentsInside(domContent.el, initParameters).initResult];\n                    case 2:\n                        _a.sent();\n                        containsQuickviewDocumentAndCustomAnimation = function () {\n                            return domContent.find(\".\" + Component_1.Component.computeCssClassName(QuickviewDocument_1.QuickviewDocument)) != undefined && _this.options.enableLoadingAnimation;\n                        };\n                        if (containsQuickviewDocumentAndCustomAnimation()) {\n                            if (loadingAnimation instanceof HTMLElement) {\n                                domContent.prepend(loadingAnimation);\n                            }\n                            else if (loadingAnimation instanceof Promise) {\n                                loadingAnimation.then(function (anim) {\n                                    domContent.prepend(anim);\n                                });\n                            }\n                        }\n                        return [2 /*return*/, domContent];\n                }\n            });\n        });\n    };\n    Quickview.prototype.instantiateTemplateToDom = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var templateInstantiated, e_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, 3, 6]);\n                        return [4 /*yield*/, this.options.contentTemplate.instantiateToElement(this.result)];\n                    case 1:\n                        templateInstantiated = _a.sent();\n                        return [3 /*break*/, 6];\n                    case 2:\n                        e_1 = _a.sent();\n                        this.logger.warn(e_1);\n                        return [3 /*break*/, 6];\n                    case 3:\n                        if (!!templateInstantiated) return [3 /*break*/, 5];\n                        this.logger.warn('An unexpected error happened while trying to render a custom template quickview, fallbacking on default quickview template...', this.options.contentTemplate);\n                        return [4 /*yield*/, new DefaultQuickviewTemplate_1.DefaultQuickviewTemplate().instantiateToElement(this.result)];\n                    case 4:\n                        templateInstantiated = _a.sent();\n                        _a.label = 5;\n                    case 5: return [7 /*endfinally*/];\n                    case 6: return [2 /*return*/, Dom_1.$$(templateInstantiated)];\n                }\n            });\n        });\n    };\n    Quickview.prototype.closeQuickview = function () {\n        this.queryStateModel.set(QueryStateModel_1.QueryStateModel.attributesEnum.quickview, '');\n    };\n    Quickview.ID = 'Quickview';\n    Quickview.doExport = function () {\n        GlobalExports_1.exportGlobally({\n            Quickview: Quickview,\n            QuickviewDocument: QuickviewDocument_1.QuickviewDocument\n        });\n    };\n    /**\n     * @componentOptions\n     */\n    Quickview.options = {\n        /**\n         * Specifies whether to always show the `Quickview` button/link, even when the index body of an item is empty.\n         *\n         * In such cases, the [`contentTemplate`]{@link Quickview.options.contentTemplate} defines what appears in the\n         * `Quickview` modal box. Consequently, if there is no quickview for the item, you *MUST* specify a custom\n         * `contentTemplate`, otherwise the component will throw an error when opened.\n         *\n         * Default value is `false`.\n         *\n         * @availablesince [September 2015 Release (v1.0.59)](https://docs.coveo.com/en/289/#september-2015-release-v1059)\n         */\n        alwaysShow: ComponentOptions_1.ComponentOptions.buildBooleanOption({ defaultValue: false }),\n        /**\n         * Specifies the title that should appear in the `Quickview` modal box header.\n         *\n         * Default value is undefined, which is equivalent to the empty string.\n         */\n        title: ComponentOptions_1.ComponentOptions.buildStringOption(),\n        /**\n         * Specifies whether to display the item date in the `Quickview` modal box header.\n         *\n         * Default value is `true`.\n         */\n        showDate: ComponentOptions_1.ComponentOptions.buildBooleanOption({ defaultValue: true }),\n        /**\n         * Specifies whether to enable the loading animation.\n         *\n         * See also [`loadingAnimation`]{Quickview.options.loadingAnimation}.\n         *\n         * Default value is `true`.\n         */\n        enableLoadingAnimation: ComponentOptions_1.ComponentOptions.buildBooleanOption({ defaultValue: true }),\n        /**\n         * Specifies a custom template to use when displaying content in the `Quickview` modal box.\n         *\n         * **Note:**\n         * > You can use [`CoreHelpers`]{@link ICoreHelpers} methods in your content template.\n         *\n         * You can specify a previously registered template to use either by referring to its HTML `id` attribute or to a\n         * CSS selector (see [`TemplateCache`]{@link TemplateCache}).\n         *\n         * **Example:**\n         *\n         * * Specifying a previously registered template by referring to its HTML `id` attribute:\n         *\n         * ```html\n         * <div class=\"CoveoQuickview\" data-template-id=\"myContentTemplateId\"></div>\n         * ```\n         *\n         * * Specifying a previously registered template by referring to a CSS selector:\n         *\n         * ```html\n         * <div class='CoveoQuickview' data-template-selector=\".myContentTemplateSelector\"></div>\n         * ```\n         *\n         * If you do not specify a custom content template, the component uses its default template.\n         */\n        contentTemplate: TemplateComponentOptions_1.TemplateComponentOptions.buildTemplateOption({\n            selectorAttr: 'data-template-selector',\n            idAttr: 'data-template-id'\n        }),\n        /**\n         * If [`enableLoadingAnimation`]{@link Quickview.options.enableLoadingAnimation} is `true`, specifies a custom\n         * animation to display while the content of the quickview modal window is loading. You can either specify the CSS\n         * selector of the HTML element you wish to display, or the `id` of a previously registered template (see\n         * [`TemplateCache`]{@link TemplateCache}).\n         *\n         * See [Customizing the Quickview Loading Animation](https://docs.coveo.com/en/296/#customizing-the-quickview-loading-animation).\n         *\n         * **Examples:**\n         *\n         * * Specifying the CSS selector of the HTML element to display:\n         *\n         * ```html\n         * <div class=\"CoveoQuickview\" data-loading-animation-selector=\".my-loading-animation\"></div>\n         * ```\n         *\n         * * Specifying the `id` of a previously registered template:\n         *\n         * ```html\n         * <div class=\"CoveoQuickview\" data-loading-animation-template-id=\"my-loading-animation-template\"></div>\n         * ```\n         *\n         * By default, the loading animation is a Coveo animation, which you can customize with CSS (see\n         * [Customizing the Default Loading Animation](https://docs.coveo.com/en/296/#customizing-the-default-search-page-animation).\n         */\n        loadingAnimation: ComponentOptions_1.ComponentOptions.buildOption(IComponentOptions_1.ComponentOptionsType.NONE, function (element) {\n            var loadingAnimationSelector = element.getAttribute('data-loading-animation-selector');\n            if (loadingAnimationSelector != null) {\n                var loadingAnimation = Dom_1.$$(document.documentElement).find(loadingAnimationSelector);\n                if (loadingAnimation != null) {\n                    Dom_1.$$(loadingAnimation).detach();\n                    return loadingAnimation;\n                }\n            }\n            var id = element.getAttribute('data-loading-animation-template-id');\n            if (id != null) {\n                var loadingAnimationTemplate = TemplateComponentOptions_1.TemplateComponentOptions.loadResultTemplateFromId(id);\n                if (loadingAnimationTemplate) {\n                    return loadingAnimationTemplate.instantiateToElement(undefined, {\n                        checkCondition: false\n                    });\n                }\n            }\n            return DomUtils_1.DomUtils.getBasicLoadingAnimation();\n        }),\n        /**\n         * Specifies the emplacement of the tooltip in relation to the `Quickview` HTML element.\n         *\n         * **Example:**\n         * > Setting this option to `top-start` will make the tooltip appear on top of the `Quickview` button, aligned to the left.\n         *\n         * @availablesince [January 2019 Release (v2.5395.12)](https://docs.coveo.com/en/2938/)\n         */\n        tooltipPlacement: ComponentOptions_1.ComponentOptions.buildCustomOption(function (value) { return value; }, {\n            defaultValue: 'bottom'\n        })\n    };\n    Quickview.resultCurrentlyBeingRendered = null;\n    return Quickview;\n}(Component_1.Component));\nexports.Quickview = Quickview;\nInitialization_1.Initialization.registerAutoCreateComponent(Quickview);\n\n\n/***/ }),\n\n/***/ 641:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 642:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Template_1 = __webpack_require__(27);\nvar DefaultQuickviewTemplate = /** @class */ (function (_super) {\n    __extends(DefaultQuickviewTemplate, _super);\n    function DefaultQuickviewTemplate() {\n        return _super.call(this) || this;\n    }\n    DefaultQuickviewTemplate.prototype.instantiateToString = function (queryResult) {\n        return '<div class=\"coveo-quick-view-full-height\"><div class=\"CoveoQuickviewDocument\"></div></div>';\n    };\n    return DefaultQuickviewTemplate;\n}(Template_1.Template));\nexports.DefaultQuickviewTemplate = DefaultQuickviewTemplate;\n\n\n/***/ }),\n\n/***/ 643:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar underscore_1 = __webpack_require__(0);\nvar Core_1 = __webpack_require__(19);\nvar Dom_1 = __webpack_require__(1);\nvar QuickviewDocumentIframe = /** @class */ (function () {\n    function QuickviewDocumentIframe() {\n        this.el = this.buildIFrame().el;\n    }\n    Object.defineProperty(QuickviewDocumentIframe.prototype, \"iframeHTMLElement\", {\n        get: function () {\n            return this.iframeElement;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QuickviewDocumentIframe.prototype, \"document\", {\n        get: function () {\n            return this.iframeElement.contentWindow.document;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QuickviewDocumentIframe.prototype, \"body\", {\n        get: function () {\n            return this.document.body;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QuickviewDocumentIframe.prototype, \"window\", {\n        get: function () {\n            return this.iframeElement.contentWindow;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    QuickviewDocumentIframe.prototype.isNewQuickviewDocument = function () {\n        var meta = Dom_1.$$(this.document.head).find(\"meta[name='generator']\");\n        return meta && meta.getAttribute('content') == 'pdf2htmlEX';\n    };\n    QuickviewDocumentIframe.prototype.render = function (htmlDocument, title) {\n        var _this = this;\n        if (this.quickviewIsClosedByEndUser()) {\n            return Promise.reject(null);\n        }\n        return new Promise(function (resolve, reject) {\n            // Take care to bind the onload function before actually writing to the iframe :\n            // Safari, IE, Edge need this, otherwise the onload function is never called\n            _this.iframeElement.onload = function () {\n                resolve(_this.iframeElement);\n            };\n            _this.addClientSideTweaksToIFrameStyling(htmlDocument);\n            _this.writeToIFrame(htmlDocument);\n            _this.iframeElement.title = title;\n        });\n    };\n    QuickviewDocumentIframe.prototype.renderError = function (error) {\n        var _this = this;\n        if (this.quickviewIsClosedByEndUser()) {\n            return Promise.reject(null);\n        }\n        return new Promise(function (resolve, reject) {\n            var errorMessage = '';\n            switch (error.status) {\n                case 400:\n                    errorMessage = Core_1.l('NoQuickview');\n                    break;\n                default:\n                    errorMessage = Core_1.l('OoopsError');\n                    break;\n            }\n            var errorDocument = document.implementation.createHTMLDocument();\n            errorDocument.body.style.fontFamily = \"Arimo, 'Helvetica Neue', Helvetica, Arial, sans-serif\";\n            Dom_1.$$(errorDocument.body).text(errorMessage);\n            _this.writeToIFrame(errorDocument);\n            resolve(_this.iframeElement);\n        });\n    };\n    QuickviewDocumentIframe.prototype.quickviewIsClosedByEndUser = function () {\n        return this.iframeElement.contentDocument == null;\n    };\n    QuickviewDocumentIframe.prototype.buildIFrame = function () {\n        var iframe = Dom_1.$$('iframe', {\n            sandbox: 'allow-popups allow-same-origin allow-top-navigation',\n            src: 'about:blank'\n        });\n        this.iframeElement = iframe.el;\n        var iframewrapper = Dom_1.$$('div', {\n            className: 'coveo-iframeWrapper'\n        });\n        iframewrapper.append(iframe.el);\n        return iframewrapper;\n    };\n    QuickviewDocumentIframe.prototype.writeToIFrame = function (htmlDocument) {\n        this.allowDocumentLinkToEscapeSandbox(htmlDocument);\n        this.document.open();\n        this.document.write(htmlDocument.getElementsByTagName('html')[0].outerHTML);\n        this.document.close();\n    };\n    QuickviewDocumentIframe.prototype.allowDocumentLinkToEscapeSandbox = function (htmlDocument) {\n        // On the iframe, we set the sandbox attribute to \"allow top navigation\".\n        // For this to work, we need to force all link to target _top.\n        // This is especially useful for quickview on web pages.\n        underscore_1.each(Dom_1.$$(htmlDocument.body).findAll('a'), function (link) {\n            link.setAttribute('target', '_top');\n        });\n    };\n    QuickviewDocumentIframe.prototype.addClientSideTweaksToIFrameStyling = function (htmlDocument) {\n        var style = Dom_1.$$('style', { type: 'text/css' }).el;\n        // Safari on iOS forces resize iframes to fit their content, even if an explicit size\n        // is set on the iframe. Isn't that great? By chance there is a trick around it: by\n        // setting a very small size on the body and instead using min-* to set the size to\n        // 100% we're able to trick Safari from thinking it must expand the iframe. Amazed.\n        // The 'scrolling' part is required otherwise the hack doesn't work.\n        //\n        // https://stackoverflow.com/questions/23083462/how-to-get-an-iframe-to-be-responsive-in-ios-safari\n        var cssHackForIOS = \"\\n      body, html {\\n        height: 1px !important;\\n        min-height: 100%;\\n        width: 1px !important;\\n        min-width: 100%;\\n        overflow: scroll;\\n        margin: auto\\n      }\\n      \";\n        var cssText = \"\\n      html pre {\\n        white-space: pre-wrap;\\n        word-wrap: break-word;\\n      }\\n      body, html {\\n        font-family: Arimo, 'Helvetica Neue', Helvetica, Arial, sans-serif; -webkit-text-size-adjust: none;\\n      }\\n      \" + (Core_1.DeviceUtils.isIos() ? cssHackForIOS : '') + \"\\n      \";\n        if (Core_1.DeviceUtils.isIos()) {\n            Dom_1.$$(this.iframeElement).setAttribute('scrolling', 'no');\n            this.iframeElement.parentElement.style.margin = '0 0 5px 5px';\n        }\n        style.appendChild(document.createTextNode(cssText));\n        htmlDocument.head.appendChild(style);\n    };\n    return QuickviewDocumentIframe;\n}());\nexports.QuickviewDocumentIframe = QuickviewDocumentIframe;\n\n\n/***/ }),\n\n/***/ 644:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Dom_1 = __webpack_require__(1);\nvar QuickviewDocumentHeader = /** @class */ (function () {\n    function QuickviewDocumentHeader() {\n        this.el = this.buildHeader().el;\n    }\n    QuickviewDocumentHeader.prototype.addWord = function (wordButton) {\n        this.el.appendChild(wordButton.el);\n    };\n    QuickviewDocumentHeader.prototype.buildHeader = function () {\n        var header = Dom_1.$$('div', {\n            className: 'coveo-quickview-header'\n        });\n        return header;\n    };\n    return QuickviewDocumentHeader;\n}());\nexports.QuickviewDocumentHeader = QuickviewDocumentHeader;\n\n\n/***/ }),\n\n/***/ 645:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Dom_1 = __webpack_require__(1);\nvar underscore_1 = __webpack_require__(0);\nvar QuickviewDocumentWord_1 = __webpack_require__(646);\nvar QuickviewDocument_1 = __webpack_require__(232);\nvar QuickviewDocumentWords = /** @class */ (function () {\n    function QuickviewDocumentWords(iframe, result) {\n        this.iframe = iframe;\n        this.result = result;\n        this.words = {};\n        this.scanDocument();\n    }\n    QuickviewDocumentWords.prototype.scanDocument = function () {\n        var _this = this;\n        underscore_1.each(Dom_1.$$(this.iframe.body).findAll(\"[id^=\\\"\" + QuickviewDocument_1.HIGHLIGHT_PREFIX + \"\\\"]\"), function (element, index) {\n            var quickviewWord = new QuickviewDocumentWord_1.QuickviewDocumentWord(_this.result);\n            quickviewWord.doCompleteInitialScanForKeywordInDocument(element);\n            if (!quickviewWord.text) {\n                return;\n            }\n            var alreadyScannedKeyword = _this.words[quickviewWord.indexIdentifier];\n            if (!alreadyScannedKeyword) {\n                _this.words[quickviewWord.indexIdentifier] = quickviewWord;\n            }\n            else {\n                alreadyScannedKeyword.addElement(element);\n                // Special code needed to workaround invalid HTML returned by the index with embedded keyword\n                if (alreadyScannedKeyword.occurrence == quickviewWord.occurrence) {\n                    alreadyScannedKeyword.text += quickviewWord.text;\n                }\n            }\n        });\n    };\n    return QuickviewDocumentWords;\n}());\nexports.QuickviewDocumentWords = QuickviewDocumentWords;\n\n\n/***/ }),\n\n/***/ 646:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar underscore_1 = __webpack_require__(0);\nvar Core_1 = __webpack_require__(19);\nvar Logger_1 = __webpack_require__(9);\nvar Dom_1 = __webpack_require__(1);\nvar QuickviewDocument_1 = __webpack_require__(232);\nvar QuickviewDocumentWordColor_1 = __webpack_require__(647);\nvar QuickviewDocumentWord = /** @class */ (function () {\n    function QuickviewDocumentWord(result) {\n        this.result = result;\n        this.count = 0;\n        this.elements = [];\n        this.currentNavigationPosition = -1;\n        this.logger = new Logger_1.Logger(this);\n    }\n    QuickviewDocumentWord.prototype.addElement = function (element) {\n        this.count++;\n        this.elements.push(element);\n    };\n    QuickviewDocumentWord.prototype.navigateForward = function () {\n        this.currentNavigationPosition++;\n        if (this.currentNavigationPosition >= this.elements.length) {\n            this.currentNavigationPosition = 0;\n        }\n        this.highlightNavigation();\n        this.putElementIntoView();\n        return this.elements[this.currentNavigationPosition];\n    };\n    QuickviewDocumentWord.prototype.navigateBackward = function () {\n        this.currentNavigationPosition--;\n        if (this.currentNavigationPosition < 0) {\n            this.currentNavigationPosition = this.elements.length - 1;\n        }\n        this.highlightNavigation();\n        this.putElementIntoView();\n        return this.elements[this.currentNavigationPosition];\n    };\n    QuickviewDocumentWord.prototype.navigateTo = function (position) {\n        this.currentNavigationPosition = position;\n        if (this.currentNavigationPosition < 0 || this.currentNavigationPosition >= this.elements.length) {\n            this.currentNavigationPosition = 0;\n            this.logger.warn(\"Invalid position in quickview navigation: \" + position);\n        }\n        this.highlightNavigation();\n        return this.elements[this.currentNavigationPosition];\n    };\n    QuickviewDocumentWord.prototype.doCompleteInitialScanForKeywordInDocument = function (element) {\n        var parsed = this.parseKeywordIdentifier(element);\n        if (parsed) {\n            this.indexIdentifier = parsed.keywordIdentifier;\n            this.occurrence = parsed.keywordOccurrencesInDocument;\n            this.indexTermPart = parsed.keywordTermPart;\n            this.text = this.getText(element);\n            this.color = new QuickviewDocumentWordColor_1.QuickviewDocumentWordColor(element.style.backgroundColor);\n            this.addElement(element);\n        }\n    };\n    QuickviewDocumentWord.prototype.isTaggedWord = function (element) {\n        return element.nodeName.toLowerCase() == 'coveotaggedword';\n    };\n    QuickviewDocumentWord.prototype.highlightNavigation = function () {\n        var _this = this;\n        var currentElement = this.elements[this.currentNavigationPosition];\n        var otherElements = underscore_1.without(this.elements, currentElement);\n        currentElement.style.color = this.color.htmlColor;\n        currentElement.style.backgroundColor = this.color.invert();\n        otherElements.forEach(function (element) {\n            element.style.color = '';\n            element.style.backgroundColor = _this.color.htmlColor;\n        });\n    };\n    QuickviewDocumentWord.prototype.putElementIntoView = function () {\n        var element = this.elements[this.currentNavigationPosition];\n        element.scrollIntoView();\n    };\n    QuickviewDocumentWord.prototype.getText = function (element) {\n        var innerTextOfHTMLElement = this.getHighlightedInnerText(element);\n        return this.resolveOriginalTerm(innerTextOfHTMLElement);\n    };\n    QuickviewDocumentWord.prototype.resolveOriginalTerm = function (highlight) {\n        var _this = this;\n        if (!this.result || !this.result.termsToHighlight) {\n            return highlight;\n        }\n        var found = underscore_1.find(underscore_1.keys(this.result.termsToHighlight), function (originalTerm) {\n            // The expansions do NOT include the original term (makes sense), so be sure to check\n            // the original term for a match too.\n            var originalTermMatch = Core_1.StringUtils.equalsCaseInsensitive(originalTerm, highlight);\n            var expansionMatch = underscore_1.find(_this.result.termsToHighlight[originalTerm], function (expansion) { return Core_1.StringUtils.equalsCaseInsensitive(expansion, highlight); }) !=\n                undefined;\n            return originalTermMatch || expansionMatch;\n        });\n        return found || highlight;\n    };\n    QuickviewDocumentWord.prototype.getHighlightedInnerText = function (element) {\n        if (!this.isTaggedWord(element)) {\n            return Dom_1.$$(element).text() || '';\n        }\n        var children = Dom_1.$$(element).children();\n        if (children.length >= 1) {\n            return Dom_1.$$(underscore_1.first(children)).text() || '';\n        }\n        return '';\n    };\n    QuickviewDocumentWord.prototype.parseKeywordIdentifier = function (element) {\n        var parts = element.id.substr(QuickviewDocument_1.HIGHLIGHT_PREFIX.length + 1).match(/^([0-9]+)\\.([0-9]+)\\.([0-9]+)$/);\n        if (!parts || parts.length <= 3) {\n            return null;\n        }\n        return {\n            keywordIdentifier: parts[1],\n            keywordOccurrencesInDocument: parseInt(parts[2], 10),\n            keywordTermPart: parseInt(parts[3], 10)\n        };\n    };\n    return QuickviewDocumentWord;\n}());\nexports.QuickviewDocumentWord = QuickviewDocumentWord;\n\n\n/***/ }),\n\n/***/ 647:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ColorUtils_1 = __webpack_require__(139);\nvar QuickviewDocumentWordColor = /** @class */ (function () {\n    function QuickviewDocumentWordColor(htmlColor) {\n        this.htmlColor = htmlColor;\n        var rgbExtracted = htmlColor.match(/\\d+/g);\n        if (rgbExtracted) {\n            this.r = parseInt(rgbExtracted[0], 10);\n            this.g = parseInt(rgbExtracted[1], 10);\n            this.b = parseInt(rgbExtracted[2], 10);\n        }\n    }\n    QuickviewDocumentWordColor.prototype.invert = function () {\n        return \"rgb(\" + (255 - this.r) + \", \" + (255 - this.g) + \", \" + (255 - this.b) + \")\";\n    };\n    QuickviewDocumentWordColor.prototype.saturate = function () {\n        var hsv = ColorUtils_1.ColorUtils.rgbToHsv(this.r, this.g, this.b);\n        hsv[1] *= 2;\n        if (hsv[1] > 1) {\n            hsv[1] = 1;\n        }\n        var rgb = ColorUtils_1.ColorUtils.hsvToRgb(hsv[0], hsv[1], hsv[2]);\n        return \"rgb(\" + rgb[0] + \", \" + rgb[1] + \", \" + rgb[2] + \")\";\n    };\n    return QuickviewDocumentWordColor;\n}());\nexports.QuickviewDocumentWordColor = QuickviewDocumentWordColor;\n\n\n/***/ }),\n\n/***/ 648:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Dom_1 = __webpack_require__(1);\nvar QuickviewDocumentWordButton = /** @class */ (function () {\n    function QuickviewDocumentWordButton(word, previewBar, iframe) {\n        this.word = word;\n        this.previewBar = previewBar;\n        this.iframe = iframe;\n        this.el = this.render();\n    }\n    QuickviewDocumentWordButton.prototype.render = function () {\n        var wordHtml = Dom_1.$$('span', {\n            className: 'coveo-term-for-quickview'\n        });\n        wordHtml.append(this.buildName().el);\n        wordHtml.append(this.renderArrow('up').el);\n        wordHtml.append(this.renderArrow('down').el);\n        wordHtml.el.style.backgroundColor = this.word.color.htmlColor;\n        wordHtml.el.style.borderColor = this.word.color.saturate();\n        return wordHtml.el;\n    };\n    QuickviewDocumentWordButton.prototype.buildName = function () {\n        var _this = this;\n        var name = Dom_1.$$('span', {\n            className: 'coveo-term-for-quickview-name'\n        }, this.word.text + \" (\" + this.word.count + \")\");\n        name.on('click', function () { return _this.navigate(false); });\n        return name;\n    };\n    QuickviewDocumentWordButton.prototype.navigate = function (backward) {\n        var element;\n        if (backward) {\n            element = this.word.navigateBackward();\n            this.previewBar.navigateBackward(this.word);\n        }\n        else {\n            element = this.word.navigateForward();\n            this.previewBar.navigateForward(this.word);\n        }\n        // pdf2html docs hide the non-visible frames by default, to speed up browsers.\n        // But this prevents keyword navigation from working so we must force show it. This\n        // is done by adding the 'opened' class to it (defined by pdf2html).\n        if (this.iframe.isNewQuickviewDocument()) {\n            var pdf = Dom_1.$$(element).closest('.pc');\n            Dom_1.$$(pdf).addClass('opened');\n        }\n        element.scrollIntoView();\n    };\n    QuickviewDocumentWordButton.prototype.renderArrow = function (direction) {\n        var _this = this;\n        var arrow = Dom_1.$$('span', {\n            className: \"coveo-term-for-quickview-\" + direction + \"-arrow\"\n        });\n        var arrowIcon = Dom_1.$$('span', {\n            className: \"coveo-term-for-quickview-\" + direction + \"-arrow-icon\"\n        });\n        arrow.append(arrowIcon.el);\n        arrow.on('click', function () { return _this.navigate(direction == 'up'); });\n        return arrow;\n    };\n    return QuickviewDocumentWordButton;\n}());\nexports.QuickviewDocumentWordButton = QuickviewDocumentWordButton;\n\n\n/***/ }),\n\n/***/ 649:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Dom_1 = __webpack_require__(1);\nvar underscore_1 = __webpack_require__(0);\nvar Logger_1 = __webpack_require__(9);\nvar QuickviewDocumentPreviewBar = /** @class */ (function () {\n    function QuickviewDocumentPreviewBar(iframe, words) {\n        this.iframe = iframe;\n        this.words = words;\n        this.wordIndicators = new Map();\n        this.logger = new Logger_1.Logger(this);\n        this.renderPreviewBar();\n    }\n    QuickviewDocumentPreviewBar.prototype.navigateForward = function (word) {\n        var currentWord = this.wordIndicators.get(word);\n        if (!currentWord) {\n            this.logger.warn(\"Invalid navigation for given word.\", word);\n            return null;\n        }\n        currentWord.position++;\n        if (currentWord.position >= currentWord.indicators.length) {\n            currentWord.position = 0;\n        }\n        this.highlightNavigation(word);\n        return currentWord.indicators[currentWord.position];\n    };\n    QuickviewDocumentPreviewBar.prototype.navigateBackward = function (word) {\n        var currentWord = this.wordIndicators.get(word);\n        if (!currentWord) {\n            this.logger.warn(\"Invalid navigation for the given word.\", word);\n            return null;\n        }\n        currentWord.position--;\n        if (currentWord.position < 0) {\n            currentWord.position = currentWord.indicators.length - 1;\n        }\n        this.highlightNavigation(word);\n        return currentWord.indicators[currentWord.position];\n    };\n    QuickviewDocumentPreviewBar.prototype.navigateTo = function (position, word) {\n        var currentWord = this.wordIndicators.get(word);\n        if (!currentWord) {\n            this.logger.warn(\"Invalid navigation for the given word\", word);\n            return null;\n        }\n        currentWord.position = position;\n        if (currentWord.position < 0 || currentWord.position >= currentWord.indicators.length) {\n            this.logger.warn(\"Invalid navigation for the given position: \" + position);\n            currentWord.position = 0;\n        }\n        this.highlightNavigation(word);\n        return currentWord.indicators[currentWord.position];\n    };\n    QuickviewDocumentPreviewBar.prototype.highlightNavigation = function (word) {\n        var _this = this;\n        var currentWord = this.wordIndicators.get(word);\n        var currentElement = currentWord.indicators[currentWord.position];\n        var otherElements = underscore_1.without(currentWord.indicators, currentElement);\n        currentElement.style.backgroundColor = word.color.invert();\n        currentElement.style.border = \"1px solid \" + word.color.invert();\n        otherElements.forEach(function (element) { return _this.defaultStyleColor(element, word); });\n    };\n    QuickviewDocumentPreviewBar.prototype.renderPreviewBar = function () {\n        var _this = this;\n        var previewBar = Dom_1.$$('div');\n        previewBar.el.style.width = '15px';\n        previewBar.el.style.position = 'fixed';\n        previewBar.el.style.top = '0';\n        previewBar.el.style.right = '0px';\n        previewBar.el.style.height = '100%';\n        this.iframe.body.appendChild(previewBar.el);\n        underscore_1.each(this.words.words, function (word) {\n            underscore_1.each(word.elements, function (element) {\n                var indicator = _this.renderWordPositionIndicator(element, word).el;\n                if (_this.wordIndicators.has(word)) {\n                    _this.wordIndicators.get(word).indicators.push(indicator);\n                }\n                else {\n                    _this.wordIndicators.set(word, {\n                        indicators: [indicator],\n                        position: -1\n                    });\n                }\n                previewBar.append(indicator);\n            });\n            _this.handleOverlappingIndicators(word);\n        });\n    };\n    QuickviewDocumentPreviewBar.prototype.renderWordPositionIndicator = function (element, word) {\n        var docHeight = new Dom_1.Doc(this.iframe.document).height();\n        var elementPosition = element.getBoundingClientRect().top;\n        var previewUnit = Dom_1.$$('div');\n        previewUnit.el.style.position = 'absolute';\n        previewUnit.el.style.top = elementPosition / docHeight * 100 + \"%\";\n        previewUnit.el.style.width = '100%';\n        previewUnit.el.style.height = '1px';\n        this.defaultStyleColor(previewUnit.el, word);\n        return previewUnit;\n    };\n    QuickviewDocumentPreviewBar.prototype.defaultStyleColor = function (element, word) {\n        element.style.border = \"1px solid \" + word.color.saturate();\n        element.style.backgroundColor = word.color.htmlColor;\n    };\n    QuickviewDocumentPreviewBar.prototype.handleOverlappingIndicators = function (word) {\n        var allIndicators = this.wordIndicators.get(word).indicators;\n        var _loop_1 = function (i) {\n            var otherIndicatorAtSamePositionInDocument = underscore_1.chain(allIndicators)\n                .without(allIndicators[i])\n                .find(function (otherIndicator) { return otherIndicator.style.top == allIndicators[i].style.top; })\n                .value();\n            if (otherIndicatorAtSamePositionInDocument) {\n                Dom_1.$$(allIndicators[i]).remove();\n                allIndicators[i] = otherIndicatorAtSamePositionInDocument;\n            }\n        };\n        for (var i = 0; i < allIndicators.length; i++) {\n            _loop_1(i);\n        }\n    };\n    return QuickviewDocumentPreviewBar;\n}());\nexports.QuickviewDocumentPreviewBar = QuickviewDocumentPreviewBar;\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// Quickview.min__e0ba7abe7a50f2532f41.js","/**!\n * @fileOverview Kickass library to create and place poppers near their reference elements.\n * @version 1.14.3\n * @license\n * Copyright (c) 2016 Federico Zivolo and contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined';\n\nvar longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\nvar timeoutDuration = 0;\nfor (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n  if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n    timeoutDuration = 1;\n    break;\n  }\n}\n\nfunction microtaskDebounce(fn) {\n  var called = false;\n  return function () {\n    if (called) {\n      return;\n    }\n    called = true;\n    window.Promise.resolve().then(function () {\n      called = false;\n      fn();\n    });\n  };\n}\n\nfunction taskDebounce(fn) {\n  var scheduled = false;\n  return function () {\n    if (!scheduled) {\n      scheduled = true;\n      setTimeout(function () {\n        scheduled = false;\n        fn();\n      }, timeoutDuration);\n    }\n  };\n}\n\nvar supportsMicroTasks = isBrowser && window.Promise;\n\n/**\n* Create a debounced version of a method, that's asynchronously deferred\n* but called in the minimum time possible.\n*\n* @method\n* @memberof Popper.Utils\n* @argument {Function} fn\n* @returns {Function}\n*/\nvar debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;\n\n/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {Any} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\nfunction isFunction(functionToCheck) {\n  var getType = {};\n  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\n}\n\n/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Eement} element\n * @argument {String} property\n */\nfunction getStyleComputedProperty(element, property) {\n  if (element.nodeType !== 1) {\n    return [];\n  }\n  // NOTE: 1 DOM access here\n  var css = getComputedStyle(element, null);\n  return property ? css[property] : css;\n}\n\n/**\n * Returns the parentNode or the host of the element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} parent\n */\nfunction getParentNode(element) {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n  return element.parentNode || element.host;\n}\n\n/**\n * Returns the scrolling parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} scroll parent\n */\nfunction getScrollParent(element) {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (!element) {\n    return document.body;\n  }\n\n  switch (element.nodeName) {\n    case 'HTML':\n    case 'BODY':\n      return element.ownerDocument.body;\n    case '#document':\n      return element.body;\n  }\n\n  // Firefox want us to check `-x` and `-y` variations as well\n\n  var _getStyleComputedProp = getStyleComputedProperty(element),\n      overflow = _getStyleComputedProp.overflow,\n      overflowX = _getStyleComputedProp.overflowX,\n      overflowY = _getStyleComputedProp.overflowY;\n\n  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n\nvar isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);\nvar isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);\n\n/**\n * Determines if the browser is Internet Explorer\n * @method\n * @memberof Popper.Utils\n * @param {Number} version to check\n * @returns {Boolean} isIE\n */\nfunction isIE(version) {\n  if (version === 11) {\n    return isIE11;\n  }\n  if (version === 10) {\n    return isIE10;\n  }\n  return isIE11 || isIE10;\n}\n\n/**\n * Returns the offset parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} offset parent\n */\nfunction getOffsetParent(element) {\n  if (!element) {\n    return document.documentElement;\n  }\n\n  var noOffsetParent = isIE(10) ? document.body : null;\n\n  // NOTE: 1 DOM access here\n  var offsetParent = element.offsetParent;\n  // Skip hidden elements which don't have an offsetParent\n  while (offsetParent === noOffsetParent && element.nextElementSibling) {\n    offsetParent = (element = element.nextElementSibling).offsetParent;\n  }\n\n  var nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    return element ? element.ownerDocument.documentElement : document.documentElement;\n  }\n\n  // .offsetParent will return the closest TD or TABLE in case\n  // no offsetParent is present, I hate this job...\n  if (['TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {\n    return getOffsetParent(offsetParent);\n  }\n\n  return offsetParent;\n}\n\nfunction isOffsetContainer(element) {\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY') {\n    return false;\n  }\n  return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;\n}\n\n/**\n * Finds the root node (document, shadowDOM root) of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} node\n * @returns {Element} root node\n */\nfunction getRoot(node) {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n\n/**\n * Finds the offset parent common to the two provided nodes\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element1\n * @argument {Element} element2\n * @returns {Element} common offset parent\n */\nfunction findCommonOffsetParent(element1, element2) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return document.documentElement;\n  }\n\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\n  var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;\n  var start = order ? element1 : element2;\n  var end = order ? element2 : element1;\n\n  // Get common ancestor container\n  var range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  var commonAncestorContainer = range.commonAncestorContainer;\n\n  // Both nodes are inside #document\n\n  if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    return getOffsetParent(commonAncestorContainer);\n  }\n\n  // one of the nodes is inside shadowDOM, find which one\n  var element1root = getRoot(element1);\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n\n/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {String} side `top` or `left`\n * @returns {number} amount of scrolled pixels\n */\nfunction getScroll(element) {\n  var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';\n\n  var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    var html = element.ownerDocument.documentElement;\n    var scrollingElement = element.ownerDocument.scrollingElement || html;\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n\n/*\n * Sum or subtract the element scroll values (left and top) from a given rect object\n * @method\n * @memberof Popper.Utils\n * @param {Object} rect - Rect object you want to change\n * @param {HTMLElement} element - The element from the function reads the scroll values\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n * @return {Object} rect - The modifier rect object\n */\nfunction includeScroll(rect, element) {\n  var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  var scrollTop = getScroll(element, 'top');\n  var scrollLeft = getScroll(element, 'left');\n  var modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n  return rect;\n}\n\n/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param {CSSStyleDeclaration} styles\n * Result of `getStyleComputedProperty` on the given element\n * @param {String} axis - `x` or `y`\n * @return {number} borders - The borders size of the given axis\n */\n\nfunction getBordersSize(styles, axis) {\n  var sideA = axis === 'x' ? 'Left' : 'Top';\n  var sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n\n  return parseFloat(styles['border' + sideA + 'Width'], 10) + parseFloat(styles['border' + sideB + 'Width'], 10);\n}\n\nfunction getSize(axis, body, html, computedStyle) {\n  return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE(10) ? html['offset' + axis] + computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')] + computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')] : 0);\n}\n\nfunction getWindowSizes() {\n  var body = document.body;\n  var html = document.documentElement;\n  var computedStyle = isIE(10) && getComputedStyle(html);\n\n  return {\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle)\n  };\n}\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\nvar defineProperty = function (obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n * @method\n * @memberof Popper.Utils\n * @argument {Object} offsets\n * @returns {Object} ClientRect like output\n */\nfunction getClientRect(offsets) {\n  return _extends({}, offsets, {\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height\n  });\n}\n\n/**\n * Get bounding client rect of given element\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element\n * @return {Object} client rect\n */\nfunction getBoundingClientRect(element) {\n  var rect = {};\n\n  // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n  try {\n    if (isIE(10)) {\n      rect = element.getBoundingClientRect();\n      var scrollTop = getScroll(element, 'top');\n      var scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    } else {\n      rect = element.getBoundingClientRect();\n    }\n  } catch (e) {}\n\n  var result = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top\n  };\n\n  // subtract scrollbar size from sizes\n  var sizes = element.nodeName === 'HTML' ? getWindowSizes() : {};\n  var width = sizes.width || element.clientWidth || result.right - result.left;\n  var height = sizes.height || element.clientHeight || result.bottom - result.top;\n\n  var horizScrollbar = element.offsetWidth - width;\n  var vertScrollbar = element.offsetHeight - height;\n\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n  if (horizScrollbar || vertScrollbar) {\n    var styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return getClientRect(result);\n}\n\nfunction getOffsetRectRelativeToArbitraryNode(children, parent) {\n  var fixedPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  var isIE10 = isIE(10);\n  var isHTML = parent.nodeName === 'HTML';\n  var childrenRect = getBoundingClientRect(children);\n  var parentRect = getBoundingClientRect(parent);\n  var scrollParent = getScrollParent(children);\n\n  var styles = getStyleComputedProperty(parent);\n  var borderTopWidth = parseFloat(styles.borderTopWidth, 10);\n  var borderLeftWidth = parseFloat(styles.borderLeftWidth, 10);\n\n  // In cases where the parent is fixed, we must ignore negative scroll in offset calc\n  if (fixedPosition && parent.nodeName === 'HTML') {\n    parentRect.top = Math.max(parentRect.top, 0);\n    parentRect.left = Math.max(parentRect.left, 0);\n  }\n  var offsets = getClientRect({\n    top: childrenRect.top - parentRect.top - borderTopWidth,\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\n    width: childrenRect.width,\n    height: childrenRect.height\n  });\n  offsets.marginTop = 0;\n  offsets.marginLeft = 0;\n\n  // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n  if (!isIE10 && isHTML) {\n    var marginTop = parseFloat(styles.marginTop, 10);\n    var marginLeft = parseFloat(styles.marginLeft, 10);\n\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft;\n\n    // Attach marginTop and marginLeft because in some circumstances we may need them\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  if (isIE10 && !fixedPosition ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {\n    offsets = includeScroll(offsets, parent);\n  }\n\n  return offsets;\n}\n\nfunction getViewportOffsetRectRelativeToArtbitraryNode(element) {\n  var excludeScroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var html = element.ownerDocument.documentElement;\n  var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  var width = Math.max(html.clientWidth, window.innerWidth || 0);\n  var height = Math.max(html.clientHeight, window.innerHeight || 0);\n\n  var scrollTop = !excludeScroll ? getScroll(html) : 0;\n  var scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\n\n  var offset = {\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n    width: width,\n    height: height\n  };\n\n  return getClientRect(offset);\n}\n\n/**\n * Check if the given element is fixed or is inside a fixed parent\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {Element} customContainer\n * @returns {Boolean} answer to \"isFixed?\"\n */\nfunction isFixed(element) {\n  var nodeName = element.nodeName;\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n  return isFixed(getParentNode(element));\n}\n\n/**\n * Finds the first parent of an element that has a transformed property defined\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} first transformed parent or documentElement\n */\n\nfunction getFixedPositionOffsetParent(element) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element || !element.parentElement || isIE()) {\n    return document.documentElement;\n  }\n  var el = element.parentElement;\n  while (el && getStyleComputedProperty(el, 'transform') === 'none') {\n    el = el.parentElement;\n  }\n  return el || document.documentElement;\n}\n\n/**\n * Computed the boundaries limits and return them\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} popper\n * @param {HTMLElement} reference\n * @param {number} padding\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\n * @param {Boolean} fixedPosition - Is in fixed position mode\n * @returns {Object} Coordinates of the boundaries\n */\nfunction getBoundaries(popper, reference, padding, boundariesElement) {\n  var fixedPosition = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n  // NOTE: 1 DOM access here\n\n  var boundaries = { top: 0, left: 0 };\n  var offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\n\n  // Handle viewport case\n  if (boundariesElement === 'viewport') {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\n  } else {\n    // Handle other cases based on DOM element used as boundaries\n    var boundariesNode = void 0;\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(reference));\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = popper.ownerDocument.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = popper.ownerDocument.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition);\n\n    // In case of HTML, we need a different computation\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      var _getWindowSizes = getWindowSizes(),\n          height = _getWindowSizes.height,\n          width = _getWindowSizes.width;\n\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = height + offsets.top;\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = width + offsets.left;\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  }\n\n  // Add paddings\n  boundaries.left += padding;\n  boundaries.top += padding;\n  boundaries.right -= padding;\n  boundaries.bottom -= padding;\n\n  return boundaries;\n}\n\nfunction getArea(_ref) {\n  var width = _ref.width,\n      height = _ref.height;\n\n  return width * height;\n}\n\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n * @method\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {\n  var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  var boundaries = getBoundaries(popper, reference, padding, boundariesElement);\n\n  var rects = {\n    top: {\n      width: boundaries.width,\n      height: refRect.top - boundaries.top\n    },\n    right: {\n      width: boundaries.right - refRect.right,\n      height: boundaries.height\n    },\n    bottom: {\n      width: boundaries.width,\n      height: boundaries.bottom - refRect.bottom\n    },\n    left: {\n      width: refRect.left - boundaries.left,\n      height: boundaries.height\n    }\n  };\n\n  var sortedAreas = Object.keys(rects).map(function (key) {\n    return _extends({\n      key: key\n    }, rects[key], {\n      area: getArea(rects[key])\n    });\n  }).sort(function (a, b) {\n    return b.area - a.area;\n  });\n\n  var filteredAreas = sortedAreas.filter(function (_ref2) {\n    var width = _ref2.width,\n        height = _ref2.height;\n    return width >= popper.clientWidth && height >= popper.clientHeight;\n  });\n\n  var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;\n\n  var variation = placement.split('-')[1];\n\n  return computedPlacement + (variation ? '-' + variation : '');\n}\n\n/**\n * Get offsets to the reference element\n * @method\n * @memberof Popper.Utils\n * @param {Object} state\n * @param {Element} popper - the popper element\n * @param {Element} reference - the reference element (the popper will be relative to this)\n * @param {Element} fixedPosition - is in fixed position mode\n * @returns {Object} An object containing the offsets which will be applied to the popper\n */\nfunction getReferenceOffsets(state, popper, reference) {\n  var fixedPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n  var commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);\n}\n\n/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Object} object containing width and height properties\n */\nfunction getOuterSizes(element) {\n  var styles = getComputedStyle(element);\n  var x = parseFloat(styles.marginTop) + parseFloat(styles.marginBottom);\n  var y = parseFloat(styles.marginLeft) + parseFloat(styles.marginRight);\n  var result = {\n    width: element.offsetWidth + y,\n    height: element.offsetHeight + x\n  };\n  return result;\n}\n\n/**\n * Get the opposite placement of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement\n * @returns {String} flipped placement\n */\nfunction getOppositePlacement(placement) {\n  var hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n  return placement.replace(/left|right|bottom|top/g, function (matched) {\n    return hash[matched];\n  });\n}\n\n/**\n * Get offsets to the popper\n * @method\n * @memberof Popper.Utils\n * @param {Object} position - CSS position the Popper will get applied\n * @param {HTMLElement} popper - the popper element\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n * @param {String} placement - one of the valid placement options\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n */\nfunction getPopperOffsets(popper, referenceOffsets, placement) {\n  placement = placement.split('-')[0];\n\n  // Get popper node sizes\n  var popperRect = getOuterSizes(popper);\n\n  // Add position, width and height to our offsets object\n  var popperOffsets = {\n    width: popperRect.width,\n    height: popperRect.height\n  };\n\n  // depending by the popper placement we have to compute its offsets slightly differently\n  var isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  var mainSide = isHoriz ? 'top' : 'left';\n  var secondarySide = isHoriz ? 'left' : 'top';\n  var measurement = isHoriz ? 'height' : 'width';\n  var secondaryMeasurement = !isHoriz ? 'height' : 'width';\n\n  popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;\n  if (placement === secondarySide) {\n    popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n  } else {\n    popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];\n  }\n\n  return popperOffsets;\n}\n\n/**\n * Mimics the `find` method of Array\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nfunction find(arr, check) {\n  // use native find if supported\n  if (Array.prototype.find) {\n    return arr.find(check);\n  }\n\n  // use `filter` to obtain the same behavior of `find`\n  return arr.filter(check)[0];\n}\n\n/**\n * Return the index of the matching object\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nfunction findIndex(arr, prop, value) {\n  // use native findIndex if supported\n  if (Array.prototype.findIndex) {\n    return arr.findIndex(function (cur) {\n      return cur[prop] === value;\n    });\n  }\n\n  // use `find` + `indexOf` if `findIndex` isn't supported\n  var match = find(arr, function (obj) {\n    return obj[prop] === value;\n  });\n  return arr.indexOf(match);\n}\n\n/**\n * Loop trough the list of modifiers and run them in order,\n * each of them will then edit the data object.\n * @method\n * @memberof Popper.Utils\n * @param {dataObject} data\n * @param {Array} modifiers\n * @param {String} ends - Optional modifier name used as stopper\n * @returns {dataObject}\n */\nfunction runModifiers(modifiers, data, ends) {\n  var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n\n  modifiersToRun.forEach(function (modifier) {\n    if (modifier['function']) {\n      // eslint-disable-line dot-notation\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n    }\n    var fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\n    if (modifier.enabled && isFunction(fn)) {\n      // Add properties to offsets to make them a complete clientRect object\n      // we do this before each modifier to make sure the previous one doesn't\n      // mess with these values\n      data.offsets.popper = getClientRect(data.offsets.popper);\n      data.offsets.reference = getClientRect(data.offsets.reference);\n\n      data = fn(data, modifier);\n    }\n  });\n\n  return data;\n}\n\n/**\n * Updates the position of the popper, computing the new offsets and applying\n * the new style.<br />\n * Prefer `scheduleUpdate` over `update` because of performance reasons.\n * @method\n * @memberof Popper\n */\nfunction update() {\n  // if popper is destroyed, don't perform any further update\n  if (this.state.isDestroyed) {\n    return;\n  }\n\n  var data = {\n    instance: this,\n    styles: {},\n    arrowStyles: {},\n    attributes: {},\n    flipped: false,\n    offsets: {}\n  };\n\n  // compute reference element offsets\n  data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference, this.options.positionFixed);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding);\n\n  // store the computed placement inside `originalPlacement`\n  data.originalPlacement = data.placement;\n\n  data.positionFixed = this.options.positionFixed;\n\n  // compute the popper offsets\n  data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);\n\n  data.offsets.popper.position = this.options.positionFixed ? 'fixed' : 'absolute';\n\n  // run the modifiers\n  data = runModifiers(this.modifiers, data);\n\n  // the first `update` will call `onCreate` callback\n  // the other ones will call `onUpdate` callback\n  if (!this.state.isCreated) {\n    this.state.isCreated = true;\n    this.options.onCreate(data);\n  } else {\n    this.options.onUpdate(data);\n  }\n}\n\n/**\n * Helper used to know if the given modifier is enabled.\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean}\n */\nfunction isModifierEnabled(modifiers, modifierName) {\n  return modifiers.some(function (_ref) {\n    var name = _ref.name,\n        enabled = _ref.enabled;\n    return enabled && name === modifierName;\n  });\n}\n\n/**\n * Get the prefixed supported property name\n * @method\n * @memberof Popper.Utils\n * @argument {String} property (camelCase)\n * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\n */\nfunction getSupportedPropertyName(property) {\n  var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n  var upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (var i = 0; i < prefixes.length; i++) {\n    var prefix = prefixes[i];\n    var toCheck = prefix ? '' + prefix + upperProp : property;\n    if (typeof document.body.style[toCheck] !== 'undefined') {\n      return toCheck;\n    }\n  }\n  return null;\n}\n\n/**\n * Destroy the popper\n * @method\n * @memberof Popper\n */\nfunction destroy() {\n  this.state.isDestroyed = true;\n\n  // touch DOM only if `applyStyle` modifier is enabled\n  if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n    this.popper.removeAttribute('x-placement');\n    this.popper.style.position = '';\n    this.popper.style.top = '';\n    this.popper.style.left = '';\n    this.popper.style.right = '';\n    this.popper.style.bottom = '';\n    this.popper.style.willChange = '';\n    this.popper.style[getSupportedPropertyName('transform')] = '';\n  }\n\n  this.disableEventListeners();\n\n  // remove the popper if user explicity asked for the deletion on destroy\n  // do not use `remove` because IE11 doesn't support it\n  if (this.options.removeOnDestroy) {\n    this.popper.parentNode.removeChild(this.popper);\n  }\n  return this;\n}\n\n/**\n * Get the window associated with the element\n * @argument {Element} element\n * @returns {Window}\n */\nfunction getWindow(element) {\n  var ownerDocument = element.ownerDocument;\n  return ownerDocument ? ownerDocument.defaultView : window;\n}\n\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\n  var isBody = scrollParent.nodeName === 'BODY';\n  var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\n  target.addEventListener(event, callback, { passive: true });\n\n  if (!isBody) {\n    attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);\n  }\n  scrollParents.push(target);\n}\n\n/**\n * Setup needed event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nfunction setupEventListeners(reference, options, state, updateBound) {\n  // Resize event listener on window\n  state.updateBound = updateBound;\n  getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });\n\n  // Scroll event listener on scroll parents\n  var scrollElement = getScrollParent(reference);\n  attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);\n  state.scrollElement = scrollElement;\n  state.eventsEnabled = true;\n\n  return state;\n}\n\n/**\n * It will add resize/scroll events and start recalculating\n * position of the popper element when they are triggered.\n * @method\n * @memberof Popper\n */\nfunction enableEventListeners() {\n  if (!this.state.eventsEnabled) {\n    this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);\n  }\n}\n\n/**\n * Remove event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nfunction removeEventListeners(reference, state) {\n  // Remove resize event listener on window\n  getWindow(reference).removeEventListener('resize', state.updateBound);\n\n  // Remove scroll event listener on scroll parents\n  state.scrollParents.forEach(function (target) {\n    target.removeEventListener('scroll', state.updateBound);\n  });\n\n  // Reset state\n  state.updateBound = null;\n  state.scrollParents = [];\n  state.scrollElement = null;\n  state.eventsEnabled = false;\n  return state;\n}\n\n/**\n * It will remove resize/scroll events and won't recalculate popper position\n * when they are triggered. It also won't trigger onUpdate callback anymore,\n * unless you call `update` method manually.\n * @method\n * @memberof Popper\n */\nfunction disableEventListeners() {\n  if (this.state.eventsEnabled) {\n    cancelAnimationFrame(this.scheduleUpdate);\n    this.state = removeEventListeners(this.reference, this.state);\n  }\n}\n\n/**\n * Tells if a given input is a number\n * @method\n * @memberof Popper.Utils\n * @param {*} input to check\n * @return {Boolean}\n */\nfunction isNumeric(n) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n\n/**\n * Set the style to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the style to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nfunction setStyles(element, styles) {\n  Object.keys(styles).forEach(function (prop) {\n    var unit = '';\n    // add unit if the value is numeric and is one of the following\n    if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {\n      unit = 'px';\n    }\n    element.style[prop] = styles[prop] + unit;\n  });\n}\n\n/**\n * Set the attributes to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the attributes to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nfunction setAttributes(element, attributes) {\n  Object.keys(attributes).forEach(function (prop) {\n    var value = attributes[prop];\n    if (value !== false) {\n      element.setAttribute(prop, attributes[prop]);\n    } else {\n      element.removeAttribute(prop);\n    }\n  });\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The same data object\n */\nfunction applyStyle(data) {\n  // any property present in `data.styles` will be applied to the popper,\n  // in this way we can make the 3rd party modifiers add custom styles to it\n  // Be aware, modifiers could override the properties defined in the previous\n  // lines of this modifier!\n  setStyles(data.instance.popper, data.styles);\n\n  // any property present in `data.attributes` will be applied to the popper,\n  // they will be set as HTML attributes of the element\n  setAttributes(data.instance.popper, data.attributes);\n\n  // if arrowElement is defined and arrowStyles has some properties\n  if (data.arrowElement && Object.keys(data.arrowStyles).length) {\n    setStyles(data.arrowElement, data.arrowStyles);\n  }\n\n  return data;\n}\n\n/**\n * Set the x-placement attribute before everything else because it could be used\n * to add margins to the popper margins needs to be calculated to get the\n * correct popper offsets.\n * @method\n * @memberof Popper.modifiers\n * @param {HTMLElement} reference - The reference element used to position the popper\n * @param {HTMLElement} popper - The HTML element used as popper\n * @param {Object} options - Popper.js options\n */\nfunction applyStyleOnLoad(reference, popper, options, modifierOptions, state) {\n  // compute reference element offsets\n  var referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);\n\n  popper.setAttribute('x-placement', placement);\n\n  // Apply `position` to popper before anything else because\n  // without the position applied we can't guarantee correct computations\n  setStyles(popper, { position: options.positionFixed ? 'fixed' : 'absolute' });\n\n  return options;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction computeStyle(data, options) {\n  var x = options.x,\n      y = options.y;\n  var popper = data.offsets.popper;\n\n  // Remove this legacy support in Popper.js v2\n\n  var legacyGpuAccelerationOption = find(data.instance.modifiers, function (modifier) {\n    return modifier.name === 'applyStyle';\n  }).gpuAcceleration;\n  if (legacyGpuAccelerationOption !== undefined) {\n    console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');\n  }\n  var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;\n\n  var offsetParent = getOffsetParent(data.instance.popper);\n  var offsetParentRect = getBoundingClientRect(offsetParent);\n\n  // Styles\n  var styles = {\n    position: popper.position\n  };\n\n  // Avoid blurry text by using full pixel integers.\n  // For pixel-perfect positioning, top/bottom prefers rounded\n  // values, while left/right prefers floored values.\n  var offsets = {\n    left: Math.floor(popper.left),\n    top: Math.round(popper.top),\n    bottom: Math.round(popper.bottom),\n    right: Math.floor(popper.right)\n  };\n\n  var sideA = x === 'bottom' ? 'top' : 'bottom';\n  var sideB = y === 'right' ? 'left' : 'right';\n\n  // if gpuAcceleration is set to `true` and transform is supported,\n  //  we use `translate3d` to apply the position to the popper we\n  // automatically use the supported prefixed version if needed\n  var prefixedProperty = getSupportedPropertyName('transform');\n\n  // now, let's make a step back and look at this code closely (wtf?)\n  // If the content of the popper grows once it's been positioned, it\n  // may happen that the popper gets misplaced because of the new content\n  // overflowing its reference element\n  // To avoid this problem, we provide two options (x and y), which allow\n  // the consumer to define the offset origin.\n  // If we position a popper on top of a reference element, we can set\n  // `x` to `top` to make the popper grow towards its top instead of\n  // its bottom.\n  var left = void 0,\n      top = void 0;\n  if (sideA === 'bottom') {\n    top = -offsetParentRect.height + offsets.bottom;\n  } else {\n    top = offsets.top;\n  }\n  if (sideB === 'right') {\n    left = -offsetParentRect.width + offsets.right;\n  } else {\n    left = offsets.left;\n  }\n  if (gpuAcceleration && prefixedProperty) {\n    styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';\n    styles[sideA] = 0;\n    styles[sideB] = 0;\n    styles.willChange = 'transform';\n  } else {\n    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\n    var invertTop = sideA === 'bottom' ? -1 : 1;\n    var invertLeft = sideB === 'right' ? -1 : 1;\n    styles[sideA] = top * invertTop;\n    styles[sideB] = left * invertLeft;\n    styles.willChange = sideA + ', ' + sideB;\n  }\n\n  // Attributes\n  var attributes = {\n    'x-placement': data.placement\n  };\n\n  // Update `data` attributes, styles and arrowStyles\n  data.attributes = _extends({}, attributes, data.attributes);\n  data.styles = _extends({}, styles, data.styles);\n  data.arrowStyles = _extends({}, data.offsets.arrow, data.arrowStyles);\n\n  return data;\n}\n\n/**\n * Helper used to know if the given modifier depends from another one.<br />\n * It checks if the needed modifier is listed and enabled.\n * @method\n * @memberof Popper.Utils\n * @param {Array} modifiers - list of modifiers\n * @param {String} requestingName - name of requesting modifier\n * @param {String} requestedName - name of requested modifier\n * @returns {Boolean}\n */\nfunction isModifierRequired(modifiers, requestingName, requestedName) {\n  var requesting = find(modifiers, function (_ref) {\n    var name = _ref.name;\n    return name === requestingName;\n  });\n\n  var isRequired = !!requesting && modifiers.some(function (modifier) {\n    return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;\n  });\n\n  if (!isRequired) {\n    var _requesting = '`' + requestingName + '`';\n    var requested = '`' + requestedName + '`';\n    console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');\n  }\n  return isRequired;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction arrow(data, options) {\n  var _data$offsets$arrow;\n\n  // arrow depends on keepTogether in order to work\n  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n    return data;\n  }\n\n  var arrowElement = options.element;\n\n  // if arrowElement is a string, suppose it's a CSS selector\n  if (typeof arrowElement === 'string') {\n    arrowElement = data.instance.popper.querySelector(arrowElement);\n\n    // if arrowElement is not found, don't run the modifier\n    if (!arrowElement) {\n      return data;\n    }\n  } else {\n    // if the arrowElement isn't a query selector we must check that the\n    // provided DOM node is child of its popper node\n    if (!data.instance.popper.contains(arrowElement)) {\n      console.warn('WARNING: `arrow.element` must be child of its popper element!');\n      return data;\n    }\n  }\n\n  var placement = data.placement.split('-')[0];\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var isVertical = ['left', 'right'].indexOf(placement) !== -1;\n\n  var len = isVertical ? 'height' : 'width';\n  var sideCapitalized = isVertical ? 'Top' : 'Left';\n  var side = sideCapitalized.toLowerCase();\n  var altSide = isVertical ? 'left' : 'top';\n  var opSide = isVertical ? 'bottom' : 'right';\n  var arrowElementSize = getOuterSizes(arrowElement)[len];\n\n  //\n  // extends keepTogether behavior making sure the popper and its\n  // reference have enough pixels in conjuction\n  //\n\n  // top/left side\n  if (reference[opSide] - arrowElementSize < popper[side]) {\n    data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);\n  }\n  // bottom/right side\n  if (reference[side] + arrowElementSize > popper[opSide]) {\n    data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];\n  }\n  data.offsets.popper = getClientRect(data.offsets.popper);\n\n  // compute center of the popper\n  var center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\n\n  // Compute the sideValue using the updated popper offsets\n  // take popper margin in account because we don't have this info available\n  var css = getStyleComputedProperty(data.instance.popper);\n  var popperMarginSide = parseFloat(css['margin' + sideCapitalized], 10);\n  var popperBorderSide = parseFloat(css['border' + sideCapitalized + 'Width'], 10);\n  var sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;\n\n  // prevent arrowElement from being placed not contiguously to its popper\n  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n\n  data.arrowElement = arrowElement;\n  data.offsets.arrow = (_data$offsets$arrow = {}, defineProperty(_data$offsets$arrow, side, Math.round(sideValue)), defineProperty(_data$offsets$arrow, altSide, ''), _data$offsets$arrow);\n\n  return data;\n}\n\n/**\n * Get the opposite placement variation of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement variation\n * @returns {String} flipped placement variation\n */\nfunction getOppositeVariation(variation) {\n  if (variation === 'end') {\n    return 'start';\n  } else if (variation === 'start') {\n    return 'end';\n  }\n  return variation;\n}\n\n/**\n * List of accepted placements to use as values of the `placement` option.<br />\n * Valid placements are:\n * - `auto`\n * - `top`\n * - `right`\n * - `bottom`\n * - `left`\n *\n * Each placement can have a variation from this list:\n * - `-start`\n * - `-end`\n *\n * Variations are interpreted easily if you think of them as the left to right\n * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\n * is right.<br />\n * Vertically (`left` and `right`), `start` is top and `end` is bottom.\n *\n * Some valid examples are:\n * - `top-end` (on top of reference, right aligned)\n * - `right-start` (on right of reference, top aligned)\n * - `bottom` (on bottom, centered)\n * - `auto-right` (on the side with more space available, alignment depends by placement)\n *\n * @static\n * @type {Array}\n * @enum {String}\n * @readonly\n * @method placements\n * @memberof Popper\n */\nvar placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'];\n\n// Get rid of `auto` `auto-start` and `auto-end`\nvar validPlacements = placements.slice(3);\n\n/**\n * Given an initial placement, returns all the subsequent placements\n * clockwise (or counter-clockwise).\n *\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement - A valid placement (it accepts variations)\n * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\n * @returns {Array} placements including their variations\n */\nfunction clockwise(placement) {\n  var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var index = validPlacements.indexOf(placement);\n  var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));\n  return counter ? arr.reverse() : arr;\n}\n\nvar BEHAVIORS = {\n  FLIP: 'flip',\n  CLOCKWISE: 'clockwise',\n  COUNTERCLOCKWISE: 'counterclockwise'\n};\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction flip(data, options) {\n  // if `inner` modifier is enabled, we can't use the `flip` modifier\n  if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n    return data;\n  }\n\n  if (data.flipped && data.placement === data.originalPlacement) {\n    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n    return data;\n  }\n\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement, data.positionFixed);\n\n  var placement = data.placement.split('-')[0];\n  var placementOpposite = getOppositePlacement(placement);\n  var variation = data.placement.split('-')[1] || '';\n\n  var flipOrder = [];\n\n  switch (options.behavior) {\n    case BEHAVIORS.FLIP:\n      flipOrder = [placement, placementOpposite];\n      break;\n    case BEHAVIORS.CLOCKWISE:\n      flipOrder = clockwise(placement);\n      break;\n    case BEHAVIORS.COUNTERCLOCKWISE:\n      flipOrder = clockwise(placement, true);\n      break;\n    default:\n      flipOrder = options.behavior;\n  }\n\n  flipOrder.forEach(function (step, index) {\n    if (placement !== step || flipOrder.length === index + 1) {\n      return data;\n    }\n\n    placement = data.placement.split('-')[0];\n    placementOpposite = getOppositePlacement(placement);\n\n    var popperOffsets = data.offsets.popper;\n    var refOffsets = data.offsets.reference;\n\n    // using floor because the reference offsets may contain decimals we are not going to consider here\n    var floor = Math.floor;\n    var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);\n\n    var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n    var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n    var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n    var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);\n\n    var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom;\n\n    // flip the variation if required\n    var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n    var flippedVariation = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom);\n\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\n      // this boolean to detect any flip loop\n      data.flipped = true;\n\n      if (overlapsRef || overflowsBoundaries) {\n        placement = flipOrder[index + 1];\n      }\n\n      if (flippedVariation) {\n        variation = getOppositeVariation(variation);\n      }\n\n      data.placement = placement + (variation ? '-' + variation : '');\n\n      // this object contains `position`, we want to preserve it along with\n      // any additional property we may add in the future\n      data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));\n\n      data = runModifiers(data.instance.modifiers, data, 'flip');\n    }\n  });\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction keepTogether(data) {\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var placement = data.placement.split('-')[0];\n  var floor = Math.floor;\n  var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n  var side = isVertical ? 'right' : 'bottom';\n  var opSide = isVertical ? 'left' : 'top';\n  var measurement = isVertical ? 'width' : 'height';\n\n  if (popper[side] < floor(reference[opSide])) {\n    data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];\n  }\n  if (popper[opSide] > floor(reference[side])) {\n    data.offsets.popper[opSide] = floor(reference[side]);\n  }\n\n  return data;\n}\n\n/**\n * Converts a string containing value + unit into a px value number\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} str - Value + unit string\n * @argument {String} measurement - `height` or `width`\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @returns {Number|String}\n * Value in pixels, or original string if no values were extracted\n */\nfunction toValue(str, measurement, popperOffsets, referenceOffsets) {\n  // separate value from unit\n  var split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\n  var value = +split[1];\n  var unit = split[2];\n\n  // If it's not a number it's an operator, I guess\n  if (!value) {\n    return str;\n  }\n\n  if (unit.indexOf('%') === 0) {\n    var element = void 0;\n    switch (unit) {\n      case '%p':\n        element = popperOffsets;\n        break;\n      case '%':\n      case '%r':\n      default:\n        element = referenceOffsets;\n    }\n\n    var rect = getClientRect(element);\n    return rect[measurement] / 100 * value;\n  } else if (unit === 'vh' || unit === 'vw') {\n    // if is a vh or vw, we calculate the size based on the viewport\n    var size = void 0;\n    if (unit === 'vh') {\n      size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n    } else {\n      size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n    }\n    return size / 100 * value;\n  } else {\n    // if is an explicit pixel unit, we get rid of the unit and keep the value\n    // if is an implicit unit, it's px, and we return just the value\n    return value;\n  }\n}\n\n/**\n * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} offset\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @argument {String} basePlacement\n * @returns {Array} a two cells array with x and y offsets in numbers\n */\nfunction parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {\n  var offsets = [0, 0];\n\n  // Use height if placement is left or right and index is 0 otherwise use width\n  // in this way the first offset will use an axis and the second one\n  // will use the other one\n  var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;\n\n  // Split the offset string to obtain a list of values and operands\n  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\n  var fragments = offset.split(/(\\+|\\-)/).map(function (frag) {\n    return frag.trim();\n  });\n\n  // Detect if the offset string contains a pair of values or a single one\n  // they could be separated by comma or space\n  var divider = fragments.indexOf(find(fragments, function (frag) {\n    return frag.search(/,|\\s/) !== -1;\n  }));\n\n  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\n    console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');\n  }\n\n  // If divider is found, we divide the list of values and operands to divide\n  // them by ofset X and Y.\n  var splitRegex = /\\s*,\\s*|\\s+/;\n  var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments];\n\n  // Convert the values with units to absolute pixels to allow our computations\n  ops = ops.map(function (op, index) {\n    // Most of the units rely on the orientation of the popper\n    var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';\n    var mergeWithPrevious = false;\n    return op\n    // This aggregates any `+` or `-` sign that aren't considered operators\n    // e.g.: 10 + +5 => [10, +, +5]\n    .reduce(function (a, b) {\n      if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\n        a[a.length - 1] = b;\n        mergeWithPrevious = true;\n        return a;\n      } else if (mergeWithPrevious) {\n        a[a.length - 1] += b;\n        mergeWithPrevious = false;\n        return a;\n      } else {\n        return a.concat(b);\n      }\n    }, [])\n    // Here we convert the string values into number values (in px)\n    .map(function (str) {\n      return toValue(str, measurement, popperOffsets, referenceOffsets);\n    });\n  });\n\n  // Loop trough the offsets arrays and execute the operations\n  ops.forEach(function (op, index) {\n    op.forEach(function (frag, index2) {\n      if (isNumeric(frag)) {\n        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\n      }\n    });\n  });\n  return offsets;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @argument {Number|String} options.offset=0\n * The offset value as described in the modifier description\n * @returns {Object} The data object, properly modified\n */\nfunction offset(data, _ref) {\n  var offset = _ref.offset;\n  var placement = data.placement,\n      _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var basePlacement = placement.split('-')[0];\n\n  var offsets = void 0;\n  if (isNumeric(+offset)) {\n    offsets = [+offset, 0];\n  } else {\n    offsets = parseOffset(offset, popper, reference, basePlacement);\n  }\n\n  if (basePlacement === 'left') {\n    popper.top += offsets[0];\n    popper.left -= offsets[1];\n  } else if (basePlacement === 'right') {\n    popper.top += offsets[0];\n    popper.left += offsets[1];\n  } else if (basePlacement === 'top') {\n    popper.left += offsets[0];\n    popper.top -= offsets[1];\n  } else if (basePlacement === 'bottom') {\n    popper.left += offsets[0];\n    popper.top += offsets[1];\n  }\n\n  data.popper = popper;\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction preventOverflow(data, options) {\n  var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper);\n\n  // If offsetParent is the reference element, we really want to\n  // go one step up and use the next offsetParent as reference to\n  // avoid to make this modifier completely useless and look like broken\n  if (data.instance.reference === boundariesElement) {\n    boundariesElement = getOffsetParent(boundariesElement);\n  }\n\n  // NOTE: DOM access here\n  // resets the popper's position so that the document size can be calculated excluding\n  // the size of the popper element itself\n  var transformProp = getSupportedPropertyName('transform');\n  var popperStyles = data.instance.popper.style; // assignment to help minification\n  var top = popperStyles.top,\n      left = popperStyles.left,\n      transform = popperStyles[transformProp];\n\n  popperStyles.top = '';\n  popperStyles.left = '';\n  popperStyles[transformProp] = '';\n\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement, data.positionFixed);\n\n  // NOTE: DOM access here\n  // restores the original style properties after the offsets have been computed\n  popperStyles.top = top;\n  popperStyles.left = left;\n  popperStyles[transformProp] = transform;\n\n  options.boundaries = boundaries;\n\n  var order = options.priority;\n  var popper = data.offsets.popper;\n\n  var check = {\n    primary: function primary(placement) {\n      var value = popper[placement];\n      if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {\n        value = Math.max(popper[placement], boundaries[placement]);\n      }\n      return defineProperty({}, placement, value);\n    },\n    secondary: function secondary(placement) {\n      var mainSide = placement === 'right' ? 'left' : 'top';\n      var value = popper[mainSide];\n      if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {\n        value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));\n      }\n      return defineProperty({}, mainSide, value);\n    }\n  };\n\n  order.forEach(function (placement) {\n    var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\n    popper = _extends({}, popper, check[side](placement));\n  });\n\n  data.offsets.popper = popper;\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction shift(data) {\n  var placement = data.placement;\n  var basePlacement = placement.split('-')[0];\n  var shiftvariation = placement.split('-')[1];\n\n  // if shift shiftvariation is specified, run the modifier\n  if (shiftvariation) {\n    var _data$offsets = data.offsets,\n        reference = _data$offsets.reference,\n        popper = _data$offsets.popper;\n\n    var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n    var side = isVertical ? 'left' : 'top';\n    var measurement = isVertical ? 'width' : 'height';\n\n    var shiftOffsets = {\n      start: defineProperty({}, side, reference[side]),\n      end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])\n    };\n\n    data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);\n  }\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction hide(data) {\n  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n    return data;\n  }\n\n  var refRect = data.offsets.reference;\n  var bound = find(data.instance.modifiers, function (modifier) {\n    return modifier.name === 'preventOverflow';\n  }).boundaries;\n\n  if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === true) {\n      return data;\n    }\n\n    data.hide = true;\n    data.attributes['x-out-of-boundaries'] = '';\n  } else {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === false) {\n      return data;\n    }\n\n    data.hide = false;\n    data.attributes['x-out-of-boundaries'] = false;\n  }\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction inner(data) {\n  var placement = data.placement;\n  var basePlacement = placement.split('-')[0];\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n\n  var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n\n  popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n\n  data.placement = getOppositePlacement(placement);\n  data.offsets.popper = getClientRect(popper);\n\n  return data;\n}\n\n/**\n * Modifier function, each modifier can have a function of this type assigned\n * to its `fn` property.<br />\n * These functions will be called on each update, this means that you must\n * make sure they are performant enough to avoid performance bottlenecks.\n *\n * @function ModifierFn\n * @argument {dataObject} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {dataObject} The data object, properly modified\n */\n\n/**\n * Modifiers are plugins used to alter the behavior of your poppers.<br />\n * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\n * needed by the library.\n *\n * Usually you don't want to override the `order`, `fn` and `onLoad` props.\n * All the other properties are configurations that could be tweaked.\n * @namespace modifiers\n */\nvar modifiers = {\n  /**\n   * Modifier used to shift the popper on the start or end of its reference\n   * element.<br />\n   * It will read the variation of the `placement` property.<br />\n   * It can be one either `-end` or `-start`.\n   * @memberof modifiers\n   * @inner\n   */\n  shift: {\n    /** @prop {number} order=100 - Index used to define the order of execution */\n    order: 100,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: shift\n  },\n\n  /**\n   * The `offset` modifier can shift your popper on both its axis.\n   *\n   * It accepts the following units:\n   * - `px` or unitless, interpreted as pixels\n   * - `%` or `%r`, percentage relative to the length of the reference element\n   * - `%p`, percentage relative to the length of the popper element\n   * - `vw`, CSS viewport width unit\n   * - `vh`, CSS viewport height unit\n   *\n   * For length is intended the main axis relative to the placement of the popper.<br />\n   * This means that if the placement is `top` or `bottom`, the length will be the\n   * `width`. In case of `left` or `right`, it will be the height.\n   *\n   * You can provide a single value (as `Number` or `String`), or a pair of values\n   * as `String` divided by a comma or one (or more) white spaces.<br />\n   * The latter is a deprecated method because it leads to confusion and will be\n   * removed in v2.<br />\n   * Additionally, it accepts additions and subtractions between different units.\n   * Note that multiplications and divisions aren't supported.\n   *\n   * Valid examples are:\n   * ```\n   * 10\n   * '10%'\n   * '10, 10'\n   * '10%, 10'\n   * '10 + 10%'\n   * '10 - 5vh + 3%'\n   * '-10px + 5vh, 5px - 6%'\n   * ```\n   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\n   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\n   * > More on this [reading this issue](https://github.com/FezVrasta/popper.js/issues/373)\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  offset: {\n    /** @prop {number} order=200 - Index used to define the order of execution */\n    order: 200,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: offset,\n    /** @prop {Number|String} offset=0\n     * The offset value as described in the modifier description\n     */\n    offset: 0\n  },\n\n  /**\n   * Modifier used to prevent the popper from being positioned outside the boundary.\n   *\n   * An scenario exists where the reference itself is not within the boundaries.<br />\n   * We can say it has \"escaped the boundaries\" — or just \"escaped\".<br />\n   * In this case we need to decide whether the popper should either:\n   *\n   * - detach from the reference and remain \"trapped\" in the boundaries, or\n   * - if it should ignore the boundary and \"escape with its reference\"\n   *\n   * When `escapeWithReference` is set to`true` and reference is completely\n   * outside its boundaries, the popper will overflow (or completely leave)\n   * the boundaries in order to remain attached to the edge of the reference.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  preventOverflow: {\n    /** @prop {number} order=300 - Index used to define the order of execution */\n    order: 300,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: preventOverflow,\n    /**\n     * @prop {Array} [priority=['left','right','top','bottom']]\n     * Popper will try to prevent overflow following these priorities by default,\n     * then, it could overflow on the left and on top of the `boundariesElement`\n     */\n    priority: ['left', 'right', 'top', 'bottom'],\n    /**\n     * @prop {number} padding=5\n     * Amount of pixel used to define a minimum distance between the boundaries\n     * and the popper this makes sure the popper has always a little padding\n     * between the edges of its container\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='scrollParent'\n     * Boundaries used by the modifier, can be `scrollParent`, `window`,\n     * `viewport` or any DOM element.\n     */\n    boundariesElement: 'scrollParent'\n  },\n\n  /**\n   * Modifier used to make sure the reference and its popper stay near eachothers\n   * without leaving any gap between the two. Expecially useful when the arrow is\n   * enabled and you want to assure it to point to its reference element.\n   * It cares only about the first axis, you can still have poppers with margin\n   * between the popper and its reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  keepTogether: {\n    /** @prop {number} order=400 - Index used to define the order of execution */\n    order: 400,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: keepTogether\n  },\n\n  /**\n   * This modifier is used to move the `arrowElement` of the popper to make\n   * sure it is positioned between the reference element and its popper element.\n   * It will read the outer size of the `arrowElement` node to detect how many\n   * pixels of conjuction are needed.\n   *\n   * It has no effect if no `arrowElement` is provided.\n   * @memberof modifiers\n   * @inner\n   */\n  arrow: {\n    /** @prop {number} order=500 - Index used to define the order of execution */\n    order: 500,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: arrow,\n    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\n    element: '[x-arrow]'\n  },\n\n  /**\n   * Modifier used to flip the popper's placement when it starts to overlap its\n   * reference element.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   *\n   * **NOTE:** this modifier will interrupt the current update cycle and will\n   * restart it if it detects the need to flip the placement.\n   * @memberof modifiers\n   * @inner\n   */\n  flip: {\n    /** @prop {number} order=600 - Index used to define the order of execution */\n    order: 600,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: flip,\n    /**\n     * @prop {String|Array} behavior='flip'\n     * The behavior used to change the popper's placement. It can be one of\n     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\n     * placements (with optional variations).\n     */\n    behavior: 'flip',\n    /**\n     * @prop {number} padding=5\n     * The popper will flip if it hits the edges of the `boundariesElement`\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='viewport'\n     * The element which will define the boundaries of the popper position,\n     * the popper will never be placed outside of the defined boundaries\n     * (except if keepTogether is enabled)\n     */\n    boundariesElement: 'viewport'\n  },\n\n  /**\n   * Modifier used to make the popper flow toward the inner of the reference element.\n   * By default, when this modifier is disabled, the popper will be placed outside\n   * the reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  inner: {\n    /** @prop {number} order=700 - Index used to define the order of execution */\n    order: 700,\n    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\n    enabled: false,\n    /** @prop {ModifierFn} */\n    fn: inner\n  },\n\n  /**\n   * Modifier used to hide the popper when its reference element is outside of the\n   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\n   * be used to hide with a CSS selector the popper when its reference is\n   * out of boundaries.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   * @memberof modifiers\n   * @inner\n   */\n  hide: {\n    /** @prop {number} order=800 - Index used to define the order of execution */\n    order: 800,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: hide\n  },\n\n  /**\n   * Computes the style that will be applied to the popper element to gets\n   * properly positioned.\n   *\n   * Note that this modifier will not touch the DOM, it just prepares the styles\n   * so that `applyStyle` modifier can apply it. This separation is useful\n   * in case you need to replace `applyStyle` with a custom implementation.\n   *\n   * This modifier has `850` as `order` value to maintain backward compatibility\n   * with previous versions of Popper.js. Expect the modifiers ordering method\n   * to change in future major versions of the library.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  computeStyle: {\n    /** @prop {number} order=850 - Index used to define the order of execution */\n    order: 850,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: computeStyle,\n    /**\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3d transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties.\n     */\n    gpuAcceleration: true,\n    /**\n     * @prop {string} [x='bottom']\n     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\n     * Change this if your popper should grow in a direction different from `bottom`\n     */\n    x: 'bottom',\n    /**\n     * @prop {string} [x='left']\n     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\n     * Change this if your popper should grow in a direction different from `right`\n     */\n    y: 'right'\n  },\n\n  /**\n   * Applies the computed styles to the popper element.\n   *\n   * All the DOM manipulations are limited to this modifier. This is useful in case\n   * you want to integrate Popper.js inside a framework or view library and you\n   * want to delegate all the DOM manipulations to it.\n   *\n   * Note that if you disable this modifier, you must make sure the popper element\n   * has its position set to `absolute` before Popper.js can do its work!\n   *\n   * Just disable this modifier and define you own to achieve the desired effect.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  applyStyle: {\n    /** @prop {number} order=900 - Index used to define the order of execution */\n    order: 900,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: applyStyle,\n    /** @prop {Function} */\n    onLoad: applyStyleOnLoad,\n    /**\n     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3d transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties.\n     */\n    gpuAcceleration: undefined\n  }\n};\n\n/**\n * The `dataObject` is an object containing all the informations used by Popper.js\n * this object get passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\n * @name dataObject\n * @property {Object} data.instance The Popper.js instance\n * @property {String} data.placement Placement applied to popper\n * @property {String} data.originalPlacement Placement originally defined on init\n * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\n * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper.\n * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\n * @property {Object} data.styles Any CSS property defined here will be applied to the popper, it expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow, it expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.boundaries Offsets of the popper boundaries\n * @property {Object} data.offsets The measurements of popper, reference and arrow elements.\n * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\n */\n\n/**\n * Default options provided to Popper.js constructor.<br />\n * These can be overriden using the `options` argument of Popper.js.<br />\n * To override an option, simply pass as 3rd argument an object with the same\n * structure of this object, example:\n * ```\n * new Popper(ref, pop, {\n *   modifiers: {\n *     preventOverflow: { enabled: false }\n *   }\n * })\n * ```\n * @type {Object}\n * @static\n * @memberof Popper\n */\nvar Defaults = {\n  /**\n   * Popper's placement\n   * @prop {Popper.placements} placement='bottom'\n   */\n  placement: 'bottom',\n\n  /**\n   * Set this to true if you want popper to position it self in 'fixed' mode\n   * @prop {Boolean} positionFixed=false\n   */\n  positionFixed: false,\n\n  /**\n   * Whether events (resize, scroll) are initially enabled\n   * @prop {Boolean} eventsEnabled=true\n   */\n  eventsEnabled: true,\n\n  /**\n   * Set to true if you want to automatically remove the popper when\n   * you call the `destroy` method.\n   * @prop {Boolean} removeOnDestroy=false\n   */\n  removeOnDestroy: false,\n\n  /**\n   * Callback called when the popper is created.<br />\n   * By default, is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onCreate}\n   */\n  onCreate: function onCreate() {},\n\n  /**\n   * Callback called when the popper is updated, this callback is not called\n   * on the initialization/creation of the popper, but only on subsequent\n   * updates.<br />\n   * By default, is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onUpdate}\n   */\n  onUpdate: function onUpdate() {},\n\n  /**\n   * List of modifiers used to modify the offsets before they are applied to the popper.\n   * They provide most of the functionalities of Popper.js\n   * @prop {modifiers}\n   */\n  modifiers: modifiers\n};\n\n/**\n * @callback onCreate\n * @param {dataObject} data\n */\n\n/**\n * @callback onUpdate\n * @param {dataObject} data\n */\n\n// Utils\n// Methods\nvar Popper = function () {\n  /**\n   * Create a new Popper.js instance\n   * @class Popper\n   * @param {HTMLElement|referenceObject} reference - The reference element used to position the popper\n   * @param {HTMLElement} popper - The HTML element used as popper.\n   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\n   * @return {Object} instance - The generated Popper.js instance\n   */\n  function Popper(reference, popper) {\n    var _this = this;\n\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    classCallCheck(this, Popper);\n\n    this.scheduleUpdate = function () {\n      return requestAnimationFrame(_this.update);\n    };\n\n    // make update() debounced, so that it only runs at most once-per-tick\n    this.update = debounce(this.update.bind(this));\n\n    // with {} we create a new object with the options inside it\n    this.options = _extends({}, Popper.Defaults, options);\n\n    // init state\n    this.state = {\n      isDestroyed: false,\n      isCreated: false,\n      scrollParents: []\n    };\n\n    // get reference and popper elements (allow jQuery wrappers)\n    this.reference = reference && reference.jquery ? reference[0] : reference;\n    this.popper = popper && popper.jquery ? popper[0] : popper;\n\n    // Deep merge modifiers options\n    this.options.modifiers = {};\n    Object.keys(_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {\n      _this.options.modifiers[name] = _extends({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});\n    });\n\n    // Refactoring modifiers' list (Object => Array)\n    this.modifiers = Object.keys(this.options.modifiers).map(function (name) {\n      return _extends({\n        name: name\n      }, _this.options.modifiers[name]);\n    })\n    // sort the modifiers by order\n    .sort(function (a, b) {\n      return a.order - b.order;\n    });\n\n    // modifiers have the ability to execute arbitrary code when Popper.js get inited\n    // such code is executed in the same order of its modifier\n    // they could add new properties to their options configuration\n    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n    this.modifiers.forEach(function (modifierOptions) {\n      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n        modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);\n      }\n    });\n\n    // fire the first update to position the popper in the right place\n    this.update();\n\n    var eventsEnabled = this.options.eventsEnabled;\n    if (eventsEnabled) {\n      // setup event listeners, they will take care of update the position in specific situations\n      this.enableEventListeners();\n    }\n\n    this.state.eventsEnabled = eventsEnabled;\n  }\n\n  // We can't use class properties because they don't get listed in the\n  // class prototype and break stuff like Sinon stubs\n\n\n  createClass(Popper, [{\n    key: 'update',\n    value: function update$$1() {\n      return update.call(this);\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy$$1() {\n      return destroy.call(this);\n    }\n  }, {\n    key: 'enableEventListeners',\n    value: function enableEventListeners$$1() {\n      return enableEventListeners.call(this);\n    }\n  }, {\n    key: 'disableEventListeners',\n    value: function disableEventListeners$$1() {\n      return disableEventListeners.call(this);\n    }\n\n    /**\n     * Schedule an update, it will run on the next UI update available\n     * @method scheduleUpdate\n     * @memberof Popper\n     */\n\n\n    /**\n     * Collection of utilities useful when writing custom modifiers.\n     * Starting from version 1.7, this method is available only if you\n     * include `popper-utils.js` before `popper.js`.\n     *\n     * **DEPRECATION**: This way to access PopperUtils is deprecated\n     * and will be removed in v2! Use the PopperUtils module directly instead.\n     * Due to the high instability of the methods contained in Utils, we can't\n     * guarantee them to follow semver. Use them at your own risk!\n     * @static\n     * @private\n     * @type {Object}\n     * @deprecated since version 1.8\n     * @member Utils\n     * @memberof Popper\n     */\n\n  }]);\n  return Popper;\n}();\n\n/**\n * The `referenceObject` is an object that provides an interface compatible with Popper.js\n * and lets you use it as replacement of a real DOM node.<br />\n * You can use this method to position a popper relatively to a set of coordinates\n * in case you don't have a DOM node to use as reference.\n *\n * ```\n * new Popper(referenceObject, popperNode);\n * ```\n *\n * NB: This feature isn't supported in Internet Explorer 10\n * @name referenceObject\n * @property {Function} data.getBoundingClientRect\n * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\n * @property {number} data.clientWidth\n * An ES6 getter that will return the width of the virtual reference element.\n * @property {number} data.clientHeight\n * An ES6 getter that will return the height of the virtual reference element.\n */\n\n\nPopper.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\nPopper.placements = placements;\nPopper.Defaults = Defaults;\n\nexport default Popper;\n//# sourceMappingURL=popper.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/popper.js/dist/esm/popper.js\n// module id = 173\n// module chunks = 1 3 4 5 6 18 22 39 88","/**\n * The `IQuickviewLoadedEventArgs` interface describes the object that all\n * [`quickviewLoaded`]{@link QuickviewEvents.quickviewLoaded} event handlers receive as an argument.\n */\nexport interface IQuickviewLoadedEventArgs {\n  /**\n   * The amount of time it took to download the content to display in the quickview modal window (in milliseconds).\n   */\n  duration: number;\n}\n\n/**\n * The `QuickviewEvents` static class contains the string definitions of all events that strongly relate to the\n * [`Quickview`]{@link Quickview} component.\n */\nexport class QuickviewEvents {\n  /**\n   * Triggered by the [`QuickviewDocument`]{@link QuickviewDocument} component when the content to display in the\n   * quickview modal window has just finished downloading.\n   *\n   * The [`Quickview`]{@link Quickview} component listens to this event to know when to remove its loading animation.\n   *\n   * All `quickviewLoaded` event handlers receive a [`QuickviewLoadedEventArgs`]{@link IQuickviewLoadedEventArgs} object\n   * as an argument.\n   *\n   * @type {string} The string value is `quickviewLoaded`.\n   */\n  public static quickviewLoaded = 'quickviewLoaded';\n\n  /**\n   * Triggered by the [`QuickviewDocument`]{@link QuickviewDocument} component when the end user has just clicked the\n   * **Quickview** button/link to open the quickview modal window.\n   *\n   * This event allows external code to modify the terms to highlight before the content of the quickview modal window\n   * is rendered.\n   *\n   * All `openQuickview` event handlers receive an\n   * [`OpenQuickviewEventArgs`]{@link ResultListEvents.IOpenQuickviewEventArgs} object as an argument.\n   *\n   * @type {string} The string value is `openQuickview`.\n   */\n  public static openQuickview = 'openQuickview';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/events/QuickviewEvents.ts","import { IQuickviewLoadedEventArgs, QuickviewEvents } from '../../events/QuickviewEvents';\nimport { IOpenQuickviewEventArgs } from '../../events/ResultListEvents';\nimport { Assert } from '../../misc/Assert';\nimport { IQuery } from '../../rest/Query';\nimport { IQueryResult } from '../../rest/QueryResult';\nimport { IViewAsHtmlOptions } from '../../rest/SearchEndpointInterface';\nimport { $$ } from '../../utils/Dom';\nimport { Utils } from '../../utils/Utils';\nimport { Component } from '../Base/Component';\nimport { IComponentBindings } from '../Base/ComponentBindings';\nimport { ComponentOptions } from '../Base/ComponentOptions';\nimport { Initialization } from '../Base/Initialization';\nimport { QuickviewDocumentIframe } from './QuickviewDocumentIframe';\nimport { QuickviewDocumentHeader } from './QuickviewDocumentHeader';\nimport { QuickviewDocumentWords } from './QuickviewDocumentWords';\nimport { each, keys } from 'underscore';\nimport { QuickviewDocumentWordButton } from './QuickviewDocumentWordButton';\nimport { QuickviewDocumentPreviewBar } from './QuickviewDocumentPreviewBar';\n\nexport const HIGHLIGHT_PREFIX = 'CoveoHighlight';\n\nexport interface IQuickviewDocumentOptions {\n  maximumDocumentSize?: number;\n}\n\n/**\n * The `QuickviewDocument` component normally exists within a [`Quickview`]{@link Quickview} component. The sole purpose\n * of this component is to add an `<iframe>` which loads the correct HTML version of the current item.\n *\n * The default [`contentTemplate`]{@link Quickview.options.contentTemplate} of the\n * `Quickview` component includes the `QuickviewDocument` component.\n *\n * This component is a result template component (see [Result Templates](https://docs.coveo.com/en/413/)).\n */\nexport class QuickviewDocument extends Component {\n  static ID = 'QuickviewDocument';\n\n  /**\n   * The options for the component\n   * @componentOptions\n   */\n  static options: IQuickviewDocumentOptions = {\n    /**\n     * Specifies the maximum preview size that the index should return.\n     *\n     * Default value is `0`, and the index returns the entire preview. Minimum value is `0`.\n     */\n    maximumDocumentSize: ComponentOptions.buildNumberOption({ defaultValue: 0, min: 0 })\n  };\n\n  private iframe: QuickviewDocumentIframe;\n  private header: QuickviewDocumentHeader;\n\n  /**\n   * Creates a new `QuickviewDocument` component.\n   * @param element The HTMLElement on which to instantiate the component.\n   * @param options The options for the `QuickviewDocument` component.\n   * @param bindings The bindings that the component requires to function normally. If not set, these will be\n   * automatically resolved (with a slower execution time).\n   * @param result The current result.\n   */\n  constructor(\n    public element: HTMLElement,\n    public options?: IQuickviewDocumentOptions,\n    bindings?: IComponentBindings,\n    public result?: IQueryResult\n  ) {\n    super(element, QuickviewDocument.ID, bindings);\n\n    this.options = ComponentOptions.initComponentOptions(element, QuickviewDocument, options);\n\n    this.result = result || this.resolveResult();\n    Assert.exists(this.result);\n  }\n\n  public createDom() {\n    const container = $$('div', {\n      className: 'coveo-quickview-document'\n    });\n    this.element.appendChild(container.el);\n\n    this.header = new QuickviewDocumentHeader();\n    this.iframe = new QuickviewDocumentIframe();\n\n    container.append(this.header.el);\n    container.append(this.iframe.el);\n  }\n\n  public async open() {\n    this.ensureDom();\n\n    const beforeLoad = new Date().getTime();\n    const termsToHighlight = this.initialTermsToHighlight;\n\n    this.triggerOpenQuickViewEvent({ termsToHighlight });\n\n    const termsWereModified = this.wereTermsToHighlightModified(termsToHighlight);\n\n    if (termsWereModified) {\n      this.handleTermsToHighlight(termsToHighlight, this.query);\n    }\n\n    try {\n      const documentHTML = await this.queryController.getEndpoint().getDocumentHtml(this.result.uniqueId, {\n        queryObject: this.query,\n        requestedOutputSize: this.options.maximumDocumentSize\n      } as IViewAsHtmlOptions);\n\n      await this.iframe.render(documentHTML, this.result.title);\n\n      const documentWords = new QuickviewDocumentWords(this.iframe, this.result);\n      const previewBar = new QuickviewDocumentPreviewBar(this.iframe, documentWords);\n\n      each(documentWords.words, word => {\n        const button = new QuickviewDocumentWordButton(word, previewBar, this.iframe);\n        this.header.addWord(button);\n      });\n\n      const afterLoad = new Date().getTime();\n\n      this.triggerQuickviewLoaded(afterLoad - beforeLoad);\n    } catch (error) {\n      await this.iframe.renderError(error);\n      const afterLoad = new Date().getTime();\n\n      this.triggerQuickviewLoaded(afterLoad - beforeLoad);\n    }\n  }\n\n  private get initialTermsToHighlight() {\n    return keys(this.result.termsToHighlight);\n  }\n\n  private triggerOpenQuickViewEvent(args: IOpenQuickviewEventArgs) {\n    $$(this.root).trigger(QuickviewEvents.openQuickview, args);\n  }\n\n  private get query() {\n    return { ...this.queryController.getLastQuery() };\n  }\n\n  private triggerQuickviewLoaded(duration: number) {\n    $$(this.element).trigger(QuickviewEvents.quickviewLoaded, {\n      duration\n    } as IQuickviewLoadedEventArgs);\n  }\n\n  private handleTermsToHighlight(termsToHighlight: string[], queryObject: IQuery) {\n    for (const term in this.result.termsToHighlight) {\n      delete this.result.termsToHighlight[term];\n    }\n    let query = '';\n    each(termsToHighlight, term => {\n      query += term + ' ';\n      this.result.termsToHighlight[term] = [term];\n    });\n    query = query.substring(0, query.length - 1);\n    queryObject.q = query;\n  }\n\n  private wereTermsToHighlightModified(termsToHighlight: string[]) {\n    return !Utils.arrayEqual(termsToHighlight, this.initialTermsToHighlight);\n  }\n}\n\nInitialization.registerAutoCreateComponent(QuickviewDocument);\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/Quickview/QuickviewDocument.ts","import PopperJs from 'popper.js';\nimport 'styling/_Quickview';\nimport { QuickviewEvents } from '../../events/QuickviewEvents';\nimport { ResultListEvents } from '../../events/ResultListEvents';\nimport { ModalBox as ModalBoxModule } from '../../ExternalModulesShim';\nimport { exportGlobally } from '../../GlobalExports';\nimport { QueryStateModel } from '../../models/QueryStateModel';\nimport { IQueryResult } from '../../rest/QueryResult';\nimport { l } from '../../strings/Strings';\nimport { AccessibleButton } from '../../utils/AccessibleButton';\nimport { $$, Dom } from '../../utils/Dom';\nimport { DomUtils } from '../../utils/DomUtils';\nimport { StringUtils } from '../../utils/StringUtils';\nimport { SVGDom } from '../../utils/SVGDom';\nimport { SVGIcons } from '../../utils/SVGIcons';\nimport { Utils } from '../../utils/Utils';\nimport { analyticsActionCauseList } from '../Analytics/AnalyticsActionListMeta';\nimport { Component } from '../Base/Component';\nimport { ComponentOptions } from '../Base/ComponentOptions';\nimport { ComponentOptionsType } from '../Base/IComponentOptions';\nimport { IInitializationParameters, Initialization } from '../Base/Initialization';\nimport { IResultsComponentBindings } from '../Base/ResultsComponentBindings';\nimport { TemplateComponentOptions } from '../Base/TemplateComponentOptions';\nimport { Template } from '../Templates/Template';\nimport { DefaultQuickviewTemplate } from './DefaultQuickviewTemplate';\nimport { QuickviewDocument } from './QuickviewDocument';\nimport { AccessibleModal } from '../../utils/AccessibleModal';\n\n/**\n * The allowed [`Quickview`]{@link Quickview} [`tooltipPlacement`]{@link Quickview.options.tooltipPlacement} option values. The `-start` and `-end` variations indicate relative alignement. Horizontally (`top`, `bottom`), `-start` means _left_ and `-end` means _right_. Vertically (`left`, `right`), `-start` means _top_ and `-end` means _bottom_. No variation means _center_.\n */\nexport type ValidTooltipPlacement =\n  | 'auto-start'\n  | 'auto'\n  | 'auto-end'\n  | 'top-start'\n  | 'top'\n  | 'top-end'\n  | 'right-start'\n  | 'right'\n  | 'right-end'\n  | 'bottom-end'\n  | 'bottom'\n  | 'bottom-start'\n  | 'left-end'\n  | 'left'\n  | 'left-start';\n\nexport interface IQuickviewOptions {\n  title?: string;\n  showDate?: boolean;\n  contentTemplate?: Template;\n  enableLoadingAnimation?: boolean;\n  loadingAnimation?: HTMLElement | Promise<HTMLElement>;\n  alwaysShow?: boolean;\n  tooltipPlacement?: ValidTooltipPlacement;\n}\n\ninterface IQuickviewOpenerObject {\n  content: Promise<Dom>;\n  loadingAnimation: HTMLElement | Promise<HTMLElement>;\n}\n\n/**\n * The `Quickview` component renders a button/link which the end user can click to open a modal box containing certain\n * information about a result. Most of the time, this component references a\n * [`QuickviewDocument`]{@link QuickviewDocument} in its [`contentTemplate`]{@link Quickview.options.contentTemplate}.\n *\n * **Notes:**\n * > - `Quickview` is not meant to replace a [ResultLink]{@link ResultLink} to access an item; it has certain limitations (e.g., custom styles and embedded\n * images/links may not work as expected in a `Quickview`).\n * > - You can change the appearance of the `Quickview` link/button by adding elements in the inner HTML of its `div`.\n * > - You can change the content of the `Quickview` modal box link by specifying a template `id` or CSS selector (see\n * > the [`contentTemplate`]{@link Quickview.options.contentTemplate} option).\n * > - When using Coveo for Salesforce 3.16, in an environment compliant with LockerService, ensure you use `CoveoSalesforceQuickview` (see [Changing the Default Quick View in Coveo for Salesforce](https://docs.coveo.com/en/1234/)).\n *\n * **Example:**\n * ```html\n * [ ... ]\n *\n * <script class='result-template' type='text/underscore' id='myContentTemplateId'>\n *   <div>\n *     <span>This content will be displayed when then end user opens the quickview modal box. It could also include other Coveo component, and use core helpers.</span>\n *     <table class=\"CoveoFieldTable\">\n *       <tr data-field=\"@liboardshorttitle\" data-caption=\"Board\" />\n *       <tr data-field=\"@licategoryshorttitle\" data-caption=\"Category\" />\n *       <tr data-field=\"@sysauthor\" data-caption=\"Author\" />\n *     </table>\n *   </div>\n * </script>\n *\n * [ ... ]\n *\n * <div class='CoveoResultList'>\n *   <script class='result-template' type='text/underscore' id='myResultTemplateId'>\n *\n *   [ ... ]\n *\n *     <!-- The `myContentTemplateId` template applies when displaying content in the quickview modal box. -->\n *       <div class='CoveoQuickview' data-template-id='myContentTemplateId'>\n *         <!-- This changes the appearance of the Quickview button itself in the results -->\n *         <span>Click here for a quickview</span>\n *       </div>\n *   </script>\n *\n *   [ ... ]\n *\n * <!-- Note that simply including `<div class='CoveoQuickview'></div>` in the markup will be enough most of the time, since the component includes a default template and a default button appearance. -->\n * ```\n *\n * This component is a result template component (see [Result Templates](https://docs.coveo.com/en/413/)).\n */\nexport class Quickview extends Component {\n  static ID = 'Quickview';\n\n  static doExport = () => {\n    exportGlobally({\n      Quickview: Quickview,\n      QuickviewDocument: QuickviewDocument\n    });\n  };\n\n  /**\n   * @componentOptions\n   */\n  static options: IQuickviewOptions = {\n    /**\n     * Specifies whether to always show the `Quickview` button/link, even when the index body of an item is empty.\n     *\n     * In such cases, the [`contentTemplate`]{@link Quickview.options.contentTemplate} defines what appears in the\n     * `Quickview` modal box. Consequently, if there is no quickview for the item, you *MUST* specify a custom\n     * `contentTemplate`, otherwise the component will throw an error when opened.\n     *\n     * Default value is `false`.\n     *\n     * @availablesince [September 2015 Release (v1.0.59)](https://docs.coveo.com/en/289/#september-2015-release-v1059)\n     */\n    alwaysShow: ComponentOptions.buildBooleanOption({ defaultValue: false }),\n\n    /**\n     * Specifies the title that should appear in the `Quickview` modal box header.\n     *\n     * Default value is undefined, which is equivalent to the empty string.\n     */\n    title: ComponentOptions.buildStringOption(),\n\n    /**\n     * Specifies whether to display the item date in the `Quickview` modal box header.\n     *\n     * Default value is `true`.\n     */\n    showDate: ComponentOptions.buildBooleanOption({ defaultValue: true }),\n\n    /**\n     * Specifies whether to enable the loading animation.\n     *\n     * See also [`loadingAnimation`]{Quickview.options.loadingAnimation}.\n     *\n     * Default value is `true`.\n     */\n    enableLoadingAnimation: ComponentOptions.buildBooleanOption({ defaultValue: true }),\n\n    /**\n     * Specifies a custom template to use when displaying content in the `Quickview` modal box.\n     *\n     * **Note:**\n     * > You can use [`CoreHelpers`]{@link ICoreHelpers} methods in your content template.\n     *\n     * You can specify a previously registered template to use either by referring to its HTML `id` attribute or to a\n     * CSS selector (see [`TemplateCache`]{@link TemplateCache}).\n     *\n     * **Example:**\n     *\n     * * Specifying a previously registered template by referring to its HTML `id` attribute:\n     *\n     * ```html\n     * <div class=\"CoveoQuickview\" data-template-id=\"myContentTemplateId\"></div>\n     * ```\n     *\n     * * Specifying a previously registered template by referring to a CSS selector:\n     *\n     * ```html\n     * <div class='CoveoQuickview' data-template-selector=\".myContentTemplateSelector\"></div>\n     * ```\n     *\n     * If you do not specify a custom content template, the component uses its default template.\n     */\n    contentTemplate: TemplateComponentOptions.buildTemplateOption({\n      selectorAttr: 'data-template-selector',\n      idAttr: 'data-template-id'\n    }),\n\n    /**\n     * If [`enableLoadingAnimation`]{@link Quickview.options.enableLoadingAnimation} is `true`, specifies a custom\n     * animation to display while the content of the quickview modal window is loading. You can either specify the CSS\n     * selector of the HTML element you wish to display, or the `id` of a previously registered template (see\n     * [`TemplateCache`]{@link TemplateCache}).\n     *\n     * See [Customizing the Quickview Loading Animation](https://docs.coveo.com/en/296/#customizing-the-quickview-loading-animation).\n     *\n     * **Examples:**\n     *\n     * * Specifying the CSS selector of the HTML element to display:\n     *\n     * ```html\n     * <div class=\"CoveoQuickview\" data-loading-animation-selector=\".my-loading-animation\"></div>\n     * ```\n     *\n     * * Specifying the `id` of a previously registered template:\n     *\n     * ```html\n     * <div class=\"CoveoQuickview\" data-loading-animation-template-id=\"my-loading-animation-template\"></div>\n     * ```\n     *\n     * By default, the loading animation is a Coveo animation, which you can customize with CSS (see\n     * [Customizing the Default Loading Animation](https://docs.coveo.com/en/296/#customizing-the-default-search-page-animation).\n     */\n    loadingAnimation: ComponentOptions.buildOption<HTMLElement | Promise<HTMLElement>>(\n      ComponentOptionsType.NONE,\n      (element: HTMLElement) => {\n        const loadingAnimationSelector = element.getAttribute('data-loading-animation-selector');\n        if (loadingAnimationSelector != null) {\n          const loadingAnimation = $$(document.documentElement).find(loadingAnimationSelector);\n          if (loadingAnimation != null) {\n            $$(loadingAnimation).detach();\n            return loadingAnimation;\n          }\n        }\n        const id = element.getAttribute('data-loading-animation-template-id');\n        if (id != null) {\n          const loadingAnimationTemplate = TemplateComponentOptions.loadResultTemplateFromId(id);\n          if (loadingAnimationTemplate) {\n            return loadingAnimationTemplate.instantiateToElement(undefined, {\n              checkCondition: false\n            });\n          }\n        }\n        return DomUtils.getBasicLoadingAnimation();\n      }\n    ),\n\n    /**\n     * Specifies the emplacement of the tooltip in relation to the `Quickview` HTML element.\n     *\n     * **Example:**\n     * > Setting this option to `top-start` will make the tooltip appear on top of the `Quickview` button, aligned to the left.\n     *\n     * @availablesince [January 2019 Release (v2.5395.12)](https://docs.coveo.com/en/2938/)\n     */\n    tooltipPlacement: ComponentOptions.buildCustomOption<ValidTooltipPlacement>((value: ValidTooltipPlacement) => value, {\n      defaultValue: 'bottom'\n    })\n  };\n\n  public static resultCurrentlyBeingRendered: IQueryResult = null;\n\n  private modalbox: AccessibleModal;\n\n  /**\n   * Creates a new `Quickview` component.\n   * @param element The HTMLElement on which to instantiate the component.\n   * @param options The options for the `Quickview` component.\n   * @param bindings The bindings that the component requires to function normally. If not set, these will be\n   * automatically resolved (with a slower execution time).\n   * @param result The result to associate the component with.\n   * @param ModalBox The quickview modal box.\n   */\n  constructor(\n    public element: HTMLElement,\n    public options?: IQuickviewOptions,\n    public bindings?: IResultsComponentBindings,\n    public result?: IQueryResult,\n    ModalBox: Coveo.ModalBox.ModalBox = ModalBoxModule\n  ) {\n    super(element, Quickview.ID, bindings);\n    this.options = ComponentOptions.initComponentOptions(element, Quickview, options);\n\n    if (this.options.contentTemplate == null) {\n      this.options.contentTemplate = new DefaultQuickviewTemplate();\n    }\n\n    // If there is no content inside the Quickview div,\n    // we need to add something that will show up in the result template itself\n    if (/^\\s*$/.test(this.element.innerHTML)) {\n      this.buildContent();\n    }\n\n    this.bindClick(result);\n    if (this.bindings.resultElement) {\n      this.bind.on(this.bindings.resultElement, ResultListEvents.openQuickview, (event?: Event) => {\n        event && event.stopPropagation();\n        this.open();\n      });\n    }\n\n    this.modalbox = new AccessibleModal('coveo-quick-view', this.searchInterface.options.modalContainer, ModalBox);\n  }\n\n  private buildContent() {\n    const icon = this.buildIcon();\n    const caption = this.buildCaption();\n    const content = $$('div');\n\n    content.append(icon);\n    content.append(caption);\n    $$(this.element).append(content.el);\n\n    this.buildTooltipIfNotInCardLayout(icon, caption);\n  }\n\n  private buildIcon() {\n    const icon = $$('div', { className: 'coveo-icon-for-quickview' }, SVGIcons.icons.quickview).el;\n    SVGDom.addClassToSVGInContainer(icon, 'coveo-icon-for-quickview-svg');\n    return icon;\n  }\n\n  private buildCaption() {\n    return $$('div', { className: 'coveo-caption-for-icon' }, 'Quickview'.toLocaleString()).el;\n  }\n\n  private buildTooltipIfNotInCardLayout(icon: HTMLElement, caption: HTMLElement) {\n    if (this.resultsAreInCardLayout) {\n      return;\n    }\n\n    const arrow = $$('div').el;\n    caption.appendChild(arrow);\n    this.buildPopper(icon, caption, arrow);\n  }\n\n  private get resultsAreInCardLayout() {\n    return this.queryStateModel.get(QueryStateModel.attributesEnum.layout) === 'card';\n  }\n\n  private buildPopper(icon: HTMLElement, caption: HTMLElement, arrow: HTMLElement) {\n    const popperReference = new PopperJs(icon, caption, {\n      placement: this.options.tooltipPlacement,\n      modifiers: {\n        preventOverflow: {\n          boundariesElement: $$(this.root).el,\n          padding: 0\n        },\n        arrow: {\n          element: arrow\n        },\n        // X,Y offset of the tooltip relative to the icon\n        offset: {\n          offset: '0,8'\n        }\n      },\n      eventsEnabled: false\n    });\n\n    $$(this.element).on('mouseover', () => {\n      popperReference.update();\n    });\n  }\n\n  /**\n   * Opens the `Quickview` modal box.\n   */\n  public open() {\n    if (!this.modalbox.isOpen) {\n      // To prevent the keyboard from opening on mobile if the search bar has focus\n      Quickview.resultCurrentlyBeingRendered = this.result;\n      // activeElement does not exist in LockerService\n      if (document.activeElement && document.activeElement instanceof HTMLElement) {\n        $$(document.activeElement as HTMLElement).trigger('blur');\n      }\n\n      const openerObject = this.prepareOpenQuickviewObject();\n      return this.createModalBox(openerObject).then(() => {\n        this.bindQuickviewEvents(openerObject);\n        this.animateAndOpen();\n        this.logUsageAnalyticsEvent();\n        this.queryStateModel.set(QueryStateModel.attributesEnum.quickview, this.getHashId());\n        Quickview.resultCurrentlyBeingRendered = null;\n      });\n    }\n  }\n\n  /**\n   * Closes the `Quickview` modal box.\n   */\n  public close() {\n    if (this.modalbox.isOpen) {\n      this.modalbox.close();\n    }\n  }\n\n  public getHashId() {\n    return this.result.queryUid + '.' + this.result.index + '.' + StringUtils.hashCode(this.result.uniqueId);\n  }\n\n  private logUsageAnalyticsEvent() {\n    this.usageAnalytics.logClickEvent(\n      analyticsActionCauseList.documentQuickview,\n      {\n        author: Utils.getFieldValue(this.result, 'author'),\n        documentURL: this.result.clickUri,\n        documentTitle: this.result.title\n      },\n      this.result,\n      this.element\n    );\n  }\n\n  private bindClick(result: IQueryResult) {\n    if (typeof result.hasHtmlVersion == 'undefined' || result.hasHtmlVersion || this.options.alwaysShow) {\n      const clickAction = () => this.open();\n\n      new AccessibleButton().withElement(this.element).withSelectAction(clickAction).withLabel(l('Quickview')).withOwner(this.bind).build();\n    } else {\n      this.element.style.display = 'none';\n    }\n  }\n\n  private bindQuickviewEvents(openerObject: IQuickviewOpenerObject) {\n    $$(this.modalbox.content).on(QuickviewEvents.quickviewLoaded, async () => {\n      const anim = await openerObject.loadingAnimation;\n      $$(anim).remove();\n    });\n  }\n\n  private animateAndOpen() {\n    const quickviewDocument = $$(this.modalbox.element).find('.' + Component.computeCssClassName(QuickviewDocument));\n    if (quickviewDocument) {\n      Initialization.dispatchNamedMethodCallOrComponentCreation('open', quickviewDocument, null);\n    }\n  }\n\n  private createModalBox(openerObject: IQuickviewOpenerObject) {\n    const computedModalBoxContent = $$('div');\n    computedModalBoxContent.addClass('coveo-computed-modal-box-content');\n    return openerObject.content.then(builtContent => {\n      computedModalBoxContent.append(builtContent.el);\n      this.modalbox.openResult({\n        result: this.result,\n        options: {\n          showDate: this.options.showDate,\n          title: this.options.title\n        },\n        bindings: this.bindings,\n        content: computedModalBoxContent.el,\n        validation: () => {\n          this.closeQuickview();\n          return true;\n        },\n        origin: this.element\n      });\n      return computedModalBoxContent;\n    });\n  }\n\n  private prepareOpenQuickviewObject() {\n    const loadingAnimation = this.options.loadingAnimation;\n    return {\n      loadingAnimation: loadingAnimation,\n      content: this.prepareQuickviewContent(loadingAnimation)\n    };\n  }\n\n  private async prepareQuickviewContent(loadingAnimation: HTMLElement | Promise<HTMLElement>): Promise<Dom> {\n    const domContent = await this.instantiateTemplateToDom();\n\n    const initOptions = this.searchInterface.options;\n    const initParameters: IInitializationParameters = {\n      options: initOptions,\n      bindings: this.getBindings(),\n      result: this.result\n    };\n\n    await Initialization.automaticallyCreateComponentsInside(domContent.el, initParameters).initResult;\n\n    const containsQuickviewDocumentAndCustomAnimation = () =>\n      domContent.find(`.${Component.computeCssClassName(QuickviewDocument)}`) != undefined && this.options.enableLoadingAnimation;\n\n    if (containsQuickviewDocumentAndCustomAnimation()) {\n      if (loadingAnimation instanceof HTMLElement) {\n        domContent.prepend(loadingAnimation);\n      } else if (loadingAnimation instanceof Promise) {\n        loadingAnimation.then(anim => {\n          domContent.prepend(anim);\n        });\n      }\n    }\n    return domContent;\n  }\n\n  private async instantiateTemplateToDom(): Promise<Dom> {\n    let templateInstantiated: HTMLElement;\n    try {\n      templateInstantiated = await this.options.contentTemplate.instantiateToElement(this.result);\n    } catch (e) {\n      this.logger.warn(e);\n    } finally {\n      if (!templateInstantiated) {\n        this.logger.warn(\n          'An unexpected error happened while trying to render a custom template quickview, fallbacking on default quickview template...',\n          this.options.contentTemplate\n        );\n        templateInstantiated = await new DefaultQuickviewTemplate().instantiateToElement(this.result);\n      }\n    }\n    return $$(templateInstantiated);\n  }\n\n  private closeQuickview() {\n    this.queryStateModel.set(QueryStateModel.attributesEnum.quickview, '');\n  }\n}\nInitialization.registerAutoCreateComponent(Quickview);\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/Quickview/Quickview.ts","import { Template } from '../Templates/Template';\nimport { IQueryResult } from '../../rest/QueryResult';\n\nexport class DefaultQuickviewTemplate extends Template {\n  constructor() {\n    super();\n  }\n\n  instantiateToString(queryResult?: IQueryResult): string {\n    return '<div class=\"coveo-quick-view-full-height\"><div class=\"CoveoQuickviewDocument\"></div></div>';\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/Quickview/DefaultQuickviewTemplate.ts","import { each } from 'underscore';\nimport { DeviceUtils, l } from '../../Core';\nimport { AjaxError } from '../../rest/AjaxError';\nimport { $$, Dom } from '../../utils/Dom';\n\nexport class QuickviewDocumentIframe {\n  public el: HTMLElement;\n  private iframeElement: HTMLIFrameElement;\n\n  constructor() {\n    this.el = this.buildIFrame().el;\n  }\n\n  public get iframeHTMLElement() {\n    return this.iframeElement;\n  }\n\n  public get document() {\n    return this.iframeElement.contentWindow.document;\n  }\n\n  public get body() {\n    return this.document.body;\n  }\n\n  public get window() {\n    return this.iframeElement.contentWindow;\n  }\n\n  public isNewQuickviewDocument(): boolean {\n    const meta = $$(this.document.head).find(\"meta[name='generator']\");\n    return meta && meta.getAttribute('content') == 'pdf2htmlEX';\n  }\n\n  public render(htmlDocument: HTMLDocument, title: string): Promise<HTMLIFrameElement> {\n    if (this.quickviewIsClosedByEndUser()) {\n      return Promise.reject(null);\n    }\n\n    return new Promise((resolve, reject) => {\n      // Take care to bind the onload function before actually writing to the iframe :\n      // Safari, IE, Edge need this, otherwise the onload function is never called\n      this.iframeElement.onload = () => {\n        resolve(this.iframeElement);\n      };\n\n      this.addClientSideTweaksToIFrameStyling(htmlDocument);\n      this.writeToIFrame(htmlDocument);\n      this.iframeElement.title = title;\n    });\n  }\n\n  public renderError(error: AjaxError): Promise<HTMLIFrameElement> {\n    if (this.quickviewIsClosedByEndUser()) {\n      return Promise.reject(null);\n    }\n\n    return new Promise((resolve, reject) => {\n      let errorMessage = '';\n      switch (error.status) {\n        case 400:\n          errorMessage = l('NoQuickview');\n          break;\n        default:\n          errorMessage = l('OoopsError');\n          break;\n      }\n\n      const errorDocument = document.implementation.createHTMLDocument();\n      errorDocument.body.style.fontFamily = `Arimo, \\'Helvetica Neue\\', Helvetica, Arial, sans-serif`;\n      $$(errorDocument.body).text(errorMessage);\n\n      this.writeToIFrame(errorDocument);\n\n      resolve(this.iframeElement);\n    });\n  }\n\n  private quickviewIsClosedByEndUser() {\n    return this.iframeElement.contentDocument == null;\n  }\n\n  private buildIFrame(): Dom {\n    const iframe = $$('iframe', {\n      sandbox: 'allow-popups allow-same-origin allow-top-navigation',\n      src: 'about:blank'\n    });\n    this.iframeElement = iframe.el as HTMLIFrameElement;\n\n    const iframewrapper = $$('div', {\n      className: 'coveo-iframeWrapper'\n    });\n    iframewrapper.append(iframe.el);\n\n    return iframewrapper;\n  }\n\n  private writeToIFrame(htmlDocument: HTMLDocument) {\n    this.allowDocumentLinkToEscapeSandbox(htmlDocument);\n    this.document.open();\n    this.document.write(htmlDocument.getElementsByTagName('html')[0].outerHTML);\n    this.document.close();\n  }\n\n  private allowDocumentLinkToEscapeSandbox(htmlDocument: HTMLDocument) {\n    // On the iframe, we set the sandbox attribute to \"allow top navigation\".\n    // For this to work, we need to force all link to target _top.\n    // This is especially useful for quickview on web pages.\n    each($$(htmlDocument.body).findAll('a'), link => {\n      link.setAttribute('target', '_top');\n    });\n  }\n\n  private addClientSideTweaksToIFrameStyling(htmlDocument: HTMLDocument) {\n    const style = $$('style', { type: 'text/css' }).el as HTMLStyleElement;\n\n    // Safari on iOS forces resize iframes to fit their content, even if an explicit size\n    // is set on the iframe. Isn't that great? By chance there is a trick around it: by\n    // setting a very small size on the body and instead using min-* to set the size to\n    // 100% we're able to trick Safari from thinking it must expand the iframe. Amazed.\n    // The 'scrolling' part is required otherwise the hack doesn't work.\n    //\n    // https://stackoverflow.com/questions/23083462/how-to-get-an-iframe-to-be-responsive-in-ios-safari\n    const cssHackForIOS = `\n      body, html {\n        height: 1px !important;\n        min-height: 100%;\n        width: 1px !important;\n        min-width: 100%;\n        overflow: scroll;\n        margin: auto\n      }\n      `;\n\n    const cssText = `\n      html pre {\n        white-space: pre-wrap;\n        word-wrap: break-word;\n      }\n      body, html {\n        font-family: Arimo, 'Helvetica Neue', Helvetica, Arial, sans-serif; -webkit-text-size-adjust: none;\n      }\n      ${DeviceUtils.isIos() ? cssHackForIOS : ''}\n      `;\n\n    if (DeviceUtils.isIos()) {\n      $$(this.iframeElement).setAttribute('scrolling', 'no');\n      this.iframeElement.parentElement.style.margin = '0 0 5px 5px';\n    }\n\n    style.appendChild(document.createTextNode(cssText));\n    htmlDocument.head.appendChild(style);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/Quickview/QuickviewDocumentIframe.ts","import { $$, Dom } from '../../utils/Dom';\nimport { QuickviewDocumentWordButton } from './QuickviewDocumentWordButton';\n\nexport class QuickviewDocumentHeader {\n  public el: HTMLElement;\n\n  constructor() {\n    this.el = this.buildHeader().el;\n  }\n\n  public addWord(wordButton: QuickviewDocumentWordButton) {\n    this.el.appendChild(wordButton.el);\n  }\n\n  private buildHeader(): Dom {\n    const header = $$('div', {\n      className: 'coveo-quickview-header'\n    });\n    return header;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/Quickview/QuickviewDocumentHeader.ts","import { $$ } from '../../utils/Dom';\nimport { each } from 'underscore';\nimport { QuickviewDocumentIframe } from './QuickviewDocumentIframe';\nimport { QuickviewDocumentWord } from './QuickviewDocumentWord';\nimport { HIGHLIGHT_PREFIX } from './QuickviewDocument';\nimport { IQueryResult } from '../../rest/QueryResult';\n\nexport class QuickviewDocumentWords {\n  public words: Record<string, QuickviewDocumentWord> = {};\n\n  constructor(public iframe: QuickviewDocumentIframe, public result: IQueryResult) {\n    this.scanDocument();\n  }\n\n  private scanDocument() {\n    each($$(this.iframe.body).findAll(`[id^=\"${HIGHLIGHT_PREFIX}\"]`), (element: HTMLElement, index: number) => {\n      const quickviewWord = new QuickviewDocumentWord(this.result);\n      quickviewWord.doCompleteInitialScanForKeywordInDocument(element);\n\n      if (!quickviewWord.text) {\n        return;\n      }\n\n      const alreadyScannedKeyword = this.words[quickviewWord.indexIdentifier];\n\n      if (!alreadyScannedKeyword) {\n        this.words[quickviewWord.indexIdentifier] = quickviewWord;\n      } else {\n        alreadyScannedKeyword.addElement(element);\n\n        // Special code needed to workaround invalid HTML returned by the index with embedded keyword\n        if (alreadyScannedKeyword.occurrence == quickviewWord.occurrence) {\n          alreadyScannedKeyword.text += quickviewWord.text;\n        }\n      }\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/Quickview/QuickviewDocumentWords.ts","import { find, first, keys, without } from 'underscore';\nimport { StringUtils } from '../../Core';\nimport { Logger } from '../../misc/Logger';\nimport { IQueryResult } from '../../rest/QueryResult';\nimport { $$ } from '../../utils/Dom';\nimport { HIGHLIGHT_PREFIX } from './QuickviewDocument';\nimport { QuickviewDocumentWordColor } from './QuickviewDocumentWordColor';\n\nexport class QuickviewDocumentWord {\n  public text: string;\n  public count: number = 0;\n  public numberOfEmbeddedWords: number;\n  public occurrence: number;\n  public indexIdentifier: string;\n  public indexTermPart: number;\n  public elements: HTMLElement[] = [];\n  public currentNavigationPosition = -1;\n  public color: QuickviewDocumentWordColor;\n\n  private logger: Logger;\n\n  constructor(public result: IQueryResult) {\n    this.logger = new Logger(this);\n  }\n\n  public addElement(element: HTMLElement) {\n    this.count++;\n    this.elements.push(element);\n  }\n\n  public navigateForward() {\n    this.currentNavigationPosition++;\n    if (this.currentNavigationPosition >= this.elements.length) {\n      this.currentNavigationPosition = 0;\n    }\n    this.highlightNavigation();\n    this.putElementIntoView();\n    return this.elements[this.currentNavigationPosition];\n  }\n\n  public navigateBackward() {\n    this.currentNavigationPosition--;\n    if (this.currentNavigationPosition < 0) {\n      this.currentNavigationPosition = this.elements.length - 1;\n    }\n    this.highlightNavigation();\n    this.putElementIntoView();\n    return this.elements[this.currentNavigationPosition];\n  }\n\n  public navigateTo(position: number): HTMLElement {\n    this.currentNavigationPosition = position;\n    if (this.currentNavigationPosition < 0 || this.currentNavigationPosition >= this.elements.length) {\n      this.currentNavigationPosition = 0;\n      this.logger.warn(`Invalid position in quickview navigation: ${position}`);\n    }\n    this.highlightNavigation();\n    return this.elements[this.currentNavigationPosition];\n  }\n\n  public doCompleteInitialScanForKeywordInDocument(element: HTMLElement) {\n    const parsed = this.parseKeywordIdentifier(element);\n\n    if (parsed) {\n      this.indexIdentifier = parsed.keywordIdentifier;\n      this.occurrence = parsed.keywordOccurrencesInDocument;\n      this.indexTermPart = parsed.keywordTermPart;\n      this.text = this.getText(element);\n      this.color = new QuickviewDocumentWordColor(element.style.backgroundColor);\n\n      this.addElement(element);\n    }\n  }\n\n  public isTaggedWord(element: HTMLElement) {\n    return element.nodeName.toLowerCase() == 'coveotaggedword';\n  }\n\n  private highlightNavigation() {\n    const currentElement = this.elements[this.currentNavigationPosition];\n    const otherElements = without(this.elements, currentElement);\n    currentElement.style.color = this.color.htmlColor;\n    currentElement.style.backgroundColor = this.color.invert();\n    otherElements.forEach(element => {\n      element.style.color = '';\n      element.style.backgroundColor = this.color.htmlColor;\n    });\n  }\n\n  private putElementIntoView() {\n    const element = this.elements[this.currentNavigationPosition];\n    element.scrollIntoView();\n  }\n\n  private getText(element: HTMLElement) {\n    const innerTextOfHTMLElement = this.getHighlightedInnerText(element);\n    return this.resolveOriginalTerm(innerTextOfHTMLElement);\n  }\n\n  private resolveOriginalTerm(highlight: string): string {\n    if (!this.result || !this.result.termsToHighlight) {\n      return highlight;\n    }\n\n    const found = find(keys(this.result.termsToHighlight), (originalTerm: string) => {\n      // The expansions do NOT include the original term (makes sense), so be sure to check\n      // the original term for a match too.\n      const originalTermMatch = StringUtils.equalsCaseInsensitive(originalTerm, highlight);\n      const expansionMatch =\n        find(this.result.termsToHighlight[originalTerm], (expansion: string) => StringUtils.equalsCaseInsensitive(expansion, highlight)) !=\n        undefined;\n      return originalTermMatch || expansionMatch;\n    });\n\n    return found || highlight;\n  }\n\n  private getHighlightedInnerText(element: HTMLElement): string {\n    if (!this.isTaggedWord(element)) {\n      return $$(element).text() || '';\n    }\n\n    const children = $$(element).children();\n    if (children.length >= 1) {\n      return $$(first(children)).text() || '';\n    }\n\n    return '';\n  }\n\n  private parseKeywordIdentifier(element: HTMLElement) {\n    const parts = element.id.substr(HIGHLIGHT_PREFIX.length + 1).match(/^([0-9]+)\\.([0-9]+)\\.([0-9]+)$/);\n\n    if (!parts || parts.length <= 3) {\n      return null;\n    }\n\n    return {\n      keywordIdentifier: parts[1],\n      keywordOccurrencesInDocument: parseInt(parts[2], 10),\n      keywordTermPart: parseInt(parts[3], 10)\n    };\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/Quickview/QuickviewDocumentWord.ts","import { ColorUtils } from '../../utils/ColorUtils';\n\nexport class QuickviewDocumentWordColor {\n  public r: number;\n  public g: number;\n  public b: number;\n\n  constructor(public htmlColor: string) {\n    const rgbExtracted = htmlColor.match(/\\d+/g);\n    if (rgbExtracted) {\n      this.r = parseInt(rgbExtracted[0], 10);\n      this.g = parseInt(rgbExtracted[1], 10);\n      this.b = parseInt(rgbExtracted[2], 10);\n    }\n  }\n\n  public invert() {\n    return `rgb(${255 - this.r}, ${255 - this.g}, ${255 - this.b})`;\n  }\n\n  public saturate() {\n    const hsv = ColorUtils.rgbToHsv(this.r, this.g, this.b);\n    hsv[1] *= 2;\n    if (hsv[1] > 1) {\n      hsv[1] = 1;\n    }\n    const rgb = ColorUtils.hsvToRgb(hsv[0], hsv[1], hsv[2]);\n    return `rgb(${rgb[0]}, ${rgb[1]}, ${rgb[2]})`;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/Quickview/QuickviewDocumentWordColor.ts","import { QuickviewDocumentIframe } from './QuickviewDocumentIframe';\nimport { $$ } from '../../utils/Dom';\nimport { QuickviewDocumentWord } from './QuickviewDocumentWord';\nimport { QuickviewDocumentPreviewBar } from './QuickviewDocumentPreviewBar';\n\nexport class QuickviewDocumentWordButton {\n  public el: HTMLElement;\n  constructor(public word: QuickviewDocumentWord, public previewBar: QuickviewDocumentPreviewBar, public iframe: QuickviewDocumentIframe) {\n    this.el = this.render();\n  }\n\n  public render() {\n    const wordHtml = $$('span', {\n      className: 'coveo-term-for-quickview'\n    });\n\n    wordHtml.append(this.buildName().el);\n\n    wordHtml.append(this.renderArrow('up').el);\n\n    wordHtml.append(this.renderArrow('down').el);\n\n    wordHtml.el.style.backgroundColor = this.word.color.htmlColor;\n    wordHtml.el.style.borderColor = this.word.color.saturate();\n\n    return wordHtml.el;\n  }\n\n  private buildName() {\n    const name = $$(\n      'span',\n      {\n        className: 'coveo-term-for-quickview-name'\n      },\n      `${this.word.text} (${this.word.count})`\n    );\n\n    name.on('click', () => this.navigate(false));\n    return name;\n  }\n\n  private navigate(backward: boolean) {\n    let element: HTMLElement;\n    if (backward) {\n      element = this.word.navigateBackward();\n      this.previewBar.navigateBackward(this.word);\n    } else {\n      element = this.word.navigateForward();\n      this.previewBar.navigateForward(this.word);\n    }\n\n    // pdf2html docs hide the non-visible frames by default, to speed up browsers.\n    // But this prevents keyword navigation from working so we must force show it. This\n    // is done by adding the 'opened' class to it (defined by pdf2html).\n    if (this.iframe.isNewQuickviewDocument()) {\n      const pdf = $$(element).closest('.pc');\n      $$(pdf).addClass('opened');\n    }\n\n    element.scrollIntoView();\n  }\n\n  private renderArrow(direction: 'up' | 'down') {\n    const arrow = $$('span', {\n      className: `coveo-term-for-quickview-${direction}-arrow`\n    });\n\n    const arrowIcon = $$('span', {\n      className: `coveo-term-for-quickview-${direction}-arrow-icon`\n    });\n\n    arrow.append(arrowIcon.el);\n\n    arrow.on('click', () => this.navigate(direction == 'up'));\n    return arrow;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/Quickview/QuickviewDocumentWordButton.ts","import { QuickviewDocumentIframe } from './QuickviewDocumentIframe';\nimport { QuickviewDocumentWords } from './QuickviewDocumentWords';\nimport { Doc, $$ } from '../../utils/Dom';\nimport { each, without, chain } from 'underscore';\nimport { QuickviewDocumentWord } from './QuickviewDocumentWord';\nimport { Logger } from '../../misc/Logger';\n\nexport class QuickviewDocumentPreviewBar {\n  private logger: Logger;\n  public wordIndicators: Map<QuickviewDocumentWord, { indicators: HTMLElement[]; position: number }> = new Map();\n\n  constructor(public iframe: QuickviewDocumentIframe, public words: QuickviewDocumentWords) {\n    this.logger = new Logger(this);\n    this.renderPreviewBar();\n  }\n\n  public navigateForward(word: QuickviewDocumentWord): HTMLElement {\n    const currentWord = this.wordIndicators.get(word);\n    if (!currentWord) {\n      this.logger.warn(`Invalid navigation for given word.`, word);\n      return null;\n    }\n\n    currentWord.position++;\n\n    if (currentWord.position >= currentWord.indicators.length) {\n      currentWord.position = 0;\n    }\n    this.highlightNavigation(word);\n    return currentWord.indicators[currentWord.position];\n  }\n\n  public navigateBackward(word: QuickviewDocumentWord): HTMLElement {\n    const currentWord = this.wordIndicators.get(word);\n    if (!currentWord) {\n      this.logger.warn(`Invalid navigation for the given word.`, word);\n      return null;\n    }\n\n    currentWord.position--;\n\n    if (currentWord.position < 0) {\n      currentWord.position = currentWord.indicators.length - 1;\n    }\n    this.highlightNavigation(word);\n    return currentWord.indicators[currentWord.position];\n  }\n\n  public navigateTo(position: number, word: QuickviewDocumentWord): HTMLElement {\n    const currentWord = this.wordIndicators.get(word);\n    if (!currentWord) {\n      this.logger.warn(`Invalid navigation for the given word`, word);\n      return null;\n    }\n\n    currentWord.position = position;\n\n    if (currentWord.position < 0 || currentWord.position >= currentWord.indicators.length) {\n      this.logger.warn(`Invalid navigation for the given position: ${position}`);\n      currentWord.position = 0;\n    }\n    this.highlightNavigation(word);\n    return currentWord.indicators[currentWord.position];\n  }\n\n  private highlightNavigation(word: QuickviewDocumentWord) {\n    const currentWord = this.wordIndicators.get(word);\n    const currentElement = currentWord.indicators[currentWord.position];\n\n    const otherElements = without(currentWord.indicators, currentElement);\n\n    currentElement.style.backgroundColor = word.color.invert();\n    currentElement.style.border = `1px solid ${word.color.invert()}`;\n\n    otherElements.forEach(element => this.defaultStyleColor(element, word));\n  }\n\n  private renderPreviewBar() {\n    const previewBar = $$('div');\n\n    previewBar.el.style.width = '15px';\n    previewBar.el.style.position = 'fixed';\n    previewBar.el.style.top = '0';\n    previewBar.el.style.right = '0px';\n    previewBar.el.style.height = '100%';\n\n    this.iframe.body.appendChild(previewBar.el);\n\n    each(this.words.words, word => {\n      each(word.elements, element => {\n        const indicator = this.renderWordPositionIndicator(element, word).el;\n\n        if (this.wordIndicators.has(word)) {\n          this.wordIndicators.get(word).indicators.push(indicator);\n        } else {\n          this.wordIndicators.set(word, {\n            indicators: [indicator],\n            position: -1\n          });\n        }\n\n        previewBar.append(indicator);\n      });\n\n      this.handleOverlappingIndicators(word);\n    });\n  }\n\n  private renderWordPositionIndicator(element: HTMLElement, word: QuickviewDocumentWord) {\n    const docHeight = new Doc(this.iframe.document).height();\n    const elementPosition = element.getBoundingClientRect().top;\n\n    const previewUnit = $$('div');\n    previewUnit.el.style.position = 'absolute';\n    previewUnit.el.style.top = `${elementPosition / docHeight * 100}%`;\n    previewUnit.el.style.width = '100%';\n    previewUnit.el.style.height = '1px';\n    this.defaultStyleColor(previewUnit.el, word);\n    return previewUnit;\n  }\n\n  private defaultStyleColor(element: HTMLElement, word: QuickviewDocumentWord) {\n    element.style.border = `1px solid ${word.color.saturate()}`;\n    element.style.backgroundColor = word.color.htmlColor;\n  }\n\n  private handleOverlappingIndicators(word: QuickviewDocumentWord) {\n    const allIndicators = this.wordIndicators.get(word).indicators;\n\n    for (let i = 0; i < allIndicators.length; i++) {\n      const otherIndicatorAtSamePositionInDocument = chain(allIndicators)\n        .without(allIndicators[i])\n        .find(otherIndicator => otherIndicator.style.top == allIndicators[i].style.top)\n        .value();\n\n      if (otherIndicatorAtSamePositionInDocument) {\n        $$(allIndicators[i]).remove();\n        allIndicators[i] = otherIndicatorAtSamePositionInDocument;\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/Quickview/QuickviewDocumentPreviewBar.ts"],"sourceRoot":""}