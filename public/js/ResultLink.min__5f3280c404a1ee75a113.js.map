{"version":3,"sources":["ResultLink.min__5f3280c404a1ee75a113.js","./src/ui/ResultLink/ResultLink.ts"],"names":["webpackJsonpCoveo__temporary","532","module","exports","92","__webpack_require__","__extends","this","extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__","constructor","prototype","create","defineProperty","value","element","options","bindings","result","os","ResultLink","ID","logOpenDocument","debounce","queryController","saveLastQuery","documentURL","$$","getAttribute","undefined","escapedClickUri","usageAnalytics","logClickEvent","analyticsActionCauseList","documentOpen","documentTitle","title","author","Utils","getFieldValue","root","Defer","flush","initialOptions","ComponentOptions","initComponentOptions","resultLinkOptions","componentOptionsModel","get","ComponentOptionsModel","attributesEnum","resultLink","extend","resolveResult","openQuickview","raw","DeviceUtils","isMobileDevice","setAttribute","Assert","exists","quickviewShouldBeOpened","once","on","window","setTimeout","clearTimeout","renderUri","bindEventToOpen","_this","test","innerHTML","getDisplayedTitle","getDisplayedTitleAsText","openLink","logAnalytics","location","href","getResultUri","openLinkInNewWindow","open","openLinkInOutlook","hasOutlookField","openLinkAsConfigured","toExecuteOnOpen","bindOnClickIfNotUndefined","bindOpenQuickviewIfNotUndefined","setHrefIfNotAlready","openLinkThatIsNotAnAnchor","titleTemplate","newTitle","StringUtils","buildStringTemplateFromResult","StreamHighlightUtils","highlightStreamText","termsToHighlight","phrasesToHighlight","HighlightUtils","highlightString","titleHighlights","container","setHtml","text","escape","clickUri","enumerable","configurable","onClick","e","call","AccessibleButton","withElement","withLabel","withSelectAction","build","resultElement","trigger","ResultListEvents","preventDefault","elementIsAnAnchor","alwaysOpenInNewWindow","openInOutlook","isNonEmptyString","filterProtocol","uri","isAbsolute","isRelative","hrefTemplate","field","setField","tagName","OSUtils","OS_NAME","MACOSX","WINDOWS","isUriThatMustBeOpenedInQuickview","toLowerCase","indexOf","QueryUtils","hasHTMLVersion","doExport","exportGlobally","buildFieldOption","buildBooleanOption","defaultValue","buildStringOption","buildCustomOption","Component","Initialization","registerAutoCreateComponent"],"mappings":"AAAAA,8BAA8B,KAExBC,IACA,SAAUC,EAAQC,KAMlBC,GACA,SAAUF,EAAQC,EAASE,GAEjC,YAEA,IAAIC,GAAaC,MAAQA,KAAKD,WAAc,WACxC,GAAIE,GAAgBC,OAAOC,iBACpBC,uBAA2BC,QAAS,SAAUC,EAAGC,GAAKD,EAAEF,UAAYG,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAIC,KAAKD,GAAOA,EAAEE,eAAeD,KAAIF,EAAEE,GAAKD,EAAEC,IACzE,OAAO,UAAUF,EAAGC,GAEhB,QAASG,KAAOV,KAAKW,YAAcL,EADnCL,EAAcK,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAaL,OAAOW,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,GAAIF,OAGvFR,QAAOY,eAAelB,EAAS,cAAgBmB,OAAO,GCxBtD,YACA,OACA,QAEA,QAEA,QACA,QAEA,QACA,SACA,OACA,QACA,OACA,OACA,QACA,OACA,SACA,QACA,OACA,MAEA,OACA,aAQA,cAiNE,WACSC,EACAC,EACAC,EACAC,EACAC,GALT,MAOE,YAAMJ,EAASK,EAAWC,GAAIJ,IAAS,IANhC,GAAAF,UACA,EAAAC,UACA,EAAAC,WACA,EAAAC,SACA,EAAAC,KAmND,EAAAG,gBAAkB,EAAAC,SACxB,WACE,EAAKC,gBAAgBC,eACrB,IAAIC,GAAc,EAAAC,GAAG,EAAKZ,SAASa,aAAa,YAC7BC,IAAfH,GAA2C,IAAfA,IAC9BA,EAAc,EAAKI,iBAErB,EAAKC,eAAeC,cAClB,EAAAC,yBAAyBC,cAEvBR,YAAaA,EACbS,cAAe,EAAKjB,OAAOkB,MAC3BC,OAAQ,EAAAC,MAAMC,cAAc,EAAKrB,OAAQ,WAE3C,EAAKA,OACL,EAAKsB,MAEP,EAAAC,MAAMC,SAER,MACA,EAnOA,IAAMC,GAAiB,EAAAC,iBAAiBC,qBAAqB9B,EAASK,EAAYJ,GAC5E8B,EAAoB,EAAKC,sBAAsBC,IAAI,EAAAC,sBAAsBC,eAAeC,WAa9F,IAZA,EAAKnC,QAAU,EAAAoC,UAAWT,EAAgBG,GAE1C,EAAK5B,OAASA,GAAU,EAAKmC,gBAEK,MAA9B,EAAKrC,QAAQsC,gBACf,EAAKtC,QAAQsC,cAA+C,mBAA/BpC,EAAOqC,IAAmB,eAA0B,EAAAC,YAAYC,kBAE/F,EAAK1C,QAAQ2C,aAAa,WAAY,KAEtC,EAAAC,OAAOC,OAAO,EAAKb,uBACnB,EAAAY,OAAOC,OAAO,EAAK1C,SAEd,EAAK2C,0BAA2B,CAQnC,GAAM,GAAkB,EAAAC,KAAK,WAAM,SAAKxC,mBAExC,GAAAK,GAAGZ,GAASgD,IAAI,cAAe,QAAS,YAAa,WAAY,EACjE,IAAI,EACJ,GAAApC,GAAGZ,GAASgD,GAAG,aAAc,WAC3B,EAAiBC,OAAOC,WAAW,EAAiB,OAEtD,EAAAtC,GAAGZ,GAASgD,GAAG,WAAY,WACrB,GACFG,aAAa,KDvKf,MC2KJ,GAAKC,UAAUpD,EAASG,GACxB,EAAKkD,kBD5KMC,ECoaf,MAtfgC,QAgQvB,YAAAF,UAAP,SAAiBpD,EAAsBG,GACrC,GAAI,QAAQoD,KAAKvE,KAAKgB,QAAQwD,WAAY,CACxC,GAAMnC,GAAQrC,KAAKyE,mBACnBzE,MAAKgB,QAAQwD,UAAYnC,EACpBrC,KAAKgB,QAAQqB,QAChBrC,KAAKgB,QAAQqB,MAAQrC,KAAK0E,6BAQzB,YAAAC,SAAP,SAAgBC,OAAA,KAAAA,OAAA,GACVA,GACF5E,KAAKuB,kBAEP0C,OAAOY,SAASC,KAAO9E,KAAK+E,gBAOvB,YAAAC,oBAAP,SAA2BJ,OAAA,KAAAA,OAAA,GACrBA,GACF5E,KAAKuB,kBAEP0C,OAAOgB,KAAKjF,KAAK+E,eAAgB,WAW5B,YAAAG,kBAAP,SAAyBN,OAAA,KAAAA,OAAA,GACnB5E,KAAKmF,oBACHP,GACF5E,KAAKuB,kBAEPvB,KAAK2E,aAWF,YAAAS,qBAAP,SAA4BR,OAAA,KAAAA,OAAA,GACtB5E,KAAKqF,kBACHT,GACF5E,KAAKuB,kBAEPvB,KAAKqF,oBAIC,YAAAhB,gBAAV,WACE,MACErE,MAAKsF,6BACLtF,KAAKuF,mCACLvF,KAAKwF,uBACLxF,KAAKyF,6BAID,YAAAhB,kBAAR,WACE,GAAKzE,KAAKiB,QAAQyE,cAIX,CACL,GAAIC,GAAW,EAAAC,YAAYC,8BAA8B7F,KAAKiB,QAAQyE,cAAe1F,KAAKmB,OAC1F,OAAOwE,GACH,EAAAG,qBAAqBC,oBAAoBJ,EAAU3F,KAAKmB,OAAO6E,iBAAkBhG,KAAKmB,OAAO8E,oBAC7FjG,KAAK+B,gBAPT,MAAO/B,MAAKmB,OAAOkB,MACf,EAAA6D,eAAeC,gBAAgBnG,KAAKmB,OAAOkB,MAAOrC,KAAKmB,OAAOiF,gBAAiB,KAAM,mBACrFpG,KAAK+B,iBASL,YAAA2C,wBAAR,WACE,GAAM2B,GAAY,EAAAzE,GAAG,MAErB,OADAyE,GAAUC,QAAQtG,KAAKyE,qBAChB4B,EAAUE,QAGnB,sBAAY,+BD/KNtD,IC+KN,WACE,MAAO,GAAAuD,OAAOxG,KAAKmB,OAAOsF,WD7KtBC,YAAY,EACZC,cAAc,IC+KZ,YAAArB,0BAAR,qBACE,YAA4BxD,IAAxB9B,KAAKiB,QAAQ2F,UACf5G,KAAKqF,gBAAkB,SAACwB,GACtB,EAAK5F,QAAQ2F,QAAQE,KAAK,EAAMD,EAAG,EAAK1F,UAG1C,GAAI,GAAA4F,kBACDC,YAAYhH,KAAKgB,SACjBiG,UAAUjH,KAAKmB,OAAOkB,OACtB6E,iBAAiB,SAACL,GAAa,SAAKxB,gBAAgBwB,KACpDM,SAEI,IAMH,YAAA5B,gCAAR,qBACE,SAAIvF,KAAK8D,4BACP9D,KAAKqF,gBAAkB,WACrB,EAAAzD,GAAG,EAAKV,SAASkG,eAAeC,QAAQ,EAAAC,iBAAiB/D,gBAG3D,EAAA3B,GAAG5B,KAAKgB,SAASgD,GAAG,QAAS,SAAC6C,GAC5BA,EAAEU,iBACF,EAAKlC,qBAGA,IAMH,YAAAI,0BAAR,qBACE,QAAKzF,KAAKwH,sBACRxH,KAAKqF,gBAAkB,WACjB,EAAKpE,QAAQwG,sBACX,EAAKxG,QAAQyG,cACf,EAAKxC,oBAEL,EAAKF,sBAGP,EAAKL,YAIT,EAAA/C,GAAG5B,KAAKgB,SAASgD,GAAG,QAAS,WAC3B,EAAKqB,qBAGA,IAKH,YAAAG,oBAAR,WAIE,SAAIxF,KAAKwH,qBAAwB,EAAAjF,MAAMoF,iBAAiB,EAAA/F,GAAG5B,KAAKgB,SAASa,aAAa,YACpF,EAAAD,GAAG5B,KAAKgB,SAAS2C,aAAa,OAAQ3D,KAAK+E,iBACvC/E,KAAKiB,QAAQwG,uBAA2BzH,KAAKiB,QAAQyG,eAAiB1H,KAAKmF,mBAC7E,EAAAvD,GAAG5B,KAAKgB,SAAS2C,aAAa,SAAU,WAEnC,IA6BH,YAAAiE,eAAR,SAAuBC,GACrB,GAAMC,GAAa,kCAAkCvD,KAAKsD,GACpDE,EAAa,MAAMxD,KAAKsD,EAE9B,OAAOC,IAAcC,EAAaF,EAAM,IAGlC,YAAA9C,aAAR,WACE,GAAI/E,KAAKiB,QAAQ+G,aAAc,CAC7B,GAAMH,GAAM,EAAAjC,YAAYC,8BAA8B7F,KAAKiB,QAAQ+G,aAAchI,KAAKmB,OACtF,OAAOnB,MAAK4H,eAAeC,GAO7B,WAJ0B/F,IAAtB9B,KAAKiB,QAAQgH,OAAsBjI,KAAKiB,QAAQyG,eAClD1H,KAAKkI,eAGmBpG,IAAtB9B,KAAKiB,QAAQgH,MACRjI,KAAK4H,eAAe,EAAArF,MAAMC,cAAcxC,KAAKmB,OAAgBnB,KAAKiB,QAAQgH,QAG5EjI,KAAK4H,eAAe5H,KAAKmB,OAAOsF,WAGjC,YAAAe,kBAAR,WACE,MAA+B,KAAxBxH,KAAKgB,QAAQmH,SAGd,YAAAD,SAAR,WACE,GAAI9G,GAAK,EAAAmB,MAAMsB,OAAO7D,KAAKoB,IAAMpB,KAAKoB,GAAK,EAAAgH,QAAQnF,KAC/C7B,IAAM,EAAAiH,QAAQC,QAAUtI,KAAKmF,kBAC/BnF,KAAKiB,QAAQgH,MAAQ,oBACZ7G,GAAM,EAAAiH,QAAQE,SAAWvI,KAAKmF,oBACvCnF,KAAKiB,QAAQgH,MAAQ,gBAIjB,YAAA9C,gBAAR,WACE,GAAI/D,GAAK,EAAAmB,MAAMsB,OAAO7D,KAAKoB,IAAMpB,KAAKoB,GAAK,EAAAgH,QAAQnF,KACnD,OAAI7B,IAAM,EAAAiH,QAAQC,YAAiDxG,IAAvC9B,KAAKmB,OAAOqC,IAAsB,kBAEnDpC,GAAM,EAAAiH,QAAQE,aAA4CzG,IAAjC9B,KAAKmB,OAAOqC,IAAgB,YAM1D,YAAAgF,iCAAR,WACE,MAAgE,IAAzDxI,KAAK+B,gBAAgB0G,cAAcC,QAAQ,YAG5C,YAAA5E,wBAAR,WACE,OAAQ9D,KAAKiB,QAAQsC,eAAiBvD,KAAKwI,qCAAuC,EAAAG,WAAWC,eAAe5I,KAAKmB,SAnf5G,EAAAG,GAAK,aAEL,EAAAuH,SAAW,WAChB,EAAAC,gBACEzH,WAAYA,KAQT,EAAAJ,SA8BLgH,MAAO,EAAApF,iBAAiBkG,mBAaxBrB,cAAe,EAAA7E,iBAAiBmG,oBAAqBC,cAAc,IAQnE1F,cAAe,EAAAV,iBAAiBmG,oBAAqBC,cAAc,IAmBnExB,sBAAuB,EAAA5E,iBAAiBmG,oBAAqBC,cAAc,IA2B3EjB,aAAc,EAAAnF,iBAAiBqG,oBAyC/BxD,cAAe,EAAA7C,iBAAiBqG,oBA0ChCtC,QAAS,EAAA/D,iBAAiBsG,kBAA2D,WACnF,MAAO,SAoTb,GAtfgC,EAAAC,UAAnB,GAAA/H,aAwfb,EAAAgI,eAAeC,4BAA4BjI","file":"ResultLink.min__5f3280c404a1ee75a113.js","sourcesContent":["webpackJsonpCoveo__temporary([63],{\n\n/***/ 532:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 92:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Component_1 = __webpack_require__(7);\r\nvar ComponentOptions_1 = __webpack_require__(8);\r\nvar ComponentOptionsModel_1 = __webpack_require__(28);\r\nvar AnalyticsActionListMeta_1 = __webpack_require__(10);\r\nvar ResultListEvents_1 = __webpack_require__(29);\r\nvar HighlightUtils_1 = __webpack_require__(68);\r\nvar DeviceUtils_1 = __webpack_require__(24);\r\nvar OSUtils_1 = __webpack_require__(181);\r\nvar Initialization_1 = __webpack_require__(2);\r\nvar QueryUtils_1 = __webpack_require__(21);\r\nvar Assert_1 = __webpack_require__(5);\r\nvar Utils_1 = __webpack_require__(4);\r\nvar Defer_1 = __webpack_require__(31);\r\nvar Dom_1 = __webpack_require__(1);\r\nvar StreamHighlightUtils_1 = __webpack_require__(114);\r\nvar StringUtils_1 = __webpack_require__(22);\r\nvar underscore_1 = __webpack_require__(0);\r\nvar GlobalExports_1 = __webpack_require__(3);\r\n__webpack_require__(532);\r\nvar AccessibleButton_1 = __webpack_require__(15);\r\n/**\r\n * The `ResultLink` component automatically transform a search result title into a clickable link pointing to the\r\n * original item.\r\n *\r\n * This component is a result template component (see [Result Templates](https://docs.coveo.com/en/413/)).\r\n */\r\nvar ResultLink = /** @class */ (function (_super) {\r\n    __extends(ResultLink, _super);\r\n    /**\r\n     * Creates a new `ResultLink` component.\r\n     * @param element The HTMLElement on which to instantiate the component.\r\n     * @param options The options for the `ResultLink` component.\r\n     * @param bindings The bindings that the component requires to function normally. If not set, these will be\r\n     * automatically resolved (with a slower execution time).\r\n     * @param result The result to associate the component with.\r\n     * @param os\r\n     */\r\n    function ResultLink(element, options, bindings, result, os) {\r\n        var _this = _super.call(this, element, ResultLink.ID, bindings) || this;\r\n        _this.element = element;\r\n        _this.options = options;\r\n        _this.bindings = bindings;\r\n        _this.result = result;\r\n        _this.os = os;\r\n        _this.logOpenDocument = underscore_1.debounce(function () {\r\n            _this.queryController.saveLastQuery();\r\n            var documentURL = Dom_1.$$(_this.element).getAttribute('href');\r\n            if (documentURL == undefined || documentURL == '') {\r\n                documentURL = _this.escapedClickUri;\r\n            }\r\n            _this.usageAnalytics.logClickEvent(AnalyticsActionListMeta_1.analyticsActionCauseList.documentOpen, {\r\n                documentURL: documentURL,\r\n                documentTitle: _this.result.title,\r\n                author: Utils_1.Utils.getFieldValue(_this.result, 'author')\r\n            }, _this.result, _this.root);\r\n            Defer_1.Defer.flush();\r\n        }, 1500, true);\r\n        var initialOptions = ComponentOptions_1.ComponentOptions.initComponentOptions(element, ResultLink, options);\r\n        var resultLinkOptions = _this.componentOptionsModel.get(ComponentOptionsModel_1.ComponentOptionsModel.attributesEnum.resultLink);\r\n        _this.options = underscore_1.extend({}, initialOptions, resultLinkOptions);\r\n        _this.result = result || _this.resolveResult();\r\n        if (_this.options.openQuickview == null) {\r\n            _this.options.openQuickview = result.raw['connectortype'] == 'ExchangeCrawler' && DeviceUtils_1.DeviceUtils.isMobileDevice();\r\n        }\r\n        _this.element.setAttribute('tabindex', '0');\r\n        Assert_1.Assert.exists(_this.componentOptionsModel);\r\n        Assert_1.Assert.exists(_this.result);\r\n        if (!_this.quickviewShouldBeOpened()) {\r\n            // Bind on multiple \"click\" or \"mouse\" events.\r\n            // Create a function that will be executed only once, so as not to log multiple events\r\n            // Once a result link has been opened, and that we log at least one analytics event,\r\n            // it should not matter if the end user open the same link multiple times with different methods.\r\n            // It's still only one \"click\" event as far as UA is concerned.\r\n            // Also need to handle \"longpress\" on mobile (the contextual menu), which we assume to be 1 s long.\r\n            var executeOnlyOnce_1 = underscore_1.once(function () { return _this.logOpenDocument(); });\r\n            Dom_1.$$(element).on(['contextmenu', 'click', 'mousedown', 'mouseup'], executeOnlyOnce_1);\r\n            var longPressTimer_1;\r\n            Dom_1.$$(element).on('touchstart', function () {\r\n                longPressTimer_1 = window.setTimeout(executeOnlyOnce_1, 1000);\r\n            });\r\n            Dom_1.$$(element).on('touchend', function () {\r\n                if (longPressTimer_1) {\r\n                    clearTimeout(longPressTimer_1);\r\n                }\r\n            });\r\n        }\r\n        _this.renderUri(element, result);\r\n        _this.bindEventToOpen();\r\n        return _this;\r\n    }\r\n    ResultLink.prototype.renderUri = function (element, result) {\r\n        if (/^\\s*$/.test(this.element.innerHTML)) {\r\n            var title = this.getDisplayedTitle();\r\n            this.element.innerHTML = title;\r\n            if (!this.element.title) {\r\n                this.element.title = this.getDisplayedTitleAsText();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Opens the result in the same window, no matter how the actual component is configured for the end user.\r\n     * @param logAnalytics Specifies whether the method should log an analytics event.\r\n     */\r\n    ResultLink.prototype.openLink = function (logAnalytics) {\r\n        if (logAnalytics === void 0) { logAnalytics = true; }\r\n        if (logAnalytics) {\r\n            this.logOpenDocument();\r\n        }\r\n        window.location.href = this.getResultUri();\r\n    };\r\n    /**\r\n     * Opens the result in a new window, no matter how the actual component is configured for the end user.\r\n     * @param logAnalytics Specifies whether the method should log an analytics event.\r\n     */\r\n    ResultLink.prototype.openLinkInNewWindow = function (logAnalytics) {\r\n        if (logAnalytics === void 0) { logAnalytics = true; }\r\n        if (logAnalytics) {\r\n            this.logOpenDocument();\r\n        }\r\n        window.open(this.getResultUri(), '_blank');\r\n    };\r\n    /**\r\n     * Tries to open the result in Microsoft Outlook if the result has an `outlookformacuri` or `outlookuri` field.\r\n     *\r\n     * Normally, this implies the result should be a link to an email.\r\n     *\r\n     * If the needed fields are not present, this method does nothing.\r\n     * @param logAnalytics Specifies whether the method should log an analytics event.\r\n     */\r\n    ResultLink.prototype.openLinkInOutlook = function (logAnalytics) {\r\n        if (logAnalytics === void 0) { logAnalytics = true; }\r\n        if (this.hasOutlookField()) {\r\n            if (logAnalytics) {\r\n                this.logOpenDocument();\r\n            }\r\n            this.openLink();\r\n        }\r\n    };\r\n    /**\r\n     * Opens the link in the same manner the end user would.\r\n     *\r\n     * This essentially simulates a click on the result link.\r\n     *\r\n     * @param logAnalytics Specifies whether the method should log an analytics event.\r\n     */\r\n    ResultLink.prototype.openLinkAsConfigured = function (logAnalytics) {\r\n        if (logAnalytics === void 0) { logAnalytics = true; }\r\n        if (this.toExecuteOnOpen) {\r\n            if (logAnalytics) {\r\n                this.logOpenDocument();\r\n            }\r\n            this.toExecuteOnOpen();\r\n        }\r\n    };\r\n    ResultLink.prototype.bindEventToOpen = function () {\r\n        return (this.bindOnClickIfNotUndefined() ||\r\n            this.bindOpenQuickviewIfNotUndefined() ||\r\n            this.setHrefIfNotAlready() ||\r\n            this.openLinkThatIsNotAnAnchor());\r\n    };\r\n    ResultLink.prototype.getDisplayedTitle = function () {\r\n        if (!this.options.titleTemplate) {\r\n            return this.result.title\r\n                ? HighlightUtils_1.HighlightUtils.highlightString(this.result.title, this.result.titleHighlights, null, 'coveo-highlight')\r\n                : this.escapedClickUri;\r\n        }\r\n        else {\r\n            var newTitle = StringUtils_1.StringUtils.buildStringTemplateFromResult(this.options.titleTemplate, this.result);\r\n            return newTitle\r\n                ? StreamHighlightUtils_1.StreamHighlightUtils.highlightStreamText(newTitle, this.result.termsToHighlight, this.result.phrasesToHighlight)\r\n                : this.escapedClickUri;\r\n        }\r\n    };\r\n    ResultLink.prototype.getDisplayedTitleAsText = function () {\r\n        var container = Dom_1.$$('div');\r\n        container.setHtml(this.getDisplayedTitle());\r\n        return container.text();\r\n    };\r\n    Object.defineProperty(ResultLink.prototype, \"escapedClickUri\", {\r\n        get: function () {\r\n            return underscore_1.escape(this.result.clickUri);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ResultLink.prototype.bindOnClickIfNotUndefined = function () {\r\n        var _this = this;\r\n        if (this.options.onClick != undefined) {\r\n            this.toExecuteOnOpen = function (e) {\r\n                _this.options.onClick.call(_this, e, _this.result);\r\n            };\r\n            new AccessibleButton_1.AccessibleButton()\r\n                .withElement(this.element)\r\n                .withLabel(this.result.title)\r\n                .withSelectAction(function (e) { return _this.toExecuteOnOpen(e); })\r\n                .build();\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    ResultLink.prototype.bindOpenQuickviewIfNotUndefined = function () {\r\n        var _this = this;\r\n        if (this.quickviewShouldBeOpened()) {\r\n            this.toExecuteOnOpen = function () {\r\n                Dom_1.$$(_this.bindings.resultElement).trigger(ResultListEvents_1.ResultListEvents.openQuickview);\r\n            };\r\n            Dom_1.$$(this.element).on('click', function (e) {\r\n                e.preventDefault();\r\n                _this.toExecuteOnOpen();\r\n            });\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    ResultLink.prototype.openLinkThatIsNotAnAnchor = function () {\r\n        var _this = this;\r\n        if (!this.elementIsAnAnchor()) {\r\n            this.toExecuteOnOpen = function () {\r\n                if (_this.options.alwaysOpenInNewWindow) {\r\n                    if (_this.options.openInOutlook) {\r\n                        _this.openLinkInOutlook();\r\n                    }\r\n                    else {\r\n                        _this.openLinkInNewWindow();\r\n                    }\r\n                }\r\n                else {\r\n                    _this.openLink();\r\n                }\r\n            };\r\n            Dom_1.$$(this.element).on('click', function () {\r\n                _this.toExecuteOnOpen();\r\n            });\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    ResultLink.prototype.setHrefIfNotAlready = function () {\r\n        // Do not erase any value put in href by the template, etc. Allows\r\n        // using custom click urls while still keeping analytics recording\r\n        // and other behavior brought by the component.\r\n        if (this.elementIsAnAnchor() && !Utils_1.Utils.isNonEmptyString(Dom_1.$$(this.element).getAttribute('href'))) {\r\n            Dom_1.$$(this.element).setAttribute('href', this.getResultUri());\r\n            if (this.options.alwaysOpenInNewWindow && !(this.options.openInOutlook && this.hasOutlookField())) {\r\n                Dom_1.$$(this.element).setAttribute('target', '_blank');\r\n            }\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    ResultLink.prototype.filterProtocol = function (uri) {\r\n        var isAbsolute = /^(https?|ftp|file|mailto|tel):/i.test(uri);\r\n        var isRelative = /^\\//.test(uri);\r\n        return isAbsolute || isRelative ? uri : '';\r\n    };\r\n    ResultLink.prototype.getResultUri = function () {\r\n        if (this.options.hrefTemplate) {\r\n            var uri = StringUtils_1.StringUtils.buildStringTemplateFromResult(this.options.hrefTemplate, this.result);\r\n            return this.filterProtocol(uri);\r\n        }\r\n        if (this.options.field == undefined && this.options.openInOutlook) {\r\n            this.setField();\r\n        }\r\n        if (this.options.field != undefined) {\r\n            return this.filterProtocol(Utils_1.Utils.getFieldValue(this.result, this.options.field));\r\n        }\r\n        return this.filterProtocol(this.result.clickUri);\r\n    };\r\n    ResultLink.prototype.elementIsAnAnchor = function () {\r\n        return this.element.tagName == 'A';\r\n    };\r\n    ResultLink.prototype.setField = function () {\r\n        var os = Utils_1.Utils.exists(this.os) ? this.os : OSUtils_1.OSUtils.get();\r\n        if (os == OSUtils_1.OS_NAME.MACOSX && this.hasOutlookField()) {\r\n            this.options.field = '@outlookformacuri';\r\n        }\r\n        else if (os == OSUtils_1.OS_NAME.WINDOWS && this.hasOutlookField()) {\r\n            this.options.field = '@outlookuri';\r\n        }\r\n    };\r\n    ResultLink.prototype.hasOutlookField = function () {\r\n        var os = Utils_1.Utils.exists(this.os) ? this.os : OSUtils_1.OSUtils.get();\r\n        if (os == OSUtils_1.OS_NAME.MACOSX && this.result.raw['outlookformacuri'] != undefined) {\r\n            return true;\r\n        }\r\n        else if (os == OSUtils_1.OS_NAME.WINDOWS && this.result.raw['outlookuri'] != undefined) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    ResultLink.prototype.isUriThatMustBeOpenedInQuickview = function () {\r\n        return this.escapedClickUri.toLowerCase().indexOf('ldap://') == 0;\r\n    };\r\n    ResultLink.prototype.quickviewShouldBeOpened = function () {\r\n        return (this.options.openQuickview || this.isUriThatMustBeOpenedInQuickview()) && QueryUtils_1.QueryUtils.hasHTMLVersion(this.result);\r\n    };\r\n    ResultLink.ID = 'ResultLink';\r\n    ResultLink.doExport = function () {\r\n        GlobalExports_1.exportGlobally({\r\n            ResultLink: ResultLink\r\n        });\r\n    };\r\n    /**\r\n     * The options for the ResultLink\r\n     * @componentOptions\r\n     */\r\n    ResultLink.options = {\r\n        /**\r\n         * Specifies the field to use to output the component `href` attribute value.\r\n         *\r\n         * **Tip:**\r\n         * > Instead of specifying a value for the `field` option, you can directly add an `href` attribute to the\r\n         * > `ResultLink` HTML element. Then, you can use a custom script to generate the `href` value.\r\n         *\r\n         * **Examples:**\r\n         * - With the following markup, the `ResultLink` outputs its `href` value using the `@uri` field (rather than the\r\n         * default field):\r\n         *\r\n         * ```html\r\n         * <a class=\"CoveoResultLink\" data-field=\"@uri\"></a>\r\n         * ```\r\n         *\r\n         * - In the following result template, the custom `getMyKBUri()` function provides the `href` value:\r\n         *\r\n         * ```html\r\n         * <script id=\"KnowledgeArticle\" type=\"text/underscore\" class=\"result-template\">\r\n         *   <div class='CoveoIcon>'></div>\r\n         *   <a class=\"CoveoResultLink\" href=\"<%= getMyKBUri(raw) %>\"></a>\r\n         *   <div class=\"CoveoExcerpt\"></div>\r\n         * </script>\r\n         * ```\r\n         *\r\n         * See also [`hrefTemplate`]{@link ResultLink.options.hrefTemplate}, which can override this option.\r\n         *\r\n         * By default, the component uses the `@clickUri` field of the item to output the value of its `href` attribute.\r\n         */\r\n        field: ComponentOptions_1.ComponentOptions.buildFieldOption(),\r\n        /**\r\n         * Specifies whether the component should try to open its link in Microsoft Outlook.\r\n         *\r\n         * Setting this option to `true` is normally useful for `ResultLink` instances related to Microsoft Exchange emails.\r\n         *\r\n         * If this option is `true`, clicking the `ResultLink` calls the\r\n         * [`openLinkInOutlook`]{@link ResultLink.openLinkInOutlook} method instead of the\r\n         * [`openLink`]{@link ResultLink.openLink} method.\r\n         *\r\n         * Default value is `false`.\r\n         */\r\n        openInOutlook: ComponentOptions_1.ComponentOptions.buildBooleanOption({ defaultValue: false }),\r\n        /**\r\n         * Specifies whether the component should open its link in the [`Quickview`]{@link Quickview} component rather than\r\n         * loading through the original URL.\r\n         *\r\n         * Default value is `false`.\r\n         */\r\n        openQuickview: ComponentOptions_1.ComponentOptions.buildBooleanOption({ defaultValue: false }),\r\n        /**\r\n         * Specifies whether the component should open its link in a new window instead of opening it in the current\r\n         * context.\r\n         *\r\n         * If this option is `true`, clicking the `ResultLink` calls the\r\n         * [`openLinkInNewWindow`]{@link ResultLink.openLinkInNewWindow} method instead of the\r\n         * [`openLink`]{@link ResultLink.openLink} method.\r\n         *\r\n         * **Note:**\r\n         * > If a search page contains a [`ResultPreferences`]{@link ResultsPreferences} component whose\r\n         * > [`enableOpenInNewWindow`]{@link ResultsPreferences.options.enableOpenInNewWindow} option is `true`, and the end\r\n         * > user checks the <b>Always open results in new window</b> box, `ResultLink` components in this page will always\r\n         * > open their links in a new window when the end user clicks them, no matter what the value of their\r\n         * > `alwaysOpenInNewWindow` option is.\r\n         *\r\n         * Default value is `false`.\r\n         */\r\n        alwaysOpenInNewWindow: ComponentOptions_1.ComponentOptions.buildBooleanOption({ defaultValue: false }),\r\n        /**\r\n         * Specifies a template literal from which to generate the `ResultLink` `href` attribute value (see\r\n         * [Template literals](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Template_literals)).\r\n         *\r\n         * This option overrides the [`field`]{@link ResultLink.options.field} option value.\r\n         *\r\n         * The template literal can reference any number of fields from the parent result. It can also reference global\r\n         * scope properties.\r\n         *\r\n         * **Examples:**\r\n         *\r\n         * - The following markup generates an `href` value such as `http://uri.com?id=itemTitle`:\r\n         *\r\n         * ```html\r\n         * <a class='CoveoResultLink' data-href-template='${clickUri}?id=${raw.title}'></a>\r\n         * ```\r\n         *\r\n         * - The following markup generates an `href` value such as `localhost/fooBar`:\r\n         *\r\n         * ```html\r\n         * <a class='CoveoResultLink' data-href-template='${window.location.hostname}/{Foo.Bar}'></a>\r\n         * ```\r\n         *\r\n         * Default value is `undefined`.\r\n         */\r\n        hrefTemplate: ComponentOptions_1.ComponentOptions.buildStringOption(),\r\n        /**\r\n         * Specifies a template literal from which to generate the `ResultLink` display title (see\r\n         * [Template literals](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Template_literals)).\r\n         *\r\n         * This option overrides the default `ResultLink` display title behavior.\r\n         *\r\n         * The template literal can reference any number of fields from the parent result. However, if the template literal\r\n         * references a key whose value is undefined in the parent result fields, the `ResultLink` title displays the\r\n         * name of this key instead.\r\n         *\r\n         * This option is ignored if the `ResultLink` innerHTML contains any value.\r\n         *\r\n         * **Examples:**\r\n         *\r\n         * - The following markup generates a `ResultLink` display title such as `Case number: 123456` if both the\r\n         * `raw.objecttype` and `raw.objectnumber` keys are defined in the parent result fields:\r\n         *\r\n         * ```html\r\n         * <a class=\"CoveoResultLink\" data-title-template=\"${raw.objecttype} number: ${raw.objectnumber}\"></a>\r\n         * ```\r\n         *\r\n         * - The following markup generates `${myField}` as a `ResultLink` display title if the `myField` key is undefined\r\n         * in the parent result fields:\r\n         *\r\n         * ```html\r\n         * <a class=\"CoveoResultLink\" data-title-template=\"${myField}\"></a>\r\n         * ```\r\n         *\r\n         * - The following markup generates `Foobar` as a `ResultLink` display title, because the `ResultLink` innterHTML is\r\n         * not empty:\r\n         *\r\n         * ```html\r\n         * <a class=\"CoveoResultLink\" data-title-template=\"${will} ${be} ${ignored}\">Foobar</a>\r\n         * ```\r\n         *\r\n         * Default value is `undefined`.\r\n         *\r\n         * @availablesince [January 2017 Release (v1.1865.9)](https://docs.coveo.com/en/396/#january-2017-release-v118659)\r\n         */\r\n        titleTemplate: ComponentOptions_1.ComponentOptions.buildStringOption(),\r\n        /**\r\n         * Specifies an event handler function to execute when the user clicks the `ResultLink` component.\r\n         *\r\n         * The handler function takes a JavaScript [`Event`](https://developer.mozilla.org/en/docs/Web/API/Event) object and\r\n         * an [`IQueryResult`]{@link IQueryResult} as its parameters.\r\n         *\r\n         * Overriding the default behavior of the `onClick` event can allow you to execute specific code instead.\r\n         *\r\n         * **Note:**\r\n         * > You cannot set this option directly in the component markup as an HTML attribute. You must either set it in the\r\n         * > [`init`]{@link init} call of your search interface (see\r\n         * > [Passing Component Options in the init Call](https://docs.coveo.com/en/346/#passing-component-options-in-the-init-call)),\r\n         * > or before the `init` call, using the `options` top-level function (see\r\n         * > [Passing Component Options Before the init Call](https://docs.coveo.com/en/346/#passing-component-options-before-the-init-call)).\r\n         *\r\n         * **Example:**\r\n         * ```javascript\r\n         * // You can set the option in the 'init' call:\r\n         * Coveo.init(document.querySelector(\"#search\"), {\r\n         *   ResultLink : {\r\n         *     onClick : function(e, result) {\r\n         *       e.preventDefault();\r\n         *       // Custom code to execute with the item URI and title.\r\n         *       openUriInASpecialTab(result.clickUri, result.title);\r\n         *     }\r\n         *   }\r\n         * });\r\n         *\r\n         * // Or before the 'init' call, using the 'options' top-level function:\r\n         * // Coveo.options(document.querySelector('#search'), {\r\n         * //   ResultLink : {\r\n         * //     onClick : function(e, result) {\r\n         * //       e.preventDefault();\r\n         * //       // Custom code to execute with the item URI and title.\r\n         * //       openUriInASpecialTab(result.clickUri, result.title);\r\n         * //     }\r\n         * //   }\r\n         * // });\r\n         * ```\r\n         */\r\n        onClick: ComponentOptions_1.ComponentOptions.buildCustomOption(function () {\r\n            return null;\r\n        })\r\n    };\r\n    return ResultLink;\r\n}(Component_1.Component));\r\nexports.ResultLink = ResultLink;\r\nInitialization_1.Initialization.registerAutoCreateComponent(ResultLink);\r\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// ResultLink.min__5f3280c404a1ee75a113.js","import { Component } from '../Base/Component';\r\nimport { ComponentOptions } from '../Base/ComponentOptions';\r\nimport { ComponentOptionsModel } from '../../models/ComponentOptionsModel';\r\nimport { IResultsComponentBindings } from '../Base/ResultsComponentBindings';\r\nimport { analyticsActionCauseList } from '../Analytics/AnalyticsActionListMeta';\r\nimport { IResultLinkOptions } from './ResultLinkOptions';\r\nimport { ResultListEvents } from '../../events/ResultListEvents';\r\nimport { HighlightUtils } from '../../utils/HighlightUtils';\r\nimport { IQueryResult } from '../../rest/QueryResult';\r\nimport { DeviceUtils } from '../../utils/DeviceUtils';\r\nimport { OS_NAME, OSUtils } from '../../utils/OSUtils';\r\nimport { Initialization } from '../Base/Initialization';\r\nimport { QueryUtils } from '../../utils/QueryUtils';\r\nimport { Assert } from '../../misc/Assert';\r\nimport { Utils } from '../../utils/Utils';\r\nimport { Defer } from '../../misc/Defer';\r\nimport { $$ } from '../../utils/Dom';\r\nimport { StreamHighlightUtils } from '../../utils/StreamHighlightUtils';\r\nimport { StringUtils } from '../../utils/StringUtils';\r\nimport { once, debounce, extend, escape } from 'underscore';\r\nimport { exportGlobally } from '../../GlobalExports';\r\n\r\nimport 'styling/_ResultLink';\r\nimport { AccessibleButton } from '../../utils/AccessibleButton';\r\n\r\n/**\r\n * The `ResultLink` component automatically transform a search result title into a clickable link pointing to the\r\n * original item.\r\n *\r\n * This component is a result template component (see [Result Templates](https://docs.coveo.com/en/413/)).\r\n */\r\nexport class ResultLink extends Component {\r\n  static ID = 'ResultLink';\r\n\r\n  static doExport = () => {\r\n    exportGlobally({\r\n      ResultLink: ResultLink\r\n    });\r\n  };\r\n\r\n  /**\r\n   * The options for the ResultLink\r\n   * @componentOptions\r\n   */\r\n  static options: IResultLinkOptions = {\r\n    /**\r\n     * Specifies the field to use to output the component `href` attribute value.\r\n     *\r\n     * **Tip:**\r\n     * > Instead of specifying a value for the `field` option, you can directly add an `href` attribute to the\r\n     * > `ResultLink` HTML element. Then, you can use a custom script to generate the `href` value.\r\n     *\r\n     * **Examples:**\r\n     * - With the following markup, the `ResultLink` outputs its `href` value using the `@uri` field (rather than the\r\n     * default field):\r\n     *\r\n     * ```html\r\n     * <a class=\"CoveoResultLink\" data-field=\"@uri\"></a>\r\n     * ```\r\n     *\r\n     * - In the following result template, the custom `getMyKBUri()` function provides the `href` value:\r\n     *\r\n     * ```html\r\n     * <script id=\"KnowledgeArticle\" type=\"text/underscore\" class=\"result-template\">\r\n     *   <div class='CoveoIcon>'></div>\r\n     *   <a class=\"CoveoResultLink\" href=\"<%= getMyKBUri(raw) %>\"></a>\r\n     *   <div class=\"CoveoExcerpt\"></div>\r\n     * </script>\r\n     * ```\r\n     *\r\n     * See also [`hrefTemplate`]{@link ResultLink.options.hrefTemplate}, which can override this option.\r\n     *\r\n     * By default, the component uses the `@clickUri` field of the item to output the value of its `href` attribute.\r\n     */\r\n    field: ComponentOptions.buildFieldOption(),\r\n\r\n    /**\r\n     * Specifies whether the component should try to open its link in Microsoft Outlook.\r\n     *\r\n     * Setting this option to `true` is normally useful for `ResultLink` instances related to Microsoft Exchange emails.\r\n     *\r\n     * If this option is `true`, clicking the `ResultLink` calls the\r\n     * [`openLinkInOutlook`]{@link ResultLink.openLinkInOutlook} method instead of the\r\n     * [`openLink`]{@link ResultLink.openLink} method.\r\n     *\r\n     * Default value is `false`.\r\n     */\r\n    openInOutlook: ComponentOptions.buildBooleanOption({ defaultValue: false }),\r\n\r\n    /**\r\n     * Specifies whether the component should open its link in the [`Quickview`]{@link Quickview} component rather than\r\n     * loading through the original URL.\r\n     *\r\n     * Default value is `false`.\r\n     */\r\n    openQuickview: ComponentOptions.buildBooleanOption({ defaultValue: false }),\r\n\r\n    /**\r\n     * Specifies whether the component should open its link in a new window instead of opening it in the current\r\n     * context.\r\n     *\r\n     * If this option is `true`, clicking the `ResultLink` calls the\r\n     * [`openLinkInNewWindow`]{@link ResultLink.openLinkInNewWindow} method instead of the\r\n     * [`openLink`]{@link ResultLink.openLink} method.\r\n     *\r\n     * **Note:**\r\n     * > If a search page contains a [`ResultPreferences`]{@link ResultsPreferences} component whose\r\n     * > [`enableOpenInNewWindow`]{@link ResultsPreferences.options.enableOpenInNewWindow} option is `true`, and the end\r\n     * > user checks the <b>Always open results in new window</b> box, `ResultLink` components in this page will always\r\n     * > open their links in a new window when the end user clicks them, no matter what the value of their\r\n     * > `alwaysOpenInNewWindow` option is.\r\n     *\r\n     * Default value is `false`.\r\n     */\r\n    alwaysOpenInNewWindow: ComponentOptions.buildBooleanOption({ defaultValue: false }),\r\n\r\n    /**\r\n     * Specifies a template literal from which to generate the `ResultLink` `href` attribute value (see\r\n     * [Template literals](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Template_literals)).\r\n     *\r\n     * This option overrides the [`field`]{@link ResultLink.options.field} option value.\r\n     *\r\n     * The template literal can reference any number of fields from the parent result. It can also reference global\r\n     * scope properties.\r\n     *\r\n     * **Examples:**\r\n     *\r\n     * - The following markup generates an `href` value such as `http://uri.com?id=itemTitle`:\r\n     *\r\n     * ```html\r\n     * <a class='CoveoResultLink' data-href-template='${clickUri}?id=${raw.title}'></a>\r\n     * ```\r\n     *\r\n     * - The following markup generates an `href` value such as `localhost/fooBar`:\r\n     *\r\n     * ```html\r\n     * <a class='CoveoResultLink' data-href-template='${window.location.hostname}/{Foo.Bar}'></a>\r\n     * ```\r\n     *\r\n     * Default value is `undefined`.\r\n     */\r\n    hrefTemplate: ComponentOptions.buildStringOption(),\r\n\r\n    /**\r\n     * Specifies a template literal from which to generate the `ResultLink` display title (see\r\n     * [Template literals](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Template_literals)).\r\n     *\r\n     * This option overrides the default `ResultLink` display title behavior.\r\n     *\r\n     * The template literal can reference any number of fields from the parent result. However, if the template literal\r\n     * references a key whose value is undefined in the parent result fields, the `ResultLink` title displays the\r\n     * name of this key instead.\r\n     *\r\n     * This option is ignored if the `ResultLink` innerHTML contains any value.\r\n     *\r\n     * **Examples:**\r\n     *\r\n     * - The following markup generates a `ResultLink` display title such as `Case number: 123456` if both the\r\n     * `raw.objecttype` and `raw.objectnumber` keys are defined in the parent result fields:\r\n     *\r\n     * ```html\r\n     * <a class=\"CoveoResultLink\" data-title-template=\"${raw.objecttype} number: ${raw.objectnumber}\"></a>\r\n     * ```\r\n     *\r\n     * - The following markup generates `${myField}` as a `ResultLink` display title if the `myField` key is undefined\r\n     * in the parent result fields:\r\n     *\r\n     * ```html\r\n     * <a class=\"CoveoResultLink\" data-title-template=\"${myField}\"></a>\r\n     * ```\r\n     *\r\n     * - The following markup generates `Foobar` as a `ResultLink` display title, because the `ResultLink` innterHTML is\r\n     * not empty:\r\n     *\r\n     * ```html\r\n     * <a class=\"CoveoResultLink\" data-title-template=\"${will} ${be} ${ignored}\">Foobar</a>\r\n     * ```\r\n     *\r\n     * Default value is `undefined`.\r\n     *\r\n     * @availablesince [January 2017 Release (v1.1865.9)](https://docs.coveo.com/en/396/#january-2017-release-v118659)\r\n     */\r\n    titleTemplate: ComponentOptions.buildStringOption(),\r\n\r\n    /**\r\n     * Specifies an event handler function to execute when the user clicks the `ResultLink` component.\r\n     *\r\n     * The handler function takes a JavaScript [`Event`](https://developer.mozilla.org/en/docs/Web/API/Event) object and\r\n     * an [`IQueryResult`]{@link IQueryResult} as its parameters.\r\n     *\r\n     * Overriding the default behavior of the `onClick` event can allow you to execute specific code instead.\r\n     *\r\n     * **Note:**\r\n     * > You cannot set this option directly in the component markup as an HTML attribute. You must either set it in the\r\n     * > [`init`]{@link init} call of your search interface (see\r\n     * > [Passing Component Options in the init Call](https://docs.coveo.com/en/346/#passing-component-options-in-the-init-call)),\r\n     * > or before the `init` call, using the `options` top-level function (see\r\n     * > [Passing Component Options Before the init Call](https://docs.coveo.com/en/346/#passing-component-options-before-the-init-call)).\r\n     *\r\n     * **Example:**\r\n     * ```javascript\r\n     * // You can set the option in the 'init' call:\r\n     * Coveo.init(document.querySelector(\"#search\"), {\r\n     *   ResultLink : {\r\n     *     onClick : function(e, result) {\r\n     *       e.preventDefault();\r\n     *       // Custom code to execute with the item URI and title.\r\n     *       openUriInASpecialTab(result.clickUri, result.title);\r\n     *     }\r\n     *   }\r\n     * });\r\n     *\r\n     * // Or before the 'init' call, using the 'options' top-level function:\r\n     * // Coveo.options(document.querySelector('#search'), {\r\n     * //   ResultLink : {\r\n     * //     onClick : function(e, result) {\r\n     * //       e.preventDefault();\r\n     * //       // Custom code to execute with the item URI and title.\r\n     * //       openUriInASpecialTab(result.clickUri, result.title);\r\n     * //     }\r\n     * //   }\r\n     * // });\r\n     * ```\r\n     */\r\n    onClick: ComponentOptions.buildCustomOption<(e: Event, result: IQueryResult) => any>(() => {\r\n      return null;\r\n    })\r\n  };\r\n\r\n  private toExecuteOnOpen: (e?: Event) => void;\r\n\r\n  /**\r\n   * Creates a new `ResultLink` component.\r\n   * @param element The HTMLElement on which to instantiate the component.\r\n   * @param options The options for the `ResultLink` component.\r\n   * @param bindings The bindings that the component requires to function normally. If not set, these will be\r\n   * automatically resolved (with a slower execution time).\r\n   * @param result The result to associate the component with.\r\n   * @param os\r\n   */\r\n  constructor(\r\n    public element: HTMLElement,\r\n    public options: IResultLinkOptions,\r\n    public bindings?: IResultsComponentBindings,\r\n    public result?: IQueryResult,\r\n    public os?: OS_NAME\r\n  ) {\r\n    super(element, ResultLink.ID, bindings);\r\n\r\n    const initialOptions = ComponentOptions.initComponentOptions(element, ResultLink, options);\r\n    const resultLinkOptions = this.componentOptionsModel.get(ComponentOptionsModel.attributesEnum.resultLink);\r\n    this.options = extend({}, initialOptions, resultLinkOptions);\r\n\r\n    this.result = result || this.resolveResult();\r\n\r\n    if (this.options.openQuickview == null) {\r\n      this.options.openQuickview = result.raw['connectortype'] == 'ExchangeCrawler' && DeviceUtils.isMobileDevice();\r\n    }\r\n    this.element.setAttribute('tabindex', '0');\r\n\r\n    Assert.exists(this.componentOptionsModel);\r\n    Assert.exists(this.result);\r\n\r\n    if (!this.quickviewShouldBeOpened()) {\r\n      // Bind on multiple \"click\" or \"mouse\" events.\r\n      // Create a function that will be executed only once, so as not to log multiple events\r\n      // Once a result link has been opened, and that we log at least one analytics event,\r\n      // it should not matter if the end user open the same link multiple times with different methods.\r\n      // It's still only one \"click\" event as far as UA is concerned.\r\n      // Also need to handle \"longpress\" on mobile (the contextual menu), which we assume to be 1 s long.\r\n\r\n      const executeOnlyOnce = once(() => this.logOpenDocument());\r\n\r\n      $$(element).on(['contextmenu', 'click', 'mousedown', 'mouseup'], executeOnlyOnce);\r\n      let longPressTimer: number;\r\n      $$(element).on('touchstart', () => {\r\n        longPressTimer = window.setTimeout(executeOnlyOnce, 1000);\r\n      });\r\n      $$(element).on('touchend', () => {\r\n        if (longPressTimer) {\r\n          clearTimeout(longPressTimer);\r\n        }\r\n      });\r\n    }\r\n    this.renderUri(element, result);\r\n    this.bindEventToOpen();\r\n  }\r\n  public renderUri(element: HTMLElement, result?: IQueryResult) {\r\n    if (/^\\s*$/.test(this.element.innerHTML)) {\r\n      const title = this.getDisplayedTitle();\r\n      this.element.innerHTML = title;\r\n      if (!this.element.title) {\r\n        this.element.title = this.getDisplayedTitleAsText();\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Opens the result in the same window, no matter how the actual component is configured for the end user.\r\n   * @param logAnalytics Specifies whether the method should log an analytics event.\r\n   */\r\n  public openLink(logAnalytics = true) {\r\n    if (logAnalytics) {\r\n      this.logOpenDocument();\r\n    }\r\n    window.location.href = this.getResultUri();\r\n  }\r\n\r\n  /**\r\n   * Opens the result in a new window, no matter how the actual component is configured for the end user.\r\n   * @param logAnalytics Specifies whether the method should log an analytics event.\r\n   */\r\n  public openLinkInNewWindow(logAnalytics = true) {\r\n    if (logAnalytics) {\r\n      this.logOpenDocument();\r\n    }\r\n    window.open(this.getResultUri(), '_blank');\r\n  }\r\n\r\n  /**\r\n   * Tries to open the result in Microsoft Outlook if the result has an `outlookformacuri` or `outlookuri` field.\r\n   *\r\n   * Normally, this implies the result should be a link to an email.\r\n   *\r\n   * If the needed fields are not present, this method does nothing.\r\n   * @param logAnalytics Specifies whether the method should log an analytics event.\r\n   */\r\n  public openLinkInOutlook(logAnalytics = true) {\r\n    if (this.hasOutlookField()) {\r\n      if (logAnalytics) {\r\n        this.logOpenDocument();\r\n      }\r\n      this.openLink();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Opens the link in the same manner the end user would.\r\n   *\r\n   * This essentially simulates a click on the result link.\r\n   *\r\n   * @param logAnalytics Specifies whether the method should log an analytics event.\r\n   */\r\n  public openLinkAsConfigured(logAnalytics = true) {\r\n    if (this.toExecuteOnOpen) {\r\n      if (logAnalytics) {\r\n        this.logOpenDocument();\r\n      }\r\n      this.toExecuteOnOpen();\r\n    }\r\n  }\r\n\r\n  protected bindEventToOpen(): boolean {\r\n    return (\r\n      this.bindOnClickIfNotUndefined() ||\r\n      this.bindOpenQuickviewIfNotUndefined() ||\r\n      this.setHrefIfNotAlready() ||\r\n      this.openLinkThatIsNotAnAnchor()\r\n    );\r\n  }\r\n\r\n  private getDisplayedTitle() {\r\n    if (!this.options.titleTemplate) {\r\n      return this.result.title\r\n        ? HighlightUtils.highlightString(this.result.title, this.result.titleHighlights, null, 'coveo-highlight')\r\n        : this.escapedClickUri;\r\n    } else {\r\n      let newTitle = StringUtils.buildStringTemplateFromResult(this.options.titleTemplate, this.result);\r\n      return newTitle\r\n        ? StreamHighlightUtils.highlightStreamText(newTitle, this.result.termsToHighlight, this.result.phrasesToHighlight)\r\n        : this.escapedClickUri;\r\n    }\r\n  }\r\n\r\n  private getDisplayedTitleAsText() {\r\n    const container = $$('div');\r\n    container.setHtml(this.getDisplayedTitle());\r\n    return container.text();\r\n  }\r\n\r\n  private get escapedClickUri() {\r\n    return escape(this.result.clickUri);\r\n  }\r\n\r\n  private bindOnClickIfNotUndefined() {\r\n    if (this.options.onClick != undefined) {\r\n      this.toExecuteOnOpen = (e: MouseEvent) => {\r\n        this.options.onClick.call(this, e, this.result);\r\n      };\r\n\r\n      new AccessibleButton()\r\n        .withElement(this.element)\r\n        .withLabel(this.result.title)\r\n        .withSelectAction((e: Event) => this.toExecuteOnOpen(e))\r\n        .build();\r\n\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  private bindOpenQuickviewIfNotUndefined() {\r\n    if (this.quickviewShouldBeOpened()) {\r\n      this.toExecuteOnOpen = () => {\r\n        $$(this.bindings.resultElement).trigger(ResultListEvents.openQuickview);\r\n      };\r\n\r\n      $$(this.element).on('click', (e: Event) => {\r\n        e.preventDefault();\r\n        this.toExecuteOnOpen();\r\n      });\r\n\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  private openLinkThatIsNotAnAnchor() {\r\n    if (!this.elementIsAnAnchor()) {\r\n      this.toExecuteOnOpen = () => {\r\n        if (this.options.alwaysOpenInNewWindow) {\r\n          if (this.options.openInOutlook) {\r\n            this.openLinkInOutlook();\r\n          } else {\r\n            this.openLinkInNewWindow();\r\n          }\r\n        } else {\r\n          this.openLink();\r\n        }\r\n      };\r\n\r\n      $$(this.element).on('click', () => {\r\n        this.toExecuteOnOpen();\r\n      });\r\n\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private setHrefIfNotAlready() {\r\n    // Do not erase any value put in href by the template, etc. Allows\r\n    // using custom click urls while still keeping analytics recording\r\n    // and other behavior brought by the component.\r\n    if (this.elementIsAnAnchor() && !Utils.isNonEmptyString($$(this.element).getAttribute('href'))) {\r\n      $$(this.element).setAttribute('href', this.getResultUri());\r\n      if (this.options.alwaysOpenInNewWindow && !(this.options.openInOutlook && this.hasOutlookField())) {\r\n        $$(this.element).setAttribute('target', '_blank');\r\n      }\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  private logOpenDocument = debounce(\r\n    () => {\r\n      this.queryController.saveLastQuery();\r\n      let documentURL = $$(this.element).getAttribute('href');\r\n      if (documentURL == undefined || documentURL == '') {\r\n        documentURL = this.escapedClickUri;\r\n      }\r\n      this.usageAnalytics.logClickEvent(\r\n        analyticsActionCauseList.documentOpen,\r\n        {\r\n          documentURL: documentURL,\r\n          documentTitle: this.result.title,\r\n          author: Utils.getFieldValue(this.result, 'author')\r\n        },\r\n        this.result,\r\n        this.root\r\n      );\r\n      Defer.flush();\r\n    },\r\n    1500,\r\n    true\r\n  );\r\n\r\n  private filterProtocol(uri: string) {\r\n    const isAbsolute = /^(https?|ftp|file|mailto|tel):/i.test(uri);\r\n    const isRelative = /^\\//.test(uri);\r\n\r\n    return isAbsolute || isRelative ? uri : '';\r\n  }\r\n\r\n  private getResultUri(): string {\r\n    if (this.options.hrefTemplate) {\r\n      const uri = StringUtils.buildStringTemplateFromResult(this.options.hrefTemplate, this.result);\r\n      return this.filterProtocol(uri);\r\n    }\r\n\r\n    if (this.options.field == undefined && this.options.openInOutlook) {\r\n      this.setField();\r\n    }\r\n\r\n    if (this.options.field != undefined) {\r\n      return this.filterProtocol(Utils.getFieldValue(this.result, <string>this.options.field));\r\n    }\r\n\r\n    return this.filterProtocol(this.result.clickUri);\r\n  }\r\n\r\n  private elementIsAnAnchor() {\r\n    return this.element.tagName == 'A';\r\n  }\r\n\r\n  private setField() {\r\n    let os = Utils.exists(this.os) ? this.os : OSUtils.get();\r\n    if (os == OS_NAME.MACOSX && this.hasOutlookField()) {\r\n      this.options.field = '@outlookformacuri';\r\n    } else if (os == OS_NAME.WINDOWS && this.hasOutlookField()) {\r\n      this.options.field = '@outlookuri';\r\n    }\r\n  }\r\n\r\n  private hasOutlookField() {\r\n    let os = Utils.exists(this.os) ? this.os : OSUtils.get();\r\n    if (os == OS_NAME.MACOSX && this.result.raw['outlookformacuri'] != undefined) {\r\n      return true;\r\n    } else if (os == OS_NAME.WINDOWS && this.result.raw['outlookuri'] != undefined) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private isUriThatMustBeOpenedInQuickview(): boolean {\r\n    return this.escapedClickUri.toLowerCase().indexOf('ldap://') == 0;\r\n  }\r\n\r\n  private quickviewShouldBeOpened() {\r\n    return (this.options.openQuickview || this.isUriThatMustBeOpenedInQuickview()) && QueryUtils.hasHTMLVersion(this.result);\r\n  }\r\n}\r\n\r\nInitialization.registerAutoCreateComponent(ResultLink);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/ResultLink/ResultLink.ts"],"sourceRoot":""}