{"version":3,"sources":["./src/ui/DidYouMean/DidYouMean.ts","./sass/_DidYouMean.scss"],"names":[],"mappings":"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","file":"DidYouMean__1728cc16e4d2d82aa5db.js","sourcesContent":["import 'styling/_DidYouMean';\r\nimport * as _ from 'underscore';\r\nimport { exportGlobally } from '../../GlobalExports';\r\nimport { IBuildingQueryEventArgs, INoResultsEventArgs, IQuerySuccessEventArgs, QueryEvents } from '../../events/QueryEvents';\r\nimport { Assert } from '../../misc/Assert';\r\nimport { QueryStateModel } from '../../models/QueryStateModel';\r\nimport { IQueryCorrection } from '../../rest/QueryCorrection';\r\nimport { l } from '../../strings/Strings';\r\nimport { $$ } from '../../utils/Dom';\r\nimport { StringUtils } from '../../utils/StringUtils';\r\nimport { Utils } from '../../utils/Utils';\r\nimport { IAnalyticsNoMeta, analyticsActionCauseList } from '../Analytics/AnalyticsActionListMeta';\r\nimport { Component } from '../Base/Component';\r\nimport { IComponentBindings } from '../Base/ComponentBindings';\r\nimport { ComponentOptions } from '../Base/ComponentOptions';\r\nimport { Initialization } from '../Base/Initialization';\r\n\r\nexport interface IDidYouMeanOptions {\r\n  enableAutoCorrection?: boolean;\r\n}\r\n\r\n/**\r\n * The DidYouMean component is responsible for displaying query corrections. If this component is in the page and the\r\n * query returns no result but finds a possible query correction, the component either suggests the correction or\r\n * automatically triggers a new query with the suggested term.\r\n */\r\nexport class DidYouMean extends Component {\r\n  static ID = 'DidYouMean';\r\n\r\n  static doExport = () => {\r\n    exportGlobally({\r\n      DidYouMean: DidYouMean\r\n    });\r\n  };\r\n\r\n  /**\r\n   * The options for the component\r\n   * @componentOptions\r\n   */\r\n  static options: IDidYouMeanOptions = {\r\n    /**\r\n     * Specifies whether the DidYouMean component automatically triggers a new query when a query returns no result and\r\n     * a possible correction is available.\r\n     *\r\n     * Default value is `true`.\r\n     */\r\n    enableAutoCorrection: ComponentOptions.buildBooleanOption({ defaultValue: true })\r\n  };\r\n\r\n  public correctedTerm: string;\r\n\r\n  private hideNext: boolean;\r\n\r\n  /**\r\n   * Creates a new DidYouMean component.\r\n   * @param element The HTMLElement on which to instantiate the component.\r\n   * @param options The options for the DidYouMean component.\r\n   * @param bindings The bindings that the component requires to function normally. If not set, these will be\r\n   * automatically resolved (with a slower execution time).\r\n   */\r\n  constructor(public element: HTMLElement, public options?: IDidYouMeanOptions, public bindings?: IComponentBindings) {\r\n    super(element, DidYouMean.ID, bindings);\r\n\r\n    this.options = ComponentOptions.initComponentOptions(element, DidYouMean, options);\r\n    Assert.exists(element);\r\n    Assert.exists(this.options);\r\n\r\n    this.hideNext = true;\r\n\r\n    this.correctedTerm = null;\r\n\r\n    this.bind.onRootElement(QueryEvents.buildingQuery, this.handlePrepareQueryBuilder);\r\n    this.bind.onRootElement(QueryEvents.querySuccess, this.handleProcessNewQueryResults);\r\n    this.bind.onRootElement(QueryEvents.noResults, this.handleNoResults);\r\n    this.bind.onRootElement(QueryEvents.newQuery, this.handleNewQuery);\r\n    $$(this.element).hide();\r\n  }\r\n\r\n  /**\r\n   * Executes a query with the corrected term.\r\n   * Throws an exception if the corrected term has not been initialized.\r\n   * If successful, logs a `didyoumeanClick` event in the usage analytics.\r\n   */\r\n  public doQueryWithCorrectedTerm() {\r\n    Assert.exists(this.correctedTerm);\r\n    this.queryStateModel.set(QueryStateModel.attributesEnum.q, this.correctedTerm);\r\n    this.queryController.deferExecuteQuery({\r\n      beforeExecuteQuery: () => this.usageAnalytics.logSearchEvent<IAnalyticsNoMeta>(analyticsActionCauseList.didyoumeanClick, {})\r\n    });\r\n  }\r\n\r\n  private handleNewQuery() {\r\n    if (this.hideNext) {\r\n      $$(this.element).empty();\r\n      $$(this.element).hide();\r\n      this.correctedTerm = null;\r\n    } else {\r\n      this.hideNext = true;\r\n    }\r\n  }\r\n\r\n  private handlePrepareQueryBuilder(data: IBuildingQueryEventArgs) {\r\n    Assert.exists(data);\r\n    data.queryBuilder.enableDidYouMean = true;\r\n  }\r\n\r\n  private handleNoResults(data: INoResultsEventArgs) {\r\n    // We do not auto-correct on search-as-you-type queries\r\n    if (Utils.isNonEmptyArray(data.results.queryCorrections) && !data.searchAsYouType && this.options.enableAutoCorrection) {\r\n      let originalQuery = this.queryStateModel.get(QueryStateModel.attributesEnum.q);\r\n      this.correctedTerm = data.results.queryCorrections[0].correctedQuery;\r\n      let correctedSentence = this.buildCorrectedSentence(data.results.queryCorrections[0]);\r\n      this.queryStateModel.set(QueryStateModel.attributesEnum.q, data.results.queryCorrections[0].correctedQuery);\r\n      this.searchInterface.historyManager.replaceState(this.queryStateModel.getAttributes());\r\n      data.retryTheQuery = true;\r\n      this.hideNext = false;\r\n\r\n      let noResultsFor = $$('div', { className: 'coveo-did-you-mean-no-results-for' }).el;\r\n      noResultsFor.innerHTML = l(\r\n        'noResultFor',\r\n        '<span class=\"coveo-highlight coveo-did-you-mean-highlight\">' + StringUtils.htmlEncode(originalQuery) + '</span>'\r\n      );\r\n      this.element.appendChild(noResultsFor);\r\n\r\n      let automaticCorrect = $$('div', { className: 'coveo-did-you-mean-automatic-correct' }).el;\r\n      automaticCorrect.innerHTML = l('autoCorrectedQueryTo', '<span class=\"coveo-highlight\">' + correctedSentence + '</span>');\r\n      this.element.appendChild(automaticCorrect);\r\n\r\n      $$(this.element).show();\r\n      this.usageAnalytics.logSearchEvent<IAnalyticsNoMeta>(analyticsActionCauseList.didyoumeanAutomatic, {});\r\n    }\r\n  }\r\n\r\n  private handleProcessNewQueryResults(data: IQuerySuccessEventArgs) {\r\n    Assert.exists(data);\r\n    Assert.exists(data.results);\r\n\r\n    let results = data.results;\r\n    this.logger.trace('Received query results from new query', results);\r\n\r\n    if (Utils.isNonEmptyArray(results.queryCorrections)) {\r\n      const correctedSentence = this.buildCorrectedSentence(results.queryCorrections[0]);\r\n      this.correctedTerm = results.queryCorrections[0].correctedQuery;\r\n\r\n      const correctedWordEl = $$('button', {}, correctedSentence).el;\r\n      const didYouMean = $$('div', { className: 'coveo-did-you-mean-suggestion' }, l('didYouMean', correctedWordEl.outerHTML));\r\n      this.element.appendChild(didYouMean.el);\r\n\r\n      const appendedCorrectedWordEl = didYouMean.find(correctedWordEl.tagName);\r\n      $$(appendedCorrectedWordEl).on('click', () => this.doQueryWithCorrectedTerm());\r\n\r\n      $$(this.element).show();\r\n    }\r\n  }\r\n\r\n  private buildCorrectedSentence(correction: IQueryCorrection) {\r\n    let toReturn = [];\r\n    let tagStart = \"<span class='coveo-did-you-mean-word-correction'>\";\r\n    let tagEnd = '</span>';\r\n    let currentOffset = 0;\r\n    _.each(correction.wordCorrections, wordCorrection => {\r\n      toReturn.push(StringUtils.htmlEncode(correction.correctedQuery.slice(currentOffset, wordCorrection.offset)));\r\n      currentOffset = wordCorrection.offset;\r\n      toReturn.push(tagStart);\r\n      toReturn.push(StringUtils.htmlEncode(correction.correctedQuery.slice(currentOffset, wordCorrection.length + currentOffset)));\r\n      toReturn.push(tagEnd);\r\n      currentOffset = wordCorrection.offset + wordCorrection.length;\r\n    });\r\n    toReturn.push(StringUtils.htmlEncode(correction.correctedQuery.slice(currentOffset)));\r\n    return toReturn.join('');\r\n  }\r\n}\r\n\r\nInitialization.registerAutoCreateComponent(DidYouMean);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/DidYouMean/DidYouMean.ts","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./sass/_DidYouMean.scss\n// module id = 601\n// module chunks = 73 88"],"sourceRoot":""}