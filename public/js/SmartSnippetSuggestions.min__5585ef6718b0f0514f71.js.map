{"version":3,"sources":["SmartSnippetSuggestions.min__5585ef6718b0f0514f71.js","./src/ui/SmartSnippet/SmartSnippetSuggestions.ts","./src/misc/AttachShadowPolyfill.ts","./src/ui/SmartSnippet/SmartSnippetCommon.ts","./src/ui/ResultLink/ResultLink.ts","./src/ui/SmartSnippet/SmartSnippetCollapsibleSuggestion.ts"],"names":["webpackJsonpCoveo__temporary","295","module","exports","__webpack_require__","__extends","this","extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__","constructor","prototype","create","defineProperty","value","QUESTIONS_LIST_TITLE_CLASSNAME","QUESTIONS_LIST_CLASSNAME","SmartSnippetSuggestionsClassNames","HAS_QUESTIONS_CLASSNAME","BASE_CLASSNAME","element","options","bindings","SmartSnippetSuggestions","ID","titleId","uniqueId","bind","onRootElement","QueryEvents","deferredQuerySuccess","data","handleQuerySuccess","_this","get","contentLoaded","enumerable","configurable","getCorrespondingResult","questionAnswer","find","queryController","getLastResults","results","result","raw","documentId","contentIdKey","contentIdValue","hasQuestions","relatedQuestions","length","$$","toggleClass","searchUid","renderedQuestionAnswer","isEqual","detachContent","appendChild","title","buildTitle","el","questionAnswers","buildQuestionAnswers","detach","className","id","l","innerCSS","getInnerCSS","answers","map","SmartSnippetCollapsibleSuggestion","getBindings","Utils","isNullOrUndefined","getDefaultSnippetStyle","SmartSnippetCollapsibleSuggestionClassNames","RAW_CONTENT_CLASSNAME","container","ariaLabelledby","answer","build","Promise","all","loading","then","styles","children","filter","HTMLScriptElement","type","toLowerCase","innerHTML","join","doExport","exportGlobally","Component","Initialization","registerAutoCreateComponent","517","__awaiter","iframe","onLoad","iframeBody","shadowRoot","__generator","_a","label","scrolling","resolve","addEventListener","contentDocument","body","style","margin","autoUpdateHeight","onSizeChanged","mode","elementToResize","content","onUpdate","lastWidth","clientWidth","lastHeight","clientHeight","MutationObserver","width","height","observe","attributes","characterData","childList","subtree","thisArg","_arguments","P","generator","reject","fulfilled","step","next","e","rejected","done","apply","verb","n","v","op","f","TypeError","_","y","t","call","ops","pop","trys","push","g","sent","throw","return","Symbol","iterator","518","contentClassName","530","583","69","os","ResultLink","logOpenDocument","debounce","saveLastQuery","documentURL","getAttribute","undefined","escapedClickUri","usageAnalytics","logClickEvent","analyticsActionCauseList","documentOpen","documentTitle","author","getFieldValue","root","Defer","flush","initialOptions","ComponentOptions","initComponentOptions","resultLinkOptions","componentOptionsModel","ComponentOptionsModel","attributesEnum","resultLink","extend","resolveResult","openQuickview","DeviceUtils","isMobileDevice","setAttribute","Assert","exists","quickviewShouldBeOpened","once","on","window","setTimeout","clearTimeout","renderUri","bindEventToOpen","test","getDisplayedTitle","getDisplayedTitleAsText","openLink","logAnalytics","location","href","getResultUri","openLinkInNewWindow","open","openLinkInOutlook","hasOutlookField","openLinkAsConfigured","toExecuteOnOpen","bindOnClickIfNotUndefined","bindOpenQuickviewIfNotUndefined","setHrefIfNotAlready","openLinkThatIsNotAnAnchor","titleTemplate","newTitle","StringUtils","buildStringTemplateFromResult","StreamHighlightUtils","highlightStreamText","termsToHighlight","phrasesToHighlight","HighlightUtils","highlightString","titleHighlights","setHtml","text","escape","clickUri","onClick","AccessibleButton","withElement","withLabel","withSelectAction","resultElement","trigger","ResultListEvents","preventDefault","elementIsAnAnchor","alwaysOpenInNewWindow","openInOutlook","isNonEmptyString","filterProtocol","uri","isAbsolute","isRelative","hrefTemplate","field","setField","tagName","OSUtils","OS_NAME","MACOSX","WINDOWS","isUriThatMustBeOpenedInQuickview","indexOf","QueryUtils","hasHTMLVersion","buildFieldOption","buildBooleanOption","defaultValue","buildStringOption","buildCustomOption","704","705","__assign","assign","s","i","arguments","QUESTION_CLASSNAME","QUESTION_TITLE_CLASSNAME","QUESTION_TITLE_LABEL_CLASSNAME","QUESTION_TITLE_CHECKBOX_CLASSNAME","QUESTION_SNIPPET_CLASSNAME","QUESTION_SNIPPET_CONTAINER_CLASSNAME","QUESTION_SNIPPET_HIDDEN_CLASSNAME","SHADOW_CLASSNAME","SOURCE_CLASSNAME","SOURCE_TITLE_CLASSNAME","SOURCE_URL_CLASSNAME","source","labelId","snippetId","checkboxId","expanded","collapsibleContainer","buildCollapsibleContainer","answerSnippet","question","buildStyle","updateExpanded","styleTag","document","createElement","checkbox","buildCheckbox","toggle","role","tabindex","ariaControls","withEnterKeyboardAction","shadowContainer","snippetAndSourceContainer","attachShadow","buildAnswerSnippetContent","append","buildSourceUrl","buildSourceTitle","snippet","buildLink","innerText","sendExpandAnalytics","sendCollapseAnalytics","toString","SVGIcons","icons","arrowUp","arrowDown","logCustomEvent","expandSmartSnippetSuggestion","searchQueryUid","collapseSmartSnippetSuggestion"],"mappings":"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","file":"SmartSnippetSuggestions.min__5585ef6718b0f0514f71.js","sourcesContent":["webpackJsonpCoveo__temporary([21,63],{\n\n/***/ 295:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__webpack_require__(704);\nvar Component_1 = __webpack_require__(7);\nvar GlobalExports_1 = __webpack_require__(3);\nvar QueryEvents_1 = __webpack_require__(11);\nvar Dom_1 = __webpack_require__(1);\nvar underscore_1 = __webpack_require__(0);\nvar SmartSnippetCollapsibleSuggestion_1 = __webpack_require__(705);\nvar Strings_1 = __webpack_require__(6);\nvar Initialization_1 = __webpack_require__(2);\nvar Utils_1 = __webpack_require__(4);\nvar SmartSnippetCommon_1 = __webpack_require__(518);\nvar BASE_CLASSNAME = 'coveo-smart-snippet-suggestions';\nvar HAS_QUESTIONS_CLASSNAME = BASE_CLASSNAME + \"-has-questions\";\nvar QUESTIONS_LIST_CLASSNAME = BASE_CLASSNAME + \"-questions\";\nvar QUESTIONS_LIST_TITLE_CLASSNAME = QUESTIONS_LIST_CLASSNAME + \"-title\";\nexports.SmartSnippetSuggestionsClassNames = {\n    HAS_QUESTIONS_CLASSNAME: HAS_QUESTIONS_CLASSNAME,\n    QUESTIONS_LIST_CLASSNAME: QUESTIONS_LIST_CLASSNAME,\n    QUESTIONS_LIST_TITLE_CLASSNAME: QUESTIONS_LIST_TITLE_CLASSNAME\n};\n/**\n * The SmartSnippetSuggestions component displays additional queries for which a Coveo Smart Snippets model can provide relevant excerpts.\n */\nvar SmartSnippetSuggestions = /** @class */ (function (_super) {\n    __extends(SmartSnippetSuggestions, _super);\n    function SmartSnippetSuggestions(element, options, bindings) {\n        var _this = _super.call(this, element, SmartSnippetSuggestions.ID, bindings) || this;\n        _this.element = element;\n        _this.options = options;\n        _this.titleId = underscore_1.uniqueId(QUESTIONS_LIST_TITLE_CLASSNAME);\n        _this.bind.onRootElement(QueryEvents_1.QueryEvents.deferredQuerySuccess, function (data) { return _this.handleQuerySuccess(data); });\n        return _this;\n    }\n    Object.defineProperty(SmartSnippetSuggestions.prototype, \"loading\", {\n        get: function () {\n            return this.contentLoaded;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @warning This method only works for the demo. In practice, the source of the answer will not always be part of the results.\n     */\n    SmartSnippetSuggestions.prototype.getCorrespondingResult = function (questionAnswer) {\n        return underscore_1.find(this.queryController.getLastResults().results, function (result) { return result.raw[questionAnswer.documentId.contentIdKey] === questionAnswer.documentId.contentIdValue; });\n    };\n    SmartSnippetSuggestions.prototype.handleQuerySuccess = function (data) {\n        var questionAnswer = data.results.questionAnswer;\n        var hasQuestions = !!(questionAnswer && questionAnswer.relatedQuestions.length);\n        Dom_1.$$(this.element).toggleClass(HAS_QUESTIONS_CLASSNAME, hasQuestions);\n        if (hasQuestions) {\n            this.searchUid = data.results.searchUid;\n            if (this.renderedQuestionAnswer && underscore_1.isEqual(questionAnswer, this.renderedQuestionAnswer)) {\n                return;\n            }\n            this.detachContent();\n            this.element.appendChild((this.title = this.buildTitle()).el);\n            this.element.appendChild((this.questionAnswers = this.buildQuestionAnswers(questionAnswer.relatedQuestions)).el);\n        }\n        else {\n            this.detachContent();\n        }\n        this.renderedQuestionAnswer = questionAnswer;\n    };\n    SmartSnippetSuggestions.prototype.detachContent = function () {\n        this.title && this.title.detach();\n        this.questionAnswers && this.questionAnswers.detach();\n        this.title = this.questionAnswers = null;\n    };\n    SmartSnippetSuggestions.prototype.buildTitle = function () {\n        return Dom_1.$$('span', { className: QUESTIONS_LIST_TITLE_CLASSNAME, id: this.titleId }, Strings_1.l('SuggestedQuestions'));\n    };\n    SmartSnippetSuggestions.prototype.buildQuestionAnswers = function (questionAnswers) {\n        var _this = this;\n        var innerCSS = this.getInnerCSS();\n        var answers = questionAnswers.map(function (questionAnswer) {\n            return new SmartSnippetCollapsibleSuggestion_1.SmartSnippetCollapsibleSuggestion(questionAnswer, _this.getBindings(), Utils_1.Utils.isNullOrUndefined(innerCSS)\n                ? SmartSnippetCommon_1.getDefaultSnippetStyle(SmartSnippetCollapsibleSuggestion_1.SmartSnippetCollapsibleSuggestionClassNames.RAW_CONTENT_CLASSNAME)\n                : innerCSS, _this.searchUid, _this.getCorrespondingResult(questionAnswer));\n        });\n        var container = Dom_1.$$.apply(void 0, ['ul',\n            { className: QUESTIONS_LIST_CLASSNAME, ariaLabelledby: this.titleId }].concat(answers.map(function (answer) { return answer.build(); })));\n        this.contentLoaded = Promise.all(answers.map(function (answer) { return answer.loading.then(function () { return answer; }); }));\n        return container;\n    };\n    SmartSnippetSuggestions.prototype.getInnerCSS = function () {\n        var styles = Dom_1.$$(this.element)\n            .children()\n            .filter(function (element) { return element instanceof HTMLScriptElement && element.type.toLowerCase() === 'text/css'; })\n            .map(function (element) { return element.innerHTML; });\n        return styles.length ? styles.join('\\n') : null;\n    };\n    SmartSnippetSuggestions.ID = 'SmartSnippetSuggestions';\n    SmartSnippetSuggestions.doExport = function () {\n        GlobalExports_1.exportGlobally({\n            SmartSnippetSuggestions: SmartSnippetSuggestions\n        });\n    };\n    return SmartSnippetSuggestions;\n}(Component_1.Component));\nexports.SmartSnippetSuggestions = SmartSnippetSuggestions;\nInitialization_1.Initialization.registerAutoCreateComponent(SmartSnippetSuggestions);\nSmartSnippetSuggestions.doExport();\n\n\n/***/ }),\n\n/***/ 517:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Dom_1 = __webpack_require__(1);\n__webpack_require__(583);\nfunction attachShadow(element, options) {\n    return __awaiter(this, void 0, void 0, function () {\n        var iframe, onLoad, iframeBody, shadowRoot;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    iframe = Dom_1.$$('iframe', { className: 'coveo-shadow-iframe', scrolling: 'no', title: options.title }).el;\n                    onLoad = new Promise(function (resolve) { return iframe.addEventListener('load', function () { return resolve(); }); });\n                    element.appendChild(iframe);\n                    return [4 /*yield*/, onLoad];\n                case 1:\n                    _a.sent();\n                    iframeBody = iframe.contentDocument.body;\n                    iframeBody.style.margin = '0';\n                    shadowRoot = Dom_1.$$('div', { style: 'overflow: auto;' }).el;\n                    iframeBody.appendChild(shadowRoot);\n                    autoUpdateHeight(iframe, shadowRoot, options.onSizeChanged);\n                    if (options.mode === 'open') {\n                        Object.defineProperty(element, 'shadowRoot', { get: function () { return shadowRoot; } });\n                    }\n                    return [2 /*return*/, shadowRoot];\n            }\n        });\n    });\n}\nexports.attachShadow = attachShadow;\nfunction autoUpdateHeight(elementToResize, content, onUpdate) {\n    var lastWidth = content.clientWidth;\n    var lastHeight = content.clientHeight;\n    var heightObserver = new MutationObserver(function () {\n        if (lastWidth === content.clientWidth && lastHeight === content.clientHeight) {\n            return;\n        }\n        lastWidth = content.clientWidth;\n        lastHeight = content.clientHeight;\n        elementToResize.style.width = content.clientWidth + \"px\";\n        elementToResize.style.height = content.clientHeight + \"px\";\n        if (onUpdate) {\n            onUpdate();\n        }\n    });\n    heightObserver.observe(content, {\n        attributes: true,\n        characterData: true,\n        childList: true,\n        subtree: true\n    });\n}\n\n\n/***/ }),\n\n/***/ 518:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getDefaultSnippetStyle = function (contentClassName) { return \"\\n  body {\\n    font-family: \\\"Lato\\\", \\\"Helvetica Neue\\\", Helvetica, Arial, sans-serif, sans-serif;\\n  }\\n\\n  .\" + contentClassName + \" > :first-child {\\n    margin-top: 0;\\n  }\\n\\n  .\" + contentClassName + \" > :last-child {\\n    margin-bottom: 0;\\n  }\\n\"; };\n\n\n/***/ }),\n\n/***/ 530:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 583:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 69:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Component_1 = __webpack_require__(7);\nvar ComponentOptions_1 = __webpack_require__(8);\nvar ComponentOptionsModel_1 = __webpack_require__(28);\nvar AnalyticsActionListMeta_1 = __webpack_require__(10);\nvar ResultListEvents_1 = __webpack_require__(29);\nvar HighlightUtils_1 = __webpack_require__(67);\nvar DeviceUtils_1 = __webpack_require__(24);\nvar OSUtils_1 = __webpack_require__(179);\nvar Initialization_1 = __webpack_require__(2);\nvar QueryUtils_1 = __webpack_require__(21);\nvar Assert_1 = __webpack_require__(5);\nvar Utils_1 = __webpack_require__(4);\nvar Defer_1 = __webpack_require__(31);\nvar Dom_1 = __webpack_require__(1);\nvar StreamHighlightUtils_1 = __webpack_require__(114);\nvar StringUtils_1 = __webpack_require__(22);\nvar underscore_1 = __webpack_require__(0);\nvar GlobalExports_1 = __webpack_require__(3);\n__webpack_require__(530);\nvar AccessibleButton_1 = __webpack_require__(16);\n/**\n * The `ResultLink` component automatically transform a search result title into a clickable link pointing to the\n * original item.\n *\n * This component is a result template component (see [Result Templates](https://docs.coveo.com/en/413/)).\n */\nvar ResultLink = /** @class */ (function (_super) {\n    __extends(ResultLink, _super);\n    /**\n     * Creates a new `ResultLink` component.\n     * @param element The HTMLElement on which to instantiate the component.\n     * @param options The options for the `ResultLink` component.\n     * @param bindings The bindings that the component requires to function normally. If not set, these will be\n     * automatically resolved (with a slower execution time).\n     * @param result The result to associate the component with.\n     * @param os\n     */\n    function ResultLink(element, options, bindings, result, os) {\n        var _this = _super.call(this, element, ResultLink.ID, bindings) || this;\n        _this.element = element;\n        _this.options = options;\n        _this.bindings = bindings;\n        _this.result = result;\n        _this.os = os;\n        _this.logOpenDocument = underscore_1.debounce(function () {\n            _this.queryController.saveLastQuery();\n            var documentURL = Dom_1.$$(_this.element).getAttribute('href');\n            if (documentURL == undefined || documentURL == '') {\n                documentURL = _this.escapedClickUri;\n            }\n            _this.usageAnalytics.logClickEvent(AnalyticsActionListMeta_1.analyticsActionCauseList.documentOpen, {\n                documentURL: documentURL,\n                documentTitle: _this.result.title,\n                author: Utils_1.Utils.getFieldValue(_this.result, 'author')\n            }, _this.result, _this.root);\n            Defer_1.Defer.flush();\n        }, 1500, true);\n        var initialOptions = ComponentOptions_1.ComponentOptions.initComponentOptions(element, ResultLink, options);\n        var resultLinkOptions = _this.componentOptionsModel.get(ComponentOptionsModel_1.ComponentOptionsModel.attributesEnum.resultLink);\n        _this.options = underscore_1.extend({}, initialOptions, resultLinkOptions);\n        _this.result = result || _this.resolveResult();\n        if (_this.options.openQuickview == null) {\n            _this.options.openQuickview = result.raw['connectortype'] == 'ExchangeCrawler' && DeviceUtils_1.DeviceUtils.isMobileDevice();\n        }\n        _this.element.setAttribute('tabindex', '0');\n        Assert_1.Assert.exists(_this.componentOptionsModel);\n        Assert_1.Assert.exists(_this.result);\n        if (!_this.quickviewShouldBeOpened()) {\n            // Bind on multiple \"click\" or \"mouse\" events.\n            // Create a function that will be executed only once, so as not to log multiple events\n            // Once a result link has been opened, and that we log at least one analytics event,\n            // it should not matter if the end user open the same link multiple times with different methods.\n            // It's still only one \"click\" event as far as UA is concerned.\n            // Also need to handle \"longpress\" on mobile (the contextual menu), which we assume to be 1 s long.\n            var executeOnlyOnce_1 = underscore_1.once(function () { return _this.logOpenDocument(); });\n            Dom_1.$$(element).on(['contextmenu', 'click', 'mousedown', 'mouseup'], executeOnlyOnce_1);\n            var longPressTimer_1;\n            Dom_1.$$(element).on('touchstart', function () {\n                longPressTimer_1 = window.setTimeout(executeOnlyOnce_1, 1000);\n            });\n            Dom_1.$$(element).on('touchend', function () {\n                if (longPressTimer_1) {\n                    clearTimeout(longPressTimer_1);\n                }\n            });\n        }\n        _this.renderUri(element, result);\n        _this.bindEventToOpen();\n        return _this;\n    }\n    ResultLink.prototype.renderUri = function (element, result) {\n        if (/^\\s*$/.test(this.element.innerHTML)) {\n            var title = this.getDisplayedTitle();\n            this.element.innerHTML = title;\n            if (!this.element.title) {\n                this.element.title = this.getDisplayedTitleAsText();\n            }\n        }\n    };\n    /**\n     * Opens the result in the same window, no matter how the actual component is configured for the end user.\n     * @param logAnalytics Specifies whether the method should log an analytics event.\n     */\n    ResultLink.prototype.openLink = function (logAnalytics) {\n        if (logAnalytics === void 0) { logAnalytics = true; }\n        if (logAnalytics) {\n            this.logOpenDocument();\n        }\n        window.location.href = this.getResultUri();\n    };\n    /**\n     * Opens the result in a new window, no matter how the actual component is configured for the end user.\n     * @param logAnalytics Specifies whether the method should log an analytics event.\n     */\n    ResultLink.prototype.openLinkInNewWindow = function (logAnalytics) {\n        if (logAnalytics === void 0) { logAnalytics = true; }\n        if (logAnalytics) {\n            this.logOpenDocument();\n        }\n        window.open(this.getResultUri(), '_blank');\n    };\n    /**\n     * Tries to open the result in Microsoft Outlook if the result has an `outlookformacuri` or `outlookuri` field.\n     *\n     * Normally, this implies the result should be a link to an email.\n     *\n     * If the needed fields are not present, this method does nothing.\n     * @param logAnalytics Specifies whether the method should log an analytics event.\n     */\n    ResultLink.prototype.openLinkInOutlook = function (logAnalytics) {\n        if (logAnalytics === void 0) { logAnalytics = true; }\n        if (this.hasOutlookField()) {\n            if (logAnalytics) {\n                this.logOpenDocument();\n            }\n            this.openLink();\n        }\n    };\n    /**\n     * Opens the link in the same manner the end user would.\n     *\n     * This essentially simulates a click on the result link.\n     *\n     * @param logAnalytics Specifies whether the method should log an analytics event.\n     */\n    ResultLink.prototype.openLinkAsConfigured = function (logAnalytics) {\n        if (logAnalytics === void 0) { logAnalytics = true; }\n        if (this.toExecuteOnOpen) {\n            if (logAnalytics) {\n                this.logOpenDocument();\n            }\n            this.toExecuteOnOpen();\n        }\n    };\n    ResultLink.prototype.bindEventToOpen = function () {\n        return (this.bindOnClickIfNotUndefined() ||\n            this.bindOpenQuickviewIfNotUndefined() ||\n            this.setHrefIfNotAlready() ||\n            this.openLinkThatIsNotAnAnchor());\n    };\n    ResultLink.prototype.getDisplayedTitle = function () {\n        if (!this.options.titleTemplate) {\n            return this.result.title\n                ? HighlightUtils_1.HighlightUtils.highlightString(this.result.title, this.result.titleHighlights, null, 'coveo-highlight')\n                : this.escapedClickUri;\n        }\n        else {\n            var newTitle = StringUtils_1.StringUtils.buildStringTemplateFromResult(this.options.titleTemplate, this.result);\n            return newTitle\n                ? StreamHighlightUtils_1.StreamHighlightUtils.highlightStreamText(newTitle, this.result.termsToHighlight, this.result.phrasesToHighlight)\n                : this.escapedClickUri;\n        }\n    };\n    ResultLink.prototype.getDisplayedTitleAsText = function () {\n        var container = Dom_1.$$('div');\n        container.setHtml(this.getDisplayedTitle());\n        return container.text();\n    };\n    Object.defineProperty(ResultLink.prototype, \"escapedClickUri\", {\n        get: function () {\n            return underscore_1.escape(this.result.clickUri);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ResultLink.prototype.bindOnClickIfNotUndefined = function () {\n        var _this = this;\n        if (this.options.onClick != undefined) {\n            this.toExecuteOnOpen = function (e) {\n                _this.options.onClick.call(_this, e, _this.result);\n            };\n            new AccessibleButton_1.AccessibleButton()\n                .withElement(this.element)\n                .withLabel(this.result.title)\n                .withSelectAction(function (e) { return _this.toExecuteOnOpen(e); })\n                .build();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    ResultLink.prototype.bindOpenQuickviewIfNotUndefined = function () {\n        var _this = this;\n        if (this.quickviewShouldBeOpened()) {\n            this.toExecuteOnOpen = function () {\n                Dom_1.$$(_this.bindings.resultElement).trigger(ResultListEvents_1.ResultListEvents.openQuickview);\n            };\n            Dom_1.$$(this.element).on('click', function (e) {\n                e.preventDefault();\n                _this.toExecuteOnOpen();\n            });\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    ResultLink.prototype.openLinkThatIsNotAnAnchor = function () {\n        var _this = this;\n        if (!this.elementIsAnAnchor()) {\n            this.toExecuteOnOpen = function () {\n                if (_this.options.alwaysOpenInNewWindow) {\n                    if (_this.options.openInOutlook) {\n                        _this.openLinkInOutlook();\n                    }\n                    else {\n                        _this.openLinkInNewWindow();\n                    }\n                }\n                else {\n                    _this.openLink();\n                }\n            };\n            Dom_1.$$(this.element).on('click', function () {\n                _this.toExecuteOnOpen();\n            });\n            return true;\n        }\n        return false;\n    };\n    ResultLink.prototype.setHrefIfNotAlready = function () {\n        // Do not erase any value put in href by the template, etc. Allows\n        // using custom click urls while still keeping analytics recording\n        // and other behavior brought by the component.\n        if (this.elementIsAnAnchor() && !Utils_1.Utils.isNonEmptyString(Dom_1.$$(this.element).getAttribute('href'))) {\n            Dom_1.$$(this.element).setAttribute('href', this.getResultUri());\n            if (this.options.alwaysOpenInNewWindow && !(this.options.openInOutlook && this.hasOutlookField())) {\n                Dom_1.$$(this.element).setAttribute('target', '_blank');\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    ResultLink.prototype.filterProtocol = function (uri) {\n        var isAbsolute = /^(https?|ftp|file|mailto|tel):/i.test(uri);\n        var isRelative = /^(\\/|\\.\\/|\\.\\.\\/)/.test(uri);\n        return isAbsolute || isRelative ? uri : '';\n    };\n    ResultLink.prototype.getResultUri = function () {\n        if (this.options.hrefTemplate) {\n            var uri = StringUtils_1.StringUtils.buildStringTemplateFromResult(this.options.hrefTemplate, this.result);\n            return this.filterProtocol(uri);\n        }\n        if (this.options.field == undefined && this.options.openInOutlook) {\n            this.setField();\n        }\n        if (this.options.field != undefined) {\n            return this.filterProtocol(Utils_1.Utils.getFieldValue(this.result, this.options.field));\n        }\n        return this.filterProtocol(this.result.clickUri);\n    };\n    ResultLink.prototype.elementIsAnAnchor = function () {\n        return this.element.tagName == 'A';\n    };\n    ResultLink.prototype.setField = function () {\n        var os = Utils_1.Utils.exists(this.os) ? this.os : OSUtils_1.OSUtils.get();\n        if (os == OSUtils_1.OS_NAME.MACOSX && this.hasOutlookField()) {\n            this.options.field = '@outlookformacuri';\n        }\n        else if (os == OSUtils_1.OS_NAME.WINDOWS && this.hasOutlookField()) {\n            this.options.field = '@outlookuri';\n        }\n    };\n    ResultLink.prototype.hasOutlookField = function () {\n        var os = Utils_1.Utils.exists(this.os) ? this.os : OSUtils_1.OSUtils.get();\n        if (os == OSUtils_1.OS_NAME.MACOSX && this.result.raw['outlookformacuri'] != undefined) {\n            return true;\n        }\n        else if (os == OSUtils_1.OS_NAME.WINDOWS && this.result.raw['outlookuri'] != undefined) {\n            return true;\n        }\n        return false;\n    };\n    ResultLink.prototype.isUriThatMustBeOpenedInQuickview = function () {\n        return this.escapedClickUri.toLowerCase().indexOf('ldap://') == 0;\n    };\n    ResultLink.prototype.quickviewShouldBeOpened = function () {\n        return (this.options.openQuickview || this.isUriThatMustBeOpenedInQuickview()) && QueryUtils_1.QueryUtils.hasHTMLVersion(this.result);\n    };\n    ResultLink.ID = 'ResultLink';\n    ResultLink.doExport = function () {\n        GlobalExports_1.exportGlobally({\n            ResultLink: ResultLink\n        });\n    };\n    /**\n     * The options for the ResultLink\n     * @componentOptions\n     */\n    ResultLink.options = {\n        /**\n         * Specifies the field to use to output the component `href` attribute value.\n         *\n         * **Tip:**\n         * > Instead of specifying a value for the `field` option, you can directly add an `href` attribute to the\n         * > `ResultLink` HTML element. Then, you can use a custom script to generate the `href` value.\n         *\n         * **Examples:**\n         * - With the following markup, the `ResultLink` outputs its `href` value using the `@uri` field (rather than the\n         * default field):\n         *\n         * ```html\n         * <a class=\"CoveoResultLink\" data-field=\"@uri\"></a>\n         * ```\n         *\n         * - In the following result template, the custom `getMyKBUri()` function provides the `href` value:\n         *\n         * ```html\n         * <script id=\"KnowledgeArticle\" type=\"text/underscore\" class=\"result-template\">\n         *   <div class='CoveoIcon>'></div>\n         *   <a class=\"CoveoResultLink\" href=\"<%= getMyKBUri(raw) %>\"></a>\n         *   <div class=\"CoveoExcerpt\"></div>\n         * </script>\n         * ```\n         *\n         * See also [`hrefTemplate`]{@link ResultLink.options.hrefTemplate}, which can override this option.\n         *\n         * By default, the component uses the `@clickUri` field of the item to output the value of its `href` attribute.\n         */\n        field: ComponentOptions_1.ComponentOptions.buildFieldOption(),\n        /**\n         * Specifies whether the component should try to open its link in Microsoft Outlook.\n         *\n         * Setting this option to `true` is normally useful for `ResultLink` instances related to Microsoft Exchange emails.\n         *\n         * If this option is `true`, clicking the `ResultLink` calls the\n         * [`openLinkInOutlook`]{@link ResultLink.openLinkInOutlook} method instead of the\n         * [`openLink`]{@link ResultLink.openLink} method.\n         *\n         * Default value is `false`.\n         */\n        openInOutlook: ComponentOptions_1.ComponentOptions.buildBooleanOption({ defaultValue: false }),\n        /**\n         * Specifies whether the component should open its link in the [`Quickview`]{@link Quickview} component rather than\n         * loading through the original URL.\n         *\n         * Default value is `false`.\n         */\n        openQuickview: ComponentOptions_1.ComponentOptions.buildBooleanOption({ defaultValue: false }),\n        /**\n         * Specifies whether the component should open its link in a new window instead of opening it in the current\n         * context.\n         *\n         * If this option is `true`, clicking the `ResultLink` calls the\n         * [`openLinkInNewWindow`]{@link ResultLink.openLinkInNewWindow} method instead of the\n         * [`openLink`]{@link ResultLink.openLink} method.\n         *\n         * **Note:**\n         * > If a search page contains a [`ResultPreferences`]{@link ResultsPreferences} component whose\n         * > [`enableOpenInNewWindow`]{@link ResultsPreferences.options.enableOpenInNewWindow} option is `true`, and the end\n         * > user checks the <b>Always open results in new window</b> box, `ResultLink` components in this page will always\n         * > open their links in a new window when the end user clicks them, no matter what the value of their\n         * > `alwaysOpenInNewWindow` option is.\n         *\n         * Default value is `false`.\n         */\n        alwaysOpenInNewWindow: ComponentOptions_1.ComponentOptions.buildBooleanOption({ defaultValue: false }),\n        /**\n         * Specifies a template literal from which to generate the `ResultLink` `href` attribute value (see\n         * [Template literals](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Template_literals)).\n         *\n         * This option overrides the [`field`]{@link ResultLink.options.field} option value.\n         *\n         * The template literal can reference any number of fields from the parent result. It can also reference global\n         * scope properties.\n         *\n         * **Examples:**\n         *\n         * - The following markup generates an `href` value such as `http://uri.com?id=itemTitle`:\n         *\n         * ```html\n         * <a class='CoveoResultLink' data-href-template='${clickUri}?id=${raw.title}'></a>\n         * ```\n         *\n         * - The following markup generates an `href` value such as `localhost/fooBar`:\n         *\n         * ```html\n         * <a class='CoveoResultLink' data-href-template='${window.location.hostname}/{Foo.Bar}'></a>\n         * ```\n         *\n         * Default value is `undefined`.\n         */\n        hrefTemplate: ComponentOptions_1.ComponentOptions.buildStringOption(),\n        /**\n         * Specifies a template literal from which to generate the `ResultLink` display title (see\n         * [Template literals](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Template_literals)).\n         *\n         * This option overrides the default `ResultLink` display title behavior.\n         *\n         * The template literal can reference any number of fields from the parent result. However, if the template literal\n         * references a key whose value is undefined in the parent result fields, the `ResultLink` title displays the\n         * name of this key instead.\n         *\n         * This option is ignored if the `ResultLink` innerHTML contains any value.\n         *\n         * **Examples:**\n         *\n         * - The following markup generates a `ResultLink` display title such as `Case number: 123456` if both the\n         * `raw.objecttype` and `raw.objectnumber` keys are defined in the parent result fields:\n         *\n         * ```html\n         * <a class=\"CoveoResultLink\" data-title-template=\"${raw.objecttype} number: ${raw.objectnumber}\"></a>\n         * ```\n         *\n         * - The following markup generates `${myField}` as a `ResultLink` display title if the `myField` key is undefined\n         * in the parent result fields:\n         *\n         * ```html\n         * <a class=\"CoveoResultLink\" data-title-template=\"${myField}\"></a>\n         * ```\n         *\n         * - The following markup generates `Foobar` as a `ResultLink` display title, because the `ResultLink` innterHTML is\n         * not empty:\n         *\n         * ```html\n         * <a class=\"CoveoResultLink\" data-title-template=\"${will} ${be} ${ignored}\">Foobar</a>\n         * ```\n         *\n         * Default value is `undefined`.\n         *\n         * @availablesince [January 2017 Release (v1.1865.9)](https://docs.coveo.com/en/396/#january-2017-release-v118659)\n         */\n        titleTemplate: ComponentOptions_1.ComponentOptions.buildStringOption(),\n        /**\n         * Specifies an event handler function to execute when the user clicks the `ResultLink` component.\n         *\n         * The handler function takes a JavaScript [`Event`](https://developer.mozilla.org/en/docs/Web/API/Event) object and\n         * an [`IQueryResult`]{@link IQueryResult} as its parameters.\n         *\n         * Overriding the default behavior of the `onClick` event can allow you to execute specific code instead.\n         *\n         * **Note:**\n         * > You cannot set this option directly in the component markup as an HTML attribute. You must either set it in the\n         * > [`init`]{@link init} call of your search interface (see\n         * > [Passing Component Options in the init Call](https://docs.coveo.com/en/346/#passing-component-options-in-the-init-call)),\n         * > or before the `init` call, using the `options` top-level function (see\n         * > [Passing Component Options Before the init Call](https://docs.coveo.com/en/346/#passing-component-options-before-the-init-call)).\n         *\n         * **Example:**\n         * ```javascript\n         * // You can set the option in the 'init' call:\n         * Coveo.init(document.querySelector(\"#search\"), {\n         *   ResultLink : {\n         *     onClick : function(e, result) {\n         *       e.preventDefault();\n         *       // Custom code to execute with the item URI and title.\n         *       openUriInASpecialTab(result.clickUri, result.title);\n         *     }\n         *   }\n         * });\n         *\n         * // Or before the 'init' call, using the 'options' top-level function:\n         * // Coveo.options(document.querySelector('#search'), {\n         * //   ResultLink : {\n         * //     onClick : function(e, result) {\n         * //       e.preventDefault();\n         * //       // Custom code to execute with the item URI and title.\n         * //       openUriInASpecialTab(result.clickUri, result.title);\n         * //     }\n         * //   }\n         * // });\n         * ```\n         */\n        onClick: ComponentOptions_1.ComponentOptions.buildCustomOption(function () {\n            return null;\n        })\n    };\n    return ResultLink;\n}(Component_1.Component));\nexports.ResultLink = ResultLink;\nInitialization_1.Initialization.registerAutoCreateComponent(ResultLink);\n\n\n/***/ }),\n\n/***/ 704:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 705:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar underscore_1 = __webpack_require__(0);\nvar AccessibleButton_1 = __webpack_require__(16);\nvar SVGIcons_1 = __webpack_require__(12);\nvar AttachShadowPolyfill_1 = __webpack_require__(517);\nvar Dom_1 = __webpack_require__(1);\nvar Strings_1 = __webpack_require__(6);\nvar AnalyticsActionListMeta_1 = __webpack_require__(10);\nvar ResultLink_1 = __webpack_require__(69);\nvar QUESTION_CLASSNAME = \"coveo-smart-snippet-suggestions-question\";\nvar QUESTION_TITLE_CLASSNAME = QUESTION_CLASSNAME + \"-title\";\nvar QUESTION_TITLE_LABEL_CLASSNAME = QUESTION_TITLE_CLASSNAME + \"-label\";\nvar QUESTION_TITLE_CHECKBOX_CLASSNAME = QUESTION_TITLE_CLASSNAME + \"-checkbox\";\nvar QUESTION_SNIPPET_CLASSNAME = QUESTION_CLASSNAME + \"-snippet\";\nvar QUESTION_SNIPPET_CONTAINER_CLASSNAME = QUESTION_SNIPPET_CLASSNAME + \"-container\";\nvar QUESTION_SNIPPET_HIDDEN_CLASSNAME = QUESTION_SNIPPET_CLASSNAME + \"-hidden\";\nvar SHADOW_CLASSNAME = QUESTION_SNIPPET_CLASSNAME + \"-content\";\nvar RAW_CONTENT_CLASSNAME = SHADOW_CLASSNAME + \"-raw\";\nvar SOURCE_CLASSNAME = QUESTION_CLASSNAME + \"-source\";\nvar SOURCE_TITLE_CLASSNAME = SOURCE_CLASSNAME + \"-title\";\nvar SOURCE_URL_CLASSNAME = SOURCE_CLASSNAME + \"-url\";\nexports.SmartSnippetCollapsibleSuggestionClassNames = {\n    QUESTION_CLASSNAME: QUESTION_CLASSNAME,\n    QUESTION_TITLE_CLASSNAME: QUESTION_TITLE_CLASSNAME,\n    QUESTION_TITLE_LABEL_CLASSNAME: QUESTION_TITLE_LABEL_CLASSNAME,\n    QUESTION_TITLE_CHECKBOX_CLASSNAME: QUESTION_TITLE_CHECKBOX_CLASSNAME,\n    QUESTION_SNIPPET_CLASSNAME: QUESTION_SNIPPET_CLASSNAME,\n    QUESTION_SNIPPET_CONTAINER_CLASSNAME: QUESTION_SNIPPET_CONTAINER_CLASSNAME,\n    QUESTION_SNIPPET_HIDDEN_CLASSNAME: QUESTION_SNIPPET_HIDDEN_CLASSNAME,\n    SHADOW_CLASSNAME: SHADOW_CLASSNAME,\n    RAW_CONTENT_CLASSNAME: RAW_CONTENT_CLASSNAME,\n    SOURCE_CLASSNAME: SOURCE_CLASSNAME,\n    SOURCE_TITLE_CLASSNAME: SOURCE_TITLE_CLASSNAME,\n    SOURCE_URL_CLASSNAME: SOURCE_URL_CLASSNAME\n};\nvar SmartSnippetCollapsibleSuggestion = /** @class */ (function () {\n    function SmartSnippetCollapsibleSuggestion(questionAnswer, bindings, innerCSS, searchUid, source) {\n        this.questionAnswer = questionAnswer;\n        this.bindings = bindings;\n        this.innerCSS = innerCSS;\n        this.searchUid = searchUid;\n        this.source = source;\n        this.labelId = underscore_1.uniqueId(QUESTION_TITLE_LABEL_CLASSNAME);\n        this.snippetId = underscore_1.uniqueId(QUESTION_SNIPPET_CLASSNAME);\n        this.checkboxId = underscore_1.uniqueId(QUESTION_TITLE_CHECKBOX_CLASSNAME);\n        this.expanded = false;\n    }\n    Object.defineProperty(SmartSnippetCollapsibleSuggestion.prototype, \"loading\", {\n        get: function () {\n            return this.contentLoaded;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SmartSnippetCollapsibleSuggestion.prototype.build = function () {\n        var collapsibleContainer = this.buildCollapsibleContainer(this.questionAnswer.answerSnippet, this.questionAnswer.question, this.buildStyle(this.innerCSS));\n        var title = this.buildTitle(this.questionAnswer.question);\n        this.updateExpanded();\n        return Dom_1.$$('li', {\n            className: QUESTION_CLASSNAME,\n            ariaLabelledby: this.labelId\n        }, title, collapsibleContainer).el;\n    };\n    SmartSnippetCollapsibleSuggestion.prototype.buildStyle = function (innerCSS) {\n        var styleTag = document.createElement('style');\n        styleTag.innerHTML = innerCSS;\n        return styleTag;\n    };\n    SmartSnippetCollapsibleSuggestion.prototype.buildTitle = function (question) {\n        var _this = this;\n        var checkbox = this.buildCheckbox(question);\n        var label = Dom_1.$$('span', { className: QUESTION_TITLE_LABEL_CLASSNAME, id: this.labelId });\n        label.text(question);\n        var title = Dom_1.$$('span', { className: QUESTION_TITLE_CLASSNAME }, label, checkbox);\n        title.on('click', function () { return _this.toggle(); });\n        return title;\n    };\n    SmartSnippetCollapsibleSuggestion.prototype.buildCheckbox = function (question) {\n        var _this = this;\n        this.checkbox = Dom_1.$$('div', {\n            role: 'button',\n            tabindex: 0,\n            ariaControls: this.snippetId,\n            className: QUESTION_TITLE_CHECKBOX_CLASSNAME,\n            id: this.checkboxId\n        });\n        new AccessibleButton_1.AccessibleButton()\n            .withElement(this.checkbox)\n            .withLabel(Strings_1.l('ExpandQuestionAnswer', question))\n            .withEnterKeyboardAction(function () { return _this.toggle(); })\n            .build();\n        return this.checkbox;\n    };\n    SmartSnippetCollapsibleSuggestion.prototype.buildCollapsibleContainer = function (innerHTML, title, style) {\n        var _this = this;\n        var shadowContainer = Dom_1.$$('div', { className: SHADOW_CLASSNAME });\n        this.snippetAndSourceContainer = Dom_1.$$('div', { className: QUESTION_SNIPPET_CONTAINER_CLASSNAME }, shadowContainer);\n        this.collapsibleContainer = Dom_1.$$('div', { className: QUESTION_SNIPPET_CLASSNAME, id: this.snippetId }, this.snippetAndSourceContainer);\n        this.contentLoaded = AttachShadowPolyfill_1.attachShadow(shadowContainer.el, { mode: 'open', title: Strings_1.l('AnswerSpecificSnippet', title) }).then(function (shadowRoot) {\n            shadowRoot.appendChild(_this.buildAnswerSnippetContent(innerHTML, style).el);\n        });\n        if (this.source) {\n            this.snippetAndSourceContainer.append(this.buildSourceUrl());\n            this.snippetAndSourceContainer.append(this.buildSourceTitle());\n        }\n        return this.collapsibleContainer;\n    };\n    SmartSnippetCollapsibleSuggestion.prototype.buildAnswerSnippetContent = function (innerHTML, style) {\n        var snippet = Dom_1.$$('div', { className: RAW_CONTENT_CLASSNAME }, innerHTML);\n        var container = Dom_1.$$('div', {}, snippet);\n        container.append(style);\n        return container;\n    };\n    SmartSnippetCollapsibleSuggestion.prototype.buildSourceTitle = function () {\n        return this.buildLink(this.source.title, SOURCE_TITLE_CLASSNAME);\n    };\n    SmartSnippetCollapsibleSuggestion.prototype.buildSourceUrl = function () {\n        return this.buildLink(this.source.clickUri, SOURCE_URL_CLASSNAME);\n    };\n    SmartSnippetCollapsibleSuggestion.prototype.buildLink = function (text, className) {\n        var element = Dom_1.$$('a', { className: \"CoveoResultLink \" + className }).el;\n        element.innerText = text;\n        new ResultLink_1.ResultLink(element, {}, __assign({}, this.bindings, { resultElement: this.collapsibleContainer.el }), this.source);\n        return element;\n    };\n    SmartSnippetCollapsibleSuggestion.prototype.toggle = function () {\n        this.expanded = !this.expanded;\n        this.updateExpanded();\n        if (this.expanded) {\n            this.sendExpandAnalytics();\n        }\n        else {\n            this.sendCollapseAnalytics();\n        }\n    };\n    SmartSnippetCollapsibleSuggestion.prototype.updateExpanded = function () {\n        this.checkbox.setAttribute('aria-expanded', this.expanded.toString());\n        this.checkbox.setHtml(this.expanded ? SVGIcons_1.SVGIcons.icons.arrowUp : SVGIcons_1.SVGIcons.icons.arrowDown);\n        this.collapsibleContainer.setAttribute('tabindex', \"\" + (this.expanded ? 0 : -1));\n        this.collapsibleContainer.setAttribute('aria-hidden', (!this.expanded).toString());\n        this.collapsibleContainer.toggleClass(QUESTION_SNIPPET_HIDDEN_CLASSNAME, !this.expanded);\n        this.collapsibleContainer.el.style.height = this.expanded ? this.snippetAndSourceContainer.el.clientHeight + \"px\" : '0px';\n    };\n    SmartSnippetCollapsibleSuggestion.prototype.sendExpandAnalytics = function () {\n        return this.bindings.usageAnalytics.logCustomEvent(AnalyticsActionListMeta_1.analyticsActionCauseList.expandSmartSnippetSuggestion, {\n            searchQueryUid: this.searchUid,\n            documentId: this.questionAnswer.documentId\n        }, this.checkbox.el);\n    };\n    SmartSnippetCollapsibleSuggestion.prototype.sendCollapseAnalytics = function () {\n        return this.bindings.usageAnalytics.logCustomEvent(AnalyticsActionListMeta_1.analyticsActionCauseList.collapseSmartSnippetSuggestion, {\n            searchQueryUid: this.searchUid,\n            documentId: this.questionAnswer.documentId\n        }, this.checkbox.el);\n    };\n    return SmartSnippetCollapsibleSuggestion;\n}());\nexports.SmartSnippetCollapsibleSuggestion = SmartSnippetCollapsibleSuggestion;\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// SmartSnippetSuggestions.min__5585ef6718b0f0514f71.js","import 'styling/_SmartSnippetSuggestions';\nimport { Component } from '../Base/Component';\nimport { exportGlobally } from '../../GlobalExports';\nimport { IComponentBindings } from '../Base/ComponentBindings';\nimport { QueryEvents, IQuerySuccessEventArgs } from '../../events/QueryEvents';\nimport { IRelatedQuestionAnswerResponse, IQuestionAnswerResponse } from '../../rest/QuestionAnswerResponse';\nimport { $$, Dom } from '../../utils/Dom';\nimport { uniqueId, isEqual, find } from 'underscore';\nimport { SmartSnippetCollapsibleSuggestion, SmartSnippetCollapsibleSuggestionClassNames } from './SmartSnippetCollapsibleSuggestion';\nimport { l } from '../../strings/Strings';\nimport { Initialization } from '../Base/Initialization';\nimport { Utils } from '../../utils/Utils';\nimport { getDefaultSnippetStyle } from './SmartSnippetCommon';\n\nconst BASE_CLASSNAME = 'coveo-smart-snippet-suggestions';\nconst HAS_QUESTIONS_CLASSNAME = `${BASE_CLASSNAME}-has-questions`;\nconst QUESTIONS_LIST_CLASSNAME = `${BASE_CLASSNAME}-questions`;\nconst QUESTIONS_LIST_TITLE_CLASSNAME = `${QUESTIONS_LIST_CLASSNAME}-title`;\n\nexport const SmartSnippetSuggestionsClassNames = {\n  HAS_QUESTIONS_CLASSNAME,\n  QUESTIONS_LIST_CLASSNAME,\n  QUESTIONS_LIST_TITLE_CLASSNAME\n};\n\n/**\n * The SmartSnippetSuggestions component displays additional queries for which a Coveo Smart Snippets model can provide relevant excerpts.\n */\nexport class SmartSnippetSuggestions extends Component {\n  static ID = 'SmartSnippetSuggestions';\n\n  static doExport = () => {\n    exportGlobally({\n      SmartSnippetSuggestions\n    });\n  };\n\n  private readonly titleId = uniqueId(QUESTIONS_LIST_TITLE_CLASSNAME);\n  private contentLoaded: Promise<SmartSnippetCollapsibleSuggestion[]>;\n  private title: Dom;\n  private questionAnswers: Dom;\n  private renderedQuestionAnswer: IQuestionAnswerResponse;\n  private searchUid: string;\n\n  constructor(public element: HTMLElement, public options?: {}, bindings?: IComponentBindings) {\n    super(element, SmartSnippetSuggestions.ID, bindings);\n    this.bind.onRootElement(QueryEvents.deferredQuerySuccess, (data: IQuerySuccessEventArgs) => this.handleQuerySuccess(data));\n  }\n\n  public get loading() {\n    return this.contentLoaded;\n  }\n\n  /**\n   * @warning This method only works for the demo. In practice, the source of the answer will not always be part of the results.\n   */\n  private getCorrespondingResult(questionAnswer: IRelatedQuestionAnswerResponse) {\n    return find(\n      this.queryController.getLastResults().results,\n      result => result.raw[questionAnswer.documentId.contentIdKey] === questionAnswer.documentId.contentIdValue\n    );\n  }\n\n  private handleQuerySuccess(data: IQuerySuccessEventArgs) {\n    const questionAnswer = data.results.questionAnswer;\n    const hasQuestions = !!(questionAnswer && questionAnswer.relatedQuestions.length);\n    $$(this.element).toggleClass(HAS_QUESTIONS_CLASSNAME, hasQuestions);\n    if (hasQuestions) {\n      this.searchUid = data.results.searchUid;\n      if (this.renderedQuestionAnswer && isEqual(questionAnswer, this.renderedQuestionAnswer)) {\n        return;\n      }\n      this.detachContent();\n      this.element.appendChild((this.title = this.buildTitle()).el);\n      this.element.appendChild((this.questionAnswers = this.buildQuestionAnswers(questionAnswer.relatedQuestions)).el);\n    } else {\n      this.detachContent();\n    }\n    this.renderedQuestionAnswer = questionAnswer;\n  }\n\n  private detachContent() {\n    this.title && this.title.detach();\n    this.questionAnswers && this.questionAnswers.detach();\n    this.title = this.questionAnswers = null;\n  }\n\n  private buildTitle() {\n    return $$('span', { className: QUESTIONS_LIST_TITLE_CLASSNAME, id: this.titleId }, l('SuggestedQuestions'));\n  }\n\n  private buildQuestionAnswers(questionAnswers: IRelatedQuestionAnswerResponse[]) {\n    const innerCSS = this.getInnerCSS();\n    const answers = questionAnswers.map(\n      questionAnswer =>\n        new SmartSnippetCollapsibleSuggestion(\n          questionAnswer,\n          this.getBindings(),\n          Utils.isNullOrUndefined(innerCSS)\n            ? getDefaultSnippetStyle(SmartSnippetCollapsibleSuggestionClassNames.RAW_CONTENT_CLASSNAME)\n            : innerCSS,\n          this.searchUid,\n          this.getCorrespondingResult(questionAnswer)\n        )\n    );\n    const container = $$(\n      'ul',\n      { className: QUESTIONS_LIST_CLASSNAME, ariaLabelledby: this.titleId },\n      ...answers.map(answer => answer.build())\n    );\n    this.contentLoaded = Promise.all(answers.map(answer => answer.loading.then(() => answer)));\n    return container;\n  }\n\n  private getInnerCSS() {\n    const styles = $$(this.element)\n      .children()\n      .filter(element => element instanceof HTMLScriptElement && element.type.toLowerCase() === 'text/css')\n      .map(element => element.innerHTML);\n    return styles.length ? styles.join('\\n') : null;\n  }\n}\n\nInitialization.registerAutoCreateComponent(SmartSnippetSuggestions);\nSmartSnippetSuggestions.doExport();\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/SmartSnippet/SmartSnippetSuggestions.ts","import { $$ } from '../utils/Dom';\nimport 'styling/_AttachShadowPolyfill';\n\nexport interface IShadowOptions {\n  title: string;\n  onSizeChanged?: Function;\n}\n\nexport async function attachShadow(element: HTMLElement, options: IShadowOptions & ShadowRootInit): Promise<HTMLElement> {\n  const iframe = $$('iframe', { className: 'coveo-shadow-iframe', scrolling: 'no', title: options.title }).el as HTMLIFrameElement;\n  const onLoad = new Promise(resolve => iframe.addEventListener('load', () => resolve()));\n  element.appendChild(iframe);\n  await onLoad;\n\n  const iframeBody = iframe.contentDocument.body as HTMLBodyElement;\n  iframeBody.style.margin = '0';\n  const shadowRoot = $$('div', { style: 'overflow: auto;' }).el;\n  iframeBody.appendChild(shadowRoot);\n  autoUpdateHeight(iframe, shadowRoot, options.onSizeChanged);\n  if (options.mode === 'open') {\n    Object.defineProperty(element, 'shadowRoot', { get: () => shadowRoot });\n  }\n\n  return shadowRoot;\n}\n\nfunction autoUpdateHeight(elementToResize: HTMLElement, content: HTMLElement, onUpdate?: Function) {\n  let lastWidth = content.clientWidth;\n  let lastHeight = content.clientHeight;\n\n  const heightObserver = new MutationObserver(() => {\n    if (lastWidth === content.clientWidth && lastHeight === content.clientHeight) {\n      return;\n    }\n    lastWidth = content.clientWidth;\n    lastHeight = content.clientHeight;\n    elementToResize.style.width = `${content.clientWidth}px`;\n    elementToResize.style.height = `${content.clientHeight}px`;\n    if (onUpdate) {\n      onUpdate();\n    }\n  });\n  heightObserver.observe(content, {\n    attributes: true,\n    characterData: true,\n    childList: true,\n    subtree: true\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/AttachShadowPolyfill.ts","export const getDefaultSnippetStyle = (contentClassName: string) => `\n  body {\n    font-family: \"Lato\", \"Helvetica Neue\", Helvetica, Arial, sans-serif, sans-serif;\n  }\n\n  .${contentClassName} > :first-child {\n    margin-top: 0;\n  }\n\n  .${contentClassName} > :last-child {\n    margin-bottom: 0;\n  }\n`;\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/SmartSnippet/SmartSnippetCommon.ts","import { Component } from '../Base/Component';\nimport { ComponentOptions } from '../Base/ComponentOptions';\nimport { ComponentOptionsModel } from '../../models/ComponentOptionsModel';\nimport { IResultsComponentBindings } from '../Base/ResultsComponentBindings';\nimport { analyticsActionCauseList } from '../Analytics/AnalyticsActionListMeta';\nimport { IResultLinkOptions } from './ResultLinkOptions';\nimport { ResultListEvents } from '../../events/ResultListEvents';\nimport { HighlightUtils } from '../../utils/HighlightUtils';\nimport { IQueryResult } from '../../rest/QueryResult';\nimport { DeviceUtils } from '../../utils/DeviceUtils';\nimport { OS_NAME, OSUtils } from '../../utils/OSUtils';\nimport { Initialization } from '../Base/Initialization';\nimport { QueryUtils } from '../../utils/QueryUtils';\nimport { Assert } from '../../misc/Assert';\nimport { Utils } from '../../utils/Utils';\nimport { Defer } from '../../misc/Defer';\nimport { $$ } from '../../utils/Dom';\nimport { StreamHighlightUtils } from '../../utils/StreamHighlightUtils';\nimport { StringUtils } from '../../utils/StringUtils';\nimport { once, debounce, extend, escape } from 'underscore';\nimport { exportGlobally } from '../../GlobalExports';\n\nimport 'styling/_ResultLink';\nimport { AccessibleButton } from '../../utils/AccessibleButton';\n\n/**\n * The `ResultLink` component automatically transform a search result title into a clickable link pointing to the\n * original item.\n *\n * This component is a result template component (see [Result Templates](https://docs.coveo.com/en/413/)).\n */\nexport class ResultLink extends Component {\n  static ID = 'ResultLink';\n\n  static doExport = () => {\n    exportGlobally({\n      ResultLink: ResultLink\n    });\n  };\n\n  /**\n   * The options for the ResultLink\n   * @componentOptions\n   */\n  static options: IResultLinkOptions = {\n    /**\n     * Specifies the field to use to output the component `href` attribute value.\n     *\n     * **Tip:**\n     * > Instead of specifying a value for the `field` option, you can directly add an `href` attribute to the\n     * > `ResultLink` HTML element. Then, you can use a custom script to generate the `href` value.\n     *\n     * **Examples:**\n     * - With the following markup, the `ResultLink` outputs its `href` value using the `@uri` field (rather than the\n     * default field):\n     *\n     * ```html\n     * <a class=\"CoveoResultLink\" data-field=\"@uri\"></a>\n     * ```\n     *\n     * - In the following result template, the custom `getMyKBUri()` function provides the `href` value:\n     *\n     * ```html\n     * <script id=\"KnowledgeArticle\" type=\"text/underscore\" class=\"result-template\">\n     *   <div class='CoveoIcon>'></div>\n     *   <a class=\"CoveoResultLink\" href=\"<%= getMyKBUri(raw) %>\"></a>\n     *   <div class=\"CoveoExcerpt\"></div>\n     * </script>\n     * ```\n     *\n     * See also [`hrefTemplate`]{@link ResultLink.options.hrefTemplate}, which can override this option.\n     *\n     * By default, the component uses the `@clickUri` field of the item to output the value of its `href` attribute.\n     */\n    field: ComponentOptions.buildFieldOption(),\n\n    /**\n     * Specifies whether the component should try to open its link in Microsoft Outlook.\n     *\n     * Setting this option to `true` is normally useful for `ResultLink` instances related to Microsoft Exchange emails.\n     *\n     * If this option is `true`, clicking the `ResultLink` calls the\n     * [`openLinkInOutlook`]{@link ResultLink.openLinkInOutlook} method instead of the\n     * [`openLink`]{@link ResultLink.openLink} method.\n     *\n     * Default value is `false`.\n     */\n    openInOutlook: ComponentOptions.buildBooleanOption({ defaultValue: false }),\n\n    /**\n     * Specifies whether the component should open its link in the [`Quickview`]{@link Quickview} component rather than\n     * loading through the original URL.\n     *\n     * Default value is `false`.\n     */\n    openQuickview: ComponentOptions.buildBooleanOption({ defaultValue: false }),\n\n    /**\n     * Specifies whether the component should open its link in a new window instead of opening it in the current\n     * context.\n     *\n     * If this option is `true`, clicking the `ResultLink` calls the\n     * [`openLinkInNewWindow`]{@link ResultLink.openLinkInNewWindow} method instead of the\n     * [`openLink`]{@link ResultLink.openLink} method.\n     *\n     * **Note:**\n     * > If a search page contains a [`ResultPreferences`]{@link ResultsPreferences} component whose\n     * > [`enableOpenInNewWindow`]{@link ResultsPreferences.options.enableOpenInNewWindow} option is `true`, and the end\n     * > user checks the <b>Always open results in new window</b> box, `ResultLink` components in this page will always\n     * > open their links in a new window when the end user clicks them, no matter what the value of their\n     * > `alwaysOpenInNewWindow` option is.\n     *\n     * Default value is `false`.\n     */\n    alwaysOpenInNewWindow: ComponentOptions.buildBooleanOption({ defaultValue: false }),\n\n    /**\n     * Specifies a template literal from which to generate the `ResultLink` `href` attribute value (see\n     * [Template literals](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Template_literals)).\n     *\n     * This option overrides the [`field`]{@link ResultLink.options.field} option value.\n     *\n     * The template literal can reference any number of fields from the parent result. It can also reference global\n     * scope properties.\n     *\n     * **Examples:**\n     *\n     * - The following markup generates an `href` value such as `http://uri.com?id=itemTitle`:\n     *\n     * ```html\n     * <a class='CoveoResultLink' data-href-template='${clickUri}?id=${raw.title}'></a>\n     * ```\n     *\n     * - The following markup generates an `href` value such as `localhost/fooBar`:\n     *\n     * ```html\n     * <a class='CoveoResultLink' data-href-template='${window.location.hostname}/{Foo.Bar}'></a>\n     * ```\n     *\n     * Default value is `undefined`.\n     */\n    hrefTemplate: ComponentOptions.buildStringOption(),\n\n    /**\n     * Specifies a template literal from which to generate the `ResultLink` display title (see\n     * [Template literals](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Template_literals)).\n     *\n     * This option overrides the default `ResultLink` display title behavior.\n     *\n     * The template literal can reference any number of fields from the parent result. However, if the template literal\n     * references a key whose value is undefined in the parent result fields, the `ResultLink` title displays the\n     * name of this key instead.\n     *\n     * This option is ignored if the `ResultLink` innerHTML contains any value.\n     *\n     * **Examples:**\n     *\n     * - The following markup generates a `ResultLink` display title such as `Case number: 123456` if both the\n     * `raw.objecttype` and `raw.objectnumber` keys are defined in the parent result fields:\n     *\n     * ```html\n     * <a class=\"CoveoResultLink\" data-title-template=\"${raw.objecttype} number: ${raw.objectnumber}\"></a>\n     * ```\n     *\n     * - The following markup generates `${myField}` as a `ResultLink` display title if the `myField` key is undefined\n     * in the parent result fields:\n     *\n     * ```html\n     * <a class=\"CoveoResultLink\" data-title-template=\"${myField}\"></a>\n     * ```\n     *\n     * - The following markup generates `Foobar` as a `ResultLink` display title, because the `ResultLink` innterHTML is\n     * not empty:\n     *\n     * ```html\n     * <a class=\"CoveoResultLink\" data-title-template=\"${will} ${be} ${ignored}\">Foobar</a>\n     * ```\n     *\n     * Default value is `undefined`.\n     *\n     * @availablesince [January 2017 Release (v1.1865.9)](https://docs.coveo.com/en/396/#january-2017-release-v118659)\n     */\n    titleTemplate: ComponentOptions.buildStringOption(),\n\n    /**\n     * Specifies an event handler function to execute when the user clicks the `ResultLink` component.\n     *\n     * The handler function takes a JavaScript [`Event`](https://developer.mozilla.org/en/docs/Web/API/Event) object and\n     * an [`IQueryResult`]{@link IQueryResult} as its parameters.\n     *\n     * Overriding the default behavior of the `onClick` event can allow you to execute specific code instead.\n     *\n     * **Note:**\n     * > You cannot set this option directly in the component markup as an HTML attribute. You must either set it in the\n     * > [`init`]{@link init} call of your search interface (see\n     * > [Passing Component Options in the init Call](https://docs.coveo.com/en/346/#passing-component-options-in-the-init-call)),\n     * > or before the `init` call, using the `options` top-level function (see\n     * > [Passing Component Options Before the init Call](https://docs.coveo.com/en/346/#passing-component-options-before-the-init-call)).\n     *\n     * **Example:**\n     * ```javascript\n     * // You can set the option in the 'init' call:\n     * Coveo.init(document.querySelector(\"#search\"), {\n     *   ResultLink : {\n     *     onClick : function(e, result) {\n     *       e.preventDefault();\n     *       // Custom code to execute with the item URI and title.\n     *       openUriInASpecialTab(result.clickUri, result.title);\n     *     }\n     *   }\n     * });\n     *\n     * // Or before the 'init' call, using the 'options' top-level function:\n     * // Coveo.options(document.querySelector('#search'), {\n     * //   ResultLink : {\n     * //     onClick : function(e, result) {\n     * //       e.preventDefault();\n     * //       // Custom code to execute with the item URI and title.\n     * //       openUriInASpecialTab(result.clickUri, result.title);\n     * //     }\n     * //   }\n     * // });\n     * ```\n     */\n    onClick: ComponentOptions.buildCustomOption<(e: Event, result: IQueryResult) => any>(() => {\n      return null;\n    })\n  };\n\n  private toExecuteOnOpen: (e?: Event) => void;\n\n  /**\n   * Creates a new `ResultLink` component.\n   * @param element The HTMLElement on which to instantiate the component.\n   * @param options The options for the `ResultLink` component.\n   * @param bindings The bindings that the component requires to function normally. If not set, these will be\n   * automatically resolved (with a slower execution time).\n   * @param result The result to associate the component with.\n   * @param os\n   */\n  constructor(\n    public element: HTMLElement,\n    public options: IResultLinkOptions,\n    public bindings?: IResultsComponentBindings,\n    public result?: IQueryResult,\n    public os?: OS_NAME\n  ) {\n    super(element, ResultLink.ID, bindings);\n\n    const initialOptions = ComponentOptions.initComponentOptions(element, ResultLink, options);\n    const resultLinkOptions = this.componentOptionsModel.get(ComponentOptionsModel.attributesEnum.resultLink);\n    this.options = extend({}, initialOptions, resultLinkOptions);\n\n    this.result = result || this.resolveResult();\n\n    if (this.options.openQuickview == null) {\n      this.options.openQuickview = result.raw['connectortype'] == 'ExchangeCrawler' && DeviceUtils.isMobileDevice();\n    }\n    this.element.setAttribute('tabindex', '0');\n\n    Assert.exists(this.componentOptionsModel);\n    Assert.exists(this.result);\n\n    if (!this.quickviewShouldBeOpened()) {\n      // Bind on multiple \"click\" or \"mouse\" events.\n      // Create a function that will be executed only once, so as not to log multiple events\n      // Once a result link has been opened, and that we log at least one analytics event,\n      // it should not matter if the end user open the same link multiple times with different methods.\n      // It's still only one \"click\" event as far as UA is concerned.\n      // Also need to handle \"longpress\" on mobile (the contextual menu), which we assume to be 1 s long.\n\n      const executeOnlyOnce = once(() => this.logOpenDocument());\n\n      $$(element).on(['contextmenu', 'click', 'mousedown', 'mouseup'], executeOnlyOnce);\n      let longPressTimer: number;\n      $$(element).on('touchstart', () => {\n        longPressTimer = window.setTimeout(executeOnlyOnce, 1000);\n      });\n      $$(element).on('touchend', () => {\n        if (longPressTimer) {\n          clearTimeout(longPressTimer);\n        }\n      });\n    }\n    this.renderUri(element, result);\n    this.bindEventToOpen();\n  }\n  public renderUri(element: HTMLElement, result?: IQueryResult) {\n    if (/^\\s*$/.test(this.element.innerHTML)) {\n      const title = this.getDisplayedTitle();\n      this.element.innerHTML = title;\n      if (!this.element.title) {\n        this.element.title = this.getDisplayedTitleAsText();\n      }\n    }\n  }\n  /**\n   * Opens the result in the same window, no matter how the actual component is configured for the end user.\n   * @param logAnalytics Specifies whether the method should log an analytics event.\n   */\n  public openLink(logAnalytics = true) {\n    if (logAnalytics) {\n      this.logOpenDocument();\n    }\n    window.location.href = this.getResultUri();\n  }\n\n  /**\n   * Opens the result in a new window, no matter how the actual component is configured for the end user.\n   * @param logAnalytics Specifies whether the method should log an analytics event.\n   */\n  public openLinkInNewWindow(logAnalytics = true) {\n    if (logAnalytics) {\n      this.logOpenDocument();\n    }\n    window.open(this.getResultUri(), '_blank');\n  }\n\n  /**\n   * Tries to open the result in Microsoft Outlook if the result has an `outlookformacuri` or `outlookuri` field.\n   *\n   * Normally, this implies the result should be a link to an email.\n   *\n   * If the needed fields are not present, this method does nothing.\n   * @param logAnalytics Specifies whether the method should log an analytics event.\n   */\n  public openLinkInOutlook(logAnalytics = true) {\n    if (this.hasOutlookField()) {\n      if (logAnalytics) {\n        this.logOpenDocument();\n      }\n      this.openLink();\n    }\n  }\n\n  /**\n   * Opens the link in the same manner the end user would.\n   *\n   * This essentially simulates a click on the result link.\n   *\n   * @param logAnalytics Specifies whether the method should log an analytics event.\n   */\n  public openLinkAsConfigured(logAnalytics = true) {\n    if (this.toExecuteOnOpen) {\n      if (logAnalytics) {\n        this.logOpenDocument();\n      }\n      this.toExecuteOnOpen();\n    }\n  }\n\n  protected bindEventToOpen(): boolean {\n    return (\n      this.bindOnClickIfNotUndefined() ||\n      this.bindOpenQuickviewIfNotUndefined() ||\n      this.setHrefIfNotAlready() ||\n      this.openLinkThatIsNotAnAnchor()\n    );\n  }\n\n  private getDisplayedTitle() {\n    if (!this.options.titleTemplate) {\n      return this.result.title\n        ? HighlightUtils.highlightString(this.result.title, this.result.titleHighlights, null, 'coveo-highlight')\n        : this.escapedClickUri;\n    } else {\n      let newTitle = StringUtils.buildStringTemplateFromResult(this.options.titleTemplate, this.result);\n      return newTitle\n        ? StreamHighlightUtils.highlightStreamText(newTitle, this.result.termsToHighlight, this.result.phrasesToHighlight)\n        : this.escapedClickUri;\n    }\n  }\n\n  private getDisplayedTitleAsText() {\n    const container = $$('div');\n    container.setHtml(this.getDisplayedTitle());\n    return container.text();\n  }\n\n  private get escapedClickUri() {\n    return escape(this.result.clickUri);\n  }\n\n  private bindOnClickIfNotUndefined() {\n    if (this.options.onClick != undefined) {\n      this.toExecuteOnOpen = (e: MouseEvent) => {\n        this.options.onClick.call(this, e, this.result);\n      };\n\n      new AccessibleButton()\n        .withElement(this.element)\n        .withLabel(this.result.title)\n        .withSelectAction((e: Event) => this.toExecuteOnOpen(e))\n        .build();\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  private bindOpenQuickviewIfNotUndefined() {\n    if (this.quickviewShouldBeOpened()) {\n      this.toExecuteOnOpen = () => {\n        $$(this.bindings.resultElement).trigger(ResultListEvents.openQuickview);\n      };\n\n      $$(this.element).on('click', (e: Event) => {\n        e.preventDefault();\n        this.toExecuteOnOpen();\n      });\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  private openLinkThatIsNotAnAnchor() {\n    if (!this.elementIsAnAnchor()) {\n      this.toExecuteOnOpen = () => {\n        if (this.options.alwaysOpenInNewWindow) {\n          if (this.options.openInOutlook) {\n            this.openLinkInOutlook();\n          } else {\n            this.openLinkInNewWindow();\n          }\n        } else {\n          this.openLink();\n        }\n      };\n\n      $$(this.element).on('click', () => {\n        this.toExecuteOnOpen();\n      });\n\n      return true;\n    }\n    return false;\n  }\n\n  private setHrefIfNotAlready() {\n    // Do not erase any value put in href by the template, etc. Allows\n    // using custom click urls while still keeping analytics recording\n    // and other behavior brought by the component.\n    if (this.elementIsAnAnchor() && !Utils.isNonEmptyString($$(this.element).getAttribute('href'))) {\n      $$(this.element).setAttribute('href', this.getResultUri());\n      if (this.options.alwaysOpenInNewWindow && !(this.options.openInOutlook && this.hasOutlookField())) {\n        $$(this.element).setAttribute('target', '_blank');\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  private logOpenDocument = debounce(\n    () => {\n      this.queryController.saveLastQuery();\n      let documentURL = $$(this.element).getAttribute('href');\n      if (documentURL == undefined || documentURL == '') {\n        documentURL = this.escapedClickUri;\n      }\n      this.usageAnalytics.logClickEvent(\n        analyticsActionCauseList.documentOpen,\n        {\n          documentURL: documentURL,\n          documentTitle: this.result.title,\n          author: Utils.getFieldValue(this.result, 'author')\n        },\n        this.result,\n        this.root\n      );\n      Defer.flush();\n    },\n    1500,\n    true\n  );\n\n  private filterProtocol(uri: string) {\n    const isAbsolute = /^(https?|ftp|file|mailto|tel):/i.test(uri);\n    const isRelative = /^(\\/|\\.\\/|\\.\\.\\/)/.test(uri);\n\n    return isAbsolute || isRelative ? uri : '';\n  }\n\n  private getResultUri(): string {\n    if (this.options.hrefTemplate) {\n      const uri = StringUtils.buildStringTemplateFromResult(this.options.hrefTemplate, this.result);\n      return this.filterProtocol(uri);\n    }\n\n    if (this.options.field == undefined && this.options.openInOutlook) {\n      this.setField();\n    }\n\n    if (this.options.field != undefined) {\n      return this.filterProtocol(Utils.getFieldValue(this.result, <string>this.options.field));\n    }\n\n    return this.filterProtocol(this.result.clickUri);\n  }\n\n  private elementIsAnAnchor() {\n    return this.element.tagName == 'A';\n  }\n\n  private setField() {\n    let os = Utils.exists(this.os) ? this.os : OSUtils.get();\n    if (os == OS_NAME.MACOSX && this.hasOutlookField()) {\n      this.options.field = '@outlookformacuri';\n    } else if (os == OS_NAME.WINDOWS && this.hasOutlookField()) {\n      this.options.field = '@outlookuri';\n    }\n  }\n\n  private hasOutlookField() {\n    let os = Utils.exists(this.os) ? this.os : OSUtils.get();\n    if (os == OS_NAME.MACOSX && this.result.raw['outlookformacuri'] != undefined) {\n      return true;\n    } else if (os == OS_NAME.WINDOWS && this.result.raw['outlookuri'] != undefined) {\n      return true;\n    }\n    return false;\n  }\n\n  private isUriThatMustBeOpenedInQuickview(): boolean {\n    return this.escapedClickUri.toLowerCase().indexOf('ldap://') == 0;\n  }\n\n  private quickviewShouldBeOpened() {\n    return (this.options.openQuickview || this.isUriThatMustBeOpenedInQuickview()) && QueryUtils.hasHTMLVersion(this.result);\n  }\n}\n\nInitialization.registerAutoCreateComponent(ResultLink);\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/ResultLink/ResultLink.ts","import { IRelatedQuestionAnswerResponse } from '../../rest/QuestionAnswerResponse';\nimport { uniqueId } from 'underscore';\nimport { AccessibleButton } from '../../utils/AccessibleButton';\nimport { SVGIcons } from '../../utils/SVGIcons';\nimport { attachShadow } from '../../misc/AttachShadowPolyfill';\nimport { $$, Dom } from '../../utils/Dom';\nimport { l } from '../../strings/Strings';\nimport { IQueryResult } from '../../rest/QueryResult';\nimport { analyticsActionCauseList, IAnalyticsSmartSnippetSuggestionMeta } from '../Analytics/AnalyticsActionListMeta';\nimport { ResultLink } from '../ResultLink/ResultLink';\nimport { IComponentBindings } from '../Base/ComponentBindings';\n\nconst QUESTION_CLASSNAME = `coveo-smart-snippet-suggestions-question`;\nconst QUESTION_TITLE_CLASSNAME = `${QUESTION_CLASSNAME}-title`;\nconst QUESTION_TITLE_LABEL_CLASSNAME = `${QUESTION_TITLE_CLASSNAME}-label`;\nconst QUESTION_TITLE_CHECKBOX_CLASSNAME = `${QUESTION_TITLE_CLASSNAME}-checkbox`;\nconst QUESTION_SNIPPET_CLASSNAME = `${QUESTION_CLASSNAME}-snippet`;\nconst QUESTION_SNIPPET_CONTAINER_CLASSNAME = `${QUESTION_SNIPPET_CLASSNAME}-container`;\nconst QUESTION_SNIPPET_HIDDEN_CLASSNAME = `${QUESTION_SNIPPET_CLASSNAME}-hidden`;\nconst SHADOW_CLASSNAME = `${QUESTION_SNIPPET_CLASSNAME}-content`;\nconst RAW_CONTENT_CLASSNAME = `${SHADOW_CLASSNAME}-raw`;\nconst SOURCE_CLASSNAME = `${QUESTION_CLASSNAME}-source`;\nconst SOURCE_TITLE_CLASSNAME = `${SOURCE_CLASSNAME}-title`;\nconst SOURCE_URL_CLASSNAME = `${SOURCE_CLASSNAME}-url`;\n\nexport const SmartSnippetCollapsibleSuggestionClassNames = {\n  QUESTION_CLASSNAME,\n  QUESTION_TITLE_CLASSNAME,\n  QUESTION_TITLE_LABEL_CLASSNAME,\n  QUESTION_TITLE_CHECKBOX_CLASSNAME,\n  QUESTION_SNIPPET_CLASSNAME,\n  QUESTION_SNIPPET_CONTAINER_CLASSNAME,\n  QUESTION_SNIPPET_HIDDEN_CLASSNAME,\n  SHADOW_CLASSNAME,\n  RAW_CONTENT_CLASSNAME,\n  SOURCE_CLASSNAME,\n  SOURCE_TITLE_CLASSNAME,\n  SOURCE_URL_CLASSNAME\n};\n\nexport class SmartSnippetCollapsibleSuggestion {\n  private readonly labelId = uniqueId(QUESTION_TITLE_LABEL_CLASSNAME);\n  private readonly snippetId = uniqueId(QUESTION_SNIPPET_CLASSNAME);\n  private readonly checkboxId = uniqueId(QUESTION_TITLE_CHECKBOX_CLASSNAME);\n  private contentLoaded: Promise<void>;\n  private snippetAndSourceContainer: Dom;\n  private collapsibleContainer: Dom;\n  private checkbox: Dom;\n  private expanded = false;\n\n  constructor(\n    private readonly questionAnswer: IRelatedQuestionAnswerResponse,\n    private readonly bindings: IComponentBindings,\n    private readonly innerCSS: string,\n    private readonly searchUid: string,\n    private readonly source?: IQueryResult\n  ) {}\n\n  public get loading() {\n    return this.contentLoaded;\n  }\n\n  public build() {\n    const collapsibleContainer = this.buildCollapsibleContainer(\n      this.questionAnswer.answerSnippet,\n      this.questionAnswer.question,\n      this.buildStyle(this.innerCSS)\n    );\n    const title = this.buildTitle(this.questionAnswer.question);\n    this.updateExpanded();\n    return $$(\n      'li',\n      {\n        className: QUESTION_CLASSNAME,\n        ariaLabelledby: this.labelId\n      },\n      title,\n      collapsibleContainer\n    ).el as HTMLLIElement;\n  }\n\n  private buildStyle(innerCSS: string) {\n    const styleTag = document.createElement('style');\n    styleTag.innerHTML = innerCSS;\n    return styleTag;\n  }\n\n  private buildTitle(question: string) {\n    const checkbox = this.buildCheckbox(question);\n    const label = $$('span', { className: QUESTION_TITLE_LABEL_CLASSNAME, id: this.labelId });\n    label.text(question);\n    const title = $$('span', { className: QUESTION_TITLE_CLASSNAME }, label, checkbox);\n    title.on('click', () => this.toggle());\n    return title;\n  }\n\n  private buildCheckbox(question: string) {\n    this.checkbox = $$('div', {\n      role: 'button',\n      tabindex: 0,\n      ariaControls: this.snippetId,\n      className: QUESTION_TITLE_CHECKBOX_CLASSNAME,\n      id: this.checkboxId\n    });\n    new AccessibleButton()\n      .withElement(this.checkbox)\n      .withLabel(l('ExpandQuestionAnswer', question))\n      .withEnterKeyboardAction(() => this.toggle())\n      .build();\n    return this.checkbox;\n  }\n\n  private buildCollapsibleContainer(innerHTML: string, title: string, style: HTMLStyleElement) {\n    const shadowContainer = $$('div', { className: SHADOW_CLASSNAME });\n    this.snippetAndSourceContainer = $$('div', { className: QUESTION_SNIPPET_CONTAINER_CLASSNAME }, shadowContainer);\n    this.collapsibleContainer = $$('div', { className: QUESTION_SNIPPET_CLASSNAME, id: this.snippetId }, this.snippetAndSourceContainer);\n    this.contentLoaded = attachShadow(shadowContainer.el, { mode: 'open', title: l('AnswerSpecificSnippet', title) }).then(shadowRoot => {\n      shadowRoot.appendChild(this.buildAnswerSnippetContent(innerHTML, style).el);\n    });\n    if (this.source) {\n      this.snippetAndSourceContainer.append(this.buildSourceUrl());\n      this.snippetAndSourceContainer.append(this.buildSourceTitle());\n    }\n    return this.collapsibleContainer;\n  }\n\n  private buildAnswerSnippetContent(innerHTML: string, style: HTMLStyleElement) {\n    const snippet = $$('div', { className: RAW_CONTENT_CLASSNAME }, innerHTML);\n    const container = $$('div', {}, snippet);\n    container.append(style);\n    return container;\n  }\n\n  private buildSourceTitle() {\n    return this.buildLink(this.source.title, SOURCE_TITLE_CLASSNAME);\n  }\n\n  private buildSourceUrl() {\n    return this.buildLink(this.source.clickUri, SOURCE_URL_CLASSNAME);\n  }\n\n  private buildLink(text: string, className: string) {\n    const element = $$('a', { className: `CoveoResultLink ${className}` }).el as HTMLAnchorElement;\n    element.innerText = text;\n    new ResultLink(element, {}, { ...this.bindings, resultElement: this.collapsibleContainer.el }, this.source);\n    return element;\n  }\n\n  private toggle() {\n    this.expanded = !this.expanded;\n    this.updateExpanded();\n    if (this.expanded) {\n      this.sendExpandAnalytics();\n    } else {\n      this.sendCollapseAnalytics();\n    }\n  }\n\n  private updateExpanded() {\n    this.checkbox.setAttribute('aria-expanded', this.expanded.toString());\n    this.checkbox.setHtml(this.expanded ? SVGIcons.icons.arrowUp : SVGIcons.icons.arrowDown);\n    this.collapsibleContainer.setAttribute('tabindex', `${this.expanded ? 0 : -1}`);\n    this.collapsibleContainer.setAttribute('aria-hidden', (!this.expanded).toString());\n    this.collapsibleContainer.toggleClass(QUESTION_SNIPPET_HIDDEN_CLASSNAME, !this.expanded);\n    this.collapsibleContainer.el.style.height = this.expanded ? `${this.snippetAndSourceContainer.el.clientHeight}px` : '0px';\n  }\n\n  private sendExpandAnalytics() {\n    return this.bindings.usageAnalytics.logCustomEvent<IAnalyticsSmartSnippetSuggestionMeta>(\n      analyticsActionCauseList.expandSmartSnippetSuggestion,\n      {\n        searchQueryUid: this.searchUid,\n        documentId: this.questionAnswer.documentId\n      },\n      this.checkbox.el\n    );\n  }\n\n  private sendCollapseAnalytics() {\n    return this.bindings.usageAnalytics.logCustomEvent<IAnalyticsSmartSnippetSuggestionMeta>(\n      analyticsActionCauseList.collapseSmartSnippetSuggestion,\n      {\n        searchQueryUid: this.searchUid,\n        documentId: this.questionAnswer.documentId\n      },\n      this.checkbox.el\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/SmartSnippet/SmartSnippetCollapsibleSuggestion.ts"],"sourceRoot":""}