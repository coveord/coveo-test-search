{"version":3,"sources":["./src/ui/Triggers/Triggers.ts","./sass/_Triggers.scss"],"names":[],"mappings":"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","file":"Triggers__1728cc16e4d2d82aa5db.js","sourcesContent":["import { Component } from '../Base/Component';\r\nimport { IComponentBindings } from '../Base/ComponentBindings';\r\nimport { ComponentOptions } from '../Base/ComponentOptions';\r\nimport { Assert } from '../../misc/Assert';\r\nimport { QueryEvents, IQuerySuccessEventArgs } from '../../events/QueryEvents';\r\nimport { ITriggerNotify, ITriggerExecute, ITriggerRedirect, ITriggerQuery, ITrigger } from '../../rest/Trigger';\r\nimport { $$ } from '../../utils/Dom';\r\nimport {\r\n  IAnalyticsTriggerNotify,\r\n  analyticsActionCauseList,\r\n  IAnalyticsTriggerRedirect,\r\n  IAnalyticsTriggerQuery,\r\n  IAnalyticsTriggerExecute\r\n} from '../Analytics/AnalyticsActionListMeta';\r\nimport { QueryStateModel } from '../../models/QueryStateModel';\r\nimport { Initialization } from '../Base/Initialization';\r\nimport { object, map, filter, each, take } from 'underscore';\r\nimport { exportGlobally } from '../../GlobalExports';\r\n\r\nimport 'styling/_Triggers';\r\n\r\nexport interface ITriggersOptions {}\r\n\r\n/**\r\n * The Triggers component enables the use of triggers (`notify`, `execute`, `query`, `redirect`) generated by the Coveo\r\n * Search API (see [Trigger](https://docs.coveo.com/en/1458/)) in the query pipeline (see\r\n * [Managing the Query Pipeline](https://docs.coveo.com/en/1450/)).\r\n *\r\n * Note: adding the Triggers component gives query pipeline administrators the power to influence users' search experience.\r\n * Bad actors will be able to perform XSS attacks, or redirect users to dangerous sites. Make sure only individuals you trust\r\n * have query pipeline edit privileges.\r\n */\r\nexport class Triggers extends Component {\r\n  static ID = 'Triggers';\r\n  static options: ITriggersOptions = {};\r\n\r\n  static doExport = () => {\r\n    exportGlobally({\r\n      Triggers: Triggers\r\n    });\r\n  };\r\n\r\n  /**\r\n   * The list of notifications returned by the Search API for the current query (via `notify` triggers).\r\n   *\r\n   * The Triggers component automatically renders this list visually.\r\n   */\r\n  public notifications: string[];\r\n\r\n  /**\r\n   * Creates a new Triggers component.\r\n   * @param element The HTMLElement on which to instantiate the component.\r\n   * @param options The options for the Triggers component.\r\n   * @param bindings The bindings that the component requires to function normally. If not set, these will be\r\n   * automatically resolved (with a slower execution time).\r\n   * @param _window The window on which to execute the triggers.\r\n   */\r\n  constructor(\r\n    public element: HTMLElement,\r\n    public options?: ITriggersOptions,\r\n    public bindings?: IComponentBindings,\r\n    public _window?: Window\r\n  ) {\r\n    super(element, Triggers.ID, bindings);\r\n\r\n    this._window = this._window || window;\r\n    this.options = ComponentOptions.initComponentOptions(element, Triggers, options);\r\n    Assert.exists(element);\r\n    Assert.exists(this.options);\r\n\r\n    this.notifications = [];\r\n\r\n    this.bind.onRootElement(QueryEvents.querySuccess, this.handleProcessNewQueryResults);\r\n  }\r\n\r\n  private handleProcessNewQueryResults(data: IQuerySuccessEventArgs) {\r\n    Assert.exists(data);\r\n    Assert.exists(data.results);\r\n\r\n    $$(this.element).empty();\r\n    this.notifications.length = 0;\r\n    let showElement = false;\r\n\r\n    if (data.results.triggers === undefined) {\r\n      $$(this.element).toggleClass('coveo-visible', showElement);\r\n      return;\r\n    }\r\n\r\n    this.executeTriggers(data.results.triggers, 'notify', (trigger: ITriggerNotify) => {\r\n      this.usageAnalytics.logCustomEvent<IAnalyticsTriggerNotify>(\r\n        analyticsActionCauseList.triggerNotify,\r\n        {\r\n          notification: trigger.content\r\n        },\r\n        this.element\r\n      );\r\n\r\n      this.notifications.push(trigger.content);\r\n      this.element.appendChild($$('div', { className: 'coveo-trigger-notify' }, trigger.content).el);\r\n\r\n      showElement = true;\r\n    });\r\n\r\n    this.executeTriggers(\r\n      data.results.triggers,\r\n      'redirect',\r\n      (trigger: ITriggerRedirect) => {\r\n        this.usageAnalytics.logCustomEvent<IAnalyticsTriggerRedirect>(\r\n          analyticsActionCauseList.triggerRedirect,\r\n          {\r\n            redirectedTo: trigger.content\r\n          },\r\n          this.element\r\n        );\r\n\r\n        this._window.location.replace(trigger.content);\r\n      },\r\n      true\r\n    );\r\n\r\n    this.executeTriggers(\r\n      data.results.triggers,\r\n      'query',\r\n      (trigger: ITriggerQuery) => {\r\n        this.queryStateModel.set(QueryStateModel.attributesEnum.q, trigger.content);\r\n        this.queryController.executeQuery({\r\n          beforeExecuteQuery: () => {\r\n            this.usageAnalytics.logCustomEvent<IAnalyticsTriggerQuery>(\r\n              analyticsActionCauseList.triggerQuery,\r\n              {\r\n                query: trigger.content\r\n              },\r\n              this.element\r\n            );\r\n          }\r\n        });\r\n      },\r\n      true\r\n    );\r\n\r\n    this.executeTriggers(data.results.triggers, 'execute', (trigger: ITriggerExecute) => {\r\n      try {\r\n        let func: Function = this._window['' + trigger.content.name];\r\n        if (typeof func === 'function') {\r\n          let params = object(\r\n            map(trigger.content.params, (value, index) => {\r\n              return ['param' + (index + 1), value];\r\n            })\r\n          );\r\n          params['element'] = this.element;\r\n\r\n          this.usageAnalytics.logCustomEvent<IAnalyticsTriggerExecute>(\r\n            analyticsActionCauseList.triggerExecute,\r\n            {\r\n              executed: trigger.content.name\r\n            },\r\n            this.element\r\n          );\r\n\r\n          func.apply(this._window, [params]);\r\n        } else {\r\n          this.logger.error(\r\n            `A trigger tried to call the function '${trigger.content.name}', which doesn't exist.`,\r\n            this,\r\n            data.query,\r\n            trigger\r\n          );\r\n        }\r\n      } catch (error) {\r\n        this.logger.error(`A trigger called the function '${trigger.content.name}', which threw an error.`, this, data.query, trigger);\r\n      }\r\n    });\r\n\r\n    $$(this.element).toggleClass('coveo-visible', showElement);\r\n  }\r\n\r\n  private executeTriggers(trigger: ITrigger<any>[], type: string, func: (trigger: ITrigger<any>) => any, single: boolean = false) {\r\n    let triggersOfType = filter(trigger, (trigger: ITrigger<any>) => {\r\n      return trigger.type == type;\r\n    });\r\n    let oneOrAllTriggers = take(triggersOfType, single ? 1 : Number.MAX_VALUE);\r\n\r\n    each(oneOrAllTriggers, func);\r\n  }\r\n}\r\n\r\nInitialization.registerAutoCreateComponent(Triggers);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/Triggers/Triggers.ts","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./sass/_Triggers.scss\n// module id = 672\n// module chunks = 56 88"],"sourceRoot":""}